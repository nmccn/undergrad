

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 09 09:36:23 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           ; Version 2.10
    71                           ; Generated 31/07/2019 GMT
    72                           ; 
    73                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F26K22 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   106  0000                     
   107 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   108  0000                     
   109 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   110  0000                     
   111                           	psect	idataBANK0
   112  001EE6                     __pidataBANK0:
   113                           	opt callstack 0
   114                           
   115                           ;initializer for _sampleRate
   116  001EE6  03E8               	dw	1000
   117                           
   118                           ;initializer for _delta
   119  001EE8  05                 	db	5
   120                           
   121                           ;initializer for _nominalHallPressed
   122  001EE9  1D                 	db	29
   123                           
   124                           ;initializer for _nominalHallUnPressed
   125  001EEA  3F                 	db	63
   126                           
   127                           	psect	idataBANK1
   128  001D76                     __pidataBANK1:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for main@F6148
   132  001D76  45                 	db	69
   133  001D77  45                 	db	69
   134  001D78  45                 	db	69
   135  001D79  45                 	db	69
   136  001D7A  45                 	db	69
   137  001D7B  45                 	db	69
   138  001D7C  43                 	db	67
   139  001D7D  45                 	db	69
   140  001D7E  45                 	db	69
   141  001D7F  45                 	db	69
   142  001D80  45                 	db	69
   143  001D81  45                 	db	69
   144  001D82  45                 	db	69
   145  001D83  43                 	db	67
   146  001D84  45                 	db	69
   147  001D85  45                 	db	69
   148  001D86  45                 	db	69
   149  001D87  45                 	db	69
   150  001D88  45                 	db	69
   151  001D89  45                 	db	69
   152  001D8A  40                 	db	64
   153  001D8B  40                 	db	64
   154  001D8C  40                 	db	64
   155  001D8D  40                 	db	64
   156  001D8E  40                 	db	64
   157  001D8F  40                 	db	64
   158  001D90  40                 	db	64
   159  001D91  40                 	db	64
   160  001D92  40                 	db	64
   161  001D93  40                 	db	64
   162  0000                     _ANSELA	set	3896
   163  0000                     _ANSELB	set	3897
   164  0000                     _ANSELC	set	3898
   165  0000                     _TX1REG	set	4013
   166  0000                     _PORTAbits	set	3968
   167  0000                     _RCONbits	set	4048
   168  0000                     _INTCON2bits	set	4081
   169  0000                     _WPUB	set	3937
   170  0000                     _TRISC	set	3988
   171  0000                     _TRISB	set	3987
   172  0000                     _TRISA	set	3986
   173  0000                     _LATC	set	3979
   174  0000                     _LATB	set	3978
   175  0000                     _LATA	set	3977
   176  0000                     _OSCTUNE	set	3995
   177  0000                     _OSCCON2	set	4050
   178  0000                     _OSCCON	set	4051
   179  0000                     _TXREG1	set	4013
   180  0000                     _RCREG1	set	4014
   181  0000                     _RCSTA1bits	set	4011
   182  0000                     _TXSTA1bits	set	4012
   183  0000                     _PIR1bits	set	3998
   184  0000                     _SPBRGH1	set	4016
   185  0000                     _SPBRG1	set	4015
   186  0000                     _TXSTA1	set	4012
   187  0000                     _RCSTA1	set	4011
   188  0000                     _BAUDCON1	set	4024
   189  0000                     _ADCON0bits	set	4034
   190  0000                     _ADRESH	set	4036
   191  0000                     _ADRESL	set	4035
   192  0000                     _ADCON2	set	4032
   193  0000                     _ADCON1	set	4033
   194  0000                     _ADCON0	set	4034
   195  0000                     _T0CON	set	4053
   196  0000                     _INTCONbits	set	4082
   197  0000                     _TMR0L	set	4054
   198  0000                     _TMR0H	set	4055
   199  0000                     _T0CONbits	set	4053
   200  0000                     _PLLRDY	set	32407
   201                           
   202                           	psect	mediumconst
   203  00F9B6                     __pmediumconst:
   204                           	opt callstack 0
   205  00F9B6  00                 	db	0
   206  00F9B7                     STR_24:
   207  00F9B7  48                 	db	72	;'H'
   208  00F9B8  61                 	db	97	;'a'
   209  00F9B9  6E                 	db	110	;'n'
   210  00F9BA  64                 	db	100	;'d'
   211  00F9BB  73                 	db	115	;'s'
   212  00F9BC  20                 	db	32
   213  00F9BD  6F                 	db	111	;'o'
   214  00F9BE  66                 	db	102	;'f'
   215  00F9BF  66                 	db	102	;'f'
   216  00F9C0  20                 	db	32
   217  00F9C1  74                 	db	116	;'t'
   218  00F9C2  68                 	db	104	;'h'
   219  00F9C3  65                 	db	101	;'e'
   220  00F9C4  20                 	db	32
   221  00F9C5  70                 	db	112	;'p'
   222  00F9C6  69                 	db	105	;'i'
   223  00F9C7  61                 	db	97	;'a'
   224  00F9C8  6E                 	db	110	;'n'
   225  00F9C9  6F                 	db	111	;'o'
   226  00F9CA  2C                 	db	44
   227  00F9CB  20                 	db	32
   228  00F9CC  70                 	db	112	;'p'
   229  00F9CD  72                 	db	114	;'r'
   230  00F9CE  65                 	db	101	;'e'
   231  00F9CF  73                 	db	115	;'s'
   232  00F9D0  73                 	db	115	;'s'
   233  00F9D1  20                 	db	32
   234  00F9D2  6B                 	db	107	;'k'
   235  00F9D3  65                 	db	101	;'e'
   236  00F9D4  79                 	db	121	;'y'
   237  00F9D5  62                 	db	98	;'b'
   238  00F9D6  6F                 	db	111	;'o'
   239  00F9D7  61                 	db	97	;'a'
   240  00F9D8  72                 	db	114	;'r'
   241  00F9D9  64                 	db	100	;'d'
   242  00F9DA  20                 	db	32
   243  00F9DB  6B                 	db	107	;'k'
   244  00F9DC  65                 	db	101	;'e'
   245  00F9DD  79                 	db	121	;'y'
   246  00F9DE  20                 	db	32
   247  00F9DF  74                 	db	116	;'t'
   248  00F9E0  6F                 	db	111	;'o'
   249  00F9E1  20                 	db	32
   250  00F9E2  63                 	db	99	;'c'
   251  00F9E3  61                 	db	97	;'a'
   252  00F9E4  6C                 	db	108	;'l'
   253  00F9E5  69                 	db	105	;'i'
   254  00F9E6  62                 	db	98	;'b'
   255  00F9E7  72                 	db	114	;'r'
   256  00F9E8  61                 	db	97	;'a'
   257  00F9E9  74                 	db	116	;'t'
   258  00F9EA  65                 	db	101	;'e'
   259  00F9EB  20                 	db	32
   260  00F9EC  6E                 	db	110	;'n'
   261  00F9ED  6F                 	db	111	;'o'
   262  00F9EE  6D                 	db	109	;'m'
   263  00F9EF  69                 	db	105	;'i'
   264  00F9F0  6E                 	db	110	;'n'
   265  00F9F1  61                 	db	97	;'a'
   266  00F9F2  6C                 	db	108	;'l'
   267  00F9F3  48                 	db	72	;'H'
   268  00F9F4  61                 	db	97	;'a'
   269  00F9F5  6C                 	db	108	;'l'
   270  00F9F6  6C                 	db	108	;'l'
   271  00F9F7  55                 	db	85	;'U'
   272  00F9F8  6E                 	db	110	;'n'
   273  00F9F9  50                 	db	80	;'P'
   274  00F9FA  72                 	db	114	;'r'
   275  00F9FB  65                 	db	101	;'e'
   276  00F9FC  73                 	db	115	;'s'
   277  00F9FD  73                 	db	115	;'s'
   278  00F9FE  65                 	db	101	;'e'
   279  00F9FF  64                 	db	100	;'d'
   280  00FA00  00                 	db	0
   281  00FA01                     STR_26:
   282  00FA01  50                 	db	80	;'P'
   283  00FA02  72                 	db	114	;'r'
   284  00FA03  65                 	db	101	;'e'
   285  00FA04  73                 	db	115	;'s'
   286  00FA05  73                 	db	115	;'s'
   287  00FA06  20                 	db	32
   288  00FA07  74                 	db	116	;'t'
   289  00FA08  68                 	db	104	;'h'
   290  00FA09  65                 	db	101	;'e'
   291  00FA0A  20                 	db	32
   292  00FA0B  70                 	db	112	;'p'
   293  00FA0C  69                 	db	105	;'i'
   294  00FA0D  61                 	db	97	;'a'
   295  00FA0E  6E                 	db	110	;'n'
   296  00FA0F  6F                 	db	111	;'o'
   297  00FA10  20                 	db	32
   298  00FA11  6B                 	db	107	;'k'
   299  00FA12  65                 	db	101	;'e'
   300  00FA13  79                 	db	121	;'y'
   301  00FA14  2C                 	db	44
   302  00FA15  20                 	db	32
   303  00FA16  70                 	db	112	;'p'
   304  00FA17  72                 	db	114	;'r'
   305  00FA18  65                 	db	101	;'e'
   306  00FA19  73                 	db	115	;'s'
   307  00FA1A  73                 	db	115	;'s'
   308  00FA1B  20                 	db	32
   309  00FA1C  6B                 	db	107	;'k'
   310  00FA1D  65                 	db	101	;'e'
   311  00FA1E  79                 	db	121	;'y'
   312  00FA1F  62                 	db	98	;'b'
   313  00FA20  6F                 	db	111	;'o'
   314  00FA21  61                 	db	97	;'a'
   315  00FA22  72                 	db	114	;'r'
   316  00FA23  64                 	db	100	;'d'
   317  00FA24  20                 	db	32
   318  00FA25  6B                 	db	107	;'k'
   319  00FA26  65                 	db	101	;'e'
   320  00FA27  79                 	db	121	;'y'
   321  00FA28  20                 	db	32
   322  00FA29  74                 	db	116	;'t'
   323  00FA2A  6F                 	db	111	;'o'
   324  00FA2B  20                 	db	32
   325  00FA2C  63                 	db	99	;'c'
   326  00FA2D  61                 	db	97	;'a'
   327  00FA2E  6C                 	db	108	;'l'
   328  00FA2F  69                 	db	105	;'i'
   329  00FA30  62                 	db	98	;'b'
   330  00FA31  72                 	db	114	;'r'
   331  00FA32  61                 	db	97	;'a'
   332  00FA33  74                 	db	116	;'t'
   333  00FA34  65                 	db	101	;'e'
   334  00FA35  20                 	db	32
   335  00FA36  6E                 	db	110	;'n'
   336  00FA37  6F                 	db	111	;'o'
   337  00FA38  6D                 	db	109	;'m'
   338  00FA39  69                 	db	105	;'i'
   339  00FA3A  6E                 	db	110	;'n'
   340  00FA3B  61                 	db	97	;'a'
   341  00FA3C  6C                 	db	108	;'l'
   342  00FA3D  48                 	db	72	;'H'
   343  00FA3E  61                 	db	97	;'a'
   344  00FA3F  6C                 	db	108	;'l'
   345  00FA40  6C                 	db	108	;'l'
   346  00FA41  50                 	db	80	;'P'
   347  00FA42  72                 	db	114	;'r'
   348  00FA43  65                 	db	101	;'e'
   349  00FA44  73                 	db	115	;'s'
   350  00FA45  73                 	db	115	;'s'
   351  00FA46  65                 	db	101	;'e'
   352  00FA47  64                 	db	100	;'d'
   353  00FA48  00                 	db	0
   354  00FA49                     STR_16:
   355  00FA49  74                 	db	116	;'t'
   356  00FA4A  3A                 	db	58	;':'
   357  00FA4B  20                 	db	32
   358  00FA4C  77                 	db	119	;'w'
   359  00FA4D  61                 	db	97	;'a'
   360  00FA4E  69                 	db	105	;'i'
   361  00FA4F  74                 	db	116	;'t'
   362  00FA50  20                 	db	32
   363  00FA51  66                 	db	102	;'f'
   364  00FA52  6F                 	db	111	;'o'
   365  00FA53  72                 	db	114	;'r'
   366  00FA54  20                 	db	32
   367  00FA55  70                 	db	112	;'p'
   368  00FA56  69                 	db	105	;'i'
   369  00FA57  61                 	db	97	;'a'
   370  00FA58  6E                 	db	110	;'n'
   371  00FA59  6F                 	db	111	;'o'
   372  00FA5A  20                 	db	32
   373  00FA5B  6B                 	db	107	;'k'
   374  00FA5C  65                 	db	101	;'e'
   375  00FA5D  79                 	db	121	;'y'
   376  00FA5E  70                 	db	112	;'p'
   377  00FA5F  72                 	db	114	;'r'
   378  00FA60  65                 	db	101	;'e'
   379  00FA61  73                 	db	115	;'s'
   380  00FA62  73                 	db	115	;'s'
   381  00FA63  20                 	db	32
   382  00FA64  61                 	db	97	;'a'
   383  00FA65  6E                 	db	110	;'n'
   384  00FA66  64                 	db	100	;'d'
   385  00FA67  20                 	db	32
   386  00FA68  72                 	db	114	;'r'
   387  00FA69  65                 	db	101	;'e'
   388  00FA6A  70                 	db	112	;'p'
   389  00FA6B  6F                 	db	111	;'o'
   390  00FA6C  72                 	db	114	;'r'
   391  00FA6D  74                 	db	116	;'t'
   392  00FA6E  20                 	db	32
   393  00FA6F  25                 	db	37
   394  00FA70  64                 	db	100	;'d'
   395  00FA71  20                 	db	32
   396  00FA72  73                 	db	115	;'s'
   397  00FA73  61                 	db	97	;'a'
   398  00FA74  6D                 	db	109	;'m'
   399  00FA75  70                 	db	112	;'p'
   400  00FA76  6C                 	db	108	;'l'
   401  00FA77  65                 	db	101	;'e'
   402  00FA78  73                 	db	115	;'s'
   403  00FA79  2C                 	db	44
   404  00FA7A  20                 	db	32
   405  00FA7B  6F                 	db	111	;'o'
   406  00FA7C  6E                 	db	110	;'n'
   407  00FA7D  65                 	db	101	;'e'
   408  00FA7E  20                 	db	32
   409  00FA7F  65                 	db	101	;'e'
   410  00FA80  76                 	db	118	;'v'
   411  00FA81  65                 	db	101	;'e'
   412  00FA82  72                 	db	114	;'r'
   413  00FA83  79                 	db	121	;'y'
   414  00FA84  20                 	db	32
   415  00FA85  25                 	db	37
   416  00FA86  64                 	db	100	;'d'
   417  00FA87  75                 	db	117	;'u'
   418  00FA88  73                 	db	115	;'s'
   419  00FA89  2E                 	db	46
   420  00FA8A  0D                 	db	13
   421  00FA8B  0A                 	db	10
   422  00FA8C  00                 	db	0
   423  00FA8D                     STR_52:
   424  00FA8D  20                 	db	32
   425  00FA8E  20                 	db	32
   426  00FA8F  20                 	db	32
   427  00FA90  20                 	db	32
   428  00FA91  50                 	db	80	;'P'
   429  00FA92  72                 	db	114	;'r'
   430  00FA93  65                 	db	101	;'e'
   431  00FA94  73                 	db	115	;'s'
   432  00FA95  73                 	db	115	;'s'
   433  00FA96  20                 	db	32
   434  00FA97  75                 	db	117	;'u'
   435  00FA98  70                 	db	112	;'p'
   436  00FA99  70                 	db	112	;'p'
   437  00FA9A  65                 	db	101	;'e'
   438  00FA9B  72                 	db	114	;'r'
   439  00FA9C  20                 	db	32
   440  00FA9D  70                 	db	112	;'p'
   441  00FA9E  75                 	db	117	;'u'
   442  00FA9F  73                 	db	115	;'s'
   443  00FAA0  68                 	db	104	;'h'
   444  00FAA1  20                 	db	32
   445  00FAA2  62                 	db	98	;'b'
   446  00FAA3  75                 	db	117	;'u'
   447  00FAA4  74                 	db	116	;'t'
   448  00FAA5  74                 	db	116	;'t'
   449  00FAA6  6F                 	db	111	;'o'
   450  00FAA7  6E                 	db	110	;'n'
   451  00FAA8  20                 	db	32
   452  00FAA9  6F                 	db	111	;'o'
   453  00FAAA  6E                 	db	110	;'n'
   454  00FAAB  20                 	db	32
   455  00FAAC  44                 	db	68	;'D'
   456  00FAAD  65                 	db	101	;'e'
   457  00FAAE  76                 	db	118	;'v'
   458  00FAAF  27                 	db	39
   459  00FAB0  31                 	db	49	;'1'
   460  00FAB1  38                 	db	56	;'8'
   461  00FAB2  20                 	db	32
   462  00FAB3  74                 	db	116	;'t'
   463  00FAB4  6F                 	db	111	;'o'
   464  00FAB5  20                 	db	32
   465  00FAB6  73                 	db	115	;'s'
   466  00FAB7  74                 	db	116	;'t'
   467  00FAB8  61                 	db	97	;'a'
   468  00FAB9  72                 	db	114	;'r'
   469  00FABA  74                 	db	116	;'t'
   470  00FABB  20                 	db	32
   471  00FABC  4D                 	db	77	;'M'
   472  00FABD  49                 	db	73	;'I'
   473  00FABE  44                 	db	68	;'D'
   474  00FABF  49                 	db	73	;'I'
   475  00FAC0  20                 	db	32
   476  00FAC1  70                 	db	112	;'p'
   477  00FAC2  6C                 	db	108	;'l'
   478  00FAC3  61                 	db	97	;'a'
   479  00FAC4  79                 	db	121	;'y'
   480  00FAC5  20                 	db	32
   481  00FAC6  73                 	db	115	;'s'
   482  00FAC7  65                 	db	101	;'e'
   483  00FAC8  71                 	db	113	;'q'
   484  00FAC9  75                 	db	117	;'u'
   485  00FACA  65                 	db	101	;'e'
   486  00FACB  6E                 	db	110	;'n'
   487  00FACC  63                 	db	99	;'c'
   488  00FACD  65                 	db	101	;'e'
   489  00FACE  0D                 	db	13
   490  00FACF  0A                 	db	10
   491  00FAD0  00                 	db	0
   492  00FAD1                     STR_53:
   493  00FAD1  20                 	db	32
   494  00FAD2  20                 	db	32
   495  00FAD3  20                 	db	32
   496  00FAD4  20                 	db	32
   497  00FAD5  50                 	db	80	;'P'
   498  00FAD6  72                 	db	114	;'r'
   499  00FAD7  65                 	db	101	;'e'
   500  00FAD8  73                 	db	115	;'s'
   501  00FAD9  73                 	db	115	;'s'
   502  00FADA  20                 	db	32
   503  00FADB  6C                 	db	108	;'l'
   504  00FADC  6F                 	db	111	;'o'
   505  00FADD  77                 	db	119	;'w'
   506  00FADE  65                 	db	101	;'e'
   507  00FADF  72                 	db	114	;'r'
   508  00FAE0  20                 	db	32
   509  00FAE1  70                 	db	112	;'p'
   510  00FAE2  75                 	db	117	;'u'
   511  00FAE3  73                 	db	115	;'s'
   512  00FAE4  68                 	db	104	;'h'
   513  00FAE5  20                 	db	32
   514  00FAE6  62                 	db	98	;'b'
   515  00FAE7  75                 	db	117	;'u'
   516  00FAE8  74                 	db	116	;'t'
   517  00FAE9  74                 	db	116	;'t'
   518  00FAEA  6F                 	db	111	;'o'
   519  00FAEB  6E                 	db	110	;'n'
   520  00FAEC  20                 	db	32
   521  00FAED  6F                 	db	111	;'o'
   522  00FAEE  6E                 	db	110	;'n'
   523  00FAEF  20                 	db	32
   524  00FAF0  44                 	db	68	;'D'
   525  00FAF1  65                 	db	101	;'e'
   526  00FAF2  76                 	db	118	;'v'
   527  00FAF3  27                 	db	39
   528  00FAF4  31                 	db	49	;'1'
   529  00FAF5  38                 	db	56	;'8'
   530  00FAF6  20                 	db	32
   531  00FAF7  74                 	db	116	;'t'
   532  00FAF8  6F                 	db	111	;'o'
   533  00FAF9  20                 	db	32
   534  00FAFA  65                 	db	101	;'e'
   535  00FAFB  78                 	db	120	;'x'
   536  00FAFC  69                 	db	105	;'i'
   537  00FAFD  74                 	db	116	;'t'
   538  00FAFE  20                 	db	32
   539  00FAFF  4D                 	db	77	;'M'
   540  00FB00  49                 	db	73	;'I'
   541  00FB01  44                 	db	68	;'D'
   542  00FB02  49                 	db	73	;'I'
   543  00FB03  20                 	db	32
   544  00FB04  70                 	db	112	;'p'
   545  00FB05  6C                 	db	108	;'l'
   546  00FB06  61                 	db	97	;'a'
   547  00FB07  79                 	db	121	;'y'
   548  00FB08  20                 	db	32
   549  00FB09  73                 	db	115	;'s'
   550  00FB0A  65                 	db	101	;'e'
   551  00FB0B  71                 	db	113	;'q'
   552  00FB0C  75                 	db	117	;'u'
   553  00FB0D  65                 	db	101	;'e'
   554  00FB0E  6E                 	db	110	;'n'
   555  00FB0F  63                 	db	99	;'c'
   556  00FB10  65                 	db	101	;'e'
   557  00FB11  0D                 	db	13
   558  00FB12  0A                 	db	10
   559  00FB13  00                 	db	0
   560  00FB14                     STR_51:
   561  00FB14  20                 	db	32
   562  00FB15  20                 	db	32
   563  00FB16  20                 	db	32
   564  00FB17  20                 	db	32
   565  00FB18  20                 	db	32
   566  00FB19  20                 	db	32
   567  00FB1A  20                 	db	32
   568  00FB1B  20                 	db	32
   569  00FB1C  4D                 	db	77	;'M'
   570  00FB1D  49                 	db	73	;'I'
   571  00FB1E  44                 	db	68	;'D'
   572  00FB1F  49                 	db	73	;'I'
   573  00FB20  20                 	db	32
   574  00FB21  4F                 	db	79	;'O'
   575  00FB22  75                 	db	117	;'u'
   576  00FB23  74                 	db	116	;'t'
   577  00FB24  20                 	db	32
   578  00FB25  2D                 	db	45
   579  00FB26  3E                 	db	62	;'>'
   580  00FB27  20                 	db	32
   581  00FB28  4D                 	db	77	;'M'
   582  00FB29  69                 	db	105	;'i'
   583  00FB2A  63                 	db	99	;'c'
   584  00FB2B  72                 	db	114	;'r'
   585  00FB2C  6F                 	db	111	;'o'
   586  00FB2D  73                 	db	115	;'s'
   587  00FB2E  6F                 	db	111	;'o'
   588  00FB2F  66                 	db	102	;'f'
   589  00FB30  74                 	db	116	;'t'
   590  00FB31  20                 	db	32
   591  00FB32  47                 	db	71	;'G'
   592  00FB33  53                 	db	83	;'S'
   593  00FB34  20                 	db	32
   594  00FB35  57                 	db	87	;'W'
   595  00FB36  61                 	db	97	;'a'
   596  00FB37  76                 	db	118	;'v'
   597  00FB38  65                 	db	101	;'e'
   598  00FB39  74                 	db	116	;'t'
   599  00FB3A  61                 	db	97	;'a'
   600  00FB3B  62                 	db	98	;'b'
   601  00FB3C  6C                 	db	108	;'l'
   602  00FB3D  65                 	db	101	;'e'
   603  00FB3E  20                 	db	32
   604  00FB3F  53                 	db	83	;'S'
   605  00FB40  79                 	db	121	;'y'
   606  00FB41  6E                 	db	110	;'n'
   607  00FB42  74                 	db	116	;'t'
   608  00FB43  68                 	db	104	;'h'
   609  00FB44  20                 	db	32
   610  00FB45  0D                 	db	13
   611  00FB46  0A                 	db	10
   612  00FB47  00                 	db	0
   613  00FB48                     STR_5:
   614  00FB48  2D                 	db	45
   615  00FB49  2D                 	db	45
   616  00FB4A  2D                 	db	45
   617  00FB4B  2D                 	db	45
   618  00FB4C  2D                 	db	45
   619  00FB4D  2D                 	db	45
   620  00FB4E  2D                 	db	45
   621  00FB4F  2D                 	db	45
   622  00FB50  2D                 	db	45
   623  00FB51  2D                 	db	45
   624  00FB52  2D                 	db	45
   625  00FB53  2D                 	db	45
   626  00FB54  2D                 	db	45
   627  00FB55  2D                 	db	45
   628  00FB56  2D                 	db	45
   629  00FB57  2D                 	db	45
   630  00FB58  2D                 	db	45
   631  00FB59  2D                 	db	45
   632  00FB5A  2D                 	db	45
   633  00FB5B  2D                 	db	45
   634  00FB5C  2D                 	db	45
   635  00FB5D  2D                 	db	45
   636  00FB5E  2D                 	db	45
   637  00FB5F  2D                 	db	45
   638  00FB60  2D                 	db	45
   639  00FB61  2D                 	db	45
   640  00FB62  2D                 	db	45
   641  00FB63  2D                 	db	45
   642  00FB64  2D                 	db	45
   643  00FB65  2D                 	db	45
   644  00FB66  2D                 	db	45
   645  00FB67  2D                 	db	45
   646  00FB68  2D                 	db	45
   647  00FB69  2D                 	db	45
   648  00FB6A  2D                 	db	45
   649  00FB6B  2D                 	db	45
   650  00FB6C  2D                 	db	45
   651  00FB6D  2D                 	db	45
   652  00FB6E  2D                 	db	45
   653  00FB6F  2D                 	db	45
   654  00FB70  2D                 	db	45
   655  00FB71  2D                 	db	45
   656  00FB72  2D                 	db	45
   657  00FB73  2D                 	db	45
   658  00FB74  2D                 	db	45
   659  00FB75  2D                 	db	45
   660  00FB76  2D                 	db	45
   661  00FB77  2D                 	db	45
   662  00FB78  2D                 	db	45
   663  00FB79  0D                 	db	13
   664  00FB7A  0A                 	db	10
   665  00FB7B  00                 	db	0
   666  00FB7C                     STR_58:
   667  00FB7C  20                 	db	32
   668  00FB7D  20                 	db	32
   669  00FB7E  20                 	db	32
   670  00FB7F  20                 	db	32
   671  00FB80  4C                 	db	76	;'L'
   672  00FB81  61                 	db	97	;'a'
   673  00FB82  75                 	db	117	;'u'
   674  00FB83  6E                 	db	110	;'n'
   675  00FB84  63                 	db	99	;'c'
   676  00FB85  68                 	db	104	;'h'
   677  00FB86  20                 	db	32
   678  00FB87  50                 	db	80	;'P'
   679  00FB88  75                 	db	117	;'u'
   680  00FB89  54                 	db	84	;'T'
   681  00FB8A  54                 	db	84	;'T'
   682  00FB8B  59                 	db	89	;'Y'
   683  00FB8C  20                 	db	32
   684  00FB8D  61                 	db	97	;'a'
   685  00FB8E  6E                 	db	110	;'n'
   686  00FB8F  64                 	db	100	;'d'
   687  00FB90  20                 	db	32
   688  00FB91  72                 	db	114	;'r'
   689  00FB92  65                 	db	101	;'e'
   690  00FB93  63                 	db	99	;'c'
   691  00FB94  6F                 	db	111	;'o'
   692  00FB95  6E                 	db	110	;'n'
   693  00FB96  6E                 	db	110	;'n'
   694  00FB97  65                 	db	101	;'e'
   695  00FB98  63                 	db	99	;'c'
   696  00FB99  74                 	db	116	;'t'
   697  00FB9A  20                 	db	32
   698  00FB9B  74                 	db	116	;'t'
   699  00FB9C  6F                 	db	111	;'o'
   700  00FB9D  20                 	db	32
   701  00FB9E  74                 	db	116	;'t'
   702  00FB9F  68                 	db	104	;'h'
   703  00FBA0  65                 	db	101	;'e'
   704  00FBA1  20                 	db	32
   705  00FBA2  56                 	db	86	;'V'
   706  00FBA3  43                 	db	67	;'C'
   707  00FBA4  4F                 	db	79	;'O'
   708  00FBA5  4D                 	db	77	;'M'
   709  00FBA6  20                 	db	32
   710  00FBA7  70                 	db	112	;'p'
   711  00FBA8  6F                 	db	111	;'o'
   712  00FBA9  72                 	db	114	;'r'
   713  00FBAA  74                 	db	116	;'t'
   714  00FBAB  0D                 	db	13
   715  00FBAC  0A                 	db	10
   716  00FBAD  00                 	db	0
   717  00FBAE                     STR_50:
   718  00FBAE  20                 	db	32
   719  00FBAF  20                 	db	32
   720  00FBB0  20                 	db	32
   721  00FBB1  20                 	db	32
   722  00FBB2  20                 	db	32
   723  00FBB3  20                 	db	32
   724  00FBB4  20                 	db	32
   725  00FBB5  20                 	db	32
   726  00FBB6  53                 	db	83	;'S'
   727  00FBB7  65                 	db	101	;'e'
   728  00FBB8  72                 	db	114	;'r'
   729  00FBB9  69                 	db	105	;'i'
   730  00FBBA  61                 	db	97	;'a'
   731  00FBBB  6C                 	db	108	;'l'
   732  00FBBC  20                 	db	32
   733  00FBBD  50                 	db	80	;'P'
   734  00FBBE  6F                 	db	111	;'o'
   735  00FBBF  72                 	db	114	;'r'
   736  00FBC0  74                 	db	116	;'t'
   737  00FBC1  20                 	db	32
   738  00FBC2  2D                 	db	45
   739  00FBC3  3E                 	db	62	;'>'
   740  00FBC4  20                 	db	32
   741  00FBC5  55                 	db	85	;'U'
   742  00FBC6  53                 	db	83	;'S'
   743  00FBC7  42                 	db	66	;'B'
   744  00FBC8  20                 	db	32
   745  00FBC9  53                 	db	83	;'S'
   746  00FBCA  65                 	db	101	;'e'
   747  00FBCB  72                 	db	114	;'r'
   748  00FBCC  69                 	db	105	;'i'
   749  00FBCD  61                 	db	97	;'a'
   750  00FBCE  6C                 	db	108	;'l'
   751  00FBCF  20                 	db	32
   752  00FBD0  50                 	db	80	;'P'
   753  00FBD1  6F                 	db	111	;'o'
   754  00FBD2  72                 	db	114	;'r'
   755  00FBD3  74                 	db	116	;'t'
   756  00FBD4  20                 	db	32
   757  00FBD5  28                 	db	40
   758  00FBD6  43                 	db	67	;'C'
   759  00FBD7  4F                 	db	79	;'O'
   760  00FBD8  4D                 	db	77	;'M'
   761  00FBD9  78                 	db	120	;'x'
   762  00FBDA  29                 	db	41
   763  00FBDB  0D                 	db	13
   764  00FBDC  0A                 	db	10
   765  00FBDD  00                 	db	0
   766  00FBDE                     STR_15:
   767  00FBDE  63                 	db	99	;'c'
   768  00FBDF  2F                 	db	47
   769  00FBE0  43                 	db	67	;'C'
   770  00FBE1  3A                 	db	58	;':'
   771  00FBE2  20                 	db	32
   772  00FBE3  63                 	db	99	;'c'
   773  00FBE4  61                 	db	97	;'a'
   774  00FBE5  6C                 	db	108	;'l'
   775  00FBE6  69                 	db	105	;'i'
   776  00FBE7  62                 	db	98	;'b'
   777  00FBE8  72                 	db	114	;'r'
   778  00FBE9  61                 	db	97	;'a'
   779  00FBEA  74                 	db	116	;'t'
   780  00FBEB  65                 	db	101	;'e'
   781  00FBEC  20                 	db	32
   782  00FBED  75                 	db	117	;'u'
   783  00FBEE  6E                 	db	110	;'n'
   784  00FBEF  70                 	db	112	;'p'
   785  00FBF0  72                 	db	114	;'r'
   786  00FBF1  65                 	db	101	;'e'
   787  00FBF2  73                 	db	115	;'s'
   788  00FBF3  73                 	db	115	;'s'
   789  00FBF4  65                 	db	101	;'e'
   790  00FBF5  64                 	db	100	;'d'
   791  00FBF6  2F                 	db	47
   792  00FBF7  70                 	db	112	;'p'
   793  00FBF8  72                 	db	114	;'r'
   794  00FBF9  65                 	db	101	;'e'
   795  00FBFA  73                 	db	115	;'s'
   796  00FBFB  73                 	db	115	;'s'
   797  00FBFC  65                 	db	101	;'e'
   798  00FBFD  64                 	db	100	;'d'
   799  00FBFE  20                 	db	32
   800  00FBFF  68                 	db	104	;'h'
   801  00FC00  61                 	db	97	;'a'
   802  00FC01  6C                 	db	108	;'l'
   803  00FC02  6C                 	db	108	;'l'
   804  00FC03  20                 	db	32
   805  00FC04  73                 	db	115	;'s'
   806  00FC05  65                 	db	101	;'e'
   807  00FC06  6E                 	db	110	;'n'
   808  00FC07  73                 	db	115	;'s'
   809  00FC08  6F                 	db	111	;'o'
   810  00FC09  72                 	db	114	;'r'
   811  00FC0A  2E                 	db	46
   812  00FC0B  0D                 	db	13
   813  00FC0C  0A                 	db	10
   814  00FC0D  00                 	db	0
   815  00FC0E                     STR_33:
   816  00FC0E  54                 	db	84	;'T'
   817  00FC0F  61                 	db	97	;'a'
   818  00FC10  70                 	db	112	;'p'
   819  00FC11  20                 	db	32
   820  00FC12  70                 	db	112	;'p'
   821  00FC13  69                 	db	105	;'i'
   822  00FC14  61                 	db	97	;'a'
   823  00FC15  6E                 	db	110	;'n'
   824  00FC16  6F                 	db	111	;'o'
   825  00FC17  20                 	db	32
   826  00FC18  6B                 	db	107	;'k'
   827  00FC19  65                 	db	101	;'e'
   828  00FC1A  79                 	db	121	;'y'
   829  00FC1B  20                 	db	32
   830  00FC1C  61                 	db	97	;'a'
   831  00FC1D  6E                 	db	110	;'n'
   832  00FC1E  64                 	db	100	;'d'
   833  00FC1F  20                 	db	32
   834  00FC20  70                 	db	112	;'p'
   835  00FC21  72                 	db	114	;'r'
   836  00FC22  65                 	db	101	;'e'
   837  00FC23  73                 	db	115	;'s'
   838  00FC24  73                 	db	115	;'s'
   839  00FC25  20                 	db	32
   840  00FC26  6B                 	db	107	;'k'
   841  00FC27  65                 	db	101	;'e'
   842  00FC28  79                 	db	121	;'y'
   843  00FC29  62                 	db	98	;'b'
   844  00FC2A  6F                 	db	111	;'o'
   845  00FC2B  61                 	db	97	;'a'
   846  00FC2C  72                 	db	114	;'r'
   847  00FC2D  64                 	db	100	;'d'
   848  00FC2E  20                 	db	32
   849  00FC2F  6B                 	db	107	;'k'
   850  00FC30  65                 	db	101	;'e'
   851  00FC31  79                 	db	121	;'y'
   852  00FC32  20                 	db	32
   853  00FC33  74                 	db	116	;'t'
   854  00FC34  6F                 	db	111	;'o'
   855  00FC35  20                 	db	32
   856  00FC36  65                 	db	101	;'e'
   857  00FC37  78                 	db	120	;'x'
   858  00FC38  69                 	db	105	;'i'
   859  00FC39  74                 	db	116	;'t'
   860  00FC3A  2E                 	db	46
   861  00FC3B  0D                 	db	13
   862  00FC3C  0A                 	db	10
   863  00FC3D  00                 	db	0
   864  00FC3E                     STR_49:
   865  00FC3E  20                 	db	32
   866  00FC3F  20                 	db	32
   867  00FC40  20                 	db	32
   868  00FC41  20                 	db	32
   869  00FC42  49                 	db	73	;'I'
   870  00FC43  6E                 	db	110	;'n'
   871  00FC44  20                 	db	32
   872  00FC45  74                 	db	116	;'t'
   873  00FC46  68                 	db	104	;'h'
   874  00FC47  65                 	db	101	;'e'
   875  00FC48  20                 	db	32
   876  00FC49  68                 	db	104	;'h'
   877  00FC4A  61                 	db	97	;'a'
   878  00FC4B  69                 	db	105	;'i'
   879  00FC4C  72                 	db	114	;'r'
   880  00FC4D  6C                 	db	108	;'l'
   881  00FC4E  65                 	db	101	;'e'
   882  00FC4F  73                 	db	115	;'s'
   883  00FC50  73                 	db	115	;'s'
   884  00FC51  2D                 	db	45
   885  00FC52  6D                 	db	109	;'m'
   886  00FC53  69                 	db	105	;'i'
   887  00FC54  64                 	db	100	;'d'
   888  00FC55  69                 	db	105	;'i'
   889  00FC56  73                 	db	115	;'s'
   890  00FC57  65                 	db	101	;'e'
   891  00FC58  72                 	db	114	;'r'
   892  00FC59  69                 	db	105	;'i'
   893  00FC5A  61                 	db	97	;'a'
   894  00FC5B  6C                 	db	108	;'l'
   895  00FC5C  20                 	db	32
   896  00FC5D  70                 	db	112	;'p'
   897  00FC5E  72                 	db	114	;'r'
   898  00FC5F  6F                 	db	111	;'o'
   899  00FC60  67                 	db	103	;'g'
   900  00FC61  72                 	db	114	;'r'
   901  00FC62  61                 	db	97	;'a'
   902  00FC63  6D                 	db	109	;'m'
   903  00FC64  3A                 	db	58	;':'
   904  00FC65  0D                 	db	13
   905  00FC66  0A                 	db	10
   906  00FC67  00                 	db	0
   907  00FC68                     STR_55:
   908  00FC68  20                 	db	32
   909  00FC69  20                 	db	32
   910  00FC6A  20                 	db	32
   911  00FC6B  20                 	db	32
   912  00FC6C  20                 	db	32
   913  00FC6D  20                 	db	32
   914  00FC6E  20                 	db	32
   915  00FC6F  20                 	db	32
   916  00FC70  53                 	db	83	;'S'
   917  00FC71  65                 	db	101	;'e'
   918  00FC72  72                 	db	114	;'r'
   919  00FC73  69                 	db	105	;'i'
   920  00FC74  61                 	db	97	;'a'
   921  00FC75  6C                 	db	108	;'l'
   922  00FC76  20                 	db	32
   923  00FC77  50                 	db	80	;'P'
   924  00FC78  6F                 	db	111	;'o'
   925  00FC79  72                 	db	114	;'r'
   926  00FC7A  74                 	db	116	;'t'
   927  00FC7B  20                 	db	32
   928  00FC7C  2D                 	db	45
   929  00FC7D  3E                 	db	62	;'>'
   930  00FC7E  20                 	db	32
   931  00FC7F  28                 	db	40
   932  00FC80  4E                 	db	78	;'N'
   933  00FC81  6F                 	db	111	;'o'
   934  00FC82  74                 	db	116	;'t'
   935  00FC83  20                 	db	32
   936  00FC84  43                 	db	67	;'C'
   937  00FC85  6F                 	db	111	;'o'
   938  00FC86  6E                 	db	110	;'n'
   939  00FC87  6E                 	db	110	;'n'
   940  00FC88  65                 	db	101	;'e'
   941  00FC89  63                 	db	99	;'c'
   942  00FC8A  74                 	db	116	;'t'
   943  00FC8B  65                 	db	101	;'e'
   944  00FC8C  64                 	db	100	;'d'
   945  00FC8D  29                 	db	41
   946  00FC8E  0D                 	db	13
   947  00FC8F  0A                 	db	10
   948  00FC90  00                 	db	0
   949  00FC91                     STR_8:
   950  00FC91  20                 	db	32
   951  00FC92  20                 	db	32
   952  00FC93  20                 	db	32
   953  00FC94  20                 	db	32
   954  00FC95  73                 	db	115	;'s'
   955  00FC96  61                 	db	97	;'a'
   956  00FC97  6D                 	db	109	;'m'
   957  00FC98  70                 	db	112	;'p'
   958  00FC99  6C                 	db	108	;'l'
   959  00FC9A  65                 	db	101	;'e'
   960  00FC9B  52                 	db	82	;'R'
   961  00FC9C  61                 	db	97	;'a'
   962  00FC9D  74                 	db	116	;'t'
   963  00FC9E  65                 	db	101	;'e'
   964  00FC9F  20                 	db	32
   965  00FCA0  3D                 	db	61	;'='
   966  00FCA1  20                 	db	32
   967  00FCA2  25                 	db	37
   968  00FCA3  64                 	db	100	;'d'
   969  00FCA4  20                 	db	32
   970  00FCA5  54                 	db	84	;'T'
   971  00FCA6  4D                 	db	77	;'M'
   972  00FCA7  52                 	db	82	;'R'
   973  00FCA8  30                 	db	48	;'0'
   974  00FCA9  20                 	db	32
   975  00FCAA  63                 	db	99	;'c'
   976  00FCAB  6F                 	db	111	;'o'
   977  00FCAC  75                 	db	117	;'u'
   978  00FCAD  6E                 	db	110	;'n'
   979  00FCAE  74                 	db	116	;'t'
   980  00FCAF  73                 	db	115	;'s'
   981  00FCB0  20                 	db	32
   982  00FCB1  3D                 	db	61	;'='
   983  00FCB2  20                 	db	32
   984  00FCB3  25                 	db	37
   985  00FCB4  64                 	db	100	;'d'
   986  00FCB5  75                 	db	117	;'u'
   987  00FCB6  53                 	db	83	;'S'
   988  00FCB7  0D                 	db	13
   989  00FCB8  0A                 	db	10
   990  00FCB9  00                 	db	0
   991  00FCBA                     STR_56:
   992  00FCBA  20                 	db	32
   993  00FCBB  20                 	db	32
   994  00FCBC  20                 	db	32
   995  00FCBD  20                 	db	32
   996  00FCBE  20                 	db	32
   997  00FCBF  20                 	db	32
   998  00FCC0  20                 	db	32
   999  00FCC1  20                 	db	32
  1000  00FCC2  4D                 	db	77	;'M'
  1001  00FCC3  49                 	db	73	;'I'
  1002  00FCC4  44                 	db	68	;'D'
  1003  00FCC5  49                 	db	73	;'I'
  1004  00FCC6  20                 	db	32
  1005  00FCC7  4F                 	db	79	;'O'
  1006  00FCC8  75                 	db	117	;'u'
  1007  00FCC9  74                 	db	116	;'t'
  1008  00FCCA  20                 	db	32
  1009  00FCCB  2D                 	db	45
  1010  00FCCC  3E                 	db	62	;'>'
  1011  00FCCD  20                 	db	32
  1012  00FCCE  28                 	db	40
  1013  00FCCF  4E                 	db	78	;'N'
  1014  00FCD0  6F                 	db	111	;'o'
  1015  00FCD1  74                 	db	116	;'t'
  1016  00FCD2  20                 	db	32
  1017  00FCD3  43                 	db	67	;'C'
  1018  00FCD4  6F                 	db	111	;'o'
  1019  00FCD5  6E                 	db	110	;'n'
  1020  00FCD6  6E                 	db	110	;'n'
  1021  00FCD7  65                 	db	101	;'e'
  1022  00FCD8  63                 	db	99	;'c'
  1023  00FCD9  74                 	db	116	;'t'
  1024  00FCDA  65                 	db	101	;'e'
  1025  00FCDB  64                 	db	100	;'d'
  1026  00FCDC  29                 	db	41
  1027  00FCDD  0D                 	db	13
  1028  00FCDE  0A                 	db	10
  1029  00FCDF  00                 	db	0
  1030  00FCE0                     STR_25:
  1031  00FCE0  4E                 	db	78	;'N'
  1032  00FCE1  65                 	db	101	;'e'
  1033  00FCE2  77                 	db	119	;'w'
  1034  00FCE3  20                 	db	32
  1035  00FCE4  6E                 	db	110	;'n'
  1036  00FCE5  6F                 	db	111	;'o'
  1037  00FCE6  6D                 	db	109	;'m'
  1038  00FCE7  69                 	db	105	;'i'
  1039  00FCE8  6E                 	db	110	;'n'
  1040  00FCE9  61                 	db	97	;'a'
  1041  00FCEA  6C                 	db	108	;'l'
  1042  00FCEB  48                 	db	72	;'H'
  1043  00FCEC  61                 	db	97	;'a'
  1044  00FCED  6C                 	db	108	;'l'
  1045  00FCEE  6C                 	db	108	;'l'
  1046  00FCEF  55                 	db	85	;'U'
  1047  00FCF0  6E                 	db	110	;'n'
  1048  00FCF1  50                 	db	80	;'P'
  1049  00FCF2  72                 	db	114	;'r'
  1050  00FCF3  65                 	db	101	;'e'
  1051  00FCF4  73                 	db	115	;'s'
  1052  00FCF5  73                 	db	115	;'s'
  1053  00FCF6  65                 	db	101	;'e'
  1054  00FCF7  64                 	db	100	;'d'
  1055  00FCF8  20                 	db	32
  1056  00FCF9  76                 	db	118	;'v'
  1057  00FCFA  61                 	db	97	;'a'
  1058  00FCFB  6C                 	db	108	;'l'
  1059  00FCFC  75                 	db	117	;'u'
  1060  00FCFD  65                 	db	101	;'e'
  1061  00FCFE  20                 	db	32
  1062  00FCFF  3D                 	db	61	;'='
  1063  00FD00  20                 	db	32
  1064  00FD01  25                 	db	37
  1065  00FD02  64                 	db	100	;'d'
  1066  00FD03  0D                 	db	13
  1067  00FD04  0A                 	db	10
  1068  00FD05  00                 	db	0
  1069  00FD06                     STR_34:
  1070  00FD06  53                 	db	83	;'S'
  1071  00FD07  74                 	db	116	;'t'
  1072  00FD08  72                 	db	114	;'r'
  1073  00FD09  69                 	db	105	;'i'
  1074  00FD0A  6B                 	db	107	;'k'
  1075  00FD0B  65                 	db	101	;'e'
  1076  00FD0C  20                 	db	32
  1077  00FD0D  56                 	db	86	;'V'
  1078  00FD0E  65                 	db	101	;'e'
  1079  00FD0F  6C                 	db	108	;'l'
  1080  00FD10  6F                 	db	111	;'o'
  1081  00FD11  63                 	db	99	;'c'
  1082  00FD12  69                 	db	105	;'i'
  1083  00FD13  74                 	db	116	;'t'
  1084  00FD14  79                 	db	121	;'y'
  1085  00FD15  20                 	db	32
  1086  00FD16  3D                 	db	61	;'='
  1087  00FD17  20                 	db	32
  1088  00FD18  25                 	db	37
  1089  00FD19  64                 	db	100	;'d'
  1090  00FD1A  20                 	db	32
  1091  00FD1B  20                 	db	32
  1092  00FD1C  20                 	db	32
  1093  00FD1D  20                 	db	32
  1094  00FD1E  72                 	db	114	;'r'
  1095  00FD1F  65                 	db	101	;'e'
  1096  00FD20  6C                 	db	108	;'l'
  1097  00FD21  65                 	db	101	;'e'
  1098  00FD22  61                 	db	97	;'a'
  1099  00FD23  73                 	db	115	;'s'
  1100  00FD24  65                 	db	101	;'e'
  1101  00FD25  64                 	db	100	;'d'
  1102  00FD26  2E                 	db	46
  1103  00FD27  0D                 	db	13
  1104  00FD28  0A                 	db	10
  1105  00FD29  00                 	db	0
  1106  00FD2A                     STR_27:
  1107  00FD2A  4E                 	db	78	;'N'
  1108  00FD2B  65                 	db	101	;'e'
  1109  00FD2C  77                 	db	119	;'w'
  1110  00FD2D  20                 	db	32
  1111  00FD2E  6E                 	db	110	;'n'
  1112  00FD2F  6F                 	db	111	;'o'
  1113  00FD30  6D                 	db	109	;'m'
  1114  00FD31  69                 	db	105	;'i'
  1115  00FD32  6E                 	db	110	;'n'
  1116  00FD33  61                 	db	97	;'a'
  1117  00FD34  6C                 	db	108	;'l'
  1118  00FD35  48                 	db	72	;'H'
  1119  00FD36  61                 	db	97	;'a'
  1120  00FD37  6C                 	db	108	;'l'
  1121  00FD38  6C                 	db	108	;'l'
  1122  00FD39  50                 	db	80	;'P'
  1123  00FD3A  72                 	db	114	;'r'
  1124  00FD3B  65                 	db	101	;'e'
  1125  00FD3C  73                 	db	115	;'s'
  1126  00FD3D  73                 	db	115	;'s'
  1127  00FD3E  65                 	db	101	;'e'
  1128  00FD3F  64                 	db	100	;'d'
  1129  00FD40  20                 	db	32
  1130  00FD41  76                 	db	118	;'v'
  1131  00FD42  61                 	db	97	;'a'
  1132  00FD43  6C                 	db	108	;'l'
  1133  00FD44  75                 	db	117	;'u'
  1134  00FD45  65                 	db	101	;'e'
  1135  00FD46  20                 	db	32
  1136  00FD47  3D                 	db	61	;'='
  1137  00FD48  20                 	db	32
  1138  00FD49  25                 	db	37
  1139  00FD4A  64                 	db	100	;'d'
  1140  00FD4B  0D                 	db	13
  1141  00FD4C  0A                 	db	10
  1142  00FD4D  00                 	db	0
  1143  00FD4E                     STR_46:
  1144  00FD4E  20                 	db	32
  1145  00FD4F  20                 	db	32
  1146  00FD50  20                 	db	32
  1147  00FD51  20                 	db	32
  1148  00FD52  4D                 	db	77	;'M'
  1149  00FD53  49                 	db	73	;'I'
  1150  00FD54  44                 	db	68	;'D'
  1151  00FD55  49                 	db	73	;'I'
  1152  00FD56  20                 	db	32
  1153  00FD57  4F                 	db	79	;'O'
  1154  00FD58  75                 	db	117	;'u'
  1155  00FD59  74                 	db	116	;'t'
  1156  00FD5A  20                 	db	32
  1157  00FD5B  2D                 	db	45
  1158  00FD5C  3E                 	db	62	;'>'
  1159  00FD5D  20                 	db	32
  1160  00FD5E  28                 	db	40
  1161  00FD5F  4E                 	db	78	;'N'
  1162  00FD60  6F                 	db	111	;'o'
  1163  00FD61  74                 	db	116	;'t'
  1164  00FD62  20                 	db	32
  1165  00FD63  43                 	db	67	;'C'
  1166  00FD64  6F                 	db	111	;'o'
  1167  00FD65  6E                 	db	110	;'n'
  1168  00FD66  6E                 	db	110	;'n'
  1169  00FD67  65                 	db	101	;'e'
  1170  00FD68  63                 	db	99	;'c'
  1171  00FD69  74                 	db	116	;'t'
  1172  00FD6A  65                 	db	101	;'e'
  1173  00FD6B  64                 	db	100	;'d'
  1174  00FD6C  29                 	db	41
  1175  00FD6D  0D                 	db	13
  1176  00FD6E  0A                 	db	10
  1177  00FD6F  0A                 	db	10
  1178  00FD70  00                 	db	0
  1179  00FD71                     STR_14:
  1180  00FD71  64                 	db	100	;'d'
  1181  00FD72  2F                 	db	47
  1182  00FD73  44                 	db	68	;'D'
  1183  00FD74  3A                 	db	58	;':'
  1184  00FD75  20                 	db	32
  1185  00FD76  64                 	db	100	;'d'
  1186  00FD77  65                 	db	101	;'e'
  1187  00FD78  63                 	db	99	;'c'
  1188  00FD79  72                 	db	114	;'r'
  1189  00FD7A  65                 	db	101	;'e'
  1190  00FD7B  6D                 	db	109	;'m'
  1191  00FD7C  65                 	db	101	;'e'
  1192  00FD7D  6E                 	db	110	;'n'
  1193  00FD7E  74                 	db	116	;'t'
  1194  00FD7F  2F                 	db	47
  1195  00FD80  69                 	db	105	;'i'
  1196  00FD81  6E                 	db	110	;'n'
  1197  00FD82  63                 	db	99	;'c'
  1198  00FD83  72                 	db	114	;'r'
  1199  00FD84  65                 	db	101	;'e'
  1200  00FD85  6D                 	db	109	;'m'
  1201  00FD86  65                 	db	101	;'e'
  1202  00FD87  6E                 	db	110	;'n'
  1203  00FD88  74                 	db	116	;'t'
  1204  00FD89  20                 	db	32
  1205  00FD8A  64                 	db	100	;'d'
  1206  00FD8B  65                 	db	101	;'e'
  1207  00FD8C  6C                 	db	108	;'l'
  1208  00FD8D  74                 	db	116	;'t'
  1209  00FD8E  61                 	db	97	;'a'
  1210  00FD8F  0D                 	db	13
  1211  00FD90  0A                 	db	10
  1212  00FD91  00                 	db	0
  1213  00FD92                     STR_47:
  1214  00FD92  57                 	db	87	;'W'
  1215  00FD93  68                 	db	104	;'h'
  1216  00FD94  65                 	db	101	;'e'
  1217  00FD95  6E                 	db	110	;'n'
  1218  00FD96  20                 	db	32
  1219  00FD97  79                 	db	121	;'y'
  1220  00FD98  6F                 	db	111	;'o'
  1221  00FD99  75                 	db	117	;'u'
  1222  00FD9A  20                 	db	32
  1223  00FD9B  68                 	db	104	;'h'
  1224  00FD9C  61                 	db	97	;'a'
  1225  00FD9D  76                 	db	118	;'v'
  1226  00FD9E  65                 	db	101	;'e'
  1227  00FD9F  20                 	db	32
  1228  00FDA0  63                 	db	99	;'c'
  1229  00FDA1  6F                 	db	111	;'o'
  1230  00FDA2  6D                 	db	109	;'m'
  1231  00FDA3  70                 	db	112	;'p'
  1232  00FDA4  6C                 	db	108	;'l'
  1233  00FDA5  65                 	db	101	;'e'
  1234  00FDA6  74                 	db	116	;'t'
  1235  00FDA7  65                 	db	101	;'e'
  1236  00FDA8  20                 	db	32
  1237  00FDA9  74                 	db	116	;'t'
  1238  00FDAA  68                 	db	104	;'h'
  1239  00FDAB  69                 	db	105	;'i'
  1240  00FDAC  73                 	db	115	;'s'
  1241  00FDAD  3A                 	db	58	;':'
  1242  00FDAE  0D                 	db	13
  1243  00FDAF  0A                 	db	10
  1244  00FDB0  00                 	db	0
  1245  00FDB1                     STR_17:
  1246  00FDB1  54                 	db	84	;'T'
  1247  00FDB2  3A                 	db	58	;':'
  1248  00FDB3  20                 	db	32
  1249  00FDB4  73                 	db	115	;'s'
  1250  00FDB5  74                 	db	116	;'t'
  1251  00FDB6  72                 	db	114	;'r'
  1252  00FDB7  69                 	db	105	;'i'
  1253  00FDB8  6B                 	db	107	;'k'
  1254  00FDB9  65                 	db	101	;'e'
  1255  00FDBA  20                 	db	32
  1256  00FDBB  69                 	db	105	;'i'
  1257  00FDBC  6E                 	db	110	;'n'
  1258  00FDBD  64                 	db	100	;'d'
  1259  00FDBE  69                 	db	105	;'i'
  1260  00FDBF  63                 	db	99	;'c'
  1261  00FDC0  61                 	db	97	;'a'
  1262  00FDC1  74                 	db	116	;'t'
  1263  00FDC2  6F                 	db	111	;'o'
  1264  00FDC3  72                 	db	114	;'r'
  1265  00FDC4  20                 	db	32
  1266  00FDC5  61                 	db	97	;'a'
  1267  00FDC6  6E                 	db	110	;'n'
  1268  00FDC7  64                 	db	100	;'d'
  1269  00FDC8  20                 	db	32
  1270  00FDC9  74                 	db	116	;'t'
  1271  00FDCA  69                 	db	105	;'i'
  1272  00FDCB  6D                 	db	109	;'m'
  1273  00FDCC  65                 	db	101	;'e'
  1274  00FDCD  0D                 	db	13
  1275  00FDCE  0A                 	db	10
  1276  00FDCF  00                 	db	0
  1277  00FDD0                     STR_36:
  1278  00FDD0  4C                 	db	76	;'L'
  1279  00FDD1  61                 	db	97	;'a'
  1280  00FDD2  75                 	db	117	;'u'
  1281  00FDD3  6E                 	db	110	;'n'
  1282  00FDD4  63                 	db	99	;'c'
  1283  00FDD5  68                 	db	104	;'h'
  1284  00FDD6  20                 	db	32
  1285  00FDD7  68                 	db	104	;'h'
  1286  00FDD8  61                 	db	97	;'a'
  1287  00FDD9  69                 	db	105	;'i'
  1288  00FDDA  72                 	db	114	;'r'
  1289  00FDDB  6C                 	db	108	;'l'
  1290  00FDDC  65                 	db	101	;'e'
  1291  00FDDD  73                 	db	115	;'s'
  1292  00FDDE  73                 	db	115	;'s'
  1293  00FDDF  2D                 	db	45
  1294  00FDE0  6D                 	db	109	;'m'
  1295  00FDE1  69                 	db	105	;'i'
  1296  00FDE2  64                 	db	100	;'d'
  1297  00FDE3  69                 	db	105	;'i'
  1298  00FDE4  73                 	db	115	;'s'
  1299  00FDE5  65                 	db	101	;'e'
  1300  00FDE6  72                 	db	114	;'r'
  1301  00FDE7  69                 	db	105	;'i'
  1302  00FDE8  61                 	db	97	;'a'
  1303  00FDE9  6C                 	db	108	;'l'
  1304  00FDEA  0D                 	db	13
  1305  00FDEB  0A                 	db	10
  1306  00FDEC  00                 	db	0
  1307  00FDED                     STR_19:
  1308  00FDED  4D                 	db	77	;'M'
  1309  00FDEE  3A                 	db	58	;':'
  1310  00FDEF  20                 	db	32
  1311  00FDF0  65                 	db	101	;'e'
  1312  00FDF1  6E                 	db	110	;'n'
  1313  00FDF2  74                 	db	116	;'t'
  1314  00FDF3  65                 	db	101	;'e'
  1315  00FDF4  72                 	db	114	;'r'
  1316  00FDF5  20                 	db	32
  1317  00FDF6  69                 	db	105	;'i'
  1318  00FDF7  6E                 	db	110	;'n'
  1319  00FDF8  74                 	db	116	;'t'
  1320  00FDF9  6F                 	db	111	;'o'
  1321  00FDFA  20                 	db	32
  1322  00FDFB  4D                 	db	77	;'M'
  1323  00FDFC  69                 	db	105	;'i'
  1324  00FDFD  64                 	db	100	;'d'
  1325  00FDFE  69                 	db	105	;'i'
  1326  00FDFF  20                 	db	32
  1327  00FE00  6D                 	db	109	;'m'
  1328  00FE01  6F                 	db	111	;'o'
  1329  00FE02  64                 	db	100	;'d'
  1330  00FE03  65                 	db	101	;'e'
  1331  00FE04  2E                 	db	46
  1332  00FE05  0D                 	db	13
  1333  00FE06  0A                 	db	10
  1334  00FE07  00                 	db	0
  1335  00FE08                     STR_43:
  1336  00FE08  20                 	db	32
  1337  00FE09  20                 	db	32
  1338  00FE0A  20                 	db	32
  1339  00FE0B  20                 	db	32
  1340  00FE0C  46                 	db	70	;'F'
  1341  00FE0D  6C                 	db	108	;'l'
  1342  00FE0E  6F                 	db	111	;'o'
  1343  00FE0F  77                 	db	119	;'w'
  1344  00FE10  20                 	db	32
  1345  00FE11  43                 	db	67	;'C'
  1346  00FE12  6F                 	db	111	;'o'
  1347  00FE13  6E                 	db	110	;'n'
  1348  00FE14  74                 	db	116	;'t'
  1349  00FE15  72                 	db	114	;'r'
  1350  00FE16  6F                 	db	111	;'o'
  1351  00FE17  6C                 	db	108	;'l'
  1352  00FE18  3A                 	db	58	;':'
  1353  00FE19  20                 	db	32
  1354  00FE1A  20                 	db	32
  1355  00FE1B  20                 	db	32
  1356  00FE1C  4E                 	db	78	;'N'
  1357  00FE1D  6F                 	db	111	;'o'
  1358  00FE1E  6E                 	db	110	;'n'
  1359  00FE1F  65                 	db	101	;'e'
  1360  00FE20  0D                 	db	13
  1361  00FE21  0A                 	db	10
  1362  00FE22  00                 	db	0
  1363  00FE23                     STR_48:
  1364  00FE23  20                 	db	32
  1365  00FE24  20                 	db	32
  1366  00FE25  20                 	db	32
  1367  00FE26  20                 	db	32
  1368  00FE27  43                 	db	67	;'C'
  1369  00FE28  6C                 	db	108	;'l'
  1370  00FE29  6F                 	db	111	;'o'
  1371  00FE2A  73                 	db	115	;'s'
  1372  00FE2B  65                 	db	101	;'e'
  1373  00FE2C  20                 	db	32
  1374  00FE2D  6F                 	db	111	;'o'
  1375  00FE2E  75                 	db	117	;'u'
  1376  00FE2F  74                 	db	116	;'t'
  1377  00FE30  20                 	db	32
  1378  00FE31  6F                 	db	111	;'o'
  1379  00FE32  66                 	db	102	;'f'
  1380  00FE33  20                 	db	32
  1381  00FE34  50                 	db	80	;'P'
  1382  00FE35  75                 	db	117	;'u'
  1383  00FE36  74                 	db	116	;'t'
  1384  00FE37  74                 	db	116	;'t'
  1385  00FE38  79                 	db	121	;'y'
  1386  00FE39  2E                 	db	46
  1387  00FE3A  0D                 	db	13
  1388  00FE3B  0A                 	db	10
  1389  00FE3C  00                 	db	0
  1390  00FE3D                     STR_38:
  1391  00FE3D  20                 	db	32
  1392  00FE3E  20                 	db	32
  1393  00FE3F  20                 	db	32
  1394  00FE40  20                 	db	32
  1395  00FE41  46                 	db	70	;'F'
  1396  00FE42  69                 	db	105	;'i'
  1397  00FE43  6C                 	db	108	;'l'
  1398  00FE44  65                 	db	101	;'e'
  1399  00FE45  20                 	db	32
  1400  00FE46  2D                 	db	45
  1401  00FE47  3E                 	db	62	;'>'
  1402  00FE48  20                 	db	32
  1403  00FE49  70                 	db	112	;'p'
  1404  00FE4A  72                 	db	114	;'r'
  1405  00FE4B  65                 	db	101	;'e'
  1406  00FE4C  66                 	db	102	;'f'
  1407  00FE4D  65                 	db	101	;'e'
  1408  00FE4E  72                 	db	114	;'r'
  1409  00FE4F  65                 	db	101	;'e'
  1410  00FE50  6E                 	db	110	;'n'
  1411  00FE51  63                 	db	99	;'c'
  1412  00FE52  65                 	db	101	;'e'
  1413  00FE53  73                 	db	115	;'s'
  1414  00FE54  0D                 	db	13
  1415  00FE55  0A                 	db	10
  1416  00FE56  00                 	db	0
  1417  00FE57                     STR_13:
  1418  00FE57  7A                 	db	122	;'z'
  1419  00FE58  3A                 	db	58	;':'
  1420  00FE59  20                 	db	32
  1421  00FE5A  43                 	db	67	;'C'
  1422  00FE5B  6C                 	db	108	;'l'
  1423  00FE5C  65                 	db	101	;'e'
  1424  00FE5D  61                 	db	97	;'a'
  1425  00FE5E  72                 	db	114	;'r'
  1426  00FE5F  20                 	db	32
  1427  00FE60  74                 	db	116	;'t'
  1428  00FE61  68                 	db	104	;'h'
  1429  00FE62  65                 	db	101	;'e'
  1430  00FE63  20                 	db	32
  1431  00FE64  74                 	db	116	;'t'
  1432  00FE65  65                 	db	101	;'e'
  1433  00FE66  72                 	db	114	;'r'
  1434  00FE67  6D                 	db	109	;'m'
  1435  00FE68  69                 	db	105	;'i'
  1436  00FE69  6E                 	db	110	;'n'
  1437  00FE6A  61                 	db	97	;'a'
  1438  00FE6B  6C                 	db	108	;'l'
  1439  00FE6C  2E                 	db	46
  1440  00FE6D  0D                 	db	13
  1441  00FE6E  0A                 	db	10
  1442  00FE6F  00                 	db	0
  1443  00FE70                     STR_57:
  1444  00FE70  20                 	db	32
  1445  00FE71  20                 	db	32
  1446  00FE72  20                 	db	32
  1447  00FE73  20                 	db	32
  1448  00FE74  20                 	db	32
  1449  00FE75  20                 	db	32
  1450  00FE76  20                 	db	32
  1451  00FE77  20                 	db	32
  1452  00FE78  63                 	db	99	;'c'
  1453  00FE79  6C                 	db	108	;'l'
  1454  00FE7A  6F                 	db	111	;'o'
  1455  00FE7B  73                 	db	115	;'s'
  1456  00FE7C  65                 	db	101	;'e'
  1457  00FE7D  20                 	db	32
  1458  00FE7E  68                 	db	104	;'h'
  1459  00FE7F  61                 	db	97	;'a'
  1460  00FE80  69                 	db	105	;'i'
  1461  00FE81  72                 	db	114	;'r'
  1462  00FE82  6C                 	db	108	;'l'
  1463  00FE83  65                 	db	101	;'e'
  1464  00FE84  73                 	db	115	;'s'
  1465  00FE85  73                 	db	115	;'s'
  1466  00FE86  0D                 	db	13
  1467  00FE87  0A                 	db	10
  1468  00FE88  00                 	db	0
  1469  00FE89                     STR_42:
  1470  00FE89  20                 	db	32
  1471  00FE8A  20                 	db	32
  1472  00FE8B  20                 	db	32
  1473  00FE8C  20                 	db	32
  1474  00FE8D  53                 	db	83	;'S'
  1475  00FE8E  74                 	db	116	;'t'
  1476  00FE8F  6F                 	db	111	;'o'
  1477  00FE90  70                 	db	112	;'p'
  1478  00FE91  20                 	db	32
  1479  00FE92  42                 	db	66	;'B'
  1480  00FE93  69                 	db	105	;'i'
  1481  00FE94  74                 	db	116	;'t'
  1482  00FE95  28                 	db	40
  1483  00FE96  73                 	db	115	;'s'
  1484  00FE97  29                 	db	41
  1485  00FE98  3A                 	db	58	;':'
  1486  00FE99  20                 	db	32
  1487  00FE9A  20                 	db	32
  1488  00FE9B  20                 	db	32
  1489  00FE9C  20                 	db	32
  1490  00FE9D  31                 	db	49	;'1'
  1491  00FE9E  0D                 	db	13
  1492  00FE9F  0A                 	db	10
  1493  00FEA0  00                 	db	0
  1494  00FEA1                     STR_32:
  1495  00FEA1  53                 	db	83	;'S'
  1496  00FEA2  74                 	db	116	;'t'
  1497  00FEA3  72                 	db	114	;'r'
  1498  00FEA4  69                 	db	105	;'i'
  1499  00FEA5  6B                 	db	107	;'k'
  1500  00FEA6  65                 	db	101	;'e'
  1501  00FEA7  20                 	db	32
  1502  00FEA8  56                 	db	86	;'V'
  1503  00FEA9  65                 	db	101	;'e'
  1504  00FEAA  6C                 	db	108	;'l'
  1505  00FEAB  6F                 	db	111	;'o'
  1506  00FEAC  63                 	db	99	;'c'
  1507  00FEAD  69                 	db	105	;'i'
  1508  00FEAE  74                 	db	116	;'t'
  1509  00FEAF  79                 	db	121	;'y'
  1510  00FEB0  20                 	db	32
  1511  00FEB1  69                 	db	105	;'i'
  1512  00FEB2  73                 	db	115	;'s'
  1513  00FEB3  20                 	db	32
  1514  00FEB4  25                 	db	37
  1515  00FEB5  64                 	db	100	;'d'
  1516  00FEB6  0D                 	db	13
  1517  00FEB7  0A                 	db	10
  1518  00FEB8  00                 	db	0
  1519  00FEB9                     STR_39:
  1520  00FEB9  20                 	db	32
  1521  00FEBA  20                 	db	32
  1522  00FEBB  20                 	db	32
  1523  00FEBC  20                 	db	32
  1524  00FEBD  42                 	db	66	;'B'
  1525  00FEBE  61                 	db	97	;'a'
  1526  00FEBF  75                 	db	117	;'u'
  1527  00FEC0  64                 	db	100	;'d'
  1528  00FEC1  20                 	db	32
  1529  00FEC2  52                 	db	82	;'R'
  1530  00FEC3  61                 	db	97	;'a'
  1531  00FEC4  74                 	db	116	;'t'
  1532  00FEC5  65                 	db	101	;'e'
  1533  00FEC6  3A                 	db	58	;':'
  1534  00FEC7  20                 	db	32
  1535  00FEC8  20                 	db	32
  1536  00FEC9  39                 	db	57	;'9'
  1537  00FECA  36                 	db	54	;'6'
  1538  00FECB  30                 	db	48	;'0'
  1539  00FECC  30                 	db	48	;'0'
  1540  00FECD  0D                 	db	13
  1541  00FECE  0A                 	db	10
  1542  00FECF  00                 	db	0
  1543  00FED0                     STR_41:
  1544  00FED0  20                 	db	32
  1545  00FED1  20                 	db	32
  1546  00FED2  20                 	db	32
  1547  00FED3  20                 	db	32
  1548  00FED4  50                 	db	80	;'P'
  1549  00FED5  61                 	db	97	;'a'
  1550  00FED6  72                 	db	114	;'r'
  1551  00FED7  69                 	db	105	;'i'
  1552  00FED8  74                 	db	116	;'t'
  1553  00FED9  79                 	db	121	;'y'
  1554  00FEDA  3A                 	db	58	;':'
  1555  00FEDB  20                 	db	32
  1556  00FEDC  20                 	db	32
  1557  00FEDD  20                 	db	32
  1558  00FEDE  20                 	db	32
  1559  00FEDF  20                 	db	32
  1560  00FEE0  4E                 	db	78	;'N'
  1561  00FEE1  6F                 	db	111	;'o'
  1562  00FEE2  6E                 	db	110	;'n'
  1563  00FEE3  65                 	db	101	;'e'
  1564  00FEE4  0D                 	db	13
  1565  00FEE5  0A                 	db	10
  1566  00FEE6  00                 	db	0
  1567  00FEE7                     STR_6:
  1568  00FEE7  20                 	db	32
  1569  00FEE8  20                 	db	32
  1570  00FEE9  20                 	db	32
  1571  00FEEA  20                 	db	32
  1572  00FEEB  4E                 	db	78	;'N'
  1573  00FEEC  6F                 	db	111	;'o'
  1574  00FEED  6D                 	db	109	;'m'
  1575  00FEEE  69                 	db	105	;'i'
  1576  00FEEF  6E                 	db	110	;'n'
  1577  00FEF0  61                 	db	97	;'a'
  1578  00FEF1  6C                 	db	108	;'l'
  1579  00FEF2  20                 	db	32
  1580  00FEF3  25                 	db	37
  1581  00FEF4  75                 	db	117	;'u'
  1582  00FEF5  20                 	db	32
  1583  00FEF6  74                 	db	116	;'t'
  1584  00FEF7  6F                 	db	111	;'o'
  1585  00FEF8  20                 	db	32
  1586  00FEF9  25                 	db	37
  1587  00FEFA  75                 	db	117	;'u'
  1588  00FEFB  0D                 	db	13
  1589  00FEFC  0A                 	db	10
  1590  00FEFD  00                 	db	0
  1591  00FEFE                     STR_3:
  1592  00FEFE  4D                 	db	77	;'M'
  1593  00FEFF  49                 	db	73	;'I'
  1594  00FF00  44                 	db	68	;'D'
  1595  00FF01  49                 	db	73	;'I'
  1596  00FF02  20                 	db	32
  1597  00FF03  2B                 	db	43
  1598  00FF04  20                 	db	32
  1599  00FF05  48                 	db	72	;'H'
  1600  00FF06  61                 	db	97	;'a'
  1601  00FF07  6C                 	db	108	;'l'
  1602  00FF08  6C                 	db	108	;'l'
  1603  00FF09  20                 	db	32
  1604  00FF0A  65                 	db	101	;'e'
  1605  00FF0B  66                 	db	102	;'f'
  1606  00FF0C  66                 	db	102	;'f'
  1607  00FF0D  65                 	db	101	;'e'
  1608  00FF0E  63                 	db	99	;'c'
  1609  00FF0F  74                 	db	116	;'t'
  1610  00FF10  20                 	db	32
  1611  00FF11  0D                 	db	13
  1612  00FF12  0A                 	db	10
  1613  00FF13  00                 	db	0
  1614  00FF14                     STR_12:
  1615  00FF14  5A                 	db	90	;'Z'
  1616  00FF15  3A                 	db	58	;':'
  1617  00FF16  20                 	db	32
  1618  00FF17  52                 	db	82	;'R'
  1619  00FF18  65                 	db	101	;'e'
  1620  00FF19  73                 	db	115	;'s'
  1621  00FF1A  65                 	db	101	;'e'
  1622  00FF1B  74                 	db	116	;'t'
  1623  00FF1C  20                 	db	32
  1624  00FF1D  70                 	db	112	;'p'
  1625  00FF1E  72                 	db	114	;'r'
  1626  00FF1F  6F                 	db	111	;'o'
  1627  00FF20  63                 	db	99	;'c'
  1628  00FF21  65                 	db	101	;'e'
  1629  00FF22  73                 	db	115	;'s'
  1630  00FF23  73                 	db	115	;'s'
  1631  00FF24  6F                 	db	111	;'o'
  1632  00FF25  72                 	db	114	;'r'
  1633  00FF26  2E                 	db	46
  1634  00FF27  0D                 	db	13
  1635  00FF28  0A                 	db	10
  1636  00FF29  00                 	db	0
  1637  00FF2A                     STR_2:
  1638  00FF2A  69                 	db	105	;'i'
  1639  00FF2B  6E                 	db	110	;'n'
  1640  00FF2C  4C                 	db	76	;'L'
  1641  00FF2D  61                 	db	97	;'a'
  1642  00FF2E  62                 	db	98	;'b'
  1643  00FF2F  20                 	db	32
  1644  00FF30  31                 	db	49	;'1'
  1645  00FF31  30                 	db	48	;'0'
  1646  00FF32  20                 	db	32
  1647  00FF33  74                 	db	116	;'t'
  1648  00FF34  65                 	db	101	;'e'
  1649  00FF35  72                 	db	114	;'r'
  1650  00FF36  6D                 	db	109	;'m'
  1651  00FF37  69                 	db	105	;'i'
  1652  00FF38  6E                 	db	110	;'n'
  1653  00FF39  61                 	db	97	;'a'
  1654  00FF3A  6C                 	db	108	;'l'
  1655  00FF3B  20                 	db	32
  1656  00FF3C  0D                 	db	13
  1657  00FF3D  0A                 	db	10
  1658  00FF3E  00                 	db	0
  1659  00FF3F                     STR_40:
  1660  00FF3F  20                 	db	32
  1661  00FF40  20                 	db	32
  1662  00FF41  20                 	db	32
  1663  00FF42  20                 	db	32
  1664  00FF43  44                 	db	68	;'D'
  1665  00FF44  61                 	db	97	;'a'
  1666  00FF45  74                 	db	116	;'t'
  1667  00FF46  61                 	db	97	;'a'
  1668  00FF47  20                 	db	32
  1669  00FF48  42                 	db	66	;'B'
  1670  00FF49  69                 	db	105	;'i'
  1671  00FF4A  74                 	db	116	;'t'
  1672  00FF4B  73                 	db	115	;'s'
  1673  00FF4C  3A                 	db	58	;':'
  1674  00FF4D  20                 	db	32
  1675  00FF4E  20                 	db	32
  1676  00FF4F  38                 	db	56	;'8'
  1677  00FF50  0D                 	db	13
  1678  00FF51  0A                 	db	10
  1679  00FF52  00                 	db	0
  1680  00FF53                     STR_29:
  1681  00FF53  54                 	db	84	;'T'
  1682  00FF54  61                 	db	97	;'a'
  1683  00FF55  70                 	db	112	;'p'
  1684  00FF56  20                 	db	32
  1685  00FF57  61                 	db	97	;'a'
  1686  00FF58  20                 	db	32
  1687  00FF59  70                 	db	112	;'p'
  1688  00FF5A  69                 	db	105	;'i'
  1689  00FF5B  61                 	db	97	;'a'
  1690  00FF5C  6E                 	db	110	;'n'
  1691  00FF5D  6F                 	db	111	;'o'
  1692  00FF5E  20                 	db	32
  1693  00FF5F  6B                 	db	107	;'k'
  1694  00FF60  65                 	db	101	;'e'
  1695  00FF61  79                 	db	121	;'y'
  1696  00FF62  2E                 	db	46
  1697  00FF63  0D                 	db	13
  1698  00FF64  0A                 	db	10
  1699  00FF65  00                 	db	0
  1700  00FF66                     STR_28:
  1701  00FF66  64                 	db	100	;'d'
  1702  00FF67  65                 	db	101	;'e'
  1703  00FF68  6C                 	db	108	;'l'
  1704  00FF69  74                 	db	116	;'t'
  1705  00FF6A  61                 	db	97	;'a'
  1706  00FF6B  20                 	db	32
  1707  00FF6C  73                 	db	115	;'s'
  1708  00FF6D  65                 	db	101	;'e'
  1709  00FF6E  74                 	db	116	;'t'
  1710  00FF6F  20                 	db	32
  1711  00FF70  74                 	db	116	;'t'
  1712  00FF71  6F                 	db	111	;'o'
  1713  00FF72  20                 	db	32
  1714  00FF73  25                 	db	37
  1715  00FF74  64                 	db	100	;'d'
  1716  00FF75  0D                 	db	13
  1717  00FF76  0A                 	db	10
  1718  00FF77  00                 	db	0
  1719  00FF78                     STR_59:
  1720  00FF78  55                 	db	85	;'U'
  1721  00FF79  6E                 	db	110	;'n'
  1722  00FF7A  6B                 	db	107	;'k'
  1723  00FF7B  6E                 	db	110	;'n'
  1724  00FF7C  6F                 	db	111	;'o'
  1725  00FF7D  77                 	db	119	;'w'
  1726  00FF7E  6E                 	db	110	;'n'
  1727  00FF7F  20                 	db	32
  1728  00FF80  6B                 	db	107	;'k'
  1729  00FF81  65                 	db	101	;'e'
  1730  00FF82  79                 	db	121	;'y'
  1731  00FF83  20                 	db	32
  1732  00FF84  25                 	db	37
  1733  00FF85  63                 	db	99	;'c'
  1734  00FF86  0D                 	db	13
  1735  00FF87  0A                 	db	10
  1736  00FF88  00                 	db	0
  1737  00FF89                     STR_7:
  1738  00FF89  20                 	db	32
  1739  00FF8A  20                 	db	32
  1740  00FF8B  20                 	db	32
  1741  00FF8C  20                 	db	32
  1742  00FF8D  64                 	db	100	;'d'
  1743  00FF8E  65                 	db	101	;'e'
  1744  00FF8F  6C                 	db	108	;'l'
  1745  00FF90  74                 	db	116	;'t'
  1746  00FF91  61                 	db	97	;'a'
  1747  00FF92  20                 	db	32
  1748  00FF93  3D                 	db	61	;'='
  1749  00FF94  20                 	db	32
  1750  00FF95  25                 	db	37
  1751  00FF96  64                 	db	100	;'d'
  1752  00FF97  0D                 	db	13
  1753  00FF98  0A                 	db	10
  1754  00FF99  00                 	db	0
  1755  00FF9A                     STR_18:
  1756  00FF9A  69                 	db	105	;'i'
  1757  00FF9B  3A                 	db	58	;':'
  1758  00FF9C  20                 	db	32
  1759  00FF9D  49                 	db	73	;'I'
  1760  00FF9E  53                 	db	83	;'S'
  1761  00FF9F  52                 	db	82	;'R'
  1762  00FFA0  20                 	db	32
  1763  00FFA1  76                 	db	118	;'v'
  1764  00FFA2  61                 	db	97	;'a'
  1765  00FFA3  6C                 	db	108	;'l'
  1766  00FFA4  75                 	db	117	;'u'
  1767  00FFA5  65                 	db	101	;'e'
  1768  00FFA6  73                 	db	115	;'s'
  1769  00FFA7  0D                 	db	13
  1770  00FFA8  0A                 	db	10
  1771  00FFA9  00                 	db	0
  1772  00FFAA                     STR_44:
  1773  00FFAA  20                 	db	32
  1774  00FFAB  20                 	db	32
  1775  00FFAC  20                 	db	32
  1776  00FFAD  20                 	db	32
  1777  00FFAE  43                 	db	67	;'C'
  1778  00FFAF  6C                 	db	108	;'l'
  1779  00FFB0  69                 	db	105	;'i'
  1780  00FFB1  63                 	db	99	;'c'
  1781  00FFB2  6B                 	db	107	;'k'
  1782  00FFB3  20                 	db	32
  1783  00FFB4  4F                 	db	79	;'O'
  1784  00FFB5  4B                 	db	75	;'K'
  1785  00FFB6  0D                 	db	13
  1786  00FFB7  0A                 	db	10
  1787  00FFB8  00                 	db	0
  1788  00FFB9                     STR_1:
  1789  00FFB9  44                 	db	68	;'D'
  1790  00FFBA  65                 	db	101	;'e'
  1791  00FFBB  76                 	db	118	;'v'
  1792  00FFBC  27                 	db	39
  1793  00FFBD  31                 	db	49	;'1'
  1794  00FFBE  38                 	db	56	;'8'
  1795  00FFBF  20                 	db	32
  1796  00FFC0  42                 	db	66	;'B'
  1797  00FFC1  6F                 	db	111	;'o'
  1798  00FFC2  61                 	db	97	;'a'
  1799  00FFC3  72                 	db	114	;'r'
  1800  00FFC4  64                 	db	100	;'d'
  1801  00FFC5  0D                 	db	13
  1802  00FFC6  0A                 	db	10
  1803  00FFC7  00                 	db	0
  1804  00FFC8                     STR_10:
  1805  00FFC8  3F                 	db	63	;'?'
  1806  00FFC9  3A                 	db	58	;':'
  1807  00FFCA  20                 	db	32
  1808  00FFCB  68                 	db	104	;'h'
  1809  00FFCC  65                 	db	101	;'e'
  1810  00FFCD  6C                 	db	108	;'l'
  1811  00FFCE  70                 	db	112	;'p'
  1812  00FFCF  20                 	db	32
  1813  00FFD0  6D                 	db	109	;'m'
  1814  00FFD1  65                 	db	101	;'e'
  1815  00FFD2  6E                 	db	110	;'n'
  1816  00FFD3  75                 	db	117	;'u'
  1817  00FFD4  0D                 	db	13
  1818  00FFD5  0A                 	db	10
  1819  00FFD6  00                 	db	0
  1820  00FFD7                     STR_21:
  1821  00FFD7  6F                 	db	111	;'o'
  1822  00FFD8  3A                 	db	58	;':'
  1823  00FFD9  20                 	db	32
  1824  00FFDA  20                 	db	32
  1825  00FFDB  20                 	db	32
  1826  00FFDC  20                 	db	32
  1827  00FFDD  20                 	db	32
  1828  00FFDE  20                 	db	32
  1829  00FFDF  6F                 	db	111	;'o'
  1830  00FFE0  6B                 	db	107	;'k'
  1831  00FFE1  0D                 	db	13
  1832  00FFE2  0A                 	db	10
  1833  00FFE3  00                 	db	0
  1834  00FFE4                     STR_35:
  1835  00FFE4  25                 	db	37
  1836  00FFE5  64                 	db	100	;'d'
  1837  00FFE6  3A                 	db	58	;':'
  1838  00FFE7  20                 	db	32
  1839  00FFE8  25                 	db	37
  1840  00FFE9  64                 	db	100	;'d'
  1841  00FFEA  20                 	db	32
  1842  00FFEB  0D                 	db	13
  1843  00FFEC  0A                 	db	10
  1844  00FFED  00                 	db	0
  1845  00FFEE                     STR_11:
  1846  00FFEE  6F                 	db	111	;'o'
  1847  00FFEF  3A                 	db	58	;':'
  1848  00FFF0  20                 	db	32
  1849  00FFF1  6B                 	db	107	;'k'
  1850  00FFF2  0D                 	db	13
  1851  00FFF3  0A                 	db	10
  1852  00FFF4  00                 	db	0
  1853  00FFF5                     STR_4:
  1854  00FFF5  0D                 	db	13
  1855  00FFF6  0A                 	db	10
  1856  00FFF7  3E                 	db	62	;'>'
  1857  00FFF8  20                 	db	32
  1858  00FFF9  00                 	db	0
  1859  00FFFA                     STR_30:
  1860  00FFFA  25                 	db	37
  1861  00FFFB  34                 	db	52	;'4'
  1862  00FFFC  64                 	db	100	;'d'
  1863  00FFFD  20                 	db	32
  1864  00FFFE  00                 	db	0
  1865  0000                     
  1866                           ; #config settings
  1867  00FFFF  00                 	db	0	; dummy byte at the end
  1868  0000                     
  1869                           	psect	cinit
  1870  0019BC                     __pcinit:
  1871                           	opt callstack 0
  1872  0019BC                     start_initialization:
  1873                           	opt callstack 0
  1874  0019BC                     __initialization:
  1875                           	opt callstack 0
  1876                           
  1877                           ; Initialize objects allocated to BANK1 (30 bytes)
  1878                           ; load TBLPTR registers with __pidataBANK1
  1879  0019BC  0E76               	movlw	low __pidataBANK1
  1880  0019BE  6EF6               	movwf	tblptrl,c
  1881  0019C0  0E1D               	movlw	high __pidataBANK1
  1882  0019C2  6EF7               	movwf	tblptrh,c
  1883  0019C4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1884  0019C6  6EF8               	movwf	tblptru,c
  1885  0019C8  EE01  F040         	lfsr	0,__pdataBANK1
  1886  0019CC  EE10 F01E          	lfsr	1,30
  1887  0019D0                     copy_data0:
  1888  0019D0  0009               	tblrd		*+
  1889  0019D2  CFF5 FFEE          	movff	tablat,postinc0
  1890  0019D6  50E5               	movf	postdec1,w,c
  1891  0019D8  50E1               	movf	fsr1l,w,c
  1892  0019DA  E1FA               	bnz	copy_data0
  1893                           
  1894                           ; Initialize objects allocated to BANK0 (5 bytes)
  1895                           ; load TBLPTR registers with __pidataBANK0
  1896  0019DC  0EE6               	movlw	low __pidataBANK0
  1897  0019DE  6EF6               	movwf	tblptrl,c
  1898  0019E0  0E1E               	movlw	high __pidataBANK0
  1899  0019E2  6EF7               	movwf	tblptrh,c
  1900  0019E4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1901  0019E6  6EF8               	movwf	tblptru,c
  1902  0019E8  EE00  F0EE         	lfsr	0,__pdataBANK0
  1903  0019EC  EE10 F005          	lfsr	1,5
  1904  0019F0                     copy_data1:
  1905  0019F0  0009               	tblrd		*+
  1906  0019F2  CFF5 FFEE          	movff	tablat,postinc0
  1907  0019F6  50E5               	movf	postdec1,w,c
  1908  0019F8  50E1               	movf	fsr1l,w,c
  1909  0019FA  E1FA               	bnz	copy_data1
  1910                           
  1911                           ; Clear objects allocated to BANK1 (64 bytes)
  1912  0019FC  EE01  F000         	lfsr	0,__pbssBANK1
  1913  001A00  0E40               	movlw	64
  1914  001A02                     clear_0:
  1915  001A02  6AEE               	clrf	postinc0,c
  1916  001A04  06E8               	decf	wreg,f,c
  1917  001A06  E1FD               	bnz	clear_0
  1918                           
  1919                           ; Clear objects allocated to BANK0 (38 bytes)
  1920  001A08  EE00  F0C8         	lfsr	0,__pbssBANK0
  1921  001A0C  0E26               	movlw	38
  1922  001A0E                     clear_1:
  1923  001A0E  6AEE               	clrf	postinc0,c
  1924  001A10  06E8               	decf	wreg,f,c
  1925  001A12  E1FD               	bnz	clear_1
  1926                           
  1927                           ; Clear objects allocated to COMRAM (16 bytes)
  1928  001A14  EE00  F03E         	lfsr	0,__pbssCOMRAM
  1929  001A18  0E10               	movlw	16
  1930  001A1A                     clear_2:
  1931  001A1A  6AEE               	clrf	postinc0,c
  1932  001A1C  06E8               	decf	wreg,f,c
  1933  001A1E  E1FD               	bnz	clear_2
  1934  001A20                     end_of_initialization:
  1935                           	opt callstack 0
  1936  001A20                     __end_of__initialization:
  1937                           	opt callstack 0
  1938  001A20  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1939  001A22  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1940  001A24  0100               	movlb	0
  1941  001A26  EF29  F000         	goto	_main	;jump to C main() function
  1942                           
  1943                           	psect	bssCOMRAM
  1944  00003E                     __pbssCOMRAM:
  1945                           	opt callstack 0
  1946  00003E                     _width:
  1947                           	opt callstack 0
  1948  00003E                     	ds	2
  1949  000040                     _prec:
  1950                           	opt callstack 0
  1951  000040                     	ds	2
  1952  000042                     _flags:
  1953                           	opt callstack 0
  1954  000042                     	ds	2
  1955  000044                     _EUSART1_OverrunErrorHandler:
  1956                           	opt callstack 0
  1957  000044                     	ds	2
  1958  000046                     _EUSART1_FramingErrorHandler:
  1959                           	opt callstack 0
  1960  000046                     	ds	2
  1961  000048                     _timer0ReloadVal:
  1962                           	opt callstack 0
  1963  000048                     	ds	2
  1964  00004A                     _TMR0_InterruptHandler:
  1965                           	opt callstack 0
  1966  00004A                     	ds	2
  1967  00004C                     myTMR0ISR@i:
  1968                           	opt callstack 0
  1969  00004C                     	ds	1
  1970  00004D                     _eusart1RxLastError:
  1971                           	opt callstack 0
  1972  00004D                     	ds	1
  1973                           
  1974                           	psect	bssBANK0
  1975  0000C8                     __pbssBANK0:
  1976                           	opt callstack 0
  1977  0000C8                     _nout:
  1978                           	opt callstack 0
  1979  0000C8                     	ds	2
  1980  0000CA                     _EUSART1_ErrorHandler:
  1981                           	opt callstack 0
  1982  0000CA                     	ds	2
  1983  0000CC                     _songIndex:
  1984                           	opt callstack 0
  1985  0000CC                     	ds	1
  1986  0000CD                     _keyState:
  1987                           	opt callstack 0
  1988  0000CD                     	ds	1
  1989  0000CE                     _dbuf:
  1990                           	opt callstack 0
  1991  0000CE                     	ds	32
  1992                           
  1993                           	psect	dataBANK0
  1994  0000EE                     __pdataBANK0:
  1995                           	opt callstack 0
  1996  0000EE                     _sampleRate:
  1997                           	opt callstack 0
  1998  0000EE                     	ds	2
  1999  0000F0                     _delta:
  2000                           	opt callstack 0
  2001  0000F0                     	ds	1
  2002  0000F1                     _nominalHallPressed:
  2003                           	opt callstack 0
  2004  0000F1                     	ds	1
  2005  0000F2                     _nominalHallUnPressed:
  2006                           	opt callstack 0
  2007  0000F2                     	ds	1
  2008                           
  2009                           	psect	bssBANK1
  2010  000100                     __pbssBANK1:
  2011                           	opt callstack 0
  2012  000100                     _sample:
  2013                           	opt callstack 0
  2014  000100                     	ds	64
  2015                           
  2016                           	psect	dataBANK1
  2017  000140                     __pdataBANK1:
  2018                           	opt callstack 0
  2019  000140                     main@F6148:
  2020                           	opt callstack 0
  2021  000140                     	ds	30
  2022                           
  2023                           	psect	cstackBANK0
  2024  000060                     __pcstackBANK0:
  2025                           	opt callstack 0
  2026  000060                     ??_dtoa:
  2027  000060                     ??_utoa:
  2028                           
  2029                           ; 1 bytes @ 0x0
  2030  000060                     	ds	8
  2031  000068                     _dtoa$1126:
  2032                           	opt callstack 0
  2033  000068                     utoa@p:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 2 bytes @ 0x8
  2037  000068                     	ds	2
  2038  00006A                     dtoa@p:
  2039                           	opt callstack 0
  2040  00006A                     utoa@w:
  2041                           	opt callstack 0
  2042                           
  2043                           ; 2 bytes @ 0xA
  2044  00006A                     	ds	2
  2045  00006C                     dtoa@w:
  2046                           	opt callstack 0
  2047  00006C                     utoa@n:
  2048                           	opt callstack 0
  2049                           
  2050                           ; 8 bytes @ 0xC
  2051  00006C                     	ds	2
  2052  00006E                     dtoa@s:
  2053                           	opt callstack 0
  2054                           
  2055                           ; 2 bytes @ 0xE
  2056  00006E                     	ds	2
  2057  000070                     dtoa@n:
  2058                           	opt callstack 0
  2059                           
  2060                           ; 8 bytes @ 0x10
  2061  000070                     	ds	4
  2062  000074                     utoa@i:
  2063                           	opt callstack 0
  2064                           
  2065                           ; 2 bytes @ 0x14
  2066  000074                     	ds	4
  2067  000078                     dtoa@i:
  2068                           	opt callstack 0
  2069                           
  2070                           ; 2 bytes @ 0x18
  2071  000078                     	ds	2
  2072  00007A                     ?_vfpfcnvrt:
  2073                           	opt callstack 0
  2074  00007A                     vfpfcnvrt@fp:
  2075                           	opt callstack 0
  2076                           
  2077                           ; 2 bytes @ 0x1A
  2078  00007A                     	ds	2
  2079  00007C                     vfpfcnvrt@fmt:
  2080                           	opt callstack 0
  2081                           
  2082                           ; 2 bytes @ 0x1C
  2083  00007C                     	ds	2
  2084  00007E                     vfpfcnvrt@ap:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 2 bytes @ 0x1E
  2088  00007E                     	ds	2
  2089  000080                     vfpfcnvrt@ll:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 8 bytes @ 0x20
  2093  000080                     	ds	8
  2094  000088                     vfpfcnvrt@llu:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 8 bytes @ 0x28
  2098  000088                     	ds	8
  2099  000090                     vfpfcnvrt@c:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 1 bytes @ 0x30
  2103  000090                     	ds	1
  2104  000091                     _vfpfcnvrt$1147:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 2 bytes @ 0x31
  2108  000091                     	ds	2
  2109  000093                     ?_vfprintf:
  2110                           	opt callstack 0
  2111  000093                     vfprintf@fp:
  2112                           	opt callstack 0
  2113                           
  2114                           ; 2 bytes @ 0x33
  2115  000093                     	ds	2
  2116  000095                     vfprintf@fmt:
  2117                           	opt callstack 0
  2118                           
  2119                           ; 2 bytes @ 0x35
  2120  000095                     	ds	2
  2121  000097                     vfprintf@ap:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 2 bytes @ 0x37
  2125  000097                     	ds	2
  2126  000099                     ?_printf:
  2127                           	opt callstack 0
  2128  000099                     printf@fmt:
  2129                           	opt callstack 0
  2130                           
  2131                           ; 2 bytes @ 0x39
  2132  000099                     	ds	8
  2133  0000A1                     printf@ap:
  2134                           	opt callstack 0
  2135                           
  2136                           ; 2 bytes @ 0x41
  2137  0000A1                     	ds	2
  2138  0000A3                     ??_main:
  2139                           
  2140                           ; 1 bytes @ 0x43
  2141  0000A3                     	ds	2
  2142  0000A5                     main@song:
  2143                           	opt callstack 0
  2144                           
  2145                           ; 30 bytes @ 0x45
  2146  0000A5                     	ds	31
  2147  0000C4                     main@instrument:
  2148                           	opt callstack 0
  2149                           
  2150                           ; 1 bytes @ 0x64
  2151  0000C4                     	ds	1
  2152  0000C5                     main@cmd:
  2153                           	opt callstack 0
  2154                           
  2155                           ; 1 bytes @ 0x65
  2156  0000C5                     	ds	1
  2157  0000C6                     main@velocity:
  2158                           	opt callstack 0
  2159                           
  2160                           ; 1 bytes @ 0x66
  2161  0000C6                     	ds	1
  2162  0000C7                     main@i:
  2163                           	opt callstack 0
  2164                           
  2165                           ; 1 bytes @ 0x67
  2166  0000C7                     	ds	1
  2167                           
  2168                           	psect	cstackCOMRAM
  2169  000001                     __pcstackCOMRAM:
  2170                           	opt callstack 0
  2171  000001                     ?_TMR0_ReadTimer:
  2172                           	opt callstack 0
  2173  000001                     ?i2_ADC_GetConversionResult:
  2174                           	opt callstack 0
  2175                           
  2176                           ; 2 bytes @ 0x0
  2177  000001                     	ds	2
  2178  000003                     ??_TMR0_ReadTimer:
  2179  000003                     ??i2_ADC_GetConversionResult:
  2180                           
  2181                           ; 1 bytes @ 0x2
  2182  000003                     	ds	2
  2183  000005                     TMR0_ReadTimer@readVal:
  2184                           	opt callstack 0
  2185                           
  2186                           ; 2 bytes @ 0x4
  2187  000005                     	ds	2
  2188  000007                     TMR0_ReadTimer@readValLow:
  2189                           	opt callstack 0
  2190                           
  2191                           ; 1 bytes @ 0x6
  2192  000007                     	ds	1
  2193  000008                     TMR0_ReadTimer@readValHigh:
  2194                           	opt callstack 0
  2195                           
  2196                           ; 1 bytes @ 0x7
  2197  000008                     	ds	1
  2198  000009                     TMR0_WriteTimer@timerVal:
  2199                           	opt callstack 0
  2200                           
  2201                           ; 2 bytes @ 0x8
  2202  000009                     	ds	2
  2203  00000B                     ??_myTMR0ISR:
  2204  00000B                     
  2205                           ; 1 bytes @ 0xA
  2206  00000B                     	ds	2
  2207  00000D                     ??_INTERRUPT_InterruptManager:
  2208                           
  2209                           ; 1 bytes @ 0xC
  2210  00000D                     	ds	4
  2211  000011                     ??_ADC_SelectChannel:
  2212  000011                     ?_strlen:
  2213                           	opt callstack 0
  2214  000011                     ?_isdigit:
  2215                           	opt callstack 0
  2216  000011                     ?_isspace:
  2217                           	opt callstack 0
  2218  000011                     ?_ADC_GetConversionResult:
  2219                           	opt callstack 0
  2220  000011                     ?___wmul:
  2221                           	opt callstack 0
  2222  000011                     ?___aodiv:
  2223                           	opt callstack 0
  2224  000011                     ?___aomod:
  2225                           	opt callstack 0
  2226  000011                     ?___lodiv:
  2227                           	opt callstack 0
  2228  000011                     ?___lomod:
  2229                           	opt callstack 0
  2230  000011                     EUSART1_Write@txData:
  2231                           	opt callstack 0
  2232  000011                     putByteSCI@writeByte:
  2233                           	opt callstack 0
  2234  000011                     TMR0_SetInterruptHandler@InterruptHandler:
  2235                           	opt callstack 0
  2236  000011                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2237                           	opt callstack 0
  2238  000011                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2239                           	opt callstack 0
  2240  000011                     EUSART1_SetErrorHandler@interruptHandler:
  2241                           	opt callstack 0
  2242  000011                     ___wmul@multiplier:
  2243                           	opt callstack 0
  2244  000011                     isdigit@c:
  2245                           	opt callstack 0
  2246  000011                     isspace@c:
  2247                           	opt callstack 0
  2248  000011                     strlen@s:
  2249                           	opt callstack 0
  2250  000011                     ___aodiv@dividend:
  2251                           	opt callstack 0
  2252  000011                     ___aomod@dividend:
  2253                           	opt callstack 0
  2254  000011                     ___lodiv@dividend:
  2255                           	opt callstack 0
  2256  000011                     ___lomod@dividend:
  2257                           	opt callstack 0
  2258                           
  2259                           ; 8 bytes @ 0x10
  2260  000011                     	ds	1
  2261  000012                     ADC_SelectChannel@channel:
  2262                           	opt callstack 0
  2263  000012                     putch@txData:
  2264                           	opt callstack 0
  2265  000012                     noteOn@pitch:
  2266                           	opt callstack 0
  2267                           
  2268                           ; 1 bytes @ 0x11
  2269  000012                     	ds	1
  2270  000013                     ??_isdigit:
  2271  000013                     ??_isspace:
  2272  000013                     ??_TMR0_Initialize:
  2273  000013                     ??_ADC_GetConversionResult:
  2274  000013                     noteOn@velocity:
  2275                           	opt callstack 0
  2276  000013                     ___wmul@multiplicand:
  2277                           	opt callstack 0
  2278  000013                     fputc@c:
  2279                           	opt callstack 0
  2280  000013                     strlen@a:
  2281                           	opt callstack 0
  2282                           
  2283                           ; 2 bytes @ 0x12
  2284  000013                     	ds	1
  2285  000014                     noteOn@cmd:
  2286                           	opt callstack 0
  2287                           
  2288                           ; 1 bytes @ 0x13
  2289  000014                     	ds	1
  2290  000015                     ___wmul@product:
  2291                           	opt callstack 0
  2292  000015                     fputc@fp:
  2293                           	opt callstack 0
  2294                           
  2295                           ; 2 bytes @ 0x14
  2296  000015                     	ds	2
  2297  000017                     ??_fputc:
  2298  000017                     _isspace$1624:
  2299                           	opt callstack 0
  2300                           
  2301                           ; 1 bytes @ 0x16
  2302  000017                     	ds	1
  2303  000018                     ?_atoi:
  2304                           	opt callstack 0
  2305  000018                     atoi@s:
  2306                           	opt callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x17
  2309  000018                     	ds	1
  2310  000019                     ___aodiv@divisor:
  2311                           	opt callstack 0
  2312  000019                     ___aomod@divisor:
  2313                           	opt callstack 0
  2314  000019                     ___lodiv@divisor:
  2315                           	opt callstack 0
  2316  000019                     ___lomod@divisor:
  2317                           	opt callstack 0
  2318                           
  2319                           ; 8 bytes @ 0x18
  2320  000019                     	ds	1
  2321  00001A                     ??_atoi:
  2322                           
  2323                           ; 1 bytes @ 0x19
  2324  00001A                     	ds	2
  2325  00001C                     fputs@s:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x1B
  2329  00001C                     	ds	2
  2330  00001E                     atoi@neg:
  2331                           	opt callstack 0
  2332  00001E                     fputs@fp:
  2333                           	opt callstack 0
  2334                           
  2335                           ; 2 bytes @ 0x1D
  2336  00001E                     	ds	2
  2337  000020                     fputs@c:
  2338                           	opt callstack 0
  2339  000020                     _atoi$1606:
  2340                           	opt callstack 0
  2341                           
  2342                           ; 2 bytes @ 0x1F
  2343  000020                     	ds	1
  2344  000021                     ___aodiv@counter:
  2345                           	opt callstack 0
  2346  000021                     ___aomod@counter:
  2347                           	opt callstack 0
  2348  000021                     ___lomod@counter:
  2349                           	opt callstack 0
  2350  000021                     fputs@i:
  2351                           	opt callstack 0
  2352  000021                     ___lodiv@quotient:
  2353                           	opt callstack 0
  2354                           
  2355                           ; 8 bytes @ 0x20
  2356  000021                     	ds	1
  2357  000022                     ___aodiv@sign:
  2358                           	opt callstack 0
  2359  000022                     ___aomod@sign:
  2360                           	opt callstack 0
  2361  000022                     _atoi$1608:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x21
  2365  000022                     	ds	1
  2366  000023                     ?_abs:
  2367                           	opt callstack 0
  2368  000023                     ?_pad:
  2369                           	opt callstack 0
  2370  000023                     pad@fp:
  2371                           	opt callstack 0
  2372  000023                     abs@a:
  2373                           	opt callstack 0
  2374  000023                     ___aodiv@quotient:
  2375                           	opt callstack 0
  2376                           
  2377                           ; 8 bytes @ 0x22
  2378  000023                     	ds	1
  2379  000024                     _atoi$1607:
  2380                           	opt callstack 0
  2381                           
  2382                           ; 1 bytes @ 0x23
  2383  000024                     	ds	1
  2384  000025                     ??_abs:
  2385  000025                     pad@buf:
  2386                           	opt callstack 0
  2387  000025                     atoi@n:
  2388                           	opt callstack 0
  2389                           
  2390                           ; 2 bytes @ 0x24
  2391  000025                     	ds	2
  2392  000027                     pad@p:
  2393                           	opt callstack 0
  2394                           
  2395                           ; 2 bytes @ 0x26
  2396  000027                     	ds	2
  2397  000029                     ??_pad:
  2398  000029                     ___lodiv@counter:
  2399                           	opt callstack 0
  2400                           
  2401                           ; 1 bytes @ 0x28
  2402  000029                     	ds	1
  2403  00002A                     pad@i:
  2404                           	opt callstack 0
  2405                           
  2406                           ; 2 bytes @ 0x29
  2407  00002A                     	ds	2
  2408  00002C                     pad@w:
  2409                           	opt callstack 0
  2410                           
  2411                           ; 2 bytes @ 0x2B
  2412  00002C                     	ds	2
  2413  00002E                     ?_ctoa:
  2414                           	opt callstack 0
  2415  00002E                     ?_dtoa:
  2416                           	opt callstack 0
  2417  00002E                     ?_utoa:
  2418                           	opt callstack 0
  2419  00002E                     ctoa@fp:
  2420                           	opt callstack 0
  2421  00002E                     dtoa@fp:
  2422                           	opt callstack 0
  2423  00002E                     utoa@fp:
  2424                           	opt callstack 0
  2425                           
  2426                           ; 2 bytes @ 0x2D
  2427  00002E                     	ds	2
  2428  000030                     ctoa@c:
  2429                           	opt callstack 0
  2430  000030                     dtoa@d:
  2431                           	opt callstack 0
  2432  000030                     utoa@d:
  2433                           	opt callstack 0
  2434                           
  2435                           ; 8 bytes @ 0x2F
  2436  000030                     	ds	1
  2437  000031                     ctoa@w:
  2438                           	opt callstack 0
  2439                           
  2440                           ; 2 bytes @ 0x30
  2441  000031                     	ds	7
  2442  000038                     ??_vfpfcnvrt:
  2443                           
  2444                           ; 1 bytes @ 0x37
  2445  000038                     	ds	4
  2446  00003C                     vfprintf@cfmt:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 2 bytes @ 0x3B
  2450  00003C                     	ds	2
  2451  00003E                     
  2452                           ; 1 bytes @ 0x3D
  2453 ;;
  2454 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2455 ;;
  2456 ;; *************** function _main *****************
  2457 ;; Defined at:
  2458 ;;		line 51 in file "main_d11.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  song           30   69[BANK0 ] unsigned char [30]
  2463 ;;  i               1  103[BANK0 ] unsigned char 
  2464 ;;  velocity        1  102[BANK0 ] unsigned char 
  2465 ;;  cmd             1  101[BANK0 ] unsigned char 
  2466 ;;  instrument      1  100[BANK0 ] unsigned char 
  2467 ;;  pitch           1    0        unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;Total ram usage:       37 bytes
  2482 ;; Hardware stack levels required when called:   13
  2483 ;; This function calls:
  2484 ;;		_ADC_GetConversionResult
  2485 ;;		_ADC_IsConversionDone
  2486 ;;		_ADC_SelectChannel
  2487 ;;		_ADC_StartConversion
  2488 ;;		_EUSART1_Read
  2489 ;;		_EUSART1_is_rx_ready
  2490 ;;		_SYSTEM_Initialize
  2491 ;;		_TMR0_SetInterruptHandler
  2492 ;;		_noteOn
  2493 ;;		_printf
  2494 ;;		_putByteSCI
  2495 ;; This function is called by:
  2496 ;;		Startup code after reset
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text0
  2501  000052                     __ptext0:
  2502                           	opt callstack 0
  2503  000052                     _main:
  2504                           	opt callstack 18
  2505  000052                     
  2506                           ;main_d11.c: 52:     uint8_t song[30] = {69, 69, 69, 69, 69, 69, 67, 69, 69, 69, 69, 69,
      +                           69, 67, 69, 69, 69, 69, 69, 69, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64};
  2507  000052  EE21  F040         	lfsr	2,main@F6148
  2508  000056  EE10  F0A5         	lfsr	1,main@song
  2509  00005A  0E1D               	movlw	29
  2510  00005C                     u3341:
  2511  00005C  CFDB FFE3          	movff	plusw2,plusw1
  2512  000060  06E8               	decf	wreg,f,c
  2513  000062  E2FC               	bc	u3341
  2514  000064                     
  2515                           ;main_d11.c: 56:     uint8_t instrument=7;
  2516  000064  0E07               	movlw	7
  2517  000066  0100               	movlb	0	; () banked
  2518  000068  6FC4               	movwf	main@instrument& (0+255),b
  2519  00006A                     
  2520                           ; BSR set to: 0
  2521                           ;main_d11.c: 57:     char cmd;;main_d11.c: 58:     uint8_t velocity;;main_d11.c: 60:    
      +                           SYSTEM_Initialize();
  2522  00006A  ECE7  F00E         	call	_SYSTEM_Initialize	;wreg free
  2523  00006E                     
  2524                           ;main_d11.c: 61:     ADC_SelectChannel(HALL_SENSOR);
  2525  00006E  0E01               	movlw	1
  2526  000070  EC00  F00F         	call	_ADC_SelectChannel
  2527  000074                     
  2528                           ;main_d11.c: 63:     TMR0_SetInterruptHandler(myTMR0ISR);
  2529  000074  0E9C               	movlw	low _myTMR0ISR
  2530  000076  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2531  000078  0E15               	movlw	high _myTMR0ISR
  2532  00007A  6E12               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2533  00007C  EC5A  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
  2534  000080                     
  2535                           ;main_d11.c: 65:     (INTCONbits.GIE = 1);
  2536  000080  8EF2               	bsf	242,7,c	;volatile
  2537  000082                     
  2538                           ;main_d11.c: 66:     (INTCONbits.PEIE = 1);
  2539  000082  8CF2               	bsf	242,6,c	;volatile
  2540  000084                     
  2541                           ;main_d11.c: 69:     printf("Dev'18 Board\r\n");
  2542  000084  0EB9               	movlw	low STR_1
  2543  000086  0100               	movlb	0	; () banked
  2544  000088  6F99               	movwf	printf@fmt& (0+255),b
  2545  00008A  0EFF               	movlw	high STR_1
  2546  00008C  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2547  00008E  EC80  F00E         	call	_printf	;wreg free
  2548  000092                     
  2549                           ;main_d11.c: 70:  printf("inLab 10 terminal \r\n");
  2550  000092  0E2A               	movlw	low STR_2
  2551  000094  0100               	movlb	0	; () banked
  2552  000096  6F99               	movwf	printf@fmt& (0+255),b
  2553  000098  0EFF               	movlw	high STR_2
  2554  00009A  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2555  00009C  EC80  F00E         	call	_printf	;wreg free
  2556  0000A0                     
  2557                           ;main_d11.c: 71:     printf("MIDI + Hall effect \r\n");
  2558  0000A0  0EFE               	movlw	low STR_3
  2559  0000A2  0100               	movlb	0	; () banked
  2560  0000A4  6F99               	movwf	printf@fmt& (0+255),b
  2561  0000A6  0EFE               	movlw	high STR_3
  2562  0000A8  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2563  0000AA  EC80  F00E         	call	_printf	;wreg free
  2564  0000AE                     
  2565                           ;main_d11.c: 73:  printf("\r\n> ");
  2566  0000AE  0EF5               	movlw	low STR_4
  2567  0000B0  0100               	movlb	0	; () banked
  2568  0000B2  6F99               	movwf	printf@fmt& (0+255),b
  2569  0000B4  0EFF               	movlw	high STR_4
  2570  0000B6  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2571  0000B8  EC80  F00E         	call	_printf	;wreg free
  2572  0000BC                     
  2573                           ;main_d11.c: 75:     ADC_StartConversion();
  2574  0000BC  EC78  F00F         	call	_ADC_StartConversion	;wreg free
  2575  0000C0                     l3576:
  2576  0000C0  EC37  F00F         	call	_ADC_IsConversionDone	;wreg free
  2577  0000C4  0900               	iorlw	0
  2578  0000C6  B4D8               	btfsc	status,2,c
  2579  0000C8  EF68  F000         	goto	u3351
  2580  0000CC  EF6A  F000         	goto	u3350
  2581  0000D0                     u3351:
  2582  0000D0  EF60  F000         	goto	l3576
  2583  0000D4                     u3350:
  2584  0000D4                     
  2585                           ;main_d11.c: 77:     nominalHallUnPressed = (ADC_GetConversionResult() >> 8);
  2586  0000D4  EC41  F00F         	call	_ADC_GetConversionResult	;wreg free
  2587  0000D8  C012  F011         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2588  0000DC  6A12               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2589  0000DE  5011               	movf	?_ADC_GetConversionResult^0,w,c
  2590  0000E0  0100               	movlb	0	; () banked
  2591  0000E2  6FF2               	movwf	_nominalHallUnPressed& (0+255),b
  2592  0000E4                     l3580:
  2593                           
  2594                           ;main_d11.c: 80:   if ((EUSART1_is_rx_ready())) {
  2595  0000E4  EC2D  F00F         	call	_EUSART1_is_rx_ready	;wreg free
  2596  0000E8  0900               	iorlw	0
  2597  0000EA  B4D8               	btfsc	status,2,c
  2598  0000EC  EF7A  F000         	goto	u3361
  2599  0000F0  EF7C  F000         	goto	u3360
  2600  0000F4                     u3361:
  2601  0000F4  EF72  F000         	goto	l3580
  2602  0000F8                     u3360:
  2603  0000F8                     
  2604                           ;main_d11.c: 81:             cmd = EUSART1_Read();
  2605  0000F8  EC94  F00E         	call	_EUSART1_Read	;wreg free
  2606  0000FC  0100               	movlb	0	; () banked
  2607  0000FE  6FC5               	movwf	main@cmd& (0+255),b
  2608                           
  2609                           ;main_d11.c: 83:             switch (cmd) {
  2610  000100  EFE6  F003         	goto	l3780
  2611  000104                     l3584:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;main_d11.c: 89:     printf("-------------------------------------------------\r\n");
  2615  000104  0E48               	movlw	low STR_5
  2616  000106  6F99               	movwf	printf@fmt& (0+255),b
  2617  000108  0EFB               	movlw	high STR_5
  2618  00010A  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2619  00010C  EC80  F00E         	call	_printf	;wreg free
  2620                           
  2621                           ;main_d11.c: 90:                 printf("    Nominal %u to %u\r\n",nominalHallUnPressed,
      +                           nominalHallPressed);
  2622  000110  0EE7               	movlw	low STR_6
  2623  000112  0100               	movlb	0	; () banked
  2624  000114  6F99               	movwf	printf@fmt& (0+255),b
  2625  000116  0EFE               	movlw	high STR_6
  2626  000118  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2627  00011A  C0F2  F09B         	movff	_nominalHallUnPressed,?_printf+2
  2628  00011E  6B9C               	clrf	(?_printf+3)& (0+255),b
  2629  000120  C0F1  F09D         	movff	_nominalHallPressed,?_printf+4
  2630  000124  6B9E               	clrf	(?_printf+5)& (0+255),b
  2631  000126  EC80  F00E         	call	_printf	;wreg free
  2632                           
  2633                           ;main_d11.c: 91:                 printf("    delta = %d\r\n",delta);
  2634  00012A  0E89               	movlw	low STR_7
  2635  00012C  0100               	movlb	0	; () banked
  2636  00012E  6F99               	movwf	printf@fmt& (0+255),b
  2637  000130  0EFF               	movlw	high STR_7
  2638  000132  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2639  000134  C0F0  F09B         	movff	_delta,?_printf+2
  2640  000138  6B9C               	clrf	(?_printf+3)& (0+255),b
  2641  00013A  EC80  F00E         	call	_printf	;wreg free
  2642                           
  2643                           ;main_d11.c: 92:                 printf("    sampleRate = %d TMR0 counts = %duS\r\n",sam
      +                          pleRate,sampleRate);
  2644  00013E  0E91               	movlw	low STR_8
  2645  000140  0100               	movlb	0	; () banked
  2646  000142  6F99               	movwf	printf@fmt& (0+255),b
  2647  000144  0EFC               	movlw	high STR_8
  2648  000146  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2649  000148  C0EE  F09B         	movff	_sampleRate,?_printf+2
  2650  00014C  C0EF  F09C         	movff	_sampleRate+1,?_printf+3
  2651  000150  C0EE  F09D         	movff	_sampleRate,?_printf+4
  2652  000154  C0EF  F09E         	movff	_sampleRate+1,?_printf+5
  2653  000158  EC80  F00E         	call	_printf	;wreg free
  2654                           
  2655                           ;main_d11.c: 93:     printf("-------------------------------------------------\r\n");
  2656  00015C  0E48               	movlw	low STR_5
  2657  00015E  0100               	movlb	0	; () banked
  2658  000160  6F99               	movwf	printf@fmt& (0+255),b
  2659  000162  0EFB               	movlw	high STR_5
  2660  000164  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2661  000166  EC80  F00E         	call	_printf	;wreg free
  2662                           
  2663                           ;main_d11.c: 94:                 printf("?: help menu\r\n");
  2664  00016A  0EC8               	movlw	low STR_10
  2665  00016C  0100               	movlb	0	; () banked
  2666  00016E  6F99               	movwf	printf@fmt& (0+255),b
  2667  000170  0EFF               	movlw	high STR_10
  2668  000172  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2669  000174  EC80  F00E         	call	_printf	;wreg free
  2670                           
  2671                           ;main_d11.c: 95:                 printf("o: k\r\n");
  2672  000178  0EEE               	movlw	low STR_11
  2673  00017A  0100               	movlb	0	; () banked
  2674  00017C  6F99               	movwf	printf@fmt& (0+255),b
  2675  00017E  0EFF               	movlw	high STR_11
  2676  000180  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2677  000182  EC80  F00E         	call	_printf	;wreg free
  2678                           
  2679                           ;main_d11.c: 96:                 printf("Z: Reset processor.\r\n");
  2680  000186  0E14               	movlw	low STR_12
  2681  000188  0100               	movlb	0	; () banked
  2682  00018A  6F99               	movwf	printf@fmt& (0+255),b
  2683  00018C  0EFF               	movlw	high STR_12
  2684  00018E  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2685  000190  EC80  F00E         	call	_printf	;wreg free
  2686                           
  2687                           ;main_d11.c: 97:                 printf("z: Clear the terminal.\r\n");
  2688  000194  0E57               	movlw	low STR_13
  2689  000196  0100               	movlb	0	; () banked
  2690  000198  6F99               	movwf	printf@fmt& (0+255),b
  2691  00019A  0EFE               	movlw	high STR_13
  2692  00019C  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2693  00019E  EC80  F00E         	call	_printf	;wreg free
  2694                           
  2695                           ;main_d11.c: 98:                 printf("d/D: decrement/increment delta\r\n");
  2696  0001A2  0E71               	movlw	low STR_14
  2697  0001A4  0100               	movlb	0	; () banked
  2698  0001A6  6F99               	movwf	printf@fmt& (0+255),b
  2699  0001A8  0EFD               	movlw	high STR_14
  2700  0001AA  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2701  0001AC  EC80  F00E         	call	_printf	;wreg free
  2702                           
  2703                           ;main_d11.c: 100:                 printf("c/C: calibrate unpressed/pressed hall sensor.\
      +                          r\n");
  2704  0001B0  0EDE               	movlw	low STR_15
  2705  0001B2  0100               	movlb	0	; () banked
  2706  0001B4  6F99               	movwf	printf@fmt& (0+255),b
  2707  0001B6  0EFB               	movlw	high STR_15
  2708  0001B8  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2709  0001BA  EC80  F00E         	call	_printf	;wreg free
  2710                           
  2711                           ;main_d11.c: 102:                 printf("t: wait for piano keypress and report %d sampl
      +                          es, one every %dus.\r\n",64, sampleRate);
  2712  0001BE  0E49               	movlw	low STR_16
  2713  0001C0  0100               	movlb	0	; () banked
  2714  0001C2  6F99               	movwf	printf@fmt& (0+255),b
  2715  0001C4  0EFA               	movlw	high STR_16
  2716  0001C6  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2717  0001C8  0E00               	movlw	0
  2718  0001CA  6F9C               	movwf	(?_printf+3)& (0+255),b
  2719  0001CC  0E40               	movlw	64
  2720  0001CE  6F9B               	movwf	(?_printf+2)& (0+255),b
  2721  0001D0  C0EE  F09D         	movff	_sampleRate,?_printf+4
  2722  0001D4  C0EF  F09E         	movff	_sampleRate+1,?_printf+5
  2723  0001D8  EC80  F00E         	call	_printf	;wreg free
  2724                           
  2725                           ;main_d11.c: 103:                 printf("T: strike indicator and time\r\n");
  2726  0001DC  0EB1               	movlw	low STR_17
  2727  0001DE  0100               	movlb	0	; () banked
  2728  0001E0  6F99               	movwf	printf@fmt& (0+255),b
  2729  0001E2  0EFD               	movlw	high STR_17
  2730  0001E4  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2731  0001E6  EC80  F00E         	call	_printf	;wreg free
  2732                           
  2733                           ;main_d11.c: 104:                 printf("i: ISR values\r\n");
  2734  0001EA  0E9A               	movlw	low STR_18
  2735  0001EC  0100               	movlb	0	; () banked
  2736  0001EE  6F99               	movwf	printf@fmt& (0+255),b
  2737  0001F0  0EFF               	movlw	high STR_18
  2738  0001F2  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2739  0001F4  EC80  F00E         	call	_printf	;wreg free
  2740                           
  2741                           ;main_d11.c: 105:                 printf("M: enter into Midi mode.\r\n");
  2742  0001F8  0EED               	movlw	low STR_19
  2743  0001FA  0100               	movlb	0	; () banked
  2744  0001FC  6F99               	movwf	printf@fmt& (0+255),b
  2745  0001FE  0EFD               	movlw	high STR_19
  2746  000200  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2747  000202  EC80  F00E         	call	_printf	;wreg free
  2748                           
  2749                           ;main_d11.c: 106:                 printf("----------------------------------------------
      +                          ---\r\n");
  2750  000206  0E48               	movlw	low STR_5
  2751  000208  0100               	movlb	0	; () banked
  2752  00020A  6F99               	movwf	printf@fmt& (0+255),b
  2753  00020C  0EFB               	movlw	high STR_5
  2754  00020E  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2755  000210  EC80  F00E         	call	_printf	;wreg free
  2756                           
  2757                           ;main_d11.c: 107:     break;
  2758  000214  EF72  F000         	goto	l3580
  2759  000218                     l3586:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;main_d11.c: 113:                 printf("o:      ok\r\n");
  2763  000218  0ED7               	movlw	low STR_21
  2764  00021A  6F99               	movwf	printf@fmt& (0+255),b
  2765  00021C  0EFF               	movlw	high STR_21
  2766  00021E  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2767  000220  EC80  F00E         	call	_printf	;wreg free
  2768                           
  2769                           ;main_d11.c: 114:                 break;
  2770  000224  EF72  F000         	goto	l3580
  2771  000228                     l3588:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;main_d11.c: 120:                 for (i=0; i<40; i++) printf("\n");
  2775  000228  0E00               	movlw	0
  2776  00022A  6FC7               	movwf	main@i& (0+255),b
  2777  00022C                     l3594:
  2778                           
  2779                           ; BSR set to: 0
  2780  00022C  0E6F               	movlw	low (STR_46+33)
  2781  00022E  6F99               	movwf	printf@fmt& (0+255),b
  2782  000230  0EFD               	movlw	high (STR_46+33)
  2783  000232  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2784  000234  EC80  F00E         	call	_printf	;wreg free
  2785  000238  0100               	movlb	0	; () banked
  2786  00023A  2BC7               	incf	main@i& (0+255),f,b
  2787  00023C                     
  2788                           ; BSR set to: 0
  2789  00023C  0E27               	movlw	39
  2790  00023E  65C7               	cpfsgt	main@i& (0+255),b
  2791  000240  EF24  F001         	goto	u3371
  2792  000244  EF26  F001         	goto	u3370
  2793  000248                     u3371:
  2794  000248  EF16  F001         	goto	l3594
  2795  00024C                     u3370:
  2796  00024C                     
  2797                           ; BSR set to: 0
  2798  00024C  00FF               	reset		;# 
  2799                           
  2800                           ;main_d11.c: 122:                 break;
  2801  00024E  EF72  F000         	goto	l3580
  2802  000252                     l3600:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;main_d11.c: 128:                 for (i=0; i<40; i++) printf("\n");
  2806  000252  0E00               	movlw	0
  2807  000254  6FC7               	movwf	main@i& (0+255),b
  2808  000256                     l3606:
  2809                           
  2810                           ; BSR set to: 0
  2811  000256  0E6F               	movlw	low (STR_46+33)
  2812  000258  6F99               	movwf	printf@fmt& (0+255),b
  2813  00025A  0EFD               	movlw	high (STR_46+33)
  2814  00025C  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2815  00025E  EC80  F00E         	call	_printf	;wreg free
  2816  000262  0100               	movlb	0	; () banked
  2817  000264  2BC7               	incf	main@i& (0+255),f,b
  2818  000266                     
  2819                           ; BSR set to: 0
  2820  000266  0E27               	movlw	39
  2821  000268  65C7               	cpfsgt	main@i& (0+255),b
  2822  00026A  EF39  F001         	goto	u3381
  2823  00026E  EF3B  F001         	goto	u3380
  2824  000272                     u3381:
  2825  000272  EF2B  F001         	goto	l3606
  2826  000276                     u3380:
  2827  000276  EF72  F000         	goto	l3580
  2828  00027A                     l3612:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;main_d11.c: 135:                 printf("Hands off the piano, press keyboard key to cal
      +                          ibrate nominalHallUnPressed");
  2832  00027A  0EB7               	movlw	low STR_24
  2833  00027C  6F99               	movwf	printf@fmt& (0+255),b
  2834  00027E  0EF9               	movlw	high STR_24
  2835  000280  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2836  000282  EC80  F00E         	call	_printf	;wreg free
  2837  000286                     l3614:
  2838  000286  EC2D  F00F         	call	_EUSART1_is_rx_ready	;wreg free
  2839  00028A  0900               	iorlw	0
  2840  00028C  B4D8               	btfsc	status,2,c
  2841  00028E  EF4B  F001         	goto	u3391
  2842  000292  EF4D  F001         	goto	u3390
  2843  000296                     u3391:
  2844  000296  EF43  F001         	goto	l3614
  2845  00029A                     u3390:
  2846  00029A                     
  2847                           ;main_d11.c: 137:                 (void) EUSART1_Read();
  2848  00029A  EC94  F00E         	call	_EUSART1_Read	;wreg free
  2849  00029E                     
  2850                           ;main_d11.c: 138:                 ADC_StartConversion();
  2851  00029E  EC78  F00F         	call	_ADC_StartConversion	;wreg free
  2852  0002A2                     l3620:
  2853  0002A2  EC37  F00F         	call	_ADC_IsConversionDone	;wreg free
  2854  0002A6  0900               	iorlw	0
  2855  0002A8  B4D8               	btfsc	status,2,c
  2856  0002AA  EF59  F001         	goto	u3401
  2857  0002AE  EF5B  F001         	goto	u3400
  2858  0002B2                     u3401:
  2859  0002B2  EF51  F001         	goto	l3620
  2860  0002B6                     u3400:
  2861  0002B6                     
  2862                           ;main_d11.c: 140:                 nominalHallUnPressed = ADC_GetConversionResult()>>8;
  2863  0002B6  EC41  F00F         	call	_ADC_GetConversionResult	;wreg free
  2864  0002BA  C012  F011         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2865  0002BE  6A12               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2866  0002C0  5011               	movf	?_ADC_GetConversionResult^0,w,c
  2867  0002C2  0100               	movlb	0	; () banked
  2868  0002C4  6FF2               	movwf	_nominalHallUnPressed& (0+255),b
  2869  0002C6                     
  2870                           ; BSR set to: 0
  2871                           ;main_d11.c: 141:                 printf("New nominalHallUnPressed value = %d\r\n",nomin
      +                          alHallUnPressed);
  2872  0002C6  0EE0               	movlw	low STR_25
  2873  0002C8  6F99               	movwf	printf@fmt& (0+255),b
  2874  0002CA  0EFC               	movlw	high STR_25
  2875  0002CC  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2876  0002CE  C0F2  F09B         	movff	_nominalHallUnPressed,?_printf+2
  2877  0002D2  6B9C               	clrf	(?_printf+3)& (0+255),b
  2878  0002D4  EC80  F00E         	call	_printf	;wreg free
  2879                           
  2880                           ;main_d11.c: 142:                 break;
  2881  0002D8  EF72  F000         	goto	l3580
  2882  0002DC                     l3626:
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;main_d11.c: 148:                 printf("Press the piano key, press keyboard key to cal
      +                          ibrate nominalHallPressed");
  2886  0002DC  0E01               	movlw	low STR_26
  2887  0002DE  6F99               	movwf	printf@fmt& (0+255),b
  2888  0002E0  0EFA               	movlw	high STR_26
  2889  0002E2  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2890  0002E4  EC80  F00E         	call	_printf	;wreg free
  2891  0002E8                     l3628:
  2892  0002E8  EC2D  F00F         	call	_EUSART1_is_rx_ready	;wreg free
  2893  0002EC  0900               	iorlw	0
  2894  0002EE  B4D8               	btfsc	status,2,c
  2895  0002F0  EF7C  F001         	goto	u3411
  2896  0002F4  EF7E  F001         	goto	u3410
  2897  0002F8                     u3411:
  2898  0002F8  EF74  F001         	goto	l3628
  2899  0002FC                     u3410:
  2900  0002FC                     
  2901                           ;main_d11.c: 150:                 (void) EUSART1_Read();
  2902  0002FC  EC94  F00E         	call	_EUSART1_Read	;wreg free
  2903  000300                     
  2904                           ;main_d11.c: 151:                 ADC_StartConversion();
  2905  000300  EC78  F00F         	call	_ADC_StartConversion	;wreg free
  2906  000304                     l3634:
  2907  000304  EC37  F00F         	call	_ADC_IsConversionDone	;wreg free
  2908  000308  0900               	iorlw	0
  2909  00030A  B4D8               	btfsc	status,2,c
  2910  00030C  EF8A  F001         	goto	u3421
  2911  000310  EF8C  F001         	goto	u3420
  2912  000314                     u3421:
  2913  000314  EF82  F001         	goto	l3634
  2914  000318                     u3420:
  2915  000318                     
  2916                           ;main_d11.c: 153:                 nominalHallPressed = ADC_GetConversionResult()>>8;
  2917  000318  EC41  F00F         	call	_ADC_GetConversionResult	;wreg free
  2918  00031C  C012  F011         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2919  000320  6A12               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2920  000322  5011               	movf	?_ADC_GetConversionResult^0,w,c
  2921  000324  0100               	movlb	0	; () banked
  2922  000326  6FF1               	movwf	_nominalHallPressed& (0+255),b
  2923  000328                     
  2924                           ; BSR set to: 0
  2925                           ;main_d11.c: 154:                 printf("New nominalHallPressed value = %d\r\n",nominal
      +                          HallPressed);
  2926  000328  0E2A               	movlw	low STR_27
  2927  00032A  6F99               	movwf	printf@fmt& (0+255),b
  2928  00032C  0EFD               	movlw	high STR_27
  2929  00032E  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2930  000330  C0F1  F09B         	movff	_nominalHallPressed,?_printf+2
  2931  000334  6B9C               	clrf	(?_printf+3)& (0+255),b
  2932  000336  EC80  F00E         	call	_printf	;wreg free
  2933                           
  2934                           ;main_d11.c: 155:                 break;
  2935  00033A  EF72  F000         	goto	l3580
  2936  00033E                     l3640:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;main_d11.c: 162:                 if (cmd == 'd') delta -= 1;
  2940  00033E  0E64               	movlw	100
  2941  000340  19C5               	xorwf	main@cmd& (0+255),w,b
  2942  000342  A4D8               	btfss	status,2,c
  2943  000344  EFA6  F001         	goto	u3431
  2944  000348  EFA8  F001         	goto	u3430
  2945  00034C                     u3431:
  2946  00034C  EFAB  F001         	goto	l3644
  2947  000350                     u3430:
  2948  000350                     
  2949                           ; BSR set to: 0
  2950  000350  07F0               	decf	_delta& (0+255),f,b
  2951  000352  EFAC  F001         	goto	l3646
  2952  000356                     l3644:
  2953                           
  2954                           ; BSR set to: 0
  2955  000356  2BF0               	incf	_delta& (0+255),f,b
  2956  000358                     l3646:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;main_d11.c: 164:                 printf("delta set to %d\r\n",delta);
  2960  000358  0E66               	movlw	low STR_28
  2961  00035A  6F99               	movwf	printf@fmt& (0+255),b
  2962  00035C  0EFF               	movlw	high STR_28
  2963  00035E  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2964  000360  C0F0  F09B         	movff	_delta,?_printf+2
  2965  000364  6B9C               	clrf	(?_printf+3)& (0+255),b
  2966  000366  EC80  F00E         	call	_printf	;wreg free
  2967                           
  2968                           ;main_d11.c: 165:                 break;
  2969  00036A  EF72  F000         	goto	l3580
  2970  00036E                     l3648:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;main_d11.c: 171:                 printf("Tap a piano key.\r\n");
  2974  00036E  0E53               	movlw	low STR_29
  2975  000370  6F99               	movwf	printf@fmt& (0+255),b
  2976  000372  0EFF               	movlw	high STR_29
  2977  000374  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  2978  000376  EC80  F00E         	call	_printf	;wreg free
  2979  00037A                     l3650:
  2980  00037A  0100               	movlb	0	; () banked
  2981  00037C  51CD               	movf	_keyState& (0+255),w,b
  2982  00037E  B4D8               	btfsc	status,2,c
  2983  000380  EFC4  F001         	goto	u3441
  2984  000384  EFC6  F001         	goto	u3440
  2985  000388                     u3441:
  2986  000388  EFBD  F001         	goto	l3650
  2987  00038C                     u3440:
  2988  00038C                     l3652:
  2989                           
  2990                           ; BSR set to: 0
  2991  00038C  51CD               	movf	_keyState& (0+255),w,b
  2992  00038E  A4D8               	btfss	status,2,c
  2993  000390  EFCC  F001         	goto	u3451
  2994  000394  EFCE  F001         	goto	u3450
  2995  000398                     u3451:
  2996  000398  EFC6  F001         	goto	l3652
  2997  00039C                     u3450:
  2998  00039C                     
  2999                           ; BSR set to: 0
  3000                           ;main_d11.c: 196:                 for (i=0; i<64; i++) {
  3001  00039C  0E00               	movlw	0
  3002  00039E  6FC7               	movwf	main@i& (0+255),b
  3003  0003A0                     l3660:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;main_d11.c: 197:                     printf("%4d ",sample[i]);
  3007  0003A0  0EFA               	movlw	low STR_30
  3008  0003A2  6F99               	movwf	printf@fmt& (0+255),b
  3009  0003A4  0EFF               	movlw	high STR_30
  3010  0003A6  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3011  0003A8  0E00               	movlw	low _sample
  3012  0003AA  25C7               	addwf	main@i& (0+255),w,b
  3013  0003AC  6ED9               	movwf	fsr2l,c
  3014  0003AE  6ADA               	clrf	fsr2h,c
  3015  0003B0  0E01               	movlw	high _sample
  3016  0003B2  22DA               	addwfc	fsr2h,f,c
  3017  0003B4  50DF               	movf	indf2,w,c
  3018  0003B6  6FA3               	movwf	??_main& (0+255),b
  3019  0003B8  51A3               	movf	??_main& (0+255),w,b
  3020  0003BA  6F9B               	movwf	(?_printf+2)& (0+255),b
  3021  0003BC  6B9C               	clrf	(?_printf+3)& (0+255),b
  3022  0003BE  EC80  F00E         	call	_printf	;wreg free
  3023  0003C2                     
  3024                           ;main_d11.c: 198:                 }
  3025  0003C2  0100               	movlb	0	; () banked
  3026  0003C4  2BC7               	incf	main@i& (0+255),f,b
  3027  0003C6                     
  3028                           ; BSR set to: 0
  3029  0003C6  0E3F               	movlw	63
  3030  0003C8  65C7               	cpfsgt	main@i& (0+255),b
  3031  0003CA  EFE9  F001         	goto	u3461
  3032  0003CE  EFEB  F001         	goto	u3460
  3033  0003D2                     u3461:
  3034  0003D2  EFD0  F001         	goto	l3660
  3035  0003D6                     u3460:
  3036  0003D6                     
  3037                           ; BSR set to: 0
  3038                           ;main_d11.c: 199:                 printf("\r\n");
  3039  0003D6  0EEB               	movlw	low (STR_35+7)
  3040  0003D8  6F99               	movwf	printf@fmt& (0+255),b
  3041  0003DA  0EFF               	movlw	high (STR_35+7)
  3042  0003DC  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3043  0003DE  EC80  F00E         	call	_printf	;wreg free
  3044  0003E2                     
  3045                           ;main_d11.c: 202:                 for (i=0; i <64; i++){
  3046  0003E2  0E00               	movlw	0
  3047  0003E4  0100               	movlb	0	; () banked
  3048  0003E6  6FC7               	movwf	main@i& (0+255),b
  3049  0003E8                     l3674:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;main_d11.c: 203:                     if(sample[i] <= nominalHallPressed){
  3053  0003E8  0E00               	movlw	low _sample
  3054  0003EA  25C7               	addwf	main@i& (0+255),w,b
  3055  0003EC  6ED9               	movwf	fsr2l,c
  3056  0003EE  6ADA               	clrf	fsr2h,c
  3057  0003F0  0E01               	movlw	high _sample
  3058  0003F2  22DA               	addwfc	fsr2h,f,c
  3059  0003F4  50DE               	movf	postinc2,w,c
  3060  0003F6  5DF1               	subwf	_nominalHallPressed& (0+255),w,b
  3061  0003F8  A0D8               	btfss	status,0,c
  3062  0003FA  EF01  F002         	goto	u3471
  3063  0003FE  EF03  F002         	goto	u3470
  3064  000402                     u3471:
  3065  000402  EF08  F002         	goto	l3680
  3066  000406                     u3470:
  3067  000406                     
  3068                           ; BSR set to: 0
  3069                           ;main_d11.c: 204:                         velocity = 128 - i;
  3070  000406  51C7               	movf	main@i& (0+255),w,b
  3071  000408  0880               	sublw	128
  3072  00040A  6FC6               	movwf	main@velocity& (0+255),b
  3073                           
  3074                           ;main_d11.c: 205:                         break;
  3075  00040C  EF26  F002         	goto	l3688
  3076  000410                     l3680:
  3077                           
  3078                           ; BSR set to: 0
  3079  000410  0E3F               	movlw	63
  3080  000412  19C7               	xorwf	main@i& (0+255),w,b
  3081  000414  A4D8               	btfss	status,2,c
  3082  000416  EF0F  F002         	goto	u3481
  3083  00041A  EF11  F002         	goto	u3480
  3084  00041E                     u3481:
  3085  00041E  EF1D  F002         	goto	l3684
  3086  000422                     u3480:
  3087  000422                     
  3088                           ; BSR set to: 0
  3089                           ;main_d11.c: 208:                         velocity = 128 - (64 + (sample[i] - nominalHal
      +                          lPressed));
  3090  000422  0E00               	movlw	low _sample
  3091  000424  25C7               	addwf	main@i& (0+255),w,b
  3092  000426  6ED9               	movwf	fsr2l,c
  3093  000428  6ADA               	clrf	fsr2h,c
  3094  00042A  0E01               	movlw	high _sample
  3095  00042C  22DA               	addwfc	fsr2h,f,c
  3096  00042E  50DF               	movf	indf2,w,c
  3097  000430  6FA3               	movwf	??_main& (0+255),b
  3098  000432  51A3               	movf	??_main& (0+255),w,b
  3099  000434  5DF1               	subwf	_nominalHallPressed& (0+255),w,b
  3100  000436  0F40               	addlw	64
  3101  000438  6FC6               	movwf	main@velocity& (0+255),b
  3102  00043A                     l3684:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;main_d11.c: 210:                 }
  3106  00043A  2BC7               	incf	main@i& (0+255),f,b
  3107  00043C                     
  3108                           ; BSR set to: 0
  3109  00043C  0E3F               	movlw	63
  3110  00043E  65C7               	cpfsgt	main@i& (0+255),b
  3111  000440  EF24  F002         	goto	u3491
  3112  000444  EF26  F002         	goto	u3490
  3113  000448                     u3491:
  3114  000448  EFF4  F001         	goto	l3674
  3115  00044C                     u3490:
  3116  00044C                     l3688:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;main_d11.c: 211:                 printf("Strike Velocity is %d\r\n",velocity);
  3120  00044C  0EA1               	movlw	low STR_32
  3121  00044E  6F99               	movwf	printf@fmt& (0+255),b
  3122  000450  0EFE               	movlw	high STR_32
  3123  000452  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3124  000454  C0C6  F09B         	movff	main@velocity,?_printf+2
  3125  000458  6B9C               	clrf	(?_printf+3)& (0+255),b
  3126  00045A  EC80  F00E         	call	_printf	;wreg free
  3127  00045E                     
  3128                           ;main_d11.c: 224:                 break;
  3129  00045E  EF72  F000         	goto	l3580
  3130  000462                     l3692:
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;main_d11.c: 228:                 printf("Tap piano key and press keyboard key to exit.\
      +                          r\n");
  3134  000462  0E0E               	movlw	low STR_33
  3135  000464  6F99               	movwf	printf@fmt& (0+255),b
  3136  000466  0EFC               	movlw	high STR_33
  3137  000468  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3138  00046A  EC80  F00E         	call	_printf	;wreg free
  3139                           
  3140                           ;main_d11.c: 230:                 while ((EUSART1_is_rx_ready()) == 0){
  3141  00046E  EF87  F002         	goto	l3720
  3142  000472                     l3694:
  3143  000472  0100               	movlb	0	; () banked
  3144  000474  51CD               	movf	_keyState& (0+255),w,b
  3145  000476  B4D8               	btfsc	status,2,c
  3146  000478  EF40  F002         	goto	u3501
  3147  00047C  EF42  F002         	goto	u3500
  3148  000480                     u3501:
  3149  000480  EF39  F002         	goto	l3694
  3150  000484                     u3500:
  3151  000484                     l3696:
  3152                           
  3153                           ; BSR set to: 0
  3154  000484  51CD               	movf	_keyState& (0+255),w,b
  3155  000486  A4D8               	btfss	status,2,c
  3156  000488  EF48  F002         	goto	u3511
  3157  00048C  EF4A  F002         	goto	u3510
  3158  000490                     u3511:
  3159  000490  EF42  F002         	goto	l3696
  3160  000494                     u3510:
  3161  000494                     
  3162                           ; BSR set to: 0
  3163                           ;main_d11.c: 233:                     for (i=0; i <64; i++){
  3164  000494  0E00               	movlw	0
  3165  000496  6FC7               	movwf	main@i& (0+255),b
  3166  000498                     l3704:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;main_d11.c: 234:                         if(sample[i] <= nominalHallPressed){
  3170  000498  0E00               	movlw	low _sample
  3171  00049A  25C7               	addwf	main@i& (0+255),w,b
  3172  00049C  6ED9               	movwf	fsr2l,c
  3173  00049E  6ADA               	clrf	fsr2h,c
  3174  0004A0  0E01               	movlw	high _sample
  3175  0004A2  22DA               	addwfc	fsr2h,f,c
  3176  0004A4  50DE               	movf	postinc2,w,c
  3177  0004A6  5DF1               	subwf	_nominalHallPressed& (0+255),w,b
  3178  0004A8  A0D8               	btfss	status,0,c
  3179  0004AA  EF59  F002         	goto	u3521
  3180  0004AE  EF5B  F002         	goto	u3520
  3181  0004B2                     u3521:
  3182  0004B2  EF60  F002         	goto	l3710
  3183  0004B6                     u3520:
  3184  0004B6                     
  3185                           ; BSR set to: 0
  3186                           ;main_d11.c: 235:                             velocity = 128 - i;
  3187  0004B6  51C7               	movf	main@i& (0+255),w,b
  3188  0004B8  0880               	sublw	128
  3189  0004BA  6FC6               	movwf	main@velocity& (0+255),b
  3190                           
  3191                           ;main_d11.c: 236:                             break;
  3192  0004BC  EF7E  F002         	goto	l3718
  3193  0004C0                     l3710:
  3194                           
  3195                           ; BSR set to: 0
  3196  0004C0  0E3F               	movlw	63
  3197  0004C2  19C7               	xorwf	main@i& (0+255),w,b
  3198  0004C4  A4D8               	btfss	status,2,c
  3199  0004C6  EF67  F002         	goto	u3531
  3200  0004CA  EF69  F002         	goto	u3530
  3201  0004CE                     u3531:
  3202  0004CE  EF75  F002         	goto	l3714
  3203  0004D2                     u3530:
  3204  0004D2                     
  3205                           ; BSR set to: 0
  3206                           ;main_d11.c: 239:                             velocity = 128 - (64 + (sample[i] - nomina
      +                          lHallPressed));
  3207  0004D2  0E00               	movlw	low _sample
  3208  0004D4  25C7               	addwf	main@i& (0+255),w,b
  3209  0004D6  6ED9               	movwf	fsr2l,c
  3210  0004D8  6ADA               	clrf	fsr2h,c
  3211  0004DA  0E01               	movlw	high _sample
  3212  0004DC  22DA               	addwfc	fsr2h,f,c
  3213  0004DE  50DF               	movf	indf2,w,c
  3214  0004E0  6FA3               	movwf	??_main& (0+255),b
  3215  0004E2  51A3               	movf	??_main& (0+255),w,b
  3216  0004E4  5DF1               	subwf	_nominalHallPressed& (0+255),w,b
  3217  0004E6  0F40               	addlw	64
  3218  0004E8  6FC6               	movwf	main@velocity& (0+255),b
  3219  0004EA                     l3714:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;main_d11.c: 241:                     }
  3223  0004EA  2BC7               	incf	main@i& (0+255),f,b
  3224  0004EC                     
  3225                           ; BSR set to: 0
  3226  0004EC  0E3F               	movlw	63
  3227  0004EE  65C7               	cpfsgt	main@i& (0+255),b
  3228  0004F0  EF7C  F002         	goto	u3541
  3229  0004F4  EF7E  F002         	goto	u3540
  3230  0004F8                     u3541:
  3231  0004F8  EF4C  F002         	goto	l3704
  3232  0004FC                     u3540:
  3233  0004FC                     l3718:
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;main_d11.c: 242:                     printf("Strike Velocity = %d    released.\r\n",vel
      +                          ocity);
  3237  0004FC  0E06               	movlw	low STR_34
  3238  0004FE  6F99               	movwf	printf@fmt& (0+255),b
  3239  000500  0EFD               	movlw	high STR_34
  3240  000502  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3241  000504  C0C6  F09B         	movff	main@velocity,?_printf+2
  3242  000508  6B9C               	clrf	(?_printf+3)& (0+255),b
  3243  00050A  EC80  F00E         	call	_printf	;wreg free
  3244  00050E                     l3720:
  3245                           
  3246                           ;main_d11.c: 230:                 while ((EUSART1_is_rx_ready()) == 0){
  3247  00050E  EC2D  F00F         	call	_EUSART1_is_rx_ready	;wreg free
  3248  000512  0900               	iorlw	0
  3249  000514  B4D8               	btfsc	status,2,c
  3250  000516  EF8F  F002         	goto	u3551
  3251  00051A  EF91  F002         	goto	u3550
  3252  00051E                     u3551:
  3253  00051E  EF39  F002         	goto	l3694
  3254  000522                     u3550:
  3255  000522  EF72  F000         	goto	l3580
  3256  000526                     l3722:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;main_d11.c: 248:                 for (i = 0; i < 64; i++){
  3260  000526  0E00               	movlw	0
  3261  000528  6FC7               	movwf	main@i& (0+255),b
  3262  00052A                     l3728:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;main_d11.c: 249:                     printf("%d: %d \r\n",i, sample[i]);
  3266  00052A  0EE4               	movlw	low STR_35
  3267  00052C  6F99               	movwf	printf@fmt& (0+255),b
  3268  00052E  0EFF               	movlw	high STR_35
  3269  000530  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3270  000532  C0C7  F09B         	movff	main@i,?_printf+2
  3271  000536  6B9C               	clrf	(?_printf+3)& (0+255),b
  3272  000538  0E00               	movlw	low _sample
  3273  00053A  25C7               	addwf	main@i& (0+255),w,b
  3274  00053C  6ED9               	movwf	fsr2l,c
  3275  00053E  6ADA               	clrf	fsr2h,c
  3276  000540  0E01               	movlw	high _sample
  3277  000542  22DA               	addwfc	fsr2h,f,c
  3278  000544  50DF               	movf	indf2,w,c
  3279  000546  6FA3               	movwf	??_main& (0+255),b
  3280  000548  51A3               	movf	??_main& (0+255),w,b
  3281  00054A  6F9D               	movwf	(?_printf+4)& (0+255),b
  3282  00054C  6B9E               	clrf	(?_printf+5)& (0+255),b
  3283  00054E  EC80  F00E         	call	_printf	;wreg free
  3284  000552                     
  3285                           ;main_d11.c: 250:                 }
  3286  000552  0100               	movlb	0	; () banked
  3287  000554  2BC7               	incf	main@i& (0+255),f,b
  3288  000556                     
  3289                           ; BSR set to: 0
  3290  000556  0E3F               	movlw	63
  3291  000558  65C7               	cpfsgt	main@i& (0+255),b
  3292  00055A  EFB1  F002         	goto	u3561
  3293  00055E  EFB3  F002         	goto	u3560
  3294  000562                     u3561:
  3295  000562  EF95  F002         	goto	l3728
  3296  000566                     u3560:
  3297  000566  EF72  F000         	goto	l3580
  3298  00056A                     l3734:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;main_d11.c: 257:                 printf("Launch hairless-midiserial\r\n");
  3302  00056A  0ED0               	movlw	low STR_36
  3303  00056C  6F99               	movwf	printf@fmt& (0+255),b
  3304  00056E  0EFD               	movlw	high STR_36
  3305  000570  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3306  000572  EC80  F00E         	call	_printf	;wreg free
  3307                           
  3308                           ;main_d11.c: 258:                 printf("In the hairless-midiserial program:\r\n");
  3309  000576  0E42               	movlw	low (STR_49+4)
  3310  000578  0100               	movlb	0	; () banked
  3311  00057A  6F99               	movwf	printf@fmt& (0+255),b
  3312  00057C  0EFC               	movlw	high (STR_49+4)
  3313  00057E  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3314  000580  EC80  F00E         	call	_printf	;wreg free
  3315                           
  3316                           ;main_d11.c: 259:                 printf("    File -> preferences\r\n");
  3317  000584  0E3D               	movlw	low STR_38
  3318  000586  0100               	movlb	0	; () banked
  3319  000588  6F99               	movwf	printf@fmt& (0+255),b
  3320  00058A  0EFE               	movlw	high STR_38
  3321  00058C  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3322  00058E  EC80  F00E         	call	_printf	;wreg free
  3323                           
  3324                           ;main_d11.c: 260:                 printf("    Baud Rate:  9600\r\n");
  3325  000592  0EB9               	movlw	low STR_39
  3326  000594  0100               	movlb	0	; () banked
  3327  000596  6F99               	movwf	printf@fmt& (0+255),b
  3328  000598  0EFE               	movlw	high STR_39
  3329  00059A  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3330  00059C  EC80  F00E         	call	_printf	;wreg free
  3331                           
  3332                           ;main_d11.c: 261:                 printf("    Data Bits:  8\r\n");
  3333  0005A0  0E3F               	movlw	low STR_40
  3334  0005A2  0100               	movlb	0	; () banked
  3335  0005A4  6F99               	movwf	printf@fmt& (0+255),b
  3336  0005A6  0EFF               	movlw	high STR_40
  3337  0005A8  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3338  0005AA  EC80  F00E         	call	_printf	;wreg free
  3339                           
  3340                           ;main_d11.c: 262:                 printf("    Parity:     None\r\n");
  3341  0005AE  0ED0               	movlw	low STR_41
  3342  0005B0  0100               	movlb	0	; () banked
  3343  0005B2  6F99               	movwf	printf@fmt& (0+255),b
  3344  0005B4  0EFE               	movlw	high STR_41
  3345  0005B6  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3346  0005B8  EC80  F00E         	call	_printf	;wreg free
  3347                           
  3348                           ;main_d11.c: 263:                 printf("    Stop Bit(s):    1\r\n");
  3349  0005BC  0E89               	movlw	low STR_42
  3350  0005BE  0100               	movlb	0	; () banked
  3351  0005C0  6F99               	movwf	printf@fmt& (0+255),b
  3352  0005C2  0EFE               	movlw	high STR_42
  3353  0005C4  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3354  0005C6  EC80  F00E         	call	_printf	;wreg free
  3355                           
  3356                           ;main_d11.c: 264:                 printf("    Flow Control:   None\r\n");
  3357  0005CA  0E08               	movlw	low STR_43
  3358  0005CC  0100               	movlb	0	; () banked
  3359  0005CE  6F99               	movwf	printf@fmt& (0+255),b
  3360  0005D0  0EFE               	movlw	high STR_43
  3361  0005D2  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3362  0005D4  EC80  F00E         	call	_printf	;wreg free
  3363                           
  3364                           ;main_d11.c: 265:                 printf("    Click ""OK""\r\n");
  3365  0005D8  0EAA               	movlw	low STR_44
  3366  0005DA  0100               	movlb	0	; () banked
  3367  0005DC  6F99               	movwf	printf@fmt& (0+255),b
  3368  0005DE  0EFF               	movlw	high STR_44
  3369  0005E0  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3370  0005E2  EC80  F00E         	call	_printf	;wreg free
  3371                           
  3372                           ;main_d11.c: 266:                 printf("    Serial Port -> (Not Connected)\r\n");
  3373  0005E6  0E6C               	movlw	low (STR_55+4)
  3374  0005E8  0100               	movlb	0	; () banked
  3375  0005EA  6F99               	movwf	printf@fmt& (0+255),b
  3376  0005EC  0EFC               	movlw	high (STR_55+4)
  3377  0005EE  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3378  0005F0  EC80  F00E         	call	_printf	;wreg free
  3379                           
  3380                           ;main_d11.c: 267:                 printf("    MIDI Out -> (Not Connected)\r\n\n");
  3381  0005F4  0E4E               	movlw	low STR_46
  3382  0005F6  0100               	movlb	0	; () banked
  3383  0005F8  6F99               	movwf	printf@fmt& (0+255),b
  3384  0005FA  0EFD               	movlw	high STR_46
  3385  0005FC  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3386  0005FE  EC80  F00E         	call	_printf	;wreg free
  3387                           
  3388                           ;main_d11.c: 268:                 printf("When you have complete this:\r\n");
  3389  000602  0E92               	movlw	low STR_47
  3390  000604  0100               	movlb	0	; () banked
  3391  000606  6F99               	movwf	printf@fmt& (0+255),b
  3392  000608  0EFD               	movlw	high STR_47
  3393  00060A  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3394  00060C  EC80  F00E         	call	_printf	;wreg free
  3395                           
  3396                           ;main_d11.c: 269:                 printf("    Close out of Putty.\r\n");
  3397  000610  0E23               	movlw	low STR_48
  3398  000612  0100               	movlb	0	; () banked
  3399  000614  6F99               	movwf	printf@fmt& (0+255),b
  3400  000616  0EFE               	movlw	high STR_48
  3401  000618  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3402  00061A  EC80  F00E         	call	_printf	;wreg free
  3403                           
  3404                           ;main_d11.c: 270:                 printf("    In the hairless-midiserial program:\r\n");
  3405  00061E  0E3E               	movlw	low STR_49
  3406  000620  0100               	movlb	0	; () banked
  3407  000622  6F99               	movwf	printf@fmt& (0+255),b
  3408  000624  0EFC               	movlw	high STR_49
  3409  000626  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3410  000628  EC80  F00E         	call	_printf	;wreg free
  3411                           
  3412                           ;main_d11.c: 271:                 printf("        Serial Port -> USB Serial Port (COMx)\
      +                          r\n");
  3413  00062C  0EAE               	movlw	low STR_50
  3414  00062E  0100               	movlb	0	; () banked
  3415  000630  6F99               	movwf	printf@fmt& (0+255),b
  3416  000632  0EFB               	movlw	high STR_50
  3417  000634  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3418  000636  EC80  F00E         	call	_printf	;wreg free
  3419                           
  3420                           ;main_d11.c: 272:                 printf("        MIDI Out -> Microsoft GS Wavetable Syn
      +                          th \r\n");
  3421  00063A  0E14               	movlw	low STR_51
  3422  00063C  0100               	movlb	0	; () banked
  3423  00063E  6F99               	movwf	printf@fmt& (0+255),b
  3424  000640  0EFB               	movlw	high STR_51
  3425  000642  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3426  000644  EC80  F00E         	call	_printf	;wreg free
  3427                           
  3428                           ;main_d11.c: 273:                 printf("    Press upper push button on Dev'18 to start
      +                           MIDI play sequence\r\n");
  3429  000648  0E8D               	movlw	low STR_52
  3430  00064A  0100               	movlb	0	; () banked
  3431  00064C  6F99               	movwf	printf@fmt& (0+255),b
  3432  00064E  0EFA               	movlw	high STR_52
  3433  000650  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3434  000652  EC80  F00E         	call	_printf	;wreg free
  3435                           
  3436                           ;main_d11.c: 274:                 printf("    Press lower push button on Dev'18 to exit 
      +                          MIDI play sequence\r\n");
  3437  000656  0ED1               	movlw	low STR_53
  3438  000658  0100               	movlb	0	; () banked
  3439  00065A  6F99               	movwf	printf@fmt& (0+255),b
  3440  00065C  0EFA               	movlw	high STR_53
  3441  00065E  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3442  000660  EC80  F00E         	call	_printf	;wreg free
  3443                           
  3444                           ;main_d11.c: 275:                 printf("    In the hairless-midiserial program:\r\n");
  3445  000664  0E3E               	movlw	low STR_49
  3446  000666  0100               	movlb	0	; () banked
  3447  000668  6F99               	movwf	printf@fmt& (0+255),b
  3448  00066A  0EFC               	movlw	high STR_49
  3449  00066C  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3450  00066E  EC80  F00E         	call	_printf	;wreg free
  3451                           
  3452                           ;main_d11.c: 276:                 printf("        Serial Port -> (Not Connected)\r\n");
  3453  000672  0E68               	movlw	low STR_55
  3454  000674  0100               	movlb	0	; () banked
  3455  000676  6F99               	movwf	printf@fmt& (0+255),b
  3456  000678  0EFC               	movlw	high STR_55
  3457  00067A  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3458  00067C  EC80  F00E         	call	_printf	;wreg free
  3459                           
  3460                           ;main_d11.c: 277:                 printf("        MIDI Out -> (Not Connected)\r\n");
  3461  000680  0EBA               	movlw	low STR_56
  3462  000682  0100               	movlb	0	; () banked
  3463  000684  6F99               	movwf	printf@fmt& (0+255),b
  3464  000686  0EFC               	movlw	high STR_56
  3465  000688  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3466  00068A  EC80  F00E         	call	_printf	;wreg free
  3467                           
  3468                           ;main_d11.c: 278:                 printf("        close hairless\r\n");
  3469  00068E  0E70               	movlw	low STR_57
  3470  000690  0100               	movlb	0	; () banked
  3471  000692  6F99               	movwf	printf@fmt& (0+255),b
  3472  000694  0EFE               	movlw	high STR_57
  3473  000696  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3474  000698  EC80  F00E         	call	_printf	;wreg free
  3475                           
  3476                           ;main_d11.c: 279:                 printf("    Launch PuTTY and reconnect to the VCOM por
      +                          t\r\n");
  3477  00069C  0E7C               	movlw	low STR_58
  3478  00069E  0100               	movlb	0	; () banked
  3479  0006A0  6F99               	movwf	printf@fmt& (0+255),b
  3480  0006A2  0EFB               	movlw	high STR_58
  3481  0006A4  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3482  0006A6  EC80  F00E         	call	_printf	;wreg free
  3483  0006AA                     l376:
  3484  0006AA  B480               	btfsc	128,2,c	;volatile
  3485  0006AC  EF5A  F003         	goto	u3571
  3486  0006B0  EF5C  F003         	goto	u3570
  3487  0006B4                     u3571:
  3488  0006B4  EF55  F003         	goto	l376
  3489  0006B8                     u3570:
  3490  0006B8                     
  3491                           ;main_d11.c: 285:                     putByteSCI(0xC0);
  3492  0006B8  0EC0               	movlw	192
  3493  0006BA  ECF4  F00E         	call	_putByteSCI
  3494  0006BE                     
  3495                           ;main_d11.c: 286:                     putByteSCI(instrument);
  3496  0006BE  0100               	movlb	0	; () banked
  3497  0006C0  51C4               	movf	main@instrument& (0+255),w,b
  3498  0006C2  ECF4  F00E         	call	_putByteSCI
  3499                           
  3500                           ;main_d11.c: 287:                 while(PORTAbits.RA3 != 0) {
  3501  0006C6  EFD2  F003         	goto	l3774
  3502  0006CA                     l3740:
  3503  0006CA  0E02               	movlw	2
  3504  0006CC  0100               	movlb	0	; () banked
  3505  0006CE  19CD               	xorwf	_keyState& (0+255),w,b
  3506  0006D0  A4D8               	btfss	status,2,c
  3507  0006D2  EF6D  F003         	goto	u3581
  3508  0006D6  EF6F  F003         	goto	u3580
  3509  0006DA                     u3581:
  3510  0006DA  EF65  F003         	goto	l3740
  3511  0006DE                     u3580:
  3512  0006DE                     
  3513                           ; BSR set to: 0
  3514                           ;main_d11.c: 294:                         for (i=0; i <64; i++){
  3515  0006DE  0E00               	movlw	0
  3516  0006E0  6FC7               	movwf	main@i& (0+255),b
  3517  0006E2                     l3748:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;main_d11.c: 295:                             if(sample[i] <= nominalHallPressed){
  3521  0006E2  0E00               	movlw	low _sample
  3522  0006E4  25C7               	addwf	main@i& (0+255),w,b
  3523  0006E6  6ED9               	movwf	fsr2l,c
  3524  0006E8  6ADA               	clrf	fsr2h,c
  3525  0006EA  0E01               	movlw	high _sample
  3526  0006EC  22DA               	addwfc	fsr2h,f,c
  3527  0006EE  50DE               	movf	postinc2,w,c
  3528  0006F0  5DF1               	subwf	_nominalHallPressed& (0+255),w,b
  3529  0006F2  A0D8               	btfss	status,0,c
  3530  0006F4  EF7E  F003         	goto	u3591
  3531  0006F8  EF80  F003         	goto	u3590
  3532  0006FC                     u3591:
  3533  0006FC  EF85  F003         	goto	l3754
  3534  000700                     u3590:
  3535  000700                     
  3536                           ; BSR set to: 0
  3537                           ;main_d11.c: 296:                                 velocity = 128 - i;
  3538  000700  51C7               	movf	main@i& (0+255),w,b
  3539  000702  0880               	sublw	128
  3540  000704  6FC6               	movwf	main@velocity& (0+255),b
  3541                           
  3542                           ;main_d11.c: 297:                                 break;
  3543  000706  EFA3  F003         	goto	l3762
  3544  00070A                     l3754:
  3545                           
  3546                           ; BSR set to: 0
  3547  00070A  0E3F               	movlw	63
  3548  00070C  19C7               	xorwf	main@i& (0+255),w,b
  3549  00070E  A4D8               	btfss	status,2,c
  3550  000710  EF8C  F003         	goto	u3601
  3551  000714  EF8E  F003         	goto	u3600
  3552  000718                     u3601:
  3553  000718  EF9A  F003         	goto	l3758
  3554  00071C                     u3600:
  3555  00071C                     
  3556                           ; BSR set to: 0
  3557                           ;main_d11.c: 300:                                 velocity = 128 - (64 + (sample[i] - no
      +                          minalHallPressed));
  3558  00071C  0E00               	movlw	low _sample
  3559  00071E  25C7               	addwf	main@i& (0+255),w,b
  3560  000720  6ED9               	movwf	fsr2l,c
  3561  000722  6ADA               	clrf	fsr2h,c
  3562  000724  0E01               	movlw	high _sample
  3563  000726  22DA               	addwfc	fsr2h,f,c
  3564  000728  50DF               	movf	indf2,w,c
  3565  00072A  6FA3               	movwf	??_main& (0+255),b
  3566  00072C  51A3               	movf	??_main& (0+255),w,b
  3567  00072E  5DF1               	subwf	_nominalHallPressed& (0+255),w,b
  3568  000730  0F40               	addlw	64
  3569  000732  6FC6               	movwf	main@velocity& (0+255),b
  3570  000734                     l3758:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;main_d11.c: 302:                         }
  3574  000734  2BC7               	incf	main@i& (0+255),f,b
  3575  000736                     
  3576                           ; BSR set to: 0
  3577  000736  0E3F               	movlw	63
  3578  000738  65C7               	cpfsgt	main@i& (0+255),b
  3579  00073A  EFA1  F003         	goto	u3611
  3580  00073E  EFA3  F003         	goto	u3610
  3581  000742                     u3611:
  3582  000742  EF71  F003         	goto	l3748
  3583  000746                     u3610:
  3584  000746                     l3762:
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;main_d11.c: 303:                         noteOn(0x90, song[songIndex],velocity);
  3588  000746  0EA5               	movlw	low main@song
  3589  000748  25CC               	addwf	_songIndex& (0+255),w,b
  3590  00074A  6ED9               	movwf	fsr2l,c
  3591  00074C  6ADA               	clrf	fsr2h,c
  3592  00074E  0E00               	movlw	high main@song
  3593  000750  22DA               	addwfc	fsr2h,f,c
  3594  000752  50DF               	movf	indf2,w,c
  3595  000754  6E12               	movwf	noteOn@pitch^0,c
  3596  000756  C0C6  F013         	movff	main@velocity,noteOn@velocity
  3597  00075A  0E90               	movlw	144
  3598  00075C  EC17  F00F         	call	_noteOn
  3599  000760                     l3764:
  3600  000760  0100               	movlb	0	; () banked
  3601  000762  51CD               	movf	_keyState& (0+255),w,b
  3602  000764  A4D8               	btfss	status,2,c
  3603  000766  EFB7  F003         	goto	u3621
  3604  00076A  EFB9  F003         	goto	u3620
  3605  00076E                     u3621:
  3606  00076E  EFB0  F003         	goto	l3764
  3607  000772                     u3620:
  3608  000772                     
  3609                           ; BSR set to: 0
  3610                           ;main_d11.c: 305:                         noteOn(0x80, song[songIndex], velocity);
  3611  000772  0EA5               	movlw	low main@song
  3612  000774  25CC               	addwf	_songIndex& (0+255),w,b
  3613  000776  6ED9               	movwf	fsr2l,c
  3614  000778  6ADA               	clrf	fsr2h,c
  3615  00077A  0E00               	movlw	high main@song
  3616  00077C  22DA               	addwfc	fsr2h,f,c
  3617  00077E  50DF               	movf	indf2,w,c
  3618  000780  6E12               	movwf	noteOn@pitch^0,c
  3619  000782  C0C6  F013         	movff	main@velocity,noteOn@velocity
  3620  000786  0E80               	movlw	128
  3621  000788  EC17  F00F         	call	_noteOn
  3622  00078C                     
  3623                           ;main_d11.c: 306:                         songIndex += 1;
  3624  00078C  0100               	movlb	0	; () banked
  3625  00078E  2BCC               	incf	_songIndex& (0+255),f,b
  3626  000790                     
  3627                           ; BSR set to: 0
  3628                           ;main_d11.c: 307:                         if (songIndex >= 30){
  3629  000790  0E1D               	movlw	29
  3630  000792  65CC               	cpfsgt	_songIndex& (0+255),b
  3631  000794  EFCE  F003         	goto	u3631
  3632  000798  EFD0  F003         	goto	u3630
  3633  00079C                     u3631:
  3634  00079C  EFD2  F003         	goto	l3774
  3635  0007A0                     u3630:
  3636  0007A0                     
  3637                           ; BSR set to: 0
  3638                           ;main_d11.c: 308:                             songIndex = 0;
  3639  0007A0  0E00               	movlw	0
  3640  0007A2  6FCC               	movwf	_songIndex& (0+255),b
  3641  0007A4                     l3774:
  3642                           
  3643                           ;main_d11.c: 287:                 while(PORTAbits.RA3 != 0) {
  3644  0007A4  B680               	btfsc	128,3,c	;volatile
  3645  0007A6  EFD7  F003         	goto	u3641
  3646  0007AA  EFD9  F003         	goto	u3640
  3647  0007AE                     u3641:
  3648  0007AE  EF65  F003         	goto	l3740
  3649  0007B2                     u3640:
  3650  0007B2  EF72  F000         	goto	l3580
  3651  0007B6                     l3776:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;main_d11.c: 331:     printf("Unknown key %c\r\n",cmd);
  3655  0007B6  0E78               	movlw	low STR_59
  3656  0007B8  6F99               	movwf	printf@fmt& (0+255),b
  3657  0007BA  0EFF               	movlw	high STR_59
  3658  0007BC  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  3659  0007BE  C0C5  F09B         	movff	main@cmd,?_printf+2
  3660  0007C2  6B9C               	clrf	(?_printf+3)& (0+255),b
  3661  0007C4  EC80  F00E         	call	_printf	;wreg free
  3662                           
  3663                           ;main_d11.c: 332:     break;
  3664  0007C8  EF72  F000         	goto	l3580
  3665  0007CC                     l3780:
  3666                           
  3667                           ; BSR set to: 0
  3668  0007CC  51C5               	movf	main@cmd& (0+255),w,b
  3669  0007CE  6FA3               	movwf	??_main& (0+255),b
  3670  0007D0  6BA4               	clrf	(??_main+1)& (0+255),b
  3671                           
  3672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3673                           ; Switch size 1, requested type "simple"
  3674                           ; Number of cases is 1, Range of values is 0 to 0
  3675                           ; switch strategies available:
  3676                           ; Name         Instructions Cycles
  3677                           ; simple_byte            4     3 (average)
  3678                           ;	Chosen strategy is simple_byte
  3679  0007D2  51A4               	movf	(??_main+1)& (0+255),w,b
  3680  0007D4  0A00               	xorlw	0	; case 0
  3681  0007D6  B4D8               	btfsc	status,2,c
  3682  0007D8  EFF0  F003         	goto	l3826
  3683  0007DC  EFDB  F003         	goto	l3776
  3684  0007E0                     l3826:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ; Switch size 1, requested type "simple"
  3688                           ; Number of cases is 12, Range of values is 63 to 122
  3689                           ; switch strategies available:
  3690                           ; Name         Instructions Cycles
  3691                           ; simple_byte           37    19 (average)
  3692                           ;	Chosen strategy is simple_byte
  3693  0007E0  51A3               	movf	??_main& (0+255),w,b
  3694  0007E2  0A3F               	xorlw	63	; case 63
  3695  0007E4  B4D8               	btfsc	status,2,c
  3696  0007E6  EF82  F000         	goto	l3584
  3697  0007EA  0A7C               	xorlw	124	; case 67
  3698  0007EC  B4D8               	btfsc	status,2,c
  3699  0007EE  EF6E  F001         	goto	l3626
  3700  0007F2  0A07               	xorlw	7	; case 68
  3701  0007F4  B4D8               	btfsc	status,2,c
  3702  0007F6  EF9F  F001         	goto	l3640
  3703  0007FA  0A09               	xorlw	9	; case 77
  3704  0007FC  B4D8               	btfsc	status,2,c
  3705  0007FE  EFB5  F002         	goto	l3734
  3706  000802  0A19               	xorlw	25	; case 84
  3707  000804  B4D8               	btfsc	status,2,c
  3708  000806  EF31  F002         	goto	l3692
  3709  00080A  0A0E               	xorlw	14	; case 90
  3710  00080C  B4D8               	btfsc	status,2,c
  3711  00080E  EF14  F001         	goto	l3588
  3712  000812  0A39               	xorlw	57	; case 99
  3713  000814  B4D8               	btfsc	status,2,c
  3714  000816  EF3D  F001         	goto	l3612
  3715  00081A  0A07               	xorlw	7	; case 100
  3716  00081C  B4D8               	btfsc	status,2,c
  3717  00081E  EF9F  F001         	goto	l3640
  3718  000822  0A0D               	xorlw	13	; case 105
  3719  000824  B4D8               	btfsc	status,2,c
  3720  000826  EF93  F002         	goto	l3722
  3721  00082A  0A06               	xorlw	6	; case 111
  3722  00082C  B4D8               	btfsc	status,2,c
  3723  00082E  EF0C  F001         	goto	l3586
  3724  000832  0A1B               	xorlw	27	; case 116
  3725  000834  B4D8               	btfsc	status,2,c
  3726  000836  EFB7  F001         	goto	l3648
  3727  00083A  0A0E               	xorlw	14	; case 122
  3728  00083C  B4D8               	btfsc	status,2,c
  3729  00083E  EF29  F001         	goto	l3600
  3730  000842  EFDB  F003         	goto	l3776
  3731  000846  EF27  F000         	goto	start
  3732  00084A                     __end_of_main:
  3733                           	opt callstack 0
  3734                           
  3735 ;; *************** function _printf *****************
  3736 ;; Defined at:
  3737 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  3740 ;;		 -> STR_59(17), STR_58(50), STR_57(25), STR_56(38), 
  3741 ;;		 -> STR_55(41), STR_54(42), STR_53(67), STR_52(68), 
  3742 ;;		 -> STR_51(52), STR_50(48), STR_49(42), STR_48(26), 
  3743 ;;		 -> STR_47(31), STR_46(35), STR_45(37), STR_44(15), 
  3744 ;;		 -> STR_43(27), STR_42(24), STR_41(23), STR_40(20), 
  3745 ;;		 -> STR_39(23), STR_38(26), STR_37(38), STR_36(29), 
  3746 ;;		 -> STR_35(10), STR_34(36), STR_33(48), STR_32(24), 
  3747 ;;		 -> STR_31(3), STR_30(5), STR_29(19), STR_28(18), 
  3748 ;;		 -> STR_27(36), STR_26(72), STR_25(38), STR_24(74), 
  3749 ;;		 -> STR_23(2), STR_22(2), STR_21(13), STR_20(52), 
  3750 ;;		 -> STR_19(27), STR_18(16), STR_17(31), STR_16(68), 
  3751 ;;		 -> STR_15(48), STR_14(33), STR_13(25), STR_12(22), 
  3752 ;;		 -> STR_11(7), STR_10(15), STR_9(52), STR_8(41), 
  3753 ;;		 -> STR_7(17), STR_6(23), STR_5(52), STR_4(5), 
  3754 ;;		 -> STR_3(22), STR_2(21), STR_1(15), 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  ap              2   65[BANK0 ] PTR void [1]
  3757 ;;		 -> ?_printf(2), 
  3758 ;;  ret             2    0        int 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2   57[BANK0 ] int 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3768 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;Total ram usage:       10 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:   12
  3775 ;; This function calls:
  3776 ;;		_vfprintf
  3777 ;; This function is called by:
  3778 ;;		_main
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text1
  3783  001D00                     __ptext1:
  3784                           	opt callstack 0
  3785  001D00                     _printf:
  3786                           	opt callstack 18
  3787  001D00  0E9B               	movlw	low (?_printf+2)
  3788  001D02  0100               	movlb	0	; () banked
  3789  001D04  6FA1               	movwf	printf@ap& (0+255),b
  3790  001D06  0E00               	movlw	high (?_printf+2)
  3791  001D08  6FA2               	movwf	(printf@ap+1)& (0+255),b
  3792  001D0A                     
  3793                           ; BSR set to: 0
  3794  001D0A  0E00               	movlw	0
  3795  001D0C  6F93               	movwf	vfprintf@fp& (0+255),b
  3796  001D0E  0E00               	movlw	0
  3797  001D10  6F94               	movwf	(vfprintf@fp+1)& (0+255),b
  3798  001D12  C099  F095         	movff	printf@fmt,vfprintf@fmt
  3799  001D16  C09A  F096         	movff	printf@fmt+1,vfprintf@fmt+1
  3800  001D1A  0EA1               	movlw	low printf@ap
  3801  001D1C  6F97               	movwf	vfprintf@ap& (0+255),b
  3802  001D1E  0E00               	movlw	high printf@ap
  3803  001D20  6F98               	movwf	(vfprintf@ap+1)& (0+255),b
  3804  001D22  EC15  F00D         	call	_vfprintf	;wreg free
  3805  001D26  0012               	return		;funcret
  3806  001D28                     __end_of_printf:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function _vfprintf *****************
  3810 ;; Defined at:
  3811 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  3814 ;;		 -> NULL(0), 
  3815 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  3816 ;;		 -> STR_59(17), STR_58(50), STR_57(25), STR_56(38), 
  3817 ;;		 -> STR_55(41), STR_54(42), STR_53(67), STR_52(68), 
  3818 ;;		 -> STR_51(52), STR_50(48), STR_49(42), STR_48(26), 
  3819 ;;		 -> STR_47(31), STR_46(35), STR_45(37), STR_44(15), 
  3820 ;;		 -> STR_43(27), STR_42(24), STR_41(23), STR_40(20), 
  3821 ;;		 -> STR_39(23), STR_38(26), STR_37(38), STR_36(29), 
  3822 ;;		 -> STR_35(10), STR_34(36), STR_33(48), STR_32(24), 
  3823 ;;		 -> STR_31(3), STR_30(5), STR_29(19), STR_28(18), 
  3824 ;;		 -> STR_27(36), STR_26(72), STR_25(38), STR_24(74), 
  3825 ;;		 -> STR_23(2), STR_22(2), STR_21(13), STR_20(52), 
  3826 ;;		 -> STR_19(27), STR_18(16), STR_17(31), STR_16(68), 
  3827 ;;		 -> STR_15(48), STR_14(33), STR_13(25), STR_12(22), 
  3828 ;;		 -> STR_11(7), STR_10(15), STR_9(52), STR_8(41), 
  3829 ;;		 -> STR_7(17), STR_6(23), STR_5(52), STR_4(5), 
  3830 ;;		 -> STR_3(22), STR_2(21), STR_1(15), 
  3831 ;;  ap              2   55[BANK0 ] PTR PTR void 
  3832 ;;		 -> printf@ap(2), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  cfmt            2   59[COMRAM] PTR unsigned char 
  3835 ;;		 -> STR_59(17), STR_58(50), STR_57(25), STR_56(38), 
  3836 ;;		 -> STR_55(41), STR_54(42), STR_53(67), STR_52(68), 
  3837 ;;		 -> STR_51(52), STR_50(48), STR_49(42), STR_48(26), 
  3838 ;;		 -> STR_47(31), STR_46(35), STR_45(37), STR_44(15), 
  3839 ;;		 -> STR_43(27), STR_42(24), STR_41(23), STR_40(20), 
  3840 ;;		 -> STR_39(23), STR_38(26), STR_37(38), STR_36(29), 
  3841 ;;		 -> STR_35(10), STR_34(36), STR_33(48), STR_32(24), 
  3842 ;;		 -> STR_31(3), STR_30(5), STR_29(19), STR_28(18), 
  3843 ;;		 -> STR_27(36), STR_26(72), STR_25(38), STR_24(74), 
  3844 ;;		 -> STR_23(2), STR_22(2), STR_21(13), STR_20(52), 
  3845 ;;		 -> STR_19(27), STR_18(16), STR_17(31), STR_16(68), 
  3846 ;;		 -> STR_15(48), STR_14(33), STR_13(25), STR_12(22), 
  3847 ;;		 -> STR_11(7), STR_10(15), STR_9(52), STR_8(41), 
  3848 ;;		 -> STR_7(17), STR_6(23), STR_5(52), STR_4(5), 
  3849 ;;		 -> STR_3(22), STR_2(21), STR_1(15), 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  2   51[BANK0 ] int 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3859 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;Total ram usage:        8 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:   11
  3866 ;; This function calls:
  3867 ;;		_vfpfcnvrt
  3868 ;; This function is called by:
  3869 ;;		_printf
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text2
  3874  001A2A                     __ptext2:
  3875                           	opt callstack 0
  3876  001A2A                     _vfprintf:
  3877                           	opt callstack 18
  3878  001A2A                     
  3879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3880  001A2A  C095  F03C         	movff	vfprintf@fmt,vfprintf@cfmt
  3881  001A2E  C096  F03D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3882  001A32                     
  3883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3884  001A32  0E00               	movlw	0
  3885  001A34  0100               	movlb	0	; () banked
  3886  001A36  6FC9               	movwf	(_nout+1)& (0+255),b
  3887  001A38  0E00               	movlw	0
  3888  001A3A  6FC8               	movwf	_nout& (0+255),b
  3889                           
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3891  001A3C  EF33  F00D         	goto	l3542
  3892  001A40                     l3540:
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3896  001A40  C093  F07A         	movff	vfprintf@fp,vfpfcnvrt@fp
  3897  001A44  C094  F07B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3898  001A48  0E3C               	movlw	low vfprintf@cfmt
  3899  001A4A  6F7C               	movwf	vfpfcnvrt@fmt& (0+255),b
  3900  001A4C  0E00               	movlw	high vfprintf@cfmt
  3901  001A4E  6F7D               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3902  001A50  C097  F07E         	movff	vfprintf@ap,vfpfcnvrt@ap
  3903  001A54  C098  F07F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3904  001A58  EC25  F004         	call	_vfpfcnvrt	;wreg free
  3905  001A5C  0100               	movlb	0	; () banked
  3906  001A5E  517A               	movf	?_vfpfcnvrt& (0+255),w,b
  3907  001A60  27C8               	addwf	_nout& (0+255),f,b
  3908  001A62  517B               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3909  001A64  23C9               	addwfc	(_nout+1)& (0+255),f,b
  3910  001A66                     l3542:
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3914  001A66  C03C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3915  001A6A  C03D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3916  001A6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3917  001A6E  6AF8               	clrf	tblptru,c
  3918  001A70                     	endif
  3919  001A70                     	if	0	;tblptru may be non-zero
  3920  001A70                     	endif
  3921  001A70  0008               	tblrd		*
  3922  001A72  50F5               	movf	tablat,w,c
  3923  001A74  0900               	iorlw	0
  3924  001A76  A4D8               	btfss	status,2,c
  3925  001A78  EF40  F00D         	goto	u3331
  3926  001A7C  EF42  F00D         	goto	u3330
  3927  001A80                     u3331:
  3928  001A80  EF20  F00D         	goto	l3540
  3929  001A84                     u3330:
  3930  001A84                     
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3933  001A84  C0C8  F093         	movff	_nout,?_vfprintf
  3934  001A88  C0C9  F094         	movff	_nout+1,?_vfprintf+1
  3935  001A8C                     
  3936                           ; BSR set to: 0
  3937  001A8C  0012               	return		;funcret
  3938  001A8E                     __end_of_vfprintf:
  3939                           	opt callstack 0
  3940                           
  3941 ;; *************** function _vfpfcnvrt *****************
  3942 ;; Defined at:
  3943 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  3946 ;;		 -> NULL(0), 
  3947 ;;  fmt             2   28[BANK0 ] PTR PTR unsigned char 
  3948 ;;		 -> vfprintf@cfmt(2), 
  3949 ;;  ap              2   30[BANK0 ] PTR PTR void 
  3950 ;;		 -> printf@ap(2), 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  llu             8   40[BANK0 ] unsigned long long 
  3953 ;;  ll              8   32[BANK0 ] long long 
  3954 ;;  f               4    0        long long 
  3955 ;;  vp              3    0        PTR void 
  3956 ;;  ct              3    0        unsigned char [3]
  3957 ;;  cp              3    0        PTR unsigned char 
  3958 ;;  i               2    0        int 
  3959 ;;  done            2    0        int 
  3960 ;;  c               1   48[BANK0 ] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  2   26[BANK0 ] int 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3970 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Totals:         4      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;Total ram usage:       29 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:   10
  3977 ;; This function calls:
  3978 ;;		_atoi
  3979 ;;		_ctoa
  3980 ;;		_dtoa
  3981 ;;		_fputc
  3982 ;;		_isdigit
  3983 ;;		_utoa
  3984 ;; This function is called by:
  3985 ;;		_vfprintf
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text3
  3990  00084A                     __ptext3:
  3991                           	opt callstack 0
  3992  00084A                     _vfpfcnvrt:
  3993                           	opt callstack 18
  3994  00084A                     
  3995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3996  00084A  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3997  00084E  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3998  000852  CFDE FFF6          	movff	postinc2,tblptrl
  3999  000856  CFDD FFF7          	movff	postdec2,tblptrh
  4000  00085A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4001  00085A  6AF8               	clrf	tblptru,c
  4002  00085C                     	endif
  4003  00085C                     	if	0	;tblptru may be non-zero
  4004  00085C                     	endif
  4005  00085C  0008               	tblrd		*
  4006  00085E  50F5               	movf	tablat,w,c
  4007  000860  0A25               	xorlw	37
  4008  000862  A4D8               	btfss	status,2,c
  4009  000864  EF36  F004         	goto	u3221
  4010  000868  EF38  F004         	goto	u3220
  4011  00086C                     u3221:
  4012  00086C  EFFA  F005         	goto	l3528
  4013  000870                     u3220:
  4014  000870                     
  4015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4016  000870  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4017  000874  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4018  000878  2ADE               	incf	postinc2,f,c
  4019  00087A  0E00               	movlw	0
  4020  00087C  22DD               	addwfc	postdec2,f,c
  4021  00087E                     
  4022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4023  00087E  0E00               	movlw	0
  4024  000880  6E3F               	movwf	(_width+1)^0,c
  4025  000882  0E00               	movlw	0
  4026  000884  6E3E               	movwf	_width^0,c
  4027  000886  C03E  F042         	movff	_width,_flags
  4028  00088A  C03F  F043         	movff	_width+1,_flags+1
  4029  00088E                     
  4030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4031  00088E  6840               	setf	_prec^0,c
  4032  000890  6841               	setf	(_prec+1)^0,c
  4033  000892                     
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4035  000892  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4036  000896  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4037  00089A  CFDE FFF6          	movff	postinc2,tblptrl
  4038  00089E  CFDD FFF7          	movff	postdec2,tblptrh
  4039  0008A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4040  0008A2  6AF8               	clrf	tblptru,c
  4041  0008A4                     	endif
  4042  0008A4                     	if	0	;tblptru may be non-zero
  4043  0008A4                     	endif
  4044  0008A4  0008               	tblrd		*
  4045  0008A6  50F5               	movf	tablat,w,c
  4046  0008A8  0A2A               	xorlw	42
  4047  0008AA  A4D8               	btfss	status,2,c
  4048  0008AC  EF5A  F004         	goto	u3231
  4049  0008B0  EF5C  F004         	goto	u3230
  4050  0008B4                     u3231:
  4051  0008B4  EF85  F004         	goto	l3476
  4052  0008B8                     u3230:
  4053  0008B8                     
  4054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4055  0008B8  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4056  0008BC  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4057  0008C0  2ADE               	incf	postinc2,f,c
  4058  0008C2  0E00               	movlw	0
  4059  0008C4  22DD               	addwfc	postdec2,f,c
  4060                           
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4062  0008C6  C07E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4063  0008CA  C07F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4064  0008CE  CFDF F038          	movff	indf2,??_vfpfcnvrt
  4065  0008D2  0E02               	movlw	2
  4066  0008D4  26DE               	addwf	postinc2,f,c
  4067  0008D6  CFDF F039          	movff	indf2,??_vfpfcnvrt+1
  4068  0008DA  0E00               	movlw	0
  4069  0008DC  22DD               	addwfc	postdec2,f,c
  4070  0008DE  C038  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4071  0008E2  C039  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4072  0008E6  CFDE F03E          	movff	postinc2,_width
  4073  0008EA  CFDD F03F          	movff	postdec2,_width+1
  4074  0008EE                     
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4076  0008EE  BE3F               	btfsc	(_width+1)^0,7,c
  4077  0008F0  EF7E  F004         	goto	u3240
  4078  0008F4  EF7C  F004         	goto	u3241
  4079  0008F8                     u3241:
  4080  0008F8  EFCA  F004         	goto	l3486
  4081  0008FC                     u3240:
  4082  0008FC                     
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4084  0008FC  8042               	bsf	_flags^0,0,c
  4085                           
  4086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4087  0008FE  6C3E               	negf	_width^0,c
  4088  000900  1E3F               	comf	(_width+1)^0,f,c
  4089  000902  B0D8               	btfsc	status,0,c
  4090  000904  2A3F               	incf	(_width+1)^0,f,c
  4091  000906  EFCA  F004         	goto	l3486
  4092  00090A                     l3476:
  4093                           
  4094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4095  00090A  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4096  00090E  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4097  000912  CFDE F018          	movff	postinc2,atoi@s
  4098  000916  CFDD F019          	movff	postdec2,atoi@s+1
  4099  00091A  EC8B  F008         	call	_atoi	;wreg free
  4100  00091E  C018  F03E         	movff	?_atoi,_width
  4101  000922  C019  F03F         	movff	?_atoi+1,_width+1
  4102                           
  4103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4104  000926  EF9C  F004         	goto	l3480
  4105  00092A                     l3478:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4109  00092A  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4110  00092E  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4111  000932  2ADE               	incf	postinc2,f,c
  4112  000934  0E00               	movlw	0
  4113  000936  22DD               	addwfc	postdec2,f,c
  4114  000938                     l3480:
  4115  000938  0ED0               	movlw	208
  4116  00093A  6E38               	movwf	??_vfpfcnvrt^0,c
  4117  00093C  0EFF               	movlw	255
  4118  00093E  6E39               	movwf	(??_vfpfcnvrt+1)^0,c
  4119  000940  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4120  000944  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4121  000948  CFDE FFF6          	movff	postinc2,tblptrl
  4122  00094C  CFDD FFF7          	movff	postdec2,tblptrh
  4123  000950                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4124  000950  6AF8               	clrf	tblptru,c
  4125  000952                     	endif
  4126  000952                     	if	0	;tblptru may be non-zero
  4127  000952                     	endif
  4128  000952  0008               	tblrd		*
  4129  000954  50F5               	movf	tablat,w,c
  4130  000956  6E3A               	movwf	(??_vfpfcnvrt+2)^0,c
  4131  000958  6A3B               	clrf	(??_vfpfcnvrt+3)^0,c
  4132  00095A  5038               	movf	??_vfpfcnvrt^0,w,c
  4133  00095C  263A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4134  00095E  5039               	movf	(??_vfpfcnvrt+1)^0,w,c
  4135  000960  223B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4136  000962  503B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4137  000964  E10A               	bnz	u3250
  4138  000966  0E0A               	movlw	10
  4139  000968  5C3A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4140  00096A  A0D8               	btfss	status,0,c
  4141  00096C  EFBA  F004         	goto	u3251
  4142  000970  EFBD  F004         	goto	u3250
  4143  000974                     u3251:
  4144  000974  0E01               	movlw	1
  4145  000976  EFBE  F004         	goto	u3260
  4146  00097A                     u3250:
  4147  00097A  0E00               	movlw	0
  4148  00097C                     u3260:
  4149  00097C  0100               	movlb	0	; () banked
  4150  00097E  6F91               	movwf	_vfpfcnvrt$1147& (0+255),b
  4151  000980  6B92               	clrf	(_vfpfcnvrt$1147+1)& (0+255),b
  4152  000982                     
  4153                           ; BSR set to: 0
  4154  000982  5191               	movf	_vfpfcnvrt$1147& (0+255),w,b
  4155  000984  1192               	iorwf	(_vfpfcnvrt$1147+1)& (0+255),w,b
  4156  000986  A4D8               	btfss	status,2,c
  4157  000988  EFC8  F004         	goto	u3271
  4158  00098C  EFCA  F004         	goto	u3270
  4159  000990                     u3271:
  4160  000990  EF95  F004         	goto	l3478
  4161  000994                     u3270:
  4162  000994                     l3486:
  4163                           
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4165  000994  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4166  000998  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4167  00099C  CFDE FFF6          	movff	postinc2,tblptrl
  4168  0009A0  CFDD FFF7          	movff	postdec2,tblptrh
  4169  0009A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4170  0009A4  6AF8               	clrf	tblptru,c
  4171  0009A6                     	endif
  4172  0009A6                     	if	0	;tblptru may be non-zero
  4173  0009A6                     	endif
  4174  0009A6  0008               	tblrd		*
  4175  0009A8  50F5               	movf	tablat,w,c
  4176  0009AA  0A63               	xorlw	99
  4177  0009AC  A4D8               	btfss	status,2,c
  4178  0009AE  EFDB  F004         	goto	u3281
  4179  0009B2  EFDD  F004         	goto	u3280
  4180  0009B6                     u3281:
  4181  0009B6  EF05  F005         	goto	l3494
  4182  0009BA                     u3280:
  4183  0009BA                     
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4185  0009BA  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4186  0009BE  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4187  0009C2  2ADE               	incf	postinc2,f,c
  4188  0009C4  0E00               	movlw	0
  4189  0009C6  22DD               	addwfc	postdec2,f,c
  4190                           
  4191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4192  0009C8  C07E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4193  0009CC  C07F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4194  0009D0  CFDF F038          	movff	indf2,??_vfpfcnvrt
  4195  0009D4  0E02               	movlw	2
  4196  0009D6  26DE               	addwf	postinc2,f,c
  4197  0009D8  CFDF F039          	movff	indf2,??_vfpfcnvrt+1
  4198  0009DC  0E00               	movlw	0
  4199  0009DE  22DD               	addwfc	postdec2,f,c
  4200  0009E0  C038  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4201  0009E4  C039  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4202  0009E8  50DF               	movf	indf2,w,c
  4203  0009EA  0100               	movlb	0	; () banked
  4204  0009EC  6F90               	movwf	vfpfcnvrt@c& (0+255),b
  4205  0009EE                     
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4208  0009EE  C07A  F02E         	movff	vfpfcnvrt@fp,ctoa@fp
  4209  0009F2  C07B  F02F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4210  0009F6  C090  F030         	movff	vfpfcnvrt@c,ctoa@c
  4211  0009FA  EC47  F00D         	call	_ctoa	;wreg free
  4212  0009FE  C02E  F07A         	movff	?_ctoa,?_vfpfcnvrt
  4213  000A02  C02F  F07B         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4214  000A06  EF16  F006         	goto	l518
  4215  000A0A                     l3494:
  4216                           
  4217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4218  000A0A  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4219  000A0E  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4220  000A12  CFDE FFF6          	movff	postinc2,tblptrl
  4221  000A16  CFDD FFF7          	movff	postdec2,tblptrh
  4222  000A1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4223  000A1A  6AF8               	clrf	tblptru,c
  4224  000A1C                     	endif
  4225  000A1C                     	if	0	;tblptru may be non-zero
  4226  000A1C                     	endif
  4227  000A1C  0008               	tblrd		*
  4228  000A1E  50F5               	movf	tablat,w,c
  4229  000A20  0A64               	xorlw	100
  4230  000A22  B4D8               	btfsc	status,2,c
  4231  000A24  EF16  F005         	goto	u3291
  4232  000A28  EF18  F005         	goto	u3290
  4233  000A2C                     u3291:
  4234  000A2C  EF2B  F005         	goto	l3498
  4235  000A30                     u3290:
  4236  000A30  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4237  000A34  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4238  000A38  CFDE FFF6          	movff	postinc2,tblptrl
  4239  000A3C  CFDD FFF7          	movff	postdec2,tblptrh
  4240  000A40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4241  000A40  6AF8               	clrf	tblptru,c
  4242  000A42                     	endif
  4243  000A42                     	if	0	;tblptru may be non-zero
  4244  000A42                     	endif
  4245  000A42  0008               	tblrd		*
  4246  000A44  50F5               	movf	tablat,w,c
  4247  000A46  0A69               	xorlw	105
  4248  000A48  A4D8               	btfss	status,2,c
  4249  000A4A  EF29  F005         	goto	u3301
  4250  000A4E  EF2B  F005         	goto	u3300
  4251  000A52                     u3301:
  4252  000A52  EF6C  F005         	goto	l3504
  4253  000A56                     u3300:
  4254  000A56                     l3498:
  4255                           
  4256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4257  000A56  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4258  000A5A  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4259  000A5E  2ADE               	incf	postinc2,f,c
  4260  000A60  0E00               	movlw	0
  4261  000A62  22DD               	addwfc	postdec2,f,c
  4262                           
  4263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4264  000A64  C07E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4265  000A68  C07F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4266  000A6C  CFDF F038          	movff	indf2,??_vfpfcnvrt
  4267  000A70  0E02               	movlw	2
  4268  000A72  26DE               	addwf	postinc2,f,c
  4269  000A74  CFDF F039          	movff	indf2,??_vfpfcnvrt+1
  4270  000A78  0E00               	movlw	0
  4271  000A7A  22DD               	addwfc	postdec2,f,c
  4272  000A7C  C038  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4273  000A80  C039  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4274  000A84  CFDE F080          	movff	postinc2,vfpfcnvrt@ll
  4275  000A88  CFDD F081          	movff	postdec2,vfpfcnvrt@ll+1
  4276  000A8C  0100               	movlb	0	; () banked
  4277  000A8E  0E00               	movlw	0
  4278  000A90  BF81               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4279  000A92  0EFF               	movlw	-1
  4280  000A94  6F82               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4281  000A96  6F83               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4282  000A98  6F84               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4283  000A9A  6F85               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4284  000A9C  6F86               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4285  000A9E  6F87               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4286  000AA0                     
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4289  000AA0  C07A  F02E         	movff	vfpfcnvrt@fp,dtoa@fp
  4290  000AA4  C07B  F02F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4291  000AA8  C080  F030         	movff	vfpfcnvrt@ll,dtoa@d
  4292  000AAC  C081  F031         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4293  000AB0  C082  F032         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4294  000AB4  C083  F033         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4295  000AB8  C084  F034         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4296  000ABC  C085  F035         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4297  000AC0  C086  F036         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4298  000AC4  C087  F037         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4299  000AC8  EC17  F006         	call	_dtoa	;wreg free
  4300  000ACC  C02E  F07A         	movff	?_dtoa,?_vfpfcnvrt
  4301  000AD0  C02F  F07B         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4302  000AD4  EF16  F006         	goto	l518
  4303  000AD8                     l3504:
  4304                           
  4305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4306  000AD8  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4307  000ADC  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4308  000AE0  CFDE FFF6          	movff	postinc2,tblptrl
  4309  000AE4  CFDD FFF7          	movff	postdec2,tblptrh
  4310  000AE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4311  000AE8  6AF8               	clrf	tblptru,c
  4312  000AEA                     	endif
  4313  000AEA                     	if	0	;tblptru may be non-zero
  4314  000AEA                     	endif
  4315  000AEA  0008               	tblrd		*
  4316  000AEC  50F5               	movf	tablat,w,c
  4317  000AEE  0A75               	xorlw	117
  4318  000AF0  A4D8               	btfss	status,2,c
  4319  000AF2  EF7D  F005         	goto	u3311
  4320  000AF6  EF7F  F005         	goto	u3310
  4321  000AFA                     u3311:
  4322  000AFA  EFC1  F005         	goto	l3512
  4323  000AFE                     u3310:
  4324  000AFE                     
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4326  000AFE  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4327  000B02  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4328  000B06  2ADE               	incf	postinc2,f,c
  4329  000B08  0E00               	movlw	0
  4330  000B0A  22DD               	addwfc	postdec2,f,c
  4331                           
  4332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4333  000B0C  C07E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4334  000B10  C07F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4335  000B14  CFDF F038          	movff	indf2,??_vfpfcnvrt
  4336  000B18  0E02               	movlw	2
  4337  000B1A  26DE               	addwf	postinc2,f,c
  4338  000B1C  CFDF F039          	movff	indf2,??_vfpfcnvrt+1
  4339  000B20  0E00               	movlw	0
  4340  000B22  22DD               	addwfc	postdec2,f,c
  4341  000B24  C038  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4342  000B28  C039  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4343  000B2C  CFDE F03A          	movff	postinc2,??_vfpfcnvrt+2
  4344  000B30  CFDD F03B          	movff	postdec2,??_vfpfcnvrt+3
  4345  000B34  C03A  F088         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4346  000B38  C03B  F089         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4347  000B3C  0100               	movlb	0	; () banked
  4348  000B3E  6B8A               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4349  000B40  6B8B               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4350  000B42  6B8C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4351  000B44  6B8D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4352  000B46  6B8E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4353  000B48  6B8F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4354  000B4A                     
  4355                           ; BSR set to: 0
  4356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4357  000B4A  C07A  F02E         	movff	vfpfcnvrt@fp,utoa@fp
  4358  000B4E  C07B  F02F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4359  000B52  C088  F030         	movff	vfpfcnvrt@llu,utoa@d
  4360  000B56  C089  F031         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4361  000B5A  C08A  F032         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4362  000B5E  C08B  F033         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4363  000B62  C08C  F034         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4364  000B66  C08D  F035         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4365  000B6A  C08E  F036         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4366  000B6E  C08F  F037         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4367  000B72  EC88  F007         	call	_utoa	;wreg free
  4368  000B76  C02E  F07A         	movff	?_utoa,?_vfpfcnvrt
  4369  000B7A  C02F  F07B         	movff	?_utoa+1,?_vfpfcnvrt+1
  4370  000B7E  EF16  F006         	goto	l518
  4371  000B82                     l3512:
  4372                           
  4373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4374  000B82  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4375  000B86  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4376  000B8A  CFDE FFF6          	movff	postinc2,tblptrl
  4377  000B8E  CFDD FFF7          	movff	postdec2,tblptrh
  4378  000B92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4379  000B92  6AF8               	clrf	tblptru,c
  4380  000B94                     	endif
  4381  000B94                     	if	0	;tblptru may be non-zero
  4382  000B94                     	endif
  4383  000B94  0008               	tblrd		*
  4384  000B96  50F5               	movf	tablat,w,c
  4385  000B98  0A25               	xorlw	37
  4386  000B9A  A4D8               	btfss	status,2,c
  4387  000B9C  EFD2  F005         	goto	u3321
  4388  000BA0  EFD4  F005         	goto	u3320
  4389  000BA4                     u3321:
  4390  000BA4  EFEC  F005         	goto	l3522
  4391  000BA8                     u3320:
  4392  000BA8                     
  4393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4394  000BA8  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4395  000BAC  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4396  000BB0  2ADE               	incf	postinc2,f,c
  4397  000BB2  0E00               	movlw	0
  4398  000BB4  22DD               	addwfc	postdec2,f,c
  4399  000BB6                     
  4400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4401  000BB6  0E00               	movlw	0
  4402  000BB8  6E14               	movwf	(fputc@c+1)^0,c
  4403  000BBA  0E25               	movlw	37
  4404  000BBC  6E13               	movwf	fputc@c^0,c
  4405  000BBE  C07A  F015         	movff	vfpfcnvrt@fp,fputc@fp
  4406  000BC2  C07B  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4407  000BC6  EC93  F00C         	call	_fputc	;wreg free
  4408  000BCA                     l3518:
  4409                           
  4410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4411  000BCA  0E00               	movlw	0
  4412  000BCC  0100               	movlb	0	; () banked
  4413  000BCE  6F7B               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4414  000BD0  0E01               	movlw	1
  4415  000BD2  6F7A               	movwf	?_vfpfcnvrt& (0+255),b
  4416  000BD4  EF16  F006         	goto	l518
  4417  000BD8                     l3522:
  4418                           
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4420  000BD8  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4421  000BDC  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4422  000BE0  2ADE               	incf	postinc2,f,c
  4423  000BE2  0E00               	movlw	0
  4424  000BE4  22DD               	addwfc	postdec2,f,c
  4425  000BE6                     
  4426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4427  000BE6  0E00               	movlw	0
  4428  000BE8  0100               	movlb	0	; () banked
  4429  000BEA  6F7B               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4430  000BEC  0E00               	movlw	0
  4431  000BEE  6F7A               	movwf	?_vfpfcnvrt& (0+255),b
  4432  000BF0  EF16  F006         	goto	l518
  4433  000BF4                     l3528:
  4434                           
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4436  000BF4  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4437  000BF8  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4438  000BFC  CFDE FFF6          	movff	postinc2,tblptrl
  4439  000C00  CFDD FFF7          	movff	postdec2,tblptrh
  4440  000C04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4441  000C04  6AF8               	clrf	tblptru,c
  4442  000C06                     	endif
  4443  000C06                     	if	0	;tblptru may be non-zero
  4444  000C06                     	endif
  4445  000C06  0008               	tblrd		*
  4446  000C08  50F5               	movf	tablat,w,c
  4447  000C0A  6E13               	movwf	fputc@c^0,c
  4448  000C0C  6A14               	clrf	(fputc@c+1)^0,c
  4449  000C0E  C07A  F015         	movff	vfpfcnvrt@fp,fputc@fp
  4450  000C12  C07B  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4451  000C16  EC93  F00C         	call	_fputc	;wreg free
  4452  000C1A                     
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4454  000C1A  C07C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4455  000C1E  C07D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4456  000C22  2ADE               	incf	postinc2,f,c
  4457  000C24  0E00               	movlw	0
  4458  000C26  22DD               	addwfc	postdec2,f,c
  4459  000C28  EFE5  F005         	goto	l3518
  4460  000C2C                     l518:
  4461  000C2C  0012               	return		;funcret
  4462  000C2E                     __end_of_vfpfcnvrt:
  4463                           	opt callstack 0
  4464                           
  4465 ;; *************** function _utoa *****************
  4466 ;; Defined at:
  4467 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  4470 ;;		 -> NULL(0), 
  4471 ;;  d               8   47[COMRAM] unsigned long long 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  n               8   12[BANK0 ] unsigned long long 
  4474 ;;  i               2   20[BANK0 ] int 
  4475 ;;  w               2   10[BANK0 ] int 
  4476 ;;  p               2    8[BANK0 ] int 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  2   45[COMRAM] int 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4486 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;Total ram usage:       32 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    9
  4493 ;; This function calls:
  4494 ;;		___lodiv
  4495 ;;		___lomod
  4496 ;;		_pad
  4497 ;; This function is called by:
  4498 ;;		_vfpfcnvrt
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text4
  4503  000F10                     __ptext4:
  4504                           	opt callstack 0
  4505  000F10                     _utoa:
  4506                           	opt callstack 18
  4507  000F10                     
  4508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4509  000F10  BE41               	btfsc	(_prec+1)^0,7,c
  4510  000F12  EF8D  F007         	goto	u3081
  4511  000F16  EF8F  F007         	goto	u3080
  4512  000F1A                     u3081:
  4513  000F1A  EF90  F007         	goto	l3386
  4514  000F1E                     u3080:
  4515  000F1E                     
  4516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  4517  000F1E  9242               	bcf	_flags^0,1,c
  4518  000F20                     l3386:
  4519                           
  4520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  4521  000F20  BE41               	btfsc	(_prec+1)^0,7,c
  4522  000F22  EF9D  F007         	goto	u3090
  4523  000F26  5041               	movf	(_prec+1)^0,w,c
  4524  000F28  E106               	bnz	u3091
  4525  000F2A  0440               	decf	_prec^0,w,c
  4526  000F2C  B0D8               	btfsc	status,0,c
  4527  000F2E  EF9B  F007         	goto	u3091
  4528  000F32  EF9D  F007         	goto	u3090
  4529  000F36                     u3091:
  4530  000F36  EFA4  F007         	goto	l493
  4531  000F3A                     u3090:
  4532  000F3A  0E00               	movlw	0
  4533  000F3C  0100               	movlb	0	; () banked
  4534  000F3E  6F69               	movwf	(utoa@p+1)& (0+255),b
  4535  000F40  0E01               	movlw	1
  4536  000F42  6F68               	movwf	utoa@p& (0+255),b
  4537  000F44  EFA8  F007         	goto	l495
  4538  000F48                     l493:
  4539  000F48  C040  F068         	movff	_prec,utoa@p
  4540  000F4C  C041  F069         	movff	_prec+1,utoa@p+1
  4541  000F50                     l495:
  4542                           
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  4544  000F50  C03E  F06A         	movff	_width,utoa@w
  4545  000F54  C03F  F06B         	movff	_width+1,utoa@w+1
  4546                           
  4547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  4548  000F58  C030  F06C         	movff	utoa@d,utoa@n
  4549  000F5C  C031  F06D         	movff	utoa@d+1,utoa@n+1
  4550  000F60  C032  F06E         	movff	utoa@d+2,utoa@n+2
  4551  000F64  C033  F06F         	movff	utoa@d+3,utoa@n+3
  4552  000F68  C034  F070         	movff	utoa@d+4,utoa@n+4
  4553  000F6C  C035  F071         	movff	utoa@d+5,utoa@n+5
  4554  000F70  C036  F072         	movff	utoa@d+6,utoa@n+6
  4555  000F74  C037  F073         	movff	utoa@d+7,utoa@n+7
  4556  000F78                     
  4557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  4558  000F78  0E00               	movlw	0
  4559  000F7A  0100               	movlb	0	; () banked
  4560  000F7C  6F75               	movwf	(utoa@i+1)& (0+255),b
  4561  000F7E  0E1F               	movlw	31
  4562  000F80  6F74               	movwf	utoa@i& (0+255),b
  4563  000F82                     
  4564                           ; BSR set to: 0
  4565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  4566  000F82  0E00               	movlw	0
  4567  000F84  6FED               	movwf	(_dbuf+31)& (0+255),b
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4570  000F86  EF3C  F008         	goto	l3404
  4571  000F8A                     l3394:
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  4575  000F8A  0774               	decf	utoa@i& (0+255),f,b
  4576  000F8C  A0D8               	btfss	status,0,c
  4577  000F8E  0775               	decf	(utoa@i+1)& (0+255),f,b
  4578  000F90                     
  4579                           ; BSR set to: 0
  4580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  4581  000F90  0ECE               	movlw	low _dbuf
  4582  000F92  2574               	addwf	utoa@i& (0+255),w,b
  4583  000F94  6ED9               	movwf	fsr2l,c
  4584  000F96  0E00               	movlw	high _dbuf
  4585  000F98  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  4586  000F9A  6EDA               	movwf	fsr2h,c
  4587  000F9C  C06C  F011         	movff	utoa@n,___lomod@dividend
  4588  000FA0  C06D  F012         	movff	utoa@n+1,___lomod@dividend+1
  4589  000FA4  C06E  F013         	movff	utoa@n+2,___lomod@dividend+2
  4590  000FA8  C06F  F014         	movff	utoa@n+3,___lomod@dividend+3
  4591  000FAC  C070  F015         	movff	utoa@n+4,___lomod@dividend+4
  4592  000FB0  C071  F016         	movff	utoa@n+5,___lomod@dividend+5
  4593  000FB4  C072  F017         	movff	utoa@n+6,___lomod@dividend+6
  4594  000FB8  C073  F018         	movff	utoa@n+7,___lomod@dividend+7
  4595  000FBC  0E0A               	movlw	10
  4596  000FBE  6E19               	movwf	___lomod@divisor^0,c
  4597  000FC0  0E00               	movlw	0
  4598  000FC2  6E1A               	movwf	(___lomod@divisor+1)^0,c
  4599  000FC4  0E00               	movlw	0
  4600  000FC6  6E1B               	movwf	(___lomod@divisor+2)^0,c
  4601  000FC8  0E00               	movlw	0
  4602  000FCA  6E1C               	movwf	(___lomod@divisor+3)^0,c
  4603  000FCC  0E00               	movlw	0
  4604  000FCE  6E1D               	movwf	(___lomod@divisor+4)^0,c
  4605  000FD0  0E00               	movlw	0
  4606  000FD2  6E1E               	movwf	(___lomod@divisor+5)^0,c
  4607  000FD4  0E00               	movlw	0
  4608  000FD6  6E1F               	movwf	(___lomod@divisor+6)^0,c
  4609  000FD8  0E00               	movlw	0
  4610  000FDA  6E20               	movwf	(___lomod@divisor+7)^0,c
  4611  000FDC  ECCA  F00B         	call	___lomod	;wreg free
  4612  000FE0  C011  F060         	movff	?___lomod,??_utoa
  4613  000FE4  C012  F061         	movff	?___lomod+1,??_utoa+1
  4614  000FE8  C013  F062         	movff	?___lomod+2,??_utoa+2
  4615  000FEC  C014  F063         	movff	?___lomod+3,??_utoa+3
  4616  000FF0  C015  F064         	movff	?___lomod+4,??_utoa+4
  4617  000FF4  C016  F065         	movff	?___lomod+5,??_utoa+5
  4618  000FF8  C017  F066         	movff	?___lomod+6,??_utoa+6
  4619  000FFC  C018  F067         	movff	?___lomod+7,??_utoa+7
  4620  001000  0100               	movlb	0	; () banked
  4621  001002  5160               	movf	??_utoa& (0+255),w,b
  4622  001004  0F30               	addlw	48
  4623  001006  6EDF               	movwf	indf2,c
  4624  001008                     
  4625                           ; BSR set to: 0
  4626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  4627  001008  0768               	decf	utoa@p& (0+255),f,b
  4628  00100A  A0D8               	btfss	status,0,c
  4629  00100C  0769               	decf	(utoa@p+1)& (0+255),f,b
  4630  00100E                     
  4631                           ; BSR set to: 0
  4632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  4633  00100E  076A               	decf	utoa@w& (0+255),f,b
  4634  001010  A0D8               	btfss	status,0,c
  4635  001012  076B               	decf	(utoa@w+1)& (0+255),f,b
  4636  001014                     
  4637                           ; BSR set to: 0
  4638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  4639  001014  C06C  F011         	movff	utoa@n,___lodiv@dividend
  4640  001018  C06D  F012         	movff	utoa@n+1,___lodiv@dividend+1
  4641  00101C  C06E  F013         	movff	utoa@n+2,___lodiv@dividend+2
  4642  001020  C06F  F014         	movff	utoa@n+3,___lodiv@dividend+3
  4643  001024  C070  F015         	movff	utoa@n+4,___lodiv@dividend+4
  4644  001028  C071  F016         	movff	utoa@n+5,___lodiv@dividend+5
  4645  00102C  C072  F017         	movff	utoa@n+6,___lodiv@dividend+6
  4646  001030  C073  F018         	movff	utoa@n+7,___lodiv@dividend+7
  4647  001034  0E0A               	movlw	10
  4648  001036  6E19               	movwf	___lodiv@divisor^0,c
  4649  001038  0E00               	movlw	0
  4650  00103A  6E1A               	movwf	(___lodiv@divisor+1)^0,c
  4651  00103C  0E00               	movlw	0
  4652  00103E  6E1B               	movwf	(___lodiv@divisor+2)^0,c
  4653  001040  0E00               	movlw	0
  4654  001042  6E1C               	movwf	(___lodiv@divisor+3)^0,c
  4655  001044  0E00               	movlw	0
  4656  001046  6E1D               	movwf	(___lodiv@divisor+4)^0,c
  4657  001048  0E00               	movlw	0
  4658  00104A  6E1E               	movwf	(___lodiv@divisor+5)^0,c
  4659  00104C  0E00               	movlw	0
  4660  00104E  6E1F               	movwf	(___lodiv@divisor+6)^0,c
  4661  001050  0E00               	movlw	0
  4662  001052  6E20               	movwf	(___lodiv@divisor+7)^0,c
  4663  001054  EC52  F00B         	call	___lodiv	;wreg free
  4664  001058  C011  F06C         	movff	?___lodiv,utoa@n
  4665  00105C  C012  F06D         	movff	?___lodiv+1,utoa@n+1
  4666  001060  C013  F06E         	movff	?___lodiv+2,utoa@n+2
  4667  001064  C014  F06F         	movff	?___lodiv+3,utoa@n+3
  4668  001068  C015  F070         	movff	?___lodiv+4,utoa@n+4
  4669  00106C  C016  F071         	movff	?___lodiv+5,utoa@n+5
  4670  001070  C017  F072         	movff	?___lodiv+6,utoa@n+6
  4671  001074  C018  F073         	movff	?___lodiv+7,utoa@n+7
  4672  001078                     l3404:
  4673                           
  4674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4675  001078  0100               	movlb	0	; () banked
  4676  00107A  5174               	movf	utoa@i& (0+255),w,b
  4677  00107C  1175               	iorwf	(utoa@i+1)& (0+255),w,b
  4678  00107E  B4D8               	btfsc	status,2,c
  4679  001080  EF44  F008         	goto	u3101
  4680  001084  EF46  F008         	goto	u3100
  4681  001088                     u3101:
  4682  001088  EF76  F008         	goto	l3414
  4683  00108C                     u3100:
  4684  00108C                     
  4685                           ; BSR set to: 0
  4686  00108C  516C               	movf	utoa@n& (0+255),w,b
  4687  00108E  116D               	iorwf	(utoa@n+1)& (0+255),w,b
  4688  001090  116E               	iorwf	(utoa@n+2)& (0+255),w,b
  4689  001092  116F               	iorwf	(utoa@n+3)& (0+255),w,b
  4690  001094  1170               	iorwf	(utoa@n+4)& (0+255),w,b
  4691  001096  1171               	iorwf	(utoa@n+5)& (0+255),w,b
  4692  001098  1172               	iorwf	(utoa@n+6)& (0+255),w,b
  4693  00109A  1173               	iorwf	(utoa@n+7)& (0+255),w,b
  4694  00109C  A4D8               	btfss	status,2,c
  4695  00109E  EF53  F008         	goto	u3111
  4696  0010A2  EF55  F008         	goto	u3110
  4697  0010A6                     u3111:
  4698  0010A6  EFC5  F007         	goto	l3394
  4699  0010AA                     u3110:
  4700  0010AA                     
  4701                           ; BSR set to: 0
  4702  0010AA  BF69               	btfsc	(utoa@p+1)& (0+255),7,b
  4703  0010AC  EF62  F008         	goto	u3120
  4704  0010B0  5169               	movf	(utoa@p+1)& (0+255),w,b
  4705  0010B2  E106               	bnz	u3121
  4706  0010B4  0568               	decf	utoa@p& (0+255),w,b
  4707  0010B6  B0D8               	btfsc	status,0,c
  4708  0010B8  EF60  F008         	goto	u3121
  4709  0010BC  EF62  F008         	goto	u3120
  4710  0010C0                     u3121:
  4711  0010C0  EFC5  F007         	goto	l3394
  4712  0010C4                     u3120:
  4713  0010C4                     
  4714                           ; BSR set to: 0
  4715  0010C4  BF6B               	btfsc	(utoa@w+1)& (0+255),7,b
  4716  0010C6  EF6D  F008         	goto	u3131
  4717  0010CA  516B               	movf	(utoa@w+1)& (0+255),w,b
  4718  0010CC  E108               	bnz	u3130
  4719  0010CE  056A               	decf	utoa@w& (0+255),w,b
  4720  0010D0  A0D8               	btfss	status,0,c
  4721  0010D2  EF6D  F008         	goto	u3131
  4722  0010D6  EF6F  F008         	goto	u3130
  4723  0010DA                     u3131:
  4724  0010DA  EF76  F008         	goto	l3414
  4725  0010DE                     u3130:
  4726  0010DE                     
  4727                           ; BSR set to: 0
  4728  0010DE  B242               	btfsc	_flags^0,1,c
  4729  0010E0  EF74  F008         	goto	u3141
  4730  0010E4  EF76  F008         	goto	u3140
  4731  0010E8                     u3141:
  4732  0010E8  EFC5  F007         	goto	l3394
  4733  0010EC                     u3140:
  4734  0010EC                     l3414:
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4738  0010EC  C02E  F023         	movff	utoa@fp,pad@fp
  4739  0010F0  C02F  F024         	movff	utoa@fp+1,pad@fp+1
  4740  0010F4  0ECE               	movlw	low _dbuf
  4741  0010F6  2574               	addwf	utoa@i& (0+255),w,b
  4742  0010F8  6E25               	movwf	pad@buf^0,c
  4743  0010FA  0E00               	movlw	high _dbuf
  4744  0010FC  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  4745  0010FE  6E26               	movwf	(pad@buf+1)^0,c
  4746  001100  C06A  F027         	movff	utoa@w,pad@p
  4747  001104  C06B  F028         	movff	utoa@w+1,pad@p+1
  4748  001108  EC32  F00C         	call	_pad	;wreg free
  4749  00110C  C023  F02E         	movff	?_pad,?_utoa
  4750  001110  C024  F02F         	movff	?_pad+1,?_utoa+1
  4751  001114  0012               	return		;funcret
  4752  001116                     __end_of_utoa:
  4753                           	opt callstack 0
  4754                           
  4755 ;; *************** function ___lomod *****************
  4756 ;; Defined at:
  4757 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  dividend        8   16[COMRAM] unsigned long long 
  4760 ;;  divisor         8   24[COMRAM] unsigned long long 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  counter         1   32[COMRAM] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  8   16[COMRAM] unsigned long long 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4772 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;Total ram usage:       17 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    4
  4779 ;; This function calls:
  4780 ;;		Nothing
  4781 ;; This function is called by:
  4782 ;;		_utoa
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text5
  4787  001794                     __ptext5:
  4788                           	opt callstack 0
  4789  001794                     ___lomod:
  4790                           	opt callstack 22
  4791  001794  5019               	movf	___lomod@divisor^0,w,c
  4792  001796  101A               	iorwf	(___lomod@divisor+1)^0,w,c
  4793  001798  101B               	iorwf	(___lomod@divisor+2)^0,w,c
  4794  00179A  101C               	iorwf	(___lomod@divisor+3)^0,w,c
  4795  00179C  101D               	iorwf	(___lomod@divisor+4)^0,w,c
  4796  00179E  101E               	iorwf	(___lomod@divisor+5)^0,w,c
  4797  0017A0  101F               	iorwf	(___lomod@divisor+6)^0,w,c
  4798  0017A2  1020               	iorwf	(___lomod@divisor+7)^0,w,c
  4799  0017A4  B4D8               	btfsc	status,2,c
  4800  0017A6  EFD7  F00B         	goto	u2871
  4801  0017AA  EFD9  F00B         	goto	u2870
  4802  0017AE                     u2871:
  4803  0017AE  EF21  F00C         	goto	l980
  4804  0017B2                     u2870:
  4805  0017B2  0E01               	movlw	1
  4806  0017B4  6E21               	movwf	___lomod@counter^0,c
  4807  0017B6  EFE7  F00B         	goto	l3284
  4808  0017BA                     l3282:
  4809  0017BA  90D8               	bcf	status,0,c
  4810  0017BC  3619               	rlcf	___lomod@divisor^0,f,c
  4811  0017BE  361A               	rlcf	(___lomod@divisor+1)^0,f,c
  4812  0017C0  361B               	rlcf	(___lomod@divisor+2)^0,f,c
  4813  0017C2  361C               	rlcf	(___lomod@divisor+3)^0,f,c
  4814  0017C4  361D               	rlcf	(___lomod@divisor+4)^0,f,c
  4815  0017C6  361E               	rlcf	(___lomod@divisor+5)^0,f,c
  4816  0017C8  361F               	rlcf	(___lomod@divisor+6)^0,f,c
  4817  0017CA  3620               	rlcf	(___lomod@divisor+7)^0,f,c
  4818  0017CC  2A21               	incf	___lomod@counter^0,f,c
  4819  0017CE                     l3284:
  4820  0017CE  AE20               	btfss	(___lomod@divisor+7)^0,7,c
  4821  0017D0  EFEC  F00B         	goto	u2881
  4822  0017D4  EFEE  F00B         	goto	u2880
  4823  0017D8                     u2881:
  4824  0017D8  EFDD  F00B         	goto	l3282
  4825  0017DC                     u2880:
  4826  0017DC                     l3286:
  4827  0017DC  5019               	movf	___lomod@divisor^0,w,c
  4828  0017DE  5C11               	subwf	___lomod@dividend^0,w,c
  4829  0017E0  501A               	movf	(___lomod@divisor+1)^0,w,c
  4830  0017E2  5812               	subwfb	(___lomod@dividend+1)^0,w,c
  4831  0017E4  501B               	movf	(___lomod@divisor+2)^0,w,c
  4832  0017E6  5813               	subwfb	(___lomod@dividend+2)^0,w,c
  4833  0017E8  501C               	movf	(___lomod@divisor+3)^0,w,c
  4834  0017EA  5814               	subwfb	(___lomod@dividend+3)^0,w,c
  4835  0017EC  501D               	movf	(___lomod@divisor+4)^0,w,c
  4836  0017EE  5815               	subwfb	(___lomod@dividend+4)^0,w,c
  4837  0017F0  501E               	movf	(___lomod@divisor+5)^0,w,c
  4838  0017F2  5816               	subwfb	(___lomod@dividend+5)^0,w,c
  4839  0017F4  501F               	movf	(___lomod@divisor+6)^0,w,c
  4840  0017F6  5817               	subwfb	(___lomod@dividend+6)^0,w,c
  4841  0017F8  5020               	movf	(___lomod@divisor+7)^0,w,c
  4842  0017FA  5818               	subwfb	(___lomod@dividend+7)^0,w,c
  4843  0017FC  A0D8               	btfss	status,0,c
  4844  0017FE  EF03  F00C         	goto	u2891
  4845  001802  EF05  F00C         	goto	u2890
  4846  001806                     u2891:
  4847  001806  EF15  F00C         	goto	l3290
  4848  00180A                     u2890:
  4849  00180A  5019               	movf	___lomod@divisor^0,w,c
  4850  00180C  5E11               	subwf	___lomod@dividend^0,f,c
  4851  00180E  501A               	movf	(___lomod@divisor+1)^0,w,c
  4852  001810  5A12               	subwfb	(___lomod@dividend+1)^0,f,c
  4853  001812  501B               	movf	(___lomod@divisor+2)^0,w,c
  4854  001814  5A13               	subwfb	(___lomod@dividend+2)^0,f,c
  4855  001816  501C               	movf	(___lomod@divisor+3)^0,w,c
  4856  001818  5A14               	subwfb	(___lomod@dividend+3)^0,f,c
  4857  00181A  501D               	movf	(___lomod@divisor+4)^0,w,c
  4858  00181C  5A15               	subwfb	(___lomod@dividend+4)^0,f,c
  4859  00181E  501E               	movf	(___lomod@divisor+5)^0,w,c
  4860  001820  5A16               	subwfb	(___lomod@dividend+5)^0,f,c
  4861  001822  501F               	movf	(___lomod@divisor+6)^0,w,c
  4862  001824  5A17               	subwfb	(___lomod@dividend+6)^0,f,c
  4863  001826  5020               	movf	(___lomod@divisor+7)^0,w,c
  4864  001828  5A18               	subwfb	(___lomod@dividend+7)^0,f,c
  4865  00182A                     l3290:
  4866  00182A  90D8               	bcf	status,0,c
  4867  00182C  3220               	rrcf	(___lomod@divisor+7)^0,f,c
  4868  00182E  321F               	rrcf	(___lomod@divisor+6)^0,f,c
  4869  001830  321E               	rrcf	(___lomod@divisor+5)^0,f,c
  4870  001832  321D               	rrcf	(___lomod@divisor+4)^0,f,c
  4871  001834  321C               	rrcf	(___lomod@divisor+3)^0,f,c
  4872  001836  321B               	rrcf	(___lomod@divisor+2)^0,f,c
  4873  001838  321A               	rrcf	(___lomod@divisor+1)^0,f,c
  4874  00183A  3219               	rrcf	___lomod@divisor^0,f,c
  4875  00183C  2E21               	decfsz	___lomod@counter^0,f,c
  4876  00183E  EFEE  F00B         	goto	l3286
  4877  001842                     l980:
  4878  001842  C011  F011         	movff	___lomod@dividend,?___lomod
  4879  001846  C012  F012         	movff	___lomod@dividend+1,?___lomod+1
  4880  00184A  C013  F013         	movff	___lomod@dividend+2,?___lomod+2
  4881  00184E  C014  F014         	movff	___lomod@dividend+3,?___lomod+3
  4882  001852  C015  F015         	movff	___lomod@dividend+4,?___lomod+4
  4883  001856  C016  F016         	movff	___lomod@dividend+5,?___lomod+5
  4884  00185A  C017  F017         	movff	___lomod@dividend+6,?___lomod+6
  4885  00185E  C018  F018         	movff	___lomod@dividend+7,?___lomod+7
  4886  001862  0012               	return		;funcret
  4887  001864                     __end_of___lomod:
  4888                           	opt callstack 0
  4889                           
  4890 ;; *************** function ___lodiv *****************
  4891 ;; Defined at:
  4892 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  dividend        8   16[COMRAM] unsigned long long 
  4895 ;;  divisor         8   24[COMRAM] unsigned long long 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  quotient        8   32[COMRAM] unsigned long long 
  4898 ;;  counter         1   40[COMRAM] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  8   16[COMRAM] unsigned long long 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4908 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;Total ram usage:       25 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:    4
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_utoa
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text6
  4923  0016A4                     __ptext6:
  4924                           	opt callstack 0
  4925  0016A4                     ___lodiv:
  4926                           	opt callstack 22
  4927  0016A4  EE20  F021         	lfsr	2,___lodiv@quotient
  4928  0016A8  0E07               	movlw	7
  4929  0016AA                     u2831:
  4930  0016AA  6ADE               	clrf	postinc2,c
  4931  0016AC  06E8               	decf	wreg,f,c
  4932  0016AE  E2FD               	bc	u2831
  4933  0016B0  5019               	movf	___lodiv@divisor^0,w,c
  4934  0016B2  101A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4935  0016B4  101B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4936  0016B6  101C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4937  0016B8  101D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4938  0016BA  101E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4939  0016BC  101F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4940  0016BE  1020               	iorwf	(___lodiv@divisor+7)^0,w,c
  4941  0016C0  B4D8               	btfsc	status,2,c
  4942  0016C2  EF65  F00B         	goto	u2841
  4943  0016C6  EF67  F00B         	goto	u2840
  4944  0016CA                     u2841:
  4945  0016CA  EFB9  F00B         	goto	l970
  4946  0016CE                     u2840:
  4947  0016CE  0E01               	movlw	1
  4948  0016D0  6E29               	movwf	___lodiv@counter^0,c
  4949  0016D2  EF75  F00B         	goto	l3264
  4950  0016D6                     l3262:
  4951  0016D6  90D8               	bcf	status,0,c
  4952  0016D8  3619               	rlcf	___lodiv@divisor^0,f,c
  4953  0016DA  361A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4954  0016DC  361B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4955  0016DE  361C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4956  0016E0  361D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4957  0016E2  361E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4958  0016E4  361F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4959  0016E6  3620               	rlcf	(___lodiv@divisor+7)^0,f,c
  4960  0016E8  2A29               	incf	___lodiv@counter^0,f,c
  4961  0016EA                     l3264:
  4962  0016EA  AE20               	btfss	(___lodiv@divisor+7)^0,7,c
  4963  0016EC  EF7A  F00B         	goto	u2851
  4964  0016F0  EF7C  F00B         	goto	u2850
  4965  0016F4                     u2851:
  4966  0016F4  EF6B  F00B         	goto	l3262
  4967  0016F8                     u2850:
  4968  0016F8                     l3266:
  4969  0016F8  90D8               	bcf	status,0,c
  4970  0016FA  3621               	rlcf	___lodiv@quotient^0,f,c
  4971  0016FC  3622               	rlcf	(___lodiv@quotient+1)^0,f,c
  4972  0016FE  3623               	rlcf	(___lodiv@quotient+2)^0,f,c
  4973  001700  3624               	rlcf	(___lodiv@quotient+3)^0,f,c
  4974  001702  3625               	rlcf	(___lodiv@quotient+4)^0,f,c
  4975  001704  3626               	rlcf	(___lodiv@quotient+5)^0,f,c
  4976  001706  3627               	rlcf	(___lodiv@quotient+6)^0,f,c
  4977  001708  3628               	rlcf	(___lodiv@quotient+7)^0,f,c
  4978  00170A  5019               	movf	___lodiv@divisor^0,w,c
  4979  00170C  5C11               	subwf	___lodiv@dividend^0,w,c
  4980  00170E  501A               	movf	(___lodiv@divisor+1)^0,w,c
  4981  001710  5812               	subwfb	(___lodiv@dividend+1)^0,w,c
  4982  001712  501B               	movf	(___lodiv@divisor+2)^0,w,c
  4983  001714  5813               	subwfb	(___lodiv@dividend+2)^0,w,c
  4984  001716  501C               	movf	(___lodiv@divisor+3)^0,w,c
  4985  001718  5814               	subwfb	(___lodiv@dividend+3)^0,w,c
  4986  00171A  501D               	movf	(___lodiv@divisor+4)^0,w,c
  4987  00171C  5815               	subwfb	(___lodiv@dividend+4)^0,w,c
  4988  00171E  501E               	movf	(___lodiv@divisor+5)^0,w,c
  4989  001720  5816               	subwfb	(___lodiv@dividend+5)^0,w,c
  4990  001722  501F               	movf	(___lodiv@divisor+6)^0,w,c
  4991  001724  5817               	subwfb	(___lodiv@dividend+6)^0,w,c
  4992  001726  5020               	movf	(___lodiv@divisor+7)^0,w,c
  4993  001728  5818               	subwfb	(___lodiv@dividend+7)^0,w,c
  4994  00172A  A0D8               	btfss	status,0,c
  4995  00172C  EF9A  F00B         	goto	u2861
  4996  001730  EF9C  F00B         	goto	u2860
  4997  001734                     u2861:
  4998  001734  EFAD  F00B         	goto	l3274
  4999  001738                     u2860:
  5000  001738  5019               	movf	___lodiv@divisor^0,w,c
  5001  00173A  5E11               	subwf	___lodiv@dividend^0,f,c
  5002  00173C  501A               	movf	(___lodiv@divisor+1)^0,w,c
  5003  00173E  5A12               	subwfb	(___lodiv@dividend+1)^0,f,c
  5004  001740  501B               	movf	(___lodiv@divisor+2)^0,w,c
  5005  001742  5A13               	subwfb	(___lodiv@dividend+2)^0,f,c
  5006  001744  501C               	movf	(___lodiv@divisor+3)^0,w,c
  5007  001746  5A14               	subwfb	(___lodiv@dividend+3)^0,f,c
  5008  001748  501D               	movf	(___lodiv@divisor+4)^0,w,c
  5009  00174A  5A15               	subwfb	(___lodiv@dividend+4)^0,f,c
  5010  00174C  501E               	movf	(___lodiv@divisor+5)^0,w,c
  5011  00174E  5A16               	subwfb	(___lodiv@dividend+5)^0,f,c
  5012  001750  501F               	movf	(___lodiv@divisor+6)^0,w,c
  5013  001752  5A17               	subwfb	(___lodiv@dividend+6)^0,f,c
  5014  001754  5020               	movf	(___lodiv@divisor+7)^0,w,c
  5015  001756  5A18               	subwfb	(___lodiv@dividend+7)^0,f,c
  5016  001758  8021               	bsf	___lodiv@quotient^0,0,c
  5017  00175A                     l3274:
  5018  00175A  90D8               	bcf	status,0,c
  5019  00175C  3220               	rrcf	(___lodiv@divisor+7)^0,f,c
  5020  00175E  321F               	rrcf	(___lodiv@divisor+6)^0,f,c
  5021  001760  321E               	rrcf	(___lodiv@divisor+5)^0,f,c
  5022  001762  321D               	rrcf	(___lodiv@divisor+4)^0,f,c
  5023  001764  321C               	rrcf	(___lodiv@divisor+3)^0,f,c
  5024  001766  321B               	rrcf	(___lodiv@divisor+2)^0,f,c
  5025  001768  321A               	rrcf	(___lodiv@divisor+1)^0,f,c
  5026  00176A  3219               	rrcf	___lodiv@divisor^0,f,c
  5027  00176C  2E29               	decfsz	___lodiv@counter^0,f,c
  5028  00176E  EF7C  F00B         	goto	l3266
  5029  001772                     l970:
  5030  001772  C021  F011         	movff	___lodiv@quotient,?___lodiv
  5031  001776  C022  F012         	movff	___lodiv@quotient+1,?___lodiv+1
  5032  00177A  C023  F013         	movff	___lodiv@quotient+2,?___lodiv+2
  5033  00177E  C024  F014         	movff	___lodiv@quotient+3,?___lodiv+3
  5034  001782  C025  F015         	movff	___lodiv@quotient+4,?___lodiv+4
  5035  001786  C026  F016         	movff	___lodiv@quotient+5,?___lodiv+5
  5036  00178A  C027  F017         	movff	___lodiv@quotient+6,?___lodiv+6
  5037  00178E  C028  F018         	movff	___lodiv@quotient+7,?___lodiv+7
  5038  001792  0012               	return		;funcret
  5039  001794                     __end_of___lodiv:
  5040                           	opt callstack 0
  5041                           
  5042 ;; *************** function _dtoa *****************
  5043 ;; Defined at:
  5044 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  5047 ;;		 -> NULL(0), 
  5048 ;;  d               8   47[COMRAM] long long 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  n               8   16[BANK0 ] long long 
  5051 ;;  i               2   24[BANK0 ] int 
  5052 ;;  s               2   14[BANK0 ] int 
  5053 ;;  w               2   12[BANK0 ] int 
  5054 ;;  p               2   10[BANK0 ] int 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  2   45[COMRAM] int 
  5057 ;; Registers used:
  5058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5064 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;Total ram usage:       36 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    9
  5071 ;; This function calls:
  5072 ;;		___aodiv
  5073 ;;		___aomod
  5074 ;;		_abs
  5075 ;;		_pad
  5076 ;; This function is called by:
  5077 ;;		_vfpfcnvrt
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text7
  5082  000C2E                     __ptext7:
  5083                           	opt callstack 0
  5084  000C2E                     _dtoa:
  5085                           	opt callstack 18
  5086  000C2E                     
  5087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5088  000C2E  C030  F070         	movff	dtoa@d,dtoa@n
  5089  000C32  C031  F071         	movff	dtoa@d+1,dtoa@n+1
  5090  000C36  C032  F072         	movff	dtoa@d+2,dtoa@n+2
  5091  000C3A  C033  F073         	movff	dtoa@d+3,dtoa@n+3
  5092  000C3E  C034  F074         	movff	dtoa@d+4,dtoa@n+4
  5093  000C42  C035  F075         	movff	dtoa@d+5,dtoa@n+5
  5094  000C46  C036  F076         	movff	dtoa@d+6,dtoa@n+6
  5095  000C4A  C037  F077         	movff	dtoa@d+7,dtoa@n+7
  5096  000C4E                     
  5097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5098  000C4E  0100               	movlb	0	; () banked
  5099  000C50  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
  5100  000C52  EF2D  F006         	goto	u2931
  5101  000C56  EF30  F006         	goto	u2930
  5102  000C5A                     u2931:
  5103  000C5A  0E01               	movlw	1
  5104  000C5C  EF31  F006         	goto	u2940
  5105  000C60                     u2930:
  5106  000C60  0E00               	movlw	0
  5107  000C62                     u2940:
  5108  000C62  6F6E               	movwf	dtoa@s& (0+255),b
  5109  000C64  6B6F               	clrf	(dtoa@s+1)& (0+255),b
  5110                           
  5111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5112  000C66  516E               	movf	dtoa@s& (0+255),w,b
  5113  000C68  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  5114  000C6A  B4D8               	btfsc	status,2,c
  5115  000C6C  EF3A  F006         	goto	u2951
  5116  000C70  EF3C  F006         	goto	u2950
  5117  000C74                     u2951:
  5118  000C74  EF4C  F006         	goto	l3326
  5119  000C78                     u2950:
  5120  000C78                     
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5123  000C78  1F77               	comf	(dtoa@n+7)& (0+255),f,b
  5124  000C7A  1F76               	comf	(dtoa@n+6)& (0+255),f,b
  5125  000C7C  1F75               	comf	(dtoa@n+5)& (0+255),f,b
  5126  000C7E  1F74               	comf	(dtoa@n+4)& (0+255),f,b
  5127  000C80  1F73               	comf	(dtoa@n+3)& (0+255),f,b
  5128  000C82  1F72               	comf	(dtoa@n+2)& (0+255),f,b
  5129  000C84  1F71               	comf	(dtoa@n+1)& (0+255),f,b
  5130  000C86  6D70               	negf	dtoa@n& (0+255),b
  5131  000C88  0E00               	movlw	0
  5132  000C8A  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
  5133  000C8C  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
  5134  000C8E  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
  5135  000C90  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
  5136  000C92  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
  5137  000C94  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
  5138  000C96  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
  5139  000C98                     l3326:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5143  000C98  BE41               	btfsc	(_prec+1)^0,7,c
  5144  000C9A  EF51  F006         	goto	u2961
  5145  000C9E  EF53  F006         	goto	u2960
  5146  000CA2                     u2961:
  5147  000CA2  EF54  F006         	goto	l3330
  5148  000CA6                     u2960:
  5149  000CA6                     
  5150                           ; BSR set to: 0
  5151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5152  000CA6  9242               	bcf	_flags^0,1,c
  5153  000CA8                     l3330:
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5157  000CA8  BE41               	btfsc	(_prec+1)^0,7,c
  5158  000CAA  EF61  F006         	goto	u2970
  5159  000CAE  5041               	movf	(_prec+1)^0,w,c
  5160  000CB0  E106               	bnz	u2971
  5161  000CB2  0440               	decf	_prec^0,w,c
  5162  000CB4  B0D8               	btfsc	status,0,c
  5163  000CB6  EF5F  F006         	goto	u2971
  5164  000CBA  EF61  F006         	goto	u2970
  5165  000CBE                     u2971:
  5166  000CBE  EF67  F006         	goto	l468
  5167  000CC2                     u2970:
  5168  000CC2                     
  5169                           ; BSR set to: 0
  5170  000CC2  0E00               	movlw	0
  5171  000CC4  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  5172  000CC6  0E01               	movlw	1
  5173  000CC8  6F6A               	movwf	dtoa@p& (0+255),b
  5174  000CCA  EF6B  F006         	goto	l470
  5175  000CCE                     l468:
  5176                           
  5177                           ; BSR set to: 0
  5178  000CCE  C040  F06A         	movff	_prec,dtoa@p
  5179  000CD2  C041  F06B         	movff	_prec+1,dtoa@p+1
  5180  000CD6                     l470:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5184  000CD6  C03E  F06C         	movff	_width,dtoa@w
  5185  000CDA  C03F  F06D         	movff	_width+1,dtoa@w+1
  5186  000CDE                     
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5189  000CDE  516E               	movf	dtoa@s& (0+255),w,b
  5190  000CE0  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  5191  000CE2  A4D8               	btfss	status,2,c
  5192  000CE4  EF76  F006         	goto	u2981
  5193  000CE8  EF78  F006         	goto	u2980
  5194  000CEC                     u2981:
  5195  000CEC  EF7F  F006         	goto	l3338
  5196  000CF0                     u2980:
  5197  000CF0                     
  5198                           ; BSR set to: 0
  5199  000CF0  A442               	btfss	_flags^0,2,c
  5200  000CF2  EF7D  F006         	goto	u2991
  5201  000CF6  EF7F  F006         	goto	u2990
  5202  000CFA                     u2991:
  5203  000CFA  EF82  F006         	goto	l3340
  5204  000CFE                     u2990:
  5205  000CFE                     l3338:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5209  000CFE  076C               	decf	dtoa@w& (0+255),f,b
  5210  000D00  A0D8               	btfss	status,0,c
  5211  000D02  076D               	decf	(dtoa@w+1)& (0+255),f,b
  5212  000D04                     l3340:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5216  000D04  0E00               	movlw	0
  5217  000D06  6F79               	movwf	(dtoa@i+1)& (0+255),b
  5218  000D08  0E1F               	movlw	31
  5219  000D0A  6F78               	movwf	dtoa@i& (0+255),b
  5220  000D0C                     
  5221                           ; BSR set to: 0
  5222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5223  000D0C  0E00               	movlw	0
  5224  000D0E  6FED               	movwf	(_dbuf+31)& (0+255),b
  5225                           
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5227  000D10  EF07  F007         	goto	l3354
  5228  000D14                     l3344:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5232  000D14  0778               	decf	dtoa@i& (0+255),f,b
  5233  000D16  A0D8               	btfss	status,0,c
  5234  000D18  0779               	decf	(dtoa@i+1)& (0+255),f,b
  5235  000D1A                     
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5238  000D1A  0ECE               	movlw	low _dbuf
  5239  000D1C  2578               	addwf	dtoa@i& (0+255),w,b
  5240  000D1E  6ED9               	movwf	fsr2l,c
  5241  000D20  0E00               	movlw	high _dbuf
  5242  000D22  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  5243  000D24  6EDA               	movwf	fsr2h,c
  5244  000D26  C070  F011         	movff	dtoa@n,___aomod@dividend
  5245  000D2A  C071  F012         	movff	dtoa@n+1,___aomod@dividend+1
  5246  000D2E  C072  F013         	movff	dtoa@n+2,___aomod@dividend+2
  5247  000D32  C073  F014         	movff	dtoa@n+3,___aomod@dividend+3
  5248  000D36  C074  F015         	movff	dtoa@n+4,___aomod@dividend+4
  5249  000D3A  C075  F016         	movff	dtoa@n+5,___aomod@dividend+5
  5250  000D3E  C076  F017         	movff	dtoa@n+6,___aomod@dividend+6
  5251  000D42  C077  F018         	movff	dtoa@n+7,___aomod@dividend+7
  5252  000D46  0E0A               	movlw	10
  5253  000D48  6E19               	movwf	___aomod@divisor^0,c
  5254  000D4A  0E00               	movlw	0
  5255  000D4C  6E1A               	movwf	(___aomod@divisor+1)^0,c
  5256  000D4E  0E00               	movlw	0
  5257  000D50  6E1B               	movwf	(___aomod@divisor+2)^0,c
  5258  000D52  0E00               	movlw	0
  5259  000D54  6E1C               	movwf	(___aomod@divisor+3)^0,c
  5260  000D56  0E00               	movlw	0
  5261  000D58  6E1D               	movwf	(___aomod@divisor+4)^0,c
  5262  000D5A  0E00               	movlw	0
  5263  000D5C  6E1E               	movwf	(___aomod@divisor+5)^0,c
  5264  000D5E  0E00               	movlw	0
  5265  000D60  6E1F               	movwf	(___aomod@divisor+6)^0,c
  5266  000D62  0E00               	movlw	0
  5267  000D64  6E20               	movwf	(___aomod@divisor+7)^0,c
  5268  000D66  EC1C  F00A         	call	___aomod	;wreg free
  5269  000D6A  C011  F060         	movff	?___aomod,??_dtoa
  5270  000D6E  C012  F061         	movff	?___aomod+1,??_dtoa+1
  5271  000D72  C013  F062         	movff	?___aomod+2,??_dtoa+2
  5272  000D76  C014  F063         	movff	?___aomod+3,??_dtoa+3
  5273  000D7A  C015  F064         	movff	?___aomod+4,??_dtoa+4
  5274  000D7E  C016  F065         	movff	?___aomod+5,??_dtoa+5
  5275  000D82  C017  F066         	movff	?___aomod+6,??_dtoa+6
  5276  000D86  C018  F067         	movff	?___aomod+7,??_dtoa+7
  5277  000D8A  C060  F023         	movff	??_dtoa,abs@a
  5278  000D8E  C062  F024         	movff	??_dtoa+2,abs@a+1
  5279  000D92  ECBF  F00D         	call	_abs	;wreg free
  5280  000D96  5023               	movf	?_abs^0,w,c
  5281  000D98  0F30               	addlw	48
  5282  000D9A  6EDF               	movwf	indf2,c
  5283  000D9C                     
  5284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5285  000D9C  0100               	movlb	0	; () banked
  5286  000D9E  076A               	decf	dtoa@p& (0+255),f,b
  5287  000DA0  A0D8               	btfss	status,0,c
  5288  000DA2  076B               	decf	(dtoa@p+1)& (0+255),f,b
  5289  000DA4                     
  5290                           ; BSR set to: 0
  5291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5292  000DA4  076C               	decf	dtoa@w& (0+255),f,b
  5293  000DA6  A0D8               	btfss	status,0,c
  5294  000DA8  076D               	decf	(dtoa@w+1)& (0+255),f,b
  5295  000DAA                     
  5296                           ; BSR set to: 0
  5297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5298  000DAA  C070  F011         	movff	dtoa@n,___aodiv@dividend
  5299  000DAE  C071  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  5300  000DB2  C072  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  5301  000DB6  C073  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  5302  000DBA  C074  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  5303  000DBE  C075  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  5304  000DC2  C076  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  5305  000DC6  C077  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  5306  000DCA  0E0A               	movlw	10
  5307  000DCC  6E19               	movwf	___aodiv@divisor^0,c
  5308  000DCE  0E00               	movlw	0
  5309  000DD0  6E1A               	movwf	(___aodiv@divisor+1)^0,c
  5310  000DD2  0E00               	movlw	0
  5311  000DD4  6E1B               	movwf	(___aodiv@divisor+2)^0,c
  5312  000DD6  0E00               	movlw	0
  5313  000DD8  6E1C               	movwf	(___aodiv@divisor+3)^0,c
  5314  000DDA  0E00               	movlw	0
  5315  000DDC  6E1D               	movwf	(___aodiv@divisor+4)^0,c
  5316  000DDE  0E00               	movlw	0
  5317  000DE0  6E1E               	movwf	(___aodiv@divisor+5)^0,c
  5318  000DE2  0E00               	movlw	0
  5319  000DE4  6E1F               	movwf	(___aodiv@divisor+6)^0,c
  5320  000DE6  0E00               	movlw	0
  5321  000DE8  6E20               	movwf	(___aodiv@divisor+7)^0,c
  5322  000DEA  EC58  F009         	call	___aodiv	;wreg free
  5323  000DEE  C011  F070         	movff	?___aodiv,dtoa@n
  5324  000DF2  C012  F071         	movff	?___aodiv+1,dtoa@n+1
  5325  000DF6  C013  F072         	movff	?___aodiv+2,dtoa@n+2
  5326  000DFA  C014  F073         	movff	?___aodiv+3,dtoa@n+3
  5327  000DFE  C015  F074         	movff	?___aodiv+4,dtoa@n+4
  5328  000E02  C016  F075         	movff	?___aodiv+5,dtoa@n+5
  5329  000E06  C017  F076         	movff	?___aodiv+6,dtoa@n+6
  5330  000E0A  C018  F077         	movff	?___aodiv+7,dtoa@n+7
  5331  000E0E                     l3354:
  5332                           
  5333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5334  000E0E  0100               	movlb	0	; () banked
  5335  000E10  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
  5336  000E12  EF13  F007         	goto	u3001
  5337  000E16  5179               	movf	(dtoa@i+1)& (0+255),w,b
  5338  000E18  E108               	bnz	u3000
  5339  000E1A  0578               	decf	dtoa@i& (0+255),w,b
  5340  000E1C  A0D8               	btfss	status,0,c
  5341  000E1E  EF13  F007         	goto	u3001
  5342  000E22  EF15  F007         	goto	u3000
  5343  000E26                     u3001:
  5344  000E26  EF45  F007         	goto	l3364
  5345  000E2A                     u3000:
  5346  000E2A                     
  5347                           ; BSR set to: 0
  5348  000E2A  5170               	movf	dtoa@n& (0+255),w,b
  5349  000E2C  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
  5350  000E2E  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
  5351  000E30  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
  5352  000E32  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
  5353  000E34  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
  5354  000E36  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
  5355  000E38  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
  5356  000E3A  A4D8               	btfss	status,2,c
  5357  000E3C  EF22  F007         	goto	u3011
  5358  000E40  EF24  F007         	goto	u3010
  5359  000E44                     u3011:
  5360  000E44  EF8A  F006         	goto	l3344
  5361  000E48                     u3010:
  5362  000E48                     
  5363                           ; BSR set to: 0
  5364  000E48  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  5365  000E4A  EF31  F007         	goto	u3020
  5366  000E4E  516B               	movf	(dtoa@p+1)& (0+255),w,b
  5367  000E50  E106               	bnz	u3021
  5368  000E52  056A               	decf	dtoa@p& (0+255),w,b
  5369  000E54  B0D8               	btfsc	status,0,c
  5370  000E56  EF2F  F007         	goto	u3021
  5371  000E5A  EF31  F007         	goto	u3020
  5372  000E5E                     u3021:
  5373  000E5E  EF8A  F006         	goto	l3344
  5374  000E62                     u3020:
  5375  000E62                     
  5376                           ; BSR set to: 0
  5377  000E62  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
  5378  000E64  EF3C  F007         	goto	u3031
  5379  000E68  516D               	movf	(dtoa@w+1)& (0+255),w,b
  5380  000E6A  E108               	bnz	u3030
  5381  000E6C  056C               	decf	dtoa@w& (0+255),w,b
  5382  000E6E  A0D8               	btfss	status,0,c
  5383  000E70  EF3C  F007         	goto	u3031
  5384  000E74  EF3E  F007         	goto	u3030
  5385  000E78                     u3031:
  5386  000E78  EF45  F007         	goto	l3364
  5387  000E7C                     u3030:
  5388  000E7C                     
  5389                           ; BSR set to: 0
  5390  000E7C  B242               	btfsc	_flags^0,1,c
  5391  000E7E  EF43  F007         	goto	u3041
  5392  000E82  EF45  F007         	goto	u3040
  5393  000E86                     u3041:
  5394  000E86  EF8A  F006         	goto	l3344
  5395  000E8A                     u3040:
  5396  000E8A                     l3364:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5400  000E8A  516E               	movf	dtoa@s& (0+255),w,b
  5401  000E8C  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  5402  000E8E  A4D8               	btfss	status,2,c
  5403  000E90  EF4C  F007         	goto	u3051
  5404  000E94  EF4E  F007         	goto	u3050
  5405  000E98                     u3051:
  5406  000E98  EF55  F007         	goto	l3368
  5407  000E9C                     u3050:
  5408  000E9C                     
  5409                           ; BSR set to: 0
  5410  000E9C  A442               	btfss	_flags^0,2,c
  5411  000E9E  EF53  F007         	goto	u3061
  5412  000EA2  EF55  F007         	goto	u3060
  5413  000EA6                     u3061:
  5414  000EA6  EF73  F007         	goto	l3378
  5415  000EAA                     u3060:
  5416  000EAA                     l3368:
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5420  000EAA  0778               	decf	dtoa@i& (0+255),f,b
  5421  000EAC  A0D8               	btfss	status,0,c
  5422  000EAE  0779               	decf	(dtoa@i+1)& (0+255),f,b
  5423  000EB0                     
  5424                           ; BSR set to: 0
  5425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5426  000EB0  516E               	movf	dtoa@s& (0+255),w,b
  5427  000EB2  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  5428  000EB4  A4D8               	btfss	status,2,c
  5429  000EB6  EF5F  F007         	goto	u3071
  5430  000EBA  EF61  F007         	goto	u3070
  5431  000EBE                     u3071:
  5432  000EBE  EF67  F007         	goto	l3374
  5433  000EC2                     u3070:
  5434  000EC2                     
  5435                           ; BSR set to: 0
  5436  000EC2  0E00               	movlw	0
  5437  000EC4  6F69               	movwf	(_dtoa$1126+1)& (0+255),b
  5438  000EC6  0E2B               	movlw	43
  5439  000EC8  6F68               	movwf	_dtoa$1126& (0+255),b
  5440  000ECA  EF6B  F007         	goto	l3376
  5441  000ECE                     l3374:
  5442                           
  5443                           ; BSR set to: 0
  5444  000ECE  0E00               	movlw	0
  5445  000ED0  6F69               	movwf	(_dtoa$1126+1)& (0+255),b
  5446  000ED2  0E2D               	movlw	45
  5447  000ED4  6F68               	movwf	_dtoa$1126& (0+255),b
  5448  000ED6                     l3376:
  5449                           
  5450                           ; BSR set to: 0
  5451  000ED6  0ECE               	movlw	low _dbuf
  5452  000ED8  2578               	addwf	dtoa@i& (0+255),w,b
  5453  000EDA  6ED9               	movwf	fsr2l,c
  5454  000EDC  0E00               	movlw	high _dbuf
  5455  000EDE  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  5456  000EE0  6EDA               	movwf	fsr2h,c
  5457  000EE2  C068  FFDF         	movff	_dtoa$1126,indf2
  5458  000EE6                     l3378:
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5462  000EE6  C02E  F023         	movff	dtoa@fp,pad@fp
  5463  000EEA  C02F  F024         	movff	dtoa@fp+1,pad@fp+1
  5464  000EEE  0ECE               	movlw	low _dbuf
  5465  000EF0  2578               	addwf	dtoa@i& (0+255),w,b
  5466  000EF2  6E25               	movwf	pad@buf^0,c
  5467  000EF4  0E00               	movlw	high _dbuf
  5468  000EF6  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  5469  000EF8  6E26               	movwf	(pad@buf+1)^0,c
  5470  000EFA  C06C  F027         	movff	dtoa@w,pad@p
  5471  000EFE  C06D  F028         	movff	dtoa@w+1,pad@p+1
  5472  000F02  EC32  F00C         	call	_pad	;wreg free
  5473  000F06  C023  F02E         	movff	?_pad,?_dtoa
  5474  000F0A  C024  F02F         	movff	?_pad+1,?_dtoa+1
  5475  000F0E  0012               	return		;funcret
  5476  000F10                     __end_of_dtoa:
  5477                           	opt callstack 0
  5478                           
  5479 ;; *************** function _abs *****************
  5480 ;; Defined at:
  5481 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  a               2   34[COMRAM] int 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  2   34[COMRAM] int 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;Total ram usage:        4 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    4
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_dtoa
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text8
  5510  001B7E                     __ptext8:
  5511                           	opt callstack 0
  5512  001B7E                     _abs:
  5513                           	opt callstack 22
  5514  001B7E  BE24               	btfsc	(abs@a+1)^0,7,c
  5515  001B80  EFCC  F00D         	goto	u2670
  5516  001B84  5024               	movf	(abs@a+1)^0,w,c
  5517  001B86  E106               	bnz	u2671
  5518  001B88  0423               	decf	abs@a^0,w,c
  5519  001B8A  B0D8               	btfsc	status,0,c
  5520  001B8C  EFCA  F00D         	goto	u2671
  5521  001B90  EFCC  F00D         	goto	u2670
  5522  001B94                     u2671:
  5523  001B94  EFDA  F00D         	goto	l1207
  5524  001B98                     u2670:
  5525  001B98  C023  F025         	movff	abs@a,??_abs
  5526  001B9C  C024  F026         	movff	abs@a+1,??_abs+1
  5527  001BA0  1E25               	comf	??_abs^0,f,c
  5528  001BA2  1E26               	comf	(??_abs+1)^0,f,c
  5529  001BA4  4A25               	infsnz	??_abs^0,f,c
  5530  001BA6  2A26               	incf	(??_abs+1)^0,f,c
  5531  001BA8  C025  F023         	movff	??_abs,?_abs
  5532  001BAC  C026  F024         	movff	??_abs+1,?_abs+1
  5533  001BB0  EFDE  F00D         	goto	l1210
  5534  001BB4                     l1207:
  5535  001BB4  C023  F023         	movff	abs@a,?_abs
  5536  001BB8  C024  F024         	movff	abs@a+1,?_abs+1
  5537  001BBC                     l1210:
  5538  001BBC  0012               	return		;funcret
  5539  001BBE                     __end_of_abs:
  5540                           	opt callstack 0
  5541                           
  5542 ;; *************** function ___aomod *****************
  5543 ;; Defined at:
  5544 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  dividend        8   16[COMRAM] long long 
  5547 ;;  divisor         8   24[COMRAM] long long 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  sign            1   33[COMRAM] unsigned char 
  5550 ;;  counter         1   32[COMRAM] unsigned char 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  8   16[COMRAM] long long 
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5560 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;Total ram usage:       18 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    4
  5567 ;; This function calls:
  5568 ;;		Nothing
  5569 ;; This function is called by:
  5570 ;;		_dtoa
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text9
  5575  001438                     __ptext9:
  5576                           	opt callstack 0
  5577  001438                     ___aomod:
  5578                           	opt callstack 22
  5579  001438  0E00               	movlw	0
  5580  00143A  6E22               	movwf	___aomod@sign^0,c
  5581  00143C  BE18               	btfsc	(___aomod@dividend+7)^0,7,c
  5582  00143E  EF25  F00A         	goto	u2770
  5583  001442  EF23  F00A         	goto	u2771
  5584  001446                     u2771:
  5585  001446  EF37  F00A         	goto	l3228
  5586  00144A                     u2770:
  5587  00144A  1E18               	comf	(___aomod@dividend+7)^0,f,c
  5588  00144C  1E17               	comf	(___aomod@dividend+6)^0,f,c
  5589  00144E  1E16               	comf	(___aomod@dividend+5)^0,f,c
  5590  001450  1E15               	comf	(___aomod@dividend+4)^0,f,c
  5591  001452  1E14               	comf	(___aomod@dividend+3)^0,f,c
  5592  001454  1E13               	comf	(___aomod@dividend+2)^0,f,c
  5593  001456  1E12               	comf	(___aomod@dividend+1)^0,f,c
  5594  001458  6C11               	negf	___aomod@dividend^0,c
  5595  00145A  0E00               	movlw	0
  5596  00145C  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  5597  00145E  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  5598  001460  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  5599  001462  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  5600  001464  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  5601  001466  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  5602  001468  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  5603  00146A  0E01               	movlw	1
  5604  00146C  6E22               	movwf	___aomod@sign^0,c
  5605  00146E                     l3228:
  5606  00146E  BE20               	btfsc	(___aomod@divisor+7)^0,7,c
  5607  001470  EF3E  F00A         	goto	u2780
  5608  001474  EF3C  F00A         	goto	u2781
  5609  001478                     u2781:
  5610  001478  EF4E  F00A         	goto	l3232
  5611  00147C                     u2780:
  5612  00147C  1E20               	comf	(___aomod@divisor+7)^0,f,c
  5613  00147E  1E1F               	comf	(___aomod@divisor+6)^0,f,c
  5614  001480  1E1E               	comf	(___aomod@divisor+5)^0,f,c
  5615  001482  1E1D               	comf	(___aomod@divisor+4)^0,f,c
  5616  001484  1E1C               	comf	(___aomod@divisor+3)^0,f,c
  5617  001486  1E1B               	comf	(___aomod@divisor+2)^0,f,c
  5618  001488  1E1A               	comf	(___aomod@divisor+1)^0,f,c
  5619  00148A  6C19               	negf	___aomod@divisor^0,c
  5620  00148C  0E00               	movlw	0
  5621  00148E  221A               	addwfc	(___aomod@divisor+1)^0,f,c
  5622  001490  221B               	addwfc	(___aomod@divisor+2)^0,f,c
  5623  001492  221C               	addwfc	(___aomod@divisor+3)^0,f,c
  5624  001494  221D               	addwfc	(___aomod@divisor+4)^0,f,c
  5625  001496  221E               	addwfc	(___aomod@divisor+5)^0,f,c
  5626  001498  221F               	addwfc	(___aomod@divisor+6)^0,f,c
  5627  00149A  2220               	addwfc	(___aomod@divisor+7)^0,f,c
  5628  00149C                     l3232:
  5629  00149C  5019               	movf	___aomod@divisor^0,w,c
  5630  00149E  101A               	iorwf	(___aomod@divisor+1)^0,w,c
  5631  0014A0  101B               	iorwf	(___aomod@divisor+2)^0,w,c
  5632  0014A2  101C               	iorwf	(___aomod@divisor+3)^0,w,c
  5633  0014A4  101D               	iorwf	(___aomod@divisor+4)^0,w,c
  5634  0014A6  101E               	iorwf	(___aomod@divisor+5)^0,w,c
  5635  0014A8  101F               	iorwf	(___aomod@divisor+6)^0,w,c
  5636  0014AA  1020               	iorwf	(___aomod@divisor+7)^0,w,c
  5637  0014AC  B4D8               	btfsc	status,2,c
  5638  0014AE  EF5B  F00A         	goto	u2791
  5639  0014B2  EF5D  F00A         	goto	u2790
  5640  0014B6                     u2791:
  5641  0014B6  EFA5  F00A         	goto	l3248
  5642  0014BA                     u2790:
  5643  0014BA  0E01               	movlw	1
  5644  0014BC  6E21               	movwf	___aomod@counter^0,c
  5645  0014BE  EF6B  F00A         	goto	l3238
  5646  0014C2                     l3236:
  5647  0014C2  90D8               	bcf	status,0,c
  5648  0014C4  3619               	rlcf	___aomod@divisor^0,f,c
  5649  0014C6  361A               	rlcf	(___aomod@divisor+1)^0,f,c
  5650  0014C8  361B               	rlcf	(___aomod@divisor+2)^0,f,c
  5651  0014CA  361C               	rlcf	(___aomod@divisor+3)^0,f,c
  5652  0014CC  361D               	rlcf	(___aomod@divisor+4)^0,f,c
  5653  0014CE  361E               	rlcf	(___aomod@divisor+5)^0,f,c
  5654  0014D0  361F               	rlcf	(___aomod@divisor+6)^0,f,c
  5655  0014D2  3620               	rlcf	(___aomod@divisor+7)^0,f,c
  5656  0014D4  2A21               	incf	___aomod@counter^0,f,c
  5657  0014D6                     l3238:
  5658  0014D6  AE20               	btfss	(___aomod@divisor+7)^0,7,c
  5659  0014D8  EF70  F00A         	goto	u2801
  5660  0014DC  EF72  F00A         	goto	u2800
  5661  0014E0                     u2801:
  5662  0014E0  EF61  F00A         	goto	l3236
  5663  0014E4                     u2800:
  5664  0014E4                     l3240:
  5665  0014E4  5019               	movf	___aomod@divisor^0,w,c
  5666  0014E6  5C11               	subwf	___aomod@dividend^0,w,c
  5667  0014E8  501A               	movf	(___aomod@divisor+1)^0,w,c
  5668  0014EA  5812               	subwfb	(___aomod@dividend+1)^0,w,c
  5669  0014EC  501B               	movf	(___aomod@divisor+2)^0,w,c
  5670  0014EE  5813               	subwfb	(___aomod@dividend+2)^0,w,c
  5671  0014F0  501C               	movf	(___aomod@divisor+3)^0,w,c
  5672  0014F2  5814               	subwfb	(___aomod@dividend+3)^0,w,c
  5673  0014F4  501D               	movf	(___aomod@divisor+4)^0,w,c
  5674  0014F6  5815               	subwfb	(___aomod@dividend+4)^0,w,c
  5675  0014F8  501E               	movf	(___aomod@divisor+5)^0,w,c
  5676  0014FA  5816               	subwfb	(___aomod@dividend+5)^0,w,c
  5677  0014FC  501F               	movf	(___aomod@divisor+6)^0,w,c
  5678  0014FE  5817               	subwfb	(___aomod@dividend+6)^0,w,c
  5679  001500  5020               	movf	(___aomod@divisor+7)^0,w,c
  5680  001502  5818               	subwfb	(___aomod@dividend+7)^0,w,c
  5681  001504  A0D8               	btfss	status,0,c
  5682  001506  EF87  F00A         	goto	u2811
  5683  00150A  EF89  F00A         	goto	u2810
  5684  00150E                     u2811:
  5685  00150E  EF99  F00A         	goto	l3244
  5686  001512                     u2810:
  5687  001512  5019               	movf	___aomod@divisor^0,w,c
  5688  001514  5E11               	subwf	___aomod@dividend^0,f,c
  5689  001516  501A               	movf	(___aomod@divisor+1)^0,w,c
  5690  001518  5A12               	subwfb	(___aomod@dividend+1)^0,f,c
  5691  00151A  501B               	movf	(___aomod@divisor+2)^0,w,c
  5692  00151C  5A13               	subwfb	(___aomod@dividend+2)^0,f,c
  5693  00151E  501C               	movf	(___aomod@divisor+3)^0,w,c
  5694  001520  5A14               	subwfb	(___aomod@dividend+3)^0,f,c
  5695  001522  501D               	movf	(___aomod@divisor+4)^0,w,c
  5696  001524  5A15               	subwfb	(___aomod@dividend+4)^0,f,c
  5697  001526  501E               	movf	(___aomod@divisor+5)^0,w,c
  5698  001528  5A16               	subwfb	(___aomod@dividend+5)^0,f,c
  5699  00152A  501F               	movf	(___aomod@divisor+6)^0,w,c
  5700  00152C  5A17               	subwfb	(___aomod@dividend+6)^0,f,c
  5701  00152E  5020               	movf	(___aomod@divisor+7)^0,w,c
  5702  001530  5A18               	subwfb	(___aomod@dividend+7)^0,f,c
  5703  001532                     l3244:
  5704  001532  90D8               	bcf	status,0,c
  5705  001534  3220               	rrcf	(___aomod@divisor+7)^0,f,c
  5706  001536  321F               	rrcf	(___aomod@divisor+6)^0,f,c
  5707  001538  321E               	rrcf	(___aomod@divisor+5)^0,f,c
  5708  00153A  321D               	rrcf	(___aomod@divisor+4)^0,f,c
  5709  00153C  321C               	rrcf	(___aomod@divisor+3)^0,f,c
  5710  00153E  321B               	rrcf	(___aomod@divisor+2)^0,f,c
  5711  001540  321A               	rrcf	(___aomod@divisor+1)^0,f,c
  5712  001542  3219               	rrcf	___aomod@divisor^0,f,c
  5713  001544  2E21               	decfsz	___aomod@counter^0,f,c
  5714  001546  EF72  F00A         	goto	l3240
  5715  00154A                     l3248:
  5716  00154A  5022               	movf	___aomod@sign^0,w,c
  5717  00154C  B4D8               	btfsc	status,2,c
  5718  00154E  EFAB  F00A         	goto	u2821
  5719  001552  EFAD  F00A         	goto	u2820
  5720  001556                     u2821:
  5721  001556  EFBD  F00A         	goto	l3252
  5722  00155A                     u2820:
  5723  00155A  1E18               	comf	(___aomod@dividend+7)^0,f,c
  5724  00155C  1E17               	comf	(___aomod@dividend+6)^0,f,c
  5725  00155E  1E16               	comf	(___aomod@dividend+5)^0,f,c
  5726  001560  1E15               	comf	(___aomod@dividend+4)^0,f,c
  5727  001562  1E14               	comf	(___aomod@dividend+3)^0,f,c
  5728  001564  1E13               	comf	(___aomod@dividend+2)^0,f,c
  5729  001566  1E12               	comf	(___aomod@dividend+1)^0,f,c
  5730  001568  6C11               	negf	___aomod@dividend^0,c
  5731  00156A  0E00               	movlw	0
  5732  00156C  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  5733  00156E  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  5734  001570  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  5735  001572  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  5736  001574  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  5737  001576  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  5738  001578  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  5739  00157A                     l3252:
  5740  00157A  C011  F011         	movff	___aomod@dividend,?___aomod
  5741  00157E  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  5742  001582  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  5743  001586  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  5744  00158A  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  5745  00158E  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  5746  001592  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  5747  001596  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  5748  00159A  0012               	return		;funcret
  5749  00159C                     __end_of___aomod:
  5750                           	opt callstack 0
  5751                           
  5752 ;; *************** function ___aodiv *****************
  5753 ;; Defined at:
  5754 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  dividend        8   16[COMRAM] long long 
  5757 ;;  divisor         8   24[COMRAM] long long 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  quotient        8   34[COMRAM] long long 
  5760 ;;  sign            1   33[COMRAM] unsigned char 
  5761 ;;  counter         1   32[COMRAM] unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  8   16[COMRAM] long long 
  5764 ;; Registers used:
  5765 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5771 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;Total ram usage:       26 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    4
  5778 ;; This function calls:
  5779 ;;		Nothing
  5780 ;; This function is called by:
  5781 ;;		_dtoa
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text10
  5786  0012B0                     __ptext10:
  5787                           	opt callstack 0
  5788  0012B0                     ___aodiv:
  5789                           	opt callstack 22
  5790  0012B0  0E00               	movlw	0
  5791  0012B2  6E22               	movwf	___aodiv@sign^0,c
  5792  0012B4  BE20               	btfsc	(___aodiv@divisor+7)^0,7,c
  5793  0012B6  EF61  F009         	goto	u2700
  5794  0012BA  EF5F  F009         	goto	u2701
  5795  0012BE                     u2701:
  5796  0012BE  EF73  F009         	goto	l3184
  5797  0012C2                     u2700:
  5798  0012C2  1E20               	comf	(___aodiv@divisor+7)^0,f,c
  5799  0012C4  1E1F               	comf	(___aodiv@divisor+6)^0,f,c
  5800  0012C6  1E1E               	comf	(___aodiv@divisor+5)^0,f,c
  5801  0012C8  1E1D               	comf	(___aodiv@divisor+4)^0,f,c
  5802  0012CA  1E1C               	comf	(___aodiv@divisor+3)^0,f,c
  5803  0012CC  1E1B               	comf	(___aodiv@divisor+2)^0,f,c
  5804  0012CE  1E1A               	comf	(___aodiv@divisor+1)^0,f,c
  5805  0012D0  6C19               	negf	___aodiv@divisor^0,c
  5806  0012D2  0E00               	movlw	0
  5807  0012D4  221A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5808  0012D6  221B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5809  0012D8  221C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5810  0012DA  221D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5811  0012DC  221E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5812  0012DE  221F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5813  0012E0  2220               	addwfc	(___aodiv@divisor+7)^0,f,c
  5814  0012E2  0E01               	movlw	1
  5815  0012E4  6E22               	movwf	___aodiv@sign^0,c
  5816  0012E6                     l3184:
  5817  0012E6  BE18               	btfsc	(___aodiv@dividend+7)^0,7,c
  5818  0012E8  EF7A  F009         	goto	u2710
  5819  0012EC  EF78  F009         	goto	u2711
  5820  0012F0                     u2711:
  5821  0012F0  EF8C  F009         	goto	l3190
  5822  0012F4                     u2710:
  5823  0012F4  1E18               	comf	(___aodiv@dividend+7)^0,f,c
  5824  0012F6  1E17               	comf	(___aodiv@dividend+6)^0,f,c
  5825  0012F8  1E16               	comf	(___aodiv@dividend+5)^0,f,c
  5826  0012FA  1E15               	comf	(___aodiv@dividend+4)^0,f,c
  5827  0012FC  1E14               	comf	(___aodiv@dividend+3)^0,f,c
  5828  0012FE  1E13               	comf	(___aodiv@dividend+2)^0,f,c
  5829  001300  1E12               	comf	(___aodiv@dividend+1)^0,f,c
  5830  001302  6C11               	negf	___aodiv@dividend^0,c
  5831  001304  0E00               	movlw	0
  5832  001306  2212               	addwfc	(___aodiv@dividend+1)^0,f,c
  5833  001308  2213               	addwfc	(___aodiv@dividend+2)^0,f,c
  5834  00130A  2214               	addwfc	(___aodiv@dividend+3)^0,f,c
  5835  00130C  2215               	addwfc	(___aodiv@dividend+4)^0,f,c
  5836  00130E  2216               	addwfc	(___aodiv@dividend+5)^0,f,c
  5837  001310  2217               	addwfc	(___aodiv@dividend+6)^0,f,c
  5838  001312  2218               	addwfc	(___aodiv@dividend+7)^0,f,c
  5839  001314  0E01               	movlw	1
  5840  001316  1A22               	xorwf	___aodiv@sign^0,f,c
  5841  001318                     l3190:
  5842  001318  EE20  F023         	lfsr	2,___aodiv@quotient
  5843  00131C  0E07               	movlw	7
  5844  00131E                     u2721:
  5845  00131E  6ADE               	clrf	postinc2,c
  5846  001320  06E8               	decf	wreg,f,c
  5847  001322  E2FD               	bc	u2721
  5848  001324  5019               	movf	___aodiv@divisor^0,w,c
  5849  001326  101A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5850  001328  101B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5851  00132A  101C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5852  00132C  101D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5853  00132E  101E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5854  001330  101F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5855  001332  1020               	iorwf	(___aodiv@divisor+7)^0,w,c
  5856  001334  B4D8               	btfsc	status,2,c
  5857  001336  EF9F  F009         	goto	u2731
  5858  00133A  EFA1  F009         	goto	u2730
  5859  00133E                     u2731:
  5860  00133E  EFF3  F009         	goto	l3212
  5861  001342                     u2730:
  5862  001342  0E01               	movlw	1
  5863  001344  6E21               	movwf	___aodiv@counter^0,c
  5864  001346  EFAF  F009         	goto	l3198
  5865  00134A                     l3196:
  5866  00134A  90D8               	bcf	status,0,c
  5867  00134C  3619               	rlcf	___aodiv@divisor^0,f,c
  5868  00134E  361A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5869  001350  361B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5870  001352  361C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5871  001354  361D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5872  001356  361E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5873  001358  361F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5874  00135A  3620               	rlcf	(___aodiv@divisor+7)^0,f,c
  5875  00135C  2A21               	incf	___aodiv@counter^0,f,c
  5876  00135E                     l3198:
  5877  00135E  AE20               	btfss	(___aodiv@divisor+7)^0,7,c
  5878  001360  EFB4  F009         	goto	u2741
  5879  001364  EFB6  F009         	goto	u2740
  5880  001368                     u2741:
  5881  001368  EFA5  F009         	goto	l3196
  5882  00136C                     u2740:
  5883  00136C                     l3200:
  5884  00136C  90D8               	bcf	status,0,c
  5885  00136E  3623               	rlcf	___aodiv@quotient^0,f,c
  5886  001370  3624               	rlcf	(___aodiv@quotient+1)^0,f,c
  5887  001372  3625               	rlcf	(___aodiv@quotient+2)^0,f,c
  5888  001374  3626               	rlcf	(___aodiv@quotient+3)^0,f,c
  5889  001376  3627               	rlcf	(___aodiv@quotient+4)^0,f,c
  5890  001378  3628               	rlcf	(___aodiv@quotient+5)^0,f,c
  5891  00137A  3629               	rlcf	(___aodiv@quotient+6)^0,f,c
  5892  00137C  362A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5893  00137E  5019               	movf	___aodiv@divisor^0,w,c
  5894  001380  5C11               	subwf	___aodiv@dividend^0,w,c
  5895  001382  501A               	movf	(___aodiv@divisor+1)^0,w,c
  5896  001384  5812               	subwfb	(___aodiv@dividend+1)^0,w,c
  5897  001386  501B               	movf	(___aodiv@divisor+2)^0,w,c
  5898  001388  5813               	subwfb	(___aodiv@dividend+2)^0,w,c
  5899  00138A  501C               	movf	(___aodiv@divisor+3)^0,w,c
  5900  00138C  5814               	subwfb	(___aodiv@dividend+3)^0,w,c
  5901  00138E  501D               	movf	(___aodiv@divisor+4)^0,w,c
  5902  001390  5815               	subwfb	(___aodiv@dividend+4)^0,w,c
  5903  001392  501E               	movf	(___aodiv@divisor+5)^0,w,c
  5904  001394  5816               	subwfb	(___aodiv@dividend+5)^0,w,c
  5905  001396  501F               	movf	(___aodiv@divisor+6)^0,w,c
  5906  001398  5817               	subwfb	(___aodiv@dividend+6)^0,w,c
  5907  00139A  5020               	movf	(___aodiv@divisor+7)^0,w,c
  5908  00139C  5818               	subwfb	(___aodiv@dividend+7)^0,w,c
  5909  00139E  A0D8               	btfss	status,0,c
  5910  0013A0  EFD4  F009         	goto	u2751
  5911  0013A4  EFD6  F009         	goto	u2750
  5912  0013A8                     u2751:
  5913  0013A8  EFE7  F009         	goto	l3208
  5914  0013AC                     u2750:
  5915  0013AC  5019               	movf	___aodiv@divisor^0,w,c
  5916  0013AE  5E11               	subwf	___aodiv@dividend^0,f,c
  5917  0013B0  501A               	movf	(___aodiv@divisor+1)^0,w,c
  5918  0013B2  5A12               	subwfb	(___aodiv@dividend+1)^0,f,c
  5919  0013B4  501B               	movf	(___aodiv@divisor+2)^0,w,c
  5920  0013B6  5A13               	subwfb	(___aodiv@dividend+2)^0,f,c
  5921  0013B8  501C               	movf	(___aodiv@divisor+3)^0,w,c
  5922  0013BA  5A14               	subwfb	(___aodiv@dividend+3)^0,f,c
  5923  0013BC  501D               	movf	(___aodiv@divisor+4)^0,w,c
  5924  0013BE  5A15               	subwfb	(___aodiv@dividend+4)^0,f,c
  5925  0013C0  501E               	movf	(___aodiv@divisor+5)^0,w,c
  5926  0013C2  5A16               	subwfb	(___aodiv@dividend+5)^0,f,c
  5927  0013C4  501F               	movf	(___aodiv@divisor+6)^0,w,c
  5928  0013C6  5A17               	subwfb	(___aodiv@dividend+6)^0,f,c
  5929  0013C8  5020               	movf	(___aodiv@divisor+7)^0,w,c
  5930  0013CA  5A18               	subwfb	(___aodiv@dividend+7)^0,f,c
  5931  0013CC  8023               	bsf	___aodiv@quotient^0,0,c
  5932  0013CE                     l3208:
  5933  0013CE  90D8               	bcf	status,0,c
  5934  0013D0  3220               	rrcf	(___aodiv@divisor+7)^0,f,c
  5935  0013D2  321F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5936  0013D4  321E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5937  0013D6  321D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5938  0013D8  321C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5939  0013DA  321B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5940  0013DC  321A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5941  0013DE  3219               	rrcf	___aodiv@divisor^0,f,c
  5942  0013E0  2E21               	decfsz	___aodiv@counter^0,f,c
  5943  0013E2  EFB6  F009         	goto	l3200
  5944  0013E6                     l3212:
  5945  0013E6  5022               	movf	___aodiv@sign^0,w,c
  5946  0013E8  B4D8               	btfsc	status,2,c
  5947  0013EA  EFF9  F009         	goto	u2761
  5948  0013EE  EFFB  F009         	goto	u2760
  5949  0013F2                     u2761:
  5950  0013F2  EF0B  F00A         	goto	l3216
  5951  0013F6                     u2760:
  5952  0013F6  1E2A               	comf	(___aodiv@quotient+7)^0,f,c
  5953  0013F8  1E29               	comf	(___aodiv@quotient+6)^0,f,c
  5954  0013FA  1E28               	comf	(___aodiv@quotient+5)^0,f,c
  5955  0013FC  1E27               	comf	(___aodiv@quotient+4)^0,f,c
  5956  0013FE  1E26               	comf	(___aodiv@quotient+3)^0,f,c
  5957  001400  1E25               	comf	(___aodiv@quotient+2)^0,f,c
  5958  001402  1E24               	comf	(___aodiv@quotient+1)^0,f,c
  5959  001404  6C23               	negf	___aodiv@quotient^0,c
  5960  001406  0E00               	movlw	0
  5961  001408  2224               	addwfc	(___aodiv@quotient+1)^0,f,c
  5962  00140A  2225               	addwfc	(___aodiv@quotient+2)^0,f,c
  5963  00140C  2226               	addwfc	(___aodiv@quotient+3)^0,f,c
  5964  00140E  2227               	addwfc	(___aodiv@quotient+4)^0,f,c
  5965  001410  2228               	addwfc	(___aodiv@quotient+5)^0,f,c
  5966  001412  2229               	addwfc	(___aodiv@quotient+6)^0,f,c
  5967  001414  222A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5968  001416                     l3216:
  5969  001416  C023  F011         	movff	___aodiv@quotient,?___aodiv
  5970  00141A  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  5971  00141E  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  5972  001422  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  5973  001426  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  5974  00142A  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  5975  00142E  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  5976  001432  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  5977  001436  0012               	return		;funcret
  5978  001438                     __end_of___aodiv:
  5979                           	opt callstack 0
  5980                           
  5981 ;; *************** function _ctoa *****************
  5982 ;; Defined at:
  5983 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  5986 ;;		 -> NULL(0), 
  5987 ;;  c               1   47[COMRAM] unsigned char 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  w               2   48[COMRAM] int 
  5990 ;;  l               2    0        int 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  2   45[COMRAM] int 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6000 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;Total ram usage:        5 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    9
  6007 ;; This function calls:
  6008 ;;		_pad
  6009 ;; This function is called by:
  6010 ;;		_vfpfcnvrt
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text11
  6015  001A8E                     __ptext11:
  6016                           	opt callstack 0
  6017  001A8E                     _ctoa:
  6018                           	opt callstack 18
  6019  001A8E                     
  6020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  6021  001A8E  503E               	movf	_width^0,w,c
  6022  001A90  103F               	iorwf	(_width+1)^0,w,c
  6023  001A92  A4D8               	btfss	status,2,c
  6024  001A94  EF4E  F00D         	goto	u2921
  6025  001A98  EF50  F00D         	goto	u2920
  6026  001A9C                     u2921:
  6027  001A9C  EF56  F00D         	goto	l3310
  6028  001AA0                     u2920:
  6029  001AA0  C03E  F031         	movff	_width,ctoa@w
  6030  001AA4  C03F  F032         	movff	_width+1,ctoa@w+1
  6031  001AA8  EF5C  F00D         	goto	l3312
  6032  001AAC                     l3310:
  6033  001AAC  0EFF               	movlw	255
  6034  001AAE  243E               	addwf	_width^0,w,c
  6035  001AB0  6E31               	movwf	ctoa@w^0,c
  6036  001AB2  0EFF               	movlw	255
  6037  001AB4  203F               	addwfc	(_width+1)^0,w,c
  6038  001AB6  6E32               	movwf	(ctoa@w+1)^0,c
  6039  001AB8                     l3312:
  6040                           
  6041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  6042  001AB8  C030  F0CE         	movff	ctoa@c,_dbuf
  6043  001ABC                     
  6044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  6045  001ABC  0E00               	movlw	0
  6046  001ABE  0100               	movlb	0	; () banked
  6047  001AC0  6FCF               	movwf	(_dbuf+1)& (0+255),b
  6048  001AC2                     
  6049                           ; BSR set to: 0
  6050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  6051  001AC2  C02E  F023         	movff	ctoa@fp,pad@fp
  6052  001AC6  C02F  F024         	movff	ctoa@fp+1,pad@fp+1
  6053  001ACA  0ECE               	movlw	low _dbuf
  6054  001ACC  6E25               	movwf	pad@buf^0,c
  6055  001ACE  0E00               	movlw	high _dbuf
  6056  001AD0  6E26               	movwf	(pad@buf+1)^0,c
  6057  001AD2  C031  F027         	movff	ctoa@w,pad@p
  6058  001AD6  C032  F028         	movff	ctoa@w+1,pad@p+1
  6059  001ADA  EC32  F00C         	call	_pad	;wreg free
  6060  001ADE  C023  F02E         	movff	?_pad,?_ctoa
  6061  001AE2  C024  F02F         	movff	?_pad+1,?_ctoa+1
  6062  001AE6  0012               	return		;funcret
  6063  001AE8                     __end_of_ctoa:
  6064                           	opt callstack 0
  6065                           
  6066 ;; *************** function _pad *****************
  6067 ;; Defined at:
  6068 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  6071 ;;		 -> NULL(0), 
  6072 ;;  buf             2   36[COMRAM] PTR unsigned char 
  6073 ;;		 -> dbuf(32), 
  6074 ;;  p               2   38[COMRAM] int 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  w               2   43[COMRAM] int 
  6077 ;;  i               2   41[COMRAM] int 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  2   34[COMRAM] int 
  6080 ;; Registers used:
  6081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6087 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;Total ram usage:       11 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    8
  6094 ;; This function calls:
  6095 ;;		_fputc
  6096 ;;		_fputs
  6097 ;;		_strlen
  6098 ;; This function is called by:
  6099 ;;		_ctoa
  6100 ;;		_dtoa
  6101 ;;		_utoa
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text12
  6106  001864                     __ptext12:
  6107                           	opt callstack 0
  6108  001864                     _pad:
  6109                           	opt callstack 18
  6110  001864                     
  6111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6112  001864  A042               	btfss	_flags^0,0,c
  6113  001866  EF37  F00C         	goto	u2631
  6114  00186A  EF39  F00C         	goto	u2630
  6115  00186E                     u2631:
  6116  00186E  EF43  F00C         	goto	l3144
  6117  001872                     u2630:
  6118  001872                     
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6120  001872  C025  F01C         	movff	pad@buf,fputs@s
  6121  001876  C026  F01D         	movff	pad@buf+1,fputs@s+1
  6122  00187A  C023  F01E         	movff	pad@fp,fputs@fp
  6123  00187E  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  6124  001882  EC9D  F00D         	call	_fputs	;wreg free
  6125  001886                     l3144:
  6126                           
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6128  001886  BE28               	btfsc	(pad@p+1)^0,7,c
  6129  001888  EF48  F00C         	goto	u2641
  6130  00188C  EF4A  F00C         	goto	u2640
  6131  001890                     u2641:
  6132  001890  EF50  F00C         	goto	l3148
  6133  001894                     u2640:
  6134  001894  C027  F02C         	movff	pad@p,pad@w
  6135  001898  C028  F02D         	movff	pad@p+1,pad@w+1
  6136  00189C  EF54  F00C         	goto	l450
  6137  0018A0                     l3148:
  6138  0018A0  0E00               	movlw	0
  6139  0018A2  6E2D               	movwf	(pad@w+1)^0,c
  6140  0018A4  0E00               	movlw	0
  6141  0018A6  6E2C               	movwf	pad@w^0,c
  6142  0018A8                     l450:
  6143                           
  6144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6145  0018A8  0E00               	movlw	0
  6146  0018AA  6E2B               	movwf	(pad@i+1)^0,c
  6147  0018AC  0E00               	movlw	0
  6148  0018AE  6E2A               	movwf	pad@i^0,c
  6149                           
  6150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6151  0018B0  EF66  F00C         	goto	l3154
  6152  0018B4                     l3150:
  6153                           
  6154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6155  0018B4  0E00               	movlw	0
  6156  0018B6  6E14               	movwf	(fputc@c+1)^0,c
  6157  0018B8  0E20               	movlw	32
  6158  0018BA  6E13               	movwf	fputc@c^0,c
  6159  0018BC  C023  F015         	movff	pad@fp,fputc@fp
  6160  0018C0  C024  F016         	movff	pad@fp+1,fputc@fp+1
  6161  0018C4  EC93  F00C         	call	_fputc	;wreg free
  6162  0018C8                     
  6163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6164  0018C8  4A2A               	infsnz	pad@i^0,f,c
  6165  0018CA  2A2B               	incf	(pad@i+1)^0,f,c
  6166  0018CC                     l3154:
  6167                           
  6168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6169  0018CC  502C               	movf	pad@w^0,w,c
  6170  0018CE  5C2A               	subwf	pad@i^0,w,c
  6171  0018D0  502B               	movf	(pad@i+1)^0,w,c
  6172  0018D2  0A80               	xorlw	128
  6173  0018D4  6E29               	movwf	??_pad^0,c
  6174  0018D6  502D               	movf	(pad@w+1)^0,w,c
  6175  0018D8  0A80               	xorlw	128
  6176  0018DA  5829               	subwfb	??_pad^0,w,c
  6177  0018DC  A0D8               	btfss	status,0,c
  6178  0018DE  EF73  F00C         	goto	u2651
  6179  0018E2  EF75  F00C         	goto	u2650
  6180  0018E6                     u2651:
  6181  0018E6  EF5A  F00C         	goto	l3150
  6182  0018EA                     u2650:
  6183  0018EA                     
  6184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6185  0018EA  B042               	btfsc	_flags^0,0,c
  6186  0018EC  EF7A  F00C         	goto	u2661
  6187  0018F0  EF7C  F00C         	goto	u2660
  6188  0018F4                     u2661:
  6189  0018F4  EF86  F00C         	goto	l3158
  6190  0018F8                     u2660:
  6191  0018F8                     
  6192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6193  0018F8  C025  F01C         	movff	pad@buf,fputs@s
  6194  0018FC  C026  F01D         	movff	pad@buf+1,fputs@s+1
  6195  001900  C023  F01E         	movff	pad@fp,fputs@fp
  6196  001904  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  6197  001908  EC9D  F00D         	call	_fputs	;wreg free
  6198  00190C                     l3158:
  6199                           
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6201  00190C  C025  F011         	movff	pad@buf,strlen@s
  6202  001910  C026  F012         	movff	pad@buf+1,strlen@s+1
  6203  001914  EC1A  F00E         	call	_strlen	;wreg free
  6204  001918  502C               	movf	pad@w^0,w,c
  6205  00191A  2411               	addwf	?_strlen^0,w,c
  6206  00191C  6E23               	movwf	?_pad^0,c
  6207  00191E  502D               	movf	(pad@w+1)^0,w,c
  6208  001920  2012               	addwfc	(?_strlen+1)^0,w,c
  6209  001922  6E24               	movwf	(?_pad+1)^0,c
  6210  001924  0012               	return		;funcret
  6211  001926                     __end_of_pad:
  6212                           	opt callstack 0
  6213                           
  6214 ;; *************** function _strlen *****************
  6215 ;; Defined at:
  6216 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  s               2   16[COMRAM] PTR const unsigned char 
  6219 ;;		 -> dbuf(32), 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  a               2   18[COMRAM] PTR const unsigned char 
  6222 ;;		 -> dbuf(32), 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  2   16[COMRAM] unsigned int 
  6225 ;; Registers used:
  6226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;Total ram usage:        4 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    4
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_pad
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text13
  6247  001C34                     __ptext13:
  6248                           	opt callstack 0
  6249  001C34                     _strlen:
  6250                           	opt callstack 21
  6251  001C34  C011  F013         	movff	strlen@s,strlen@a
  6252  001C38  C012  F014         	movff	strlen@s+1,strlen@a+1
  6253  001C3C  EF22  F00E         	goto	l3134
  6254  001C40                     l3132:
  6255  001C40  4A11               	infsnz	strlen@s^0,f,c
  6256  001C42  2A12               	incf	(strlen@s+1)^0,f,c
  6257  001C44                     l3134:
  6258  001C44  C011  FFD9         	movff	strlen@s,fsr2l
  6259  001C48  C012  FFDA         	movff	strlen@s+1,fsr2h
  6260  001C4C  50DF               	movf	indf2,w,c
  6261  001C4E  A4D8               	btfss	status,2,c
  6262  001C50  EF2C  F00E         	goto	u2621
  6263  001C54  EF2E  F00E         	goto	u2620
  6264  001C58                     u2621:
  6265  001C58  EF20  F00E         	goto	l3132
  6266  001C5C                     u2620:
  6267  001C5C  5013               	movf	strlen@a^0,w,c
  6268  001C5E  5C11               	subwf	strlen@s^0,w,c
  6269  001C60  6E11               	movwf	?_strlen^0,c
  6270  001C62  5014               	movf	(strlen@a+1)^0,w,c
  6271  001C64  5812               	subwfb	(strlen@s+1)^0,w,c
  6272  001C66  6E12               	movwf	(?_strlen+1)^0,c
  6273  001C68  0012               	return		;funcret
  6274  001C6A                     __end_of_strlen:
  6275                           	opt callstack 0
  6276                           
  6277 ;; *************** function _fputs *****************
  6278 ;; Defined at:
  6279 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  s               2   27[COMRAM] PTR const unsigned char 
  6282 ;;		 -> dbuf(32), 
  6283 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6284 ;;		 -> NULL(0), 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  i               2   32[COMRAM] int 
  6287 ;;  c               1   31[COMRAM] unsigned char 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  2   27[COMRAM] int 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;Total ram usage:        7 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    7
  6304 ;; This function calls:
  6305 ;;		_fputc
  6306 ;; This function is called by:
  6307 ;;		_pad
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text14
  6312  001B3A                     __ptext14:
  6313                           	opt callstack 0
  6314  001B3A                     _fputs:
  6315                           	opt callstack 18
  6316  001B3A  0E00               	movlw	0
  6317  001B3C  6E22               	movwf	(fputs@i+1)^0,c
  6318  001B3E  0E00               	movlw	0
  6319  001B40  6E21               	movwf	fputs@i^0,c
  6320  001B42  EFAE  F00D         	goto	l3128
  6321  001B46                     l3124:
  6322  001B46  C020  F013         	movff	fputs@c,fputc@c
  6323  001B4A  6A14               	clrf	(fputc@c+1)^0,c
  6324  001B4C  C01E  F015         	movff	fputs@fp,fputc@fp
  6325  001B50  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  6326  001B54  EC93  F00C         	call	_fputc	;wreg free
  6327  001B58  4A21               	infsnz	fputs@i^0,f,c
  6328  001B5A  2A22               	incf	(fputs@i+1)^0,f,c
  6329  001B5C                     l3128:
  6330  001B5C  5021               	movf	fputs@i^0,w,c
  6331  001B5E  241C               	addwf	fputs@s^0,w,c
  6332  001B60  6ED9               	movwf	fsr2l,c
  6333  001B62  5022               	movf	(fputs@i+1)^0,w,c
  6334  001B64  201D               	addwfc	(fputs@s+1)^0,w,c
  6335  001B66  6EDA               	movwf	fsr2h,c
  6336  001B68  50DF               	movf	indf2,w,c
  6337  001B6A  6E20               	movwf	fputs@c^0,c
  6338  001B6C  5020               	movf	fputs@c^0,w,c
  6339  001B6E  A4D8               	btfss	status,2,c
  6340  001B70  EFBC  F00D         	goto	u2611
  6341  001B74  EFBE  F00D         	goto	u2610
  6342  001B78                     u2611:
  6343  001B78  EFA3  F00D         	goto	l3124
  6344  001B7C                     u2610:
  6345  001B7C  0012               	return		;funcret
  6346  001B7E                     __end_of_fputs:
  6347                           	opt callstack 0
  6348                           
  6349 ;; *************** function _fputc *****************
  6350 ;; Defined at:
  6351 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  c               2   18[COMRAM] int 
  6354 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  6355 ;;		 -> NULL(0), 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  2   18[COMRAM] int 
  6360 ;; Registers used:
  6361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;Total ram usage:        9 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:    6
  6374 ;; This function calls:
  6375 ;;		_putch
  6376 ;; This function is called by:
  6377 ;;		_pad
  6378 ;;		_vfpfcnvrt
  6379 ;;		_fputs
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text15
  6384  001926                     __ptext15:
  6385                           	opt callstack 0
  6386  001926                     _fputc:
  6387                           	opt callstack 18
  6388  001926  5015               	movf	fputc@fp^0,w,c
  6389  001928  1016               	iorwf	(fputc@fp+1)^0,w,c
  6390  00192A  B4D8               	btfsc	status,2,c
  6391  00192C  EF9A  F00C         	goto	u2571
  6392  001930  EF9C  F00C         	goto	u2570
  6393  001934                     u2571:
  6394  001934  EFA5  F00C         	goto	l3112
  6395  001938                     u2570:
  6396  001938  5015               	movf	fputc@fp^0,w,c
  6397  00193A  1016               	iorwf	(fputc@fp+1)^0,w,c
  6398  00193C  A4D8               	btfss	status,2,c
  6399  00193E  EFA3  F00C         	goto	u2581
  6400  001942  EFA5  F00C         	goto	u2580
  6401  001946                     u2581:
  6402  001946  EFAA  F00C         	goto	l3114
  6403  00194A                     u2580:
  6404  00194A                     l3112:
  6405  00194A  5013               	movf	fputc@c^0,w,c
  6406  00194C  EC55  F00F         	call	_putch
  6407  001950  EFDD  F00C         	goto	l1267
  6408  001954                     l3114:
  6409  001954  EE20 F004          	lfsr	2,4
  6410  001958  5015               	movf	fputc@fp^0,w,c
  6411  00195A  26D9               	addwf	fsr2l,f,c
  6412  00195C  5016               	movf	(fputc@fp+1)^0,w,c
  6413  00195E  22DA               	addwfc	fsr2h,f,c
  6414  001960  50DE               	movf	postinc2,w,c
  6415  001962  10DE               	iorwf	postinc2,w,c
  6416  001964  B4D8               	btfsc	status,2,c
  6417  001966  EFB7  F00C         	goto	u2591
  6418  00196A  EFB9  F00C         	goto	u2590
  6419  00196E                     u2591:
  6420  00196E  EFD4  F00C         	goto	l3118
  6421  001972                     u2590:
  6422  001972  EE20 F004          	lfsr	2,4
  6423  001976  5015               	movf	fputc@fp^0,w,c
  6424  001978  26D9               	addwf	fsr2l,f,c
  6425  00197A  5016               	movf	(fputc@fp+1)^0,w,c
  6426  00197C  22DA               	addwfc	fsr2h,f,c
  6427  00197E  EE10 F002          	lfsr	1,2
  6428  001982  5015               	movf	fputc@fp^0,w,c
  6429  001984  26E1               	addwf	fsr1l,f,c
  6430  001986  5016               	movf	(fputc@fp+1)^0,w,c
  6431  001988  22E2               	addwfc	fsr1h,f,c
  6432  00198A  50DE               	movf	postinc2,w,c
  6433  00198C  5CE6               	subwf	postinc1,w,c
  6434  00198E  50E6               	movf	postinc1,w,c
  6435  001990  0A80               	xorlw	128
  6436  001992  6E1B               	movwf	(??_fputc+4)^0,c
  6437  001994  50DE               	movf	postinc2,w,c
  6438  001996  0A80               	xorlw	128
  6439  001998  581B               	subwfb	(??_fputc+4)^0,w,c
  6440  00199A  B0D8               	btfsc	status,0,c
  6441  00199C  EFD2  F00C         	goto	u2601
  6442  0019A0  EFD4  F00C         	goto	u2600
  6443  0019A4                     u2601:
  6444  0019A4  EFDD  F00C         	goto	l1267
  6445  0019A8                     u2600:
  6446  0019A8                     l3118:
  6447  0019A8  EE20 F002          	lfsr	2,2
  6448  0019AC  5015               	movf	fputc@fp^0,w,c
  6449  0019AE  26D9               	addwf	fsr2l,f,c
  6450  0019B0  5016               	movf	(fputc@fp+1)^0,w,c
  6451  0019B2  22DA               	addwfc	fsr2h,f,c
  6452  0019B4  2ADE               	incf	postinc2,f,c
  6453  0019B6  0E00               	movlw	0
  6454  0019B8  22DD               	addwfc	postdec2,f,c
  6455  0019BA                     l1267:
  6456  0019BA  0012               	return		;funcret
  6457  0019BC                     __end_of_fputc:
  6458                           	opt callstack 0
  6459                           
  6460 ;; *************** function _putch *****************
  6461 ;; Defined at:
  6462 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  txData          1    wreg     unsigned char 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  txData          1   17[COMRAM] unsigned char 
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		wreg, status,2, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;Total ram usage:        1 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    5
  6483 ;; This function calls:
  6484 ;;		_EUSART1_Write
  6485 ;; This function is called by:
  6486 ;;		_fputc
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text16
  6491  001EAA                     __ptext16:
  6492                           	opt callstack 0
  6493  001EAA                     _putch:
  6494                           	opt callstack 18
  6495                           
  6496                           ;incstack = 0
  6497                           ;putch@txData stored from wreg
  6498  001EAA  6E12               	movwf	putch@txData^0,c
  6499  001EAC                     
  6500                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  6501  001EAC  5012               	movf	putch@txData^0,w,c
  6502  001EAE  EC0C  F00F         	call	_EUSART1_Write
  6503  001EB2  0012               	return		;funcret
  6504  001EB4                     __end_of_putch:
  6505                           	opt callstack 0
  6506                           
  6507 ;; *************** function _EUSART1_Write *****************
  6508 ;; Defined at:
  6509 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  txData          1    wreg     unsigned char 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  txData          1   16[COMRAM] unsigned char 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  1    wreg      void 
  6516 ;; Registers used:
  6517 ;;		wreg
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;Total ram usage:        1 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    4
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_putch
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text17
  6538  001E18                     __ptext17:
  6539                           	opt callstack 0
  6540  001E18                     _EUSART1_Write:
  6541                           	opt callstack 18
  6542                           
  6543                           ;incstack = 0
  6544                           ;EUSART1_Write@txData stored from wreg
  6545  001E18  6E11               	movwf	EUSART1_Write@txData^0,c
  6546  001E1A                     l151:
  6547                           
  6548                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  6549  001E1A  A89E               	btfss	158,4,c	;volatile
  6550  001E1C  EF12  F00F         	goto	u2561
  6551  001E20  EF14  F00F         	goto	u2560
  6552  001E24                     u2561:
  6553  001E24  EF0D  F00F         	goto	l151
  6554  001E28                     u2560:
  6555  001E28                     
  6556                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  6557  001E28  C011  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6558  001E2C  0012               	return		;funcret
  6559  001E2E                     __end_of_EUSART1_Write:
  6560                           	opt callstack 0
  6561                           
  6562 ;; *************** function _atoi *****************
  6563 ;; Defined at:
  6564 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  s               2   23[COMRAM] PTR const unsigned char 
  6567 ;;		 -> STR_59(17), STR_58(50), STR_57(25), STR_56(38), 
  6568 ;;		 -> STR_55(41), STR_54(42), STR_53(67), STR_52(68), 
  6569 ;;		 -> STR_51(52), STR_50(48), STR_49(42), STR_48(26), 
  6570 ;;		 -> STR_47(31), STR_46(35), STR_45(37), STR_44(15), 
  6571 ;;		 -> STR_43(27), STR_42(24), STR_41(23), STR_40(20), 
  6572 ;;		 -> STR_39(23), STR_38(26), STR_37(38), STR_36(29), 
  6573 ;;		 -> STR_35(10), STR_34(36), STR_33(48), STR_32(24), 
  6574 ;;		 -> STR_31(3), STR_30(5), STR_29(19), STR_28(18), 
  6575 ;;		 -> STR_27(36), STR_26(72), STR_25(38), STR_24(74), 
  6576 ;;		 -> STR_23(2), STR_22(2), STR_21(13), STR_20(52), 
  6577 ;;		 -> STR_19(27), STR_18(16), STR_17(31), STR_16(68), 
  6578 ;;		 -> STR_15(48), STR_14(33), STR_13(25), STR_12(22), 
  6579 ;;		 -> STR_11(7), STR_10(15), STR_9(52), STR_8(41), 
  6580 ;;		 -> STR_7(17), STR_6(23), STR_5(52), STR_4(5), 
  6581 ;;		 -> STR_3(22), STR_2(21), STR_1(15), 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  n               2   36[COMRAM] int 
  6584 ;;  neg             2   29[COMRAM] int 
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  2   23[COMRAM] int 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;Total ram usage:       15 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    5
  6601 ;; This function calls:
  6602 ;;		___wmul
  6603 ;;		_isdigit
  6604 ;;		_isspace
  6605 ;; This function is called by:
  6606 ;;		_vfpfcnvrt
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text18
  6611  001116                     __ptext18:
  6612                           	opt callstack 0
  6613  001116                     _atoi:
  6614                           	opt callstack 22
  6615  001116  0E00               	movlw	0
  6616  001118  6E26               	movwf	(atoi@n+1)^0,c
  6617  00111A  0E00               	movlw	0
  6618  00111C  6E25               	movwf	atoi@n^0,c
  6619  00111E  0E00               	movlw	0
  6620  001120  6E1F               	movwf	(atoi@neg+1)^0,c
  6621  001122  0E00               	movlw	0
  6622  001124  6E1E               	movwf	atoi@neg^0,c
  6623  001126  EF97  F008         	goto	l3422
  6624  00112A                     l3420:
  6625  00112A  4A18               	infsnz	atoi@s^0,f,c
  6626  00112C  2A19               	incf	(atoi@s+1)^0,f,c
  6627  00112E                     l3422:
  6628  00112E  0E01               	movlw	1
  6629  001130  6E24               	movwf	_atoi$1607^0,c
  6630  001132  C018  FFF6         	movff	atoi@s,tblptrl
  6631  001136  C019  FFF7         	movff	atoi@s+1,tblptrh
  6632  00113A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6633  00113A  6AF8               	clrf	tblptru,c
  6634  00113C                     	endif
  6635  00113C                     	if	0	;tblptru may be non-zero
  6636  00113C                     	endif
  6637  00113C  0008               	tblrd		*
  6638  00113E  50F5               	movf	tablat,w,c
  6639  001140  0A20               	xorlw	32
  6640  001142  B4D8               	btfsc	status,2,c
  6641  001144  EFA6  F008         	goto	u3151
  6642  001148  EFA8  F008         	goto	u3150
  6643  00114C                     u3151:
  6644  00114C  EFC6  F008         	goto	l3430
  6645  001150                     u3150:
  6646  001150  0EF7               	movlw	247
  6647  001152  6E1A               	movwf	??_atoi^0,c
  6648  001154  0EFF               	movlw	255
  6649  001156  6E1B               	movwf	(??_atoi+1)^0,c
  6650  001158  C018  FFF6         	movff	atoi@s,tblptrl
  6651  00115C  C019  FFF7         	movff	atoi@s+1,tblptrh
  6652  001160                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6653  001160  6AF8               	clrf	tblptru,c
  6654  001162                     	endif
  6655  001162                     	if	0	;tblptru may be non-zero
  6656  001162                     	endif
  6657  001162  0008               	tblrd		*
  6658  001164  50F5               	movf	tablat,w,c
  6659  001166  6E1C               	movwf	(??_atoi+2)^0,c
  6660  001168  6A1D               	clrf	(??_atoi+3)^0,c
  6661  00116A  501A               	movf	??_atoi^0,w,c
  6662  00116C  261C               	addwf	(??_atoi+2)^0,f,c
  6663  00116E  501B               	movf	(??_atoi+1)^0,w,c
  6664  001170  221D               	addwfc	(??_atoi+3)^0,f,c
  6665  001172  501D               	movf	(??_atoi+3)^0,w,c
  6666  001174  E109               	bnz	u3160
  6667  001176  0E05               	movlw	5
  6668  001178  5C1C               	subwf	(??_atoi+2)^0,w,c
  6669  00117A  A0D8               	btfss	status,0,c
  6670  00117C  EFC2  F008         	goto	u3161
  6671  001180  EFC4  F008         	goto	u3160
  6672  001184                     u3161:
  6673  001184  EFC6  F008         	goto	l3430
  6674  001188                     u3160:
  6675  001188  0E00               	movlw	0
  6676  00118A  6E24               	movwf	_atoi$1607^0,c
  6677  00118C                     l3430:
  6678  00118C  C024  F020         	movff	_atoi$1607,_atoi$1606
  6679  001190  6A21               	clrf	(_atoi$1606+1)^0,c
  6680  001192  5020               	movf	_atoi$1606^0,w,c
  6681  001194  1021               	iorwf	(_atoi$1606+1)^0,w,c
  6682  001196  A4D8               	btfss	status,2,c
  6683  001198  EFD0  F008         	goto	u3171
  6684  00119C  EFD2  F008         	goto	u3170
  6685  0011A0                     u3171:
  6686  0011A0  EF95  F008         	goto	l3420
  6687  0011A4                     u3170:
  6688  0011A4  EFDC  F008         	goto	l3440
  6689  0011A8                     l3436:
  6690  0011A8  0E00               	movlw	0
  6691  0011AA  6E1F               	movwf	(atoi@neg+1)^0,c
  6692  0011AC  0E01               	movlw	1
  6693  0011AE  6E1E               	movwf	atoi@neg^0,c
  6694  0011B0                     l3438:
  6695  0011B0  4A18               	infsnz	atoi@s^0,f,c
  6696  0011B2  2A19               	incf	(atoi@s+1)^0,f,c
  6697  0011B4  EF13  F009         	goto	l3446
  6698  0011B8                     l3440:
  6699  0011B8  C018  FFF6         	movff	atoi@s,tblptrl
  6700  0011BC  C019  FFF7         	movff	atoi@s+1,tblptrh
  6701  0011C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6702  0011C0  6AF8               	clrf	tblptru,c
  6703  0011C2                     	endif
  6704  0011C2                     	if	0	;tblptru may be non-zero
  6705  0011C2                     	endif
  6706  0011C2  0008               	tblrd		*
  6707  0011C4  50F5               	movf	tablat,w,c
  6708  0011C6  6E1A               	movwf	??_atoi^0,c
  6709  0011C8  6A1B               	clrf	(??_atoi+1)^0,c
  6710                           
  6711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6712                           ; Switch size 1, requested type "simple"
  6713                           ; Number of cases is 1, Range of values is 0 to 0
  6714                           ; switch strategies available:
  6715                           ; Name         Instructions Cycles
  6716                           ; simple_byte            4     3 (average)
  6717                           ;	Chosen strategy is simple_byte
  6718  0011CA  501B               	movf	(??_atoi+1)^0,w,c
  6719  0011CC  0A00               	xorlw	0	; case 0
  6720  0011CE  B4D8               	btfsc	status,2,c
  6721  0011D0  EFEC  F008         	goto	l3828
  6722  0011D4  EF13  F009         	goto	l3446
  6723  0011D8                     l3828:
  6724                           
  6725                           ; Switch size 1, requested type "simple"
  6726                           ; Number of cases is 2, Range of values is 43 to 45
  6727                           ; switch strategies available:
  6728                           ; Name         Instructions Cycles
  6729                           ; simple_byte            7     4 (average)
  6730                           ;	Chosen strategy is simple_byte
  6731  0011D8  501A               	movf	??_atoi^0,w,c
  6732  0011DA  0A2B               	xorlw	43	; case 43
  6733  0011DC  B4D8               	btfsc	status,2,c
  6734  0011DE  EFD8  F008         	goto	l3438
  6735  0011E2  0A06               	xorlw	6	; case 45
  6736  0011E4  B4D8               	btfsc	status,2,c
  6737  0011E6  EFD4  F008         	goto	l3436
  6738  0011EA  EF13  F009         	goto	l3446
  6739  0011EE                     l3442:
  6740  0011EE  C025  F011         	movff	atoi@n,___wmul@multiplier
  6741  0011F2  C026  F012         	movff	atoi@n+1,___wmul@multiplier+1
  6742  0011F6  0E00               	movlw	0
  6743  0011F8  6E14               	movwf	(___wmul@multiplicand+1)^0,c
  6744  0011FA  0E0A               	movlw	10
  6745  0011FC  6E13               	movwf	___wmul@multiplicand^0,c
  6746  0011FE  ECA8  F00E         	call	___wmul	;wreg free
  6747  001202  C018  FFF6         	movff	atoi@s,tblptrl
  6748  001206  C019  FFF7         	movff	atoi@s+1,tblptrh
  6749  00120A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6750  00120A  6AF8               	clrf	tblptru,c
  6751  00120C                     	endif
  6752  00120C                     	if	0	;tblptru may be non-zero
  6753  00120C                     	endif
  6754  00120C  0008               	tblrd		*
  6755  00120E  50F5               	movf	tablat,w,c
  6756  001210  5E11               	subwf	?___wmul^0,f,c
  6757  001212  0E00               	movlw	0
  6758  001214  5A12               	subwfb	(?___wmul+1)^0,f,c
  6759  001216  0E30               	movlw	48
  6760  001218  2411               	addwf	?___wmul^0,w,c
  6761  00121A  6E25               	movwf	atoi@n^0,c
  6762  00121C  0E00               	movlw	0
  6763  00121E  2012               	addwfc	(?___wmul+1)^0,w,c
  6764  001220  6E26               	movwf	(atoi@n+1)^0,c
  6765  001222  EFD8  F008         	goto	l3438
  6766  001226                     l3446:
  6767  001226  0ED0               	movlw	208
  6768  001228  6E1A               	movwf	??_atoi^0,c
  6769  00122A  0EFF               	movlw	255
  6770  00122C  6E1B               	movwf	(??_atoi+1)^0,c
  6771  00122E  C018  FFF6         	movff	atoi@s,tblptrl
  6772  001232  C019  FFF7         	movff	atoi@s+1,tblptrh
  6773  001236                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6774  001236  6AF8               	clrf	tblptru,c
  6775  001238                     	endif
  6776  001238                     	if	0	;tblptru may be non-zero
  6777  001238                     	endif
  6778  001238  0008               	tblrd		*
  6779  00123A  50F5               	movf	tablat,w,c
  6780  00123C  6E1C               	movwf	(??_atoi+2)^0,c
  6781  00123E  6A1D               	clrf	(??_atoi+3)^0,c
  6782  001240  501A               	movf	??_atoi^0,w,c
  6783  001242  261C               	addwf	(??_atoi+2)^0,f,c
  6784  001244  501B               	movf	(??_atoi+1)^0,w,c
  6785  001246  221D               	addwfc	(??_atoi+3)^0,f,c
  6786  001248  501D               	movf	(??_atoi+3)^0,w,c
  6787  00124A  E10A               	bnz	u3180
  6788  00124C  0E0A               	movlw	10
  6789  00124E  5C1C               	subwf	(??_atoi+2)^0,w,c
  6790  001250  A0D8               	btfss	status,0,c
  6791  001252  EF2D  F009         	goto	u3181
  6792  001256  EF30  F009         	goto	u3180
  6793  00125A                     u3181:
  6794  00125A  0E01               	movlw	1
  6795  00125C  EF31  F009         	goto	u3190
  6796  001260                     u3180:
  6797  001260  0E00               	movlw	0
  6798  001262                     u3190:
  6799  001262  6E22               	movwf	_atoi$1608^0,c
  6800  001264  6A23               	clrf	(_atoi$1608+1)^0,c
  6801  001266  5022               	movf	_atoi$1608^0,w,c
  6802  001268  1023               	iorwf	(_atoi$1608+1)^0,w,c
  6803  00126A  A4D8               	btfss	status,2,c
  6804  00126C  EF3A  F009         	goto	u3201
  6805  001270  EF3C  F009         	goto	u3200
  6806  001274                     u3201:
  6807  001274  EFF7  F008         	goto	l3442
  6808  001278                     u3200:
  6809  001278  501E               	movf	atoi@neg^0,w,c
  6810  00127A  101F               	iorwf	(atoi@neg+1)^0,w,c
  6811  00127C  A4D8               	btfss	status,2,c
  6812  00127E  EF43  F009         	goto	u3211
  6813  001282  EF45  F009         	goto	u3210
  6814  001286                     u3211:
  6815  001286  EF53  F009         	goto	l1238
  6816  00128A                     u3210:
  6817  00128A  C025  F01A         	movff	atoi@n,??_atoi
  6818  00128E  C026  F01B         	movff	atoi@n+1,??_atoi+1
  6819  001292  1E1A               	comf	??_atoi^0,f,c
  6820  001294  1E1B               	comf	(??_atoi+1)^0,f,c
  6821  001296  4A1A               	infsnz	??_atoi^0,f,c
  6822  001298  2A1B               	incf	(??_atoi+1)^0,f,c
  6823  00129A  C01A  F018         	movff	??_atoi,?_atoi
  6824  00129E  C01B  F019         	movff	??_atoi+1,?_atoi+1
  6825  0012A2  EF57  F009         	goto	l1241
  6826  0012A6                     l1238:
  6827  0012A6  C025  F018         	movff	atoi@n,?_atoi
  6828  0012AA  C026  F019         	movff	atoi@n+1,?_atoi+1
  6829  0012AE                     l1241:
  6830  0012AE  0012               	return		;funcret
  6831  0012B0                     __end_of_atoi:
  6832                           	opt callstack 0
  6833                           
  6834 ;; *************** function _isspace *****************
  6835 ;; Defined at:
  6836 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  c               2   16[COMRAM] int 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  2   16[COMRAM] int 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;Total ram usage:        7 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    4
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_atoi
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text19
  6865  001AE8                     __ptext19:
  6866                           	opt callstack 0
  6867  001AE8                     _isspace:
  6868                           	opt callstack 22
  6869  001AE8  0E01               	movlw	1
  6870  001AEA  6E17               	movwf	_isspace$1624^0,c
  6871  001AEC  0E20               	movlw	32
  6872  001AEE  1811               	xorwf	isspace@c^0,w,c
  6873  001AF0  1012               	iorwf	(isspace@c+1)^0,w,c
  6874  001AF2  B4D8               	btfsc	status,2,c
  6875  001AF4  EF7E  F00D         	goto	u2901
  6876  001AF8  EF80  F00D         	goto	u2900
  6877  001AFC                     u2901:
  6878  001AFC  EF99  F00D         	goto	l3302
  6879  001B00                     u2900:
  6880  001B00  0EF7               	movlw	247
  6881  001B02  6E13               	movwf	??_isspace^0,c
  6882  001B04  0EFF               	movlw	255
  6883  001B06  6E14               	movwf	(??_isspace+1)^0,c
  6884  001B08  C011  F015         	movff	isspace@c,??_isspace+2
  6885  001B0C  C012  F016         	movff	isspace@c+1,??_isspace+3
  6886  001B10  5013               	movf	??_isspace^0,w,c
  6887  001B12  2615               	addwf	(??_isspace+2)^0,f,c
  6888  001B14  5014               	movf	(??_isspace+1)^0,w,c
  6889  001B16  2216               	addwfc	(??_isspace+3)^0,f,c
  6890  001B18  5016               	movf	(??_isspace+3)^0,w,c
  6891  001B1A  E109               	bnz	u2910
  6892  001B1C  0E05               	movlw	5
  6893  001B1E  5C15               	subwf	(??_isspace+2)^0,w,c
  6894  001B20  A0D8               	btfss	status,0,c
  6895  001B22  EF95  F00D         	goto	u2911
  6896  001B26  EF97  F00D         	goto	u2910
  6897  001B2A                     u2911:
  6898  001B2A  EF99  F00D         	goto	l3302
  6899  001B2E                     u2910:
  6900  001B2E  0E00               	movlw	0
  6901  001B30  6E17               	movwf	_isspace$1624^0,c
  6902  001B32                     l3302:
  6903  001B32  C017  F011         	movff	_isspace$1624,?_isspace
  6904  001B36  6A12               	clrf	(?_isspace+1)^0,c
  6905  001B38  0012               	return		;funcret
  6906  001B3A                     __end_of_isspace:
  6907                           	opt callstack 0
  6908                           
  6909 ;; *************** function _isdigit *****************
  6910 ;; Defined at:
  6911 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  c               2   16[COMRAM] int 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;		None
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  2   16[COMRAM] int 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;Total ram usage:        6 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; Hardware stack levels required when called:    4
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_vfpfcnvrt
  6936 ;;		_atoi
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text20
  6941  001BFC                     __ptext20:
  6942                           	opt callstack 0
  6943  001BFC                     _isdigit:
  6944                           	opt callstack 23
  6945  001BFC  0ED0               	movlw	208
  6946  001BFE  6E13               	movwf	??_isdigit^0,c
  6947  001C00  0EFF               	movlw	255
  6948  001C02  6E14               	movwf	(??_isdigit+1)^0,c
  6949  001C04  C011  F015         	movff	isdigit@c,??_isdigit+2
  6950  001C08  C012  F016         	movff	isdigit@c+1,??_isdigit+3
  6951  001C0C  5013               	movf	??_isdigit^0,w,c
  6952  001C0E  2615               	addwf	(??_isdigit+2)^0,f,c
  6953  001C10  5014               	movf	(??_isdigit+1)^0,w,c
  6954  001C12  2216               	addwfc	(??_isdigit+3)^0,f,c
  6955  001C14  5016               	movf	(??_isdigit+3)^0,w,c
  6956  001C16  E10A               	bnz	u2680
  6957  001C18  0E0A               	movlw	10
  6958  001C1A  5C15               	subwf	(??_isdigit+2)^0,w,c
  6959  001C1C  A0D8               	btfss	status,0,c
  6960  001C1E  EF13  F00E         	goto	u2681
  6961  001C22  EF16  F00E         	goto	u2680
  6962  001C26                     u2681:
  6963  001C26  0E01               	movlw	1
  6964  001C28  EF17  F00E         	goto	u2690
  6965  001C2C                     u2680:
  6966  001C2C  0E00               	movlw	0
  6967  001C2E                     u2690:
  6968  001C2E  6E11               	movwf	?_isdigit^0,c
  6969  001C30  6A12               	clrf	(?_isdigit+1)^0,c
  6970  001C32  0012               	return		;funcret
  6971  001C34                     __end_of_isdigit:
  6972                           	opt callstack 0
  6973                           
  6974 ;; *************** function ___wmul *****************
  6975 ;; Defined at:
  6976 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  multiplier      2   16[COMRAM] unsigned int 
  6979 ;;  multiplicand    2   18[COMRAM] unsigned int 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  product         2   20[COMRAM] unsigned int 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  2   16[COMRAM] unsigned int 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, prodl, prodh
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;Total ram usage:        6 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    4
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_atoi
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text21
  7006  001D50                     __ptext21:
  7007                           	opt callstack 0
  7008  001D50                     ___wmul:
  7009                           	opt callstack 22
  7010  001D50  5011               	movf	___wmul@multiplier^0,w,c
  7011  001D52  0213               	mulwf	___wmul@multiplicand^0,c
  7012  001D54  CFF3 F015          	movff	prodl,___wmul@product
  7013  001D58  CFF4 F016          	movff	prodh,___wmul@product+1
  7014  001D5C  5011               	movf	___wmul@multiplier^0,w,c
  7015  001D5E  0214               	mulwf	(___wmul@multiplicand+1)^0,c
  7016  001D60  50F3               	movf	243,w,c
  7017  001D62  2616               	addwf	(___wmul@product+1)^0,f,c
  7018  001D64  5012               	movf	(___wmul@multiplier+1)^0,w,c
  7019  001D66  0213               	mulwf	___wmul@multiplicand^0,c
  7020  001D68  50F3               	movf	243,w,c
  7021  001D6A  2616               	addwf	(___wmul@product+1)^0,f,c
  7022  001D6C  C015  F011         	movff	___wmul@product,?___wmul
  7023  001D70  C016  F012         	movff	___wmul@product+1,?___wmul+1
  7024  001D74  0012               	return		;funcret
  7025  001D76                     __end_of___wmul:
  7026                           	opt callstack 0
  7027                           
  7028 ;; *************** function _noteOn *****************
  7029 ;; Defined at:
  7030 ;;		line 352 in file "main_d11.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  cmd             1    wreg     unsigned char 
  7033 ;;  pitch           1   17[COMRAM] unsigned char 
  7034 ;;  velocity        1   18[COMRAM] unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  cmd             1   19[COMRAM] unsigned char 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;Total ram usage:        3 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    5
  7053 ;; This function calls:
  7054 ;;		_putByteSCI
  7055 ;; This function is called by:
  7056 ;;		_main
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text22
  7061  001E2E                     __ptext22:
  7062                           	opt callstack 0
  7063  001E2E                     _noteOn:
  7064                           	opt callstack 25
  7065                           
  7066                           ;incstack = 0
  7067                           ;noteOn@cmd stored from wreg
  7068  001E2E  6E14               	movwf	noteOn@cmd^0,c
  7069  001E30                     
  7070                           ;main_d11.c: 353:   putByteSCI(cmd);
  7071  001E30  5014               	movf	noteOn@cmd^0,w,c
  7072  001E32  ECF4  F00E         	call	_putByteSCI
  7073                           
  7074                           ;main_d11.c: 354:   putByteSCI(pitch);
  7075  001E36  5012               	movf	noteOn@pitch^0,w,c
  7076  001E38  ECF4  F00E         	call	_putByteSCI
  7077                           
  7078                           ;main_d11.c: 355:   putByteSCI(velocity);
  7079  001E3C  5013               	movf	noteOn@velocity^0,w,c
  7080  001E3E  ECF4  F00E         	call	_putByteSCI
  7081  001E42  0012               	return		;funcret
  7082  001E44                     __end_of_noteOn:
  7083                           	opt callstack 0
  7084                           
  7085 ;; *************** function _putByteSCI *****************
  7086 ;; Defined at:
  7087 ;;		line 344 in file "main_d11.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  writeByte       1    wreg     unsigned char 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  writeByte       1   16[COMRAM] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;Total ram usage:        1 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    4
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_main
  7112 ;;		_noteOn
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text23
  7117  001DE8                     __ptext23:
  7118                           	opt callstack 0
  7119  001DE8                     _putByteSCI:
  7120                           	opt callstack 26
  7121                           
  7122                           ;incstack = 0
  7123                           ;putByteSCI@writeByte stored from wreg
  7124  001DE8  6E11               	movwf	putByteSCI@writeByte^0,c
  7125  001DEA                     l400:
  7126  001DEA  A89E               	btfss	158,4,c	;volatile
  7127  001DEC  EFFA  F00E         	goto	u2081
  7128  001DF0  EFFC  F00E         	goto	u2080
  7129  001DF4                     u2081:
  7130  001DF4  EFF5  F00E         	goto	l400
  7131  001DF8                     u2080:
  7132  001DF8                     
  7133                           ;main_d11.c: 346:         PIR1bits.TX1IF = 0;
  7134  001DF8  989E               	bcf	158,4,c	;volatile
  7135  001DFA                     
  7136                           ;main_d11.c: 347:         TX1REG = writeByte;
  7137  001DFA  C011  FFAD         	movff	putByteSCI@writeByte,4013	;volatile
  7138  001DFE  0012               	return		;funcret
  7139  001E00                     __end_of_putByteSCI:
  7140                           	opt callstack 0
  7141                           
  7142 ;; *************** function _SYSTEM_Initialize *****************
  7143 ;; Defined at:
  7144 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;		None
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;Total ram usage:        0 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    6
  7165 ;; This function calls:
  7166 ;;		_ADC_Initialize
  7167 ;;		_EUSART1_Initialize
  7168 ;;		_INTERRUPT_Initialize
  7169 ;;		_OSCILLATOR_Initialize
  7170 ;;		_PIN_MANAGER_Initialize
  7171 ;;		_TMR0_Initialize
  7172 ;; This function is called by:
  7173 ;;		_main
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           	psect	text24
  7178  001DCE                     __ptext24:
  7179                           	opt callstack 0
  7180  001DCE                     _SYSTEM_Initialize:
  7181                           	opt callstack 24
  7182  001DCE                     
  7183                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7184  001DCE  EC76  F00F         	call	_INTERRUPT_Initialize	;wreg free
  7185  001DD2                     
  7186                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7187  001DD2  EC6B  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  7188  001DD6                     
  7189                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7190  001DD6  ECD9  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  7191  001DDA                     
  7192                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  7193  001DDA  EC35  F00E         	call	_TMR0_Initialize	;wreg free
  7194  001DDE                     
  7195                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  7196  001DDE  EC22  F00F         	call	_ADC_Initialize	;wreg free
  7197  001DE2                     
  7198                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  7199  001DE2  ECDF  F00D         	call	_EUSART1_Initialize	;wreg free
  7200  001DE6  0012               	return		;funcret
  7201  001DE8                     __end_of_SYSTEM_Initialize:
  7202                           	opt callstack 0
  7203                           
  7204 ;; *************** function _TMR0_Initialize *****************
  7205 ;; Defined at:
  7206 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;		None
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1    wreg      void 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0, cstack
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;Total ram usage:        2 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; Hardware stack levels required when called:    5
  7227 ;; This function calls:
  7228 ;;		_TMR0_SetInterruptHandler
  7229 ;; This function is called by:
  7230 ;;		_SYSTEM_Initialize
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text25
  7235  001C6A                     __ptext25:
  7236                           	opt callstack 0
  7237  001C6A                     _TMR0_Initialize:
  7238                           	opt callstack 24
  7239  001C6A                     
  7240                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  7241  001C6A  9CD5               	bcf	213,6,c	;volatile
  7242  001C6C                     
  7243                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFC;
  7244  001C6C  0EFC               	movlw	252
  7245  001C6E  6ED7               	movwf	215,c	;volatile
  7246                           
  7247                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x17;
  7248  001C70  0E17               	movlw	23
  7249  001C72  6ED6               	movwf	214,c	;volatile
  7250  001C74                     
  7251                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  7252  001C74  50D6               	movf	214,w,c	;volatile
  7253  001C76  CFD7 F013          	movff	4055,??_TMR0_Initialize	;volatile
  7254  001C7A  6A14               	clrf	(??_TMR0_Initialize+1)^0,c
  7255  001C7C  C013  F014         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  7256  001C80  6A13               	clrf	??_TMR0_Initialize^0,c
  7257  001C82  1013               	iorwf	??_TMR0_Initialize^0,w,c
  7258  001C84  6E48               	movwf	_timer0ReloadVal^0,c	;volatile
  7259  001C86  5014               	movf	(??_TMR0_Initialize+1)^0,w,c
  7260  001C88  6E49               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  7261  001C8A                     
  7262                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  7263  001C8A  94F2               	bcf	242,2,c	;volatile
  7264  001C8C                     
  7265                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  7266  001C8C  8AF2               	bsf	242,5,c	;volatile
  7267  001C8E                     
  7268                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7269  001C8E  0EF8               	movlw	low _TMR0_DefaultInterruptHandler
  7270  001C90  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  7271  001C92  0E1E               	movlw	high _TMR0_DefaultInterruptHandler
  7272  001C94  6E12               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  7273  001C96  EC5A  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
  7274  001C9A                     
  7275                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  7276  001C9A  0E93               	movlw	147
  7277  001C9C  6ED5               	movwf	213,c	;volatile
  7278  001C9E  0012               	return		;funcret
  7279  001CA0                     __end_of_TMR0_Initialize:
  7280                           	opt callstack 0
  7281                           
  7282 ;; *************** function _TMR0_SetInterruptHandler *****************
  7283 ;; Defined at:
  7284 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  7287 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;		None
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		wreg, status,2, status,0
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;Total ram usage:        2 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    4
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_TMR0_Initialize
  7310 ;;		_main
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text26
  7315  001EB4                     __ptext26:
  7316                           	opt callstack 0
  7317  001EB4                     _TMR0_SetInterruptHandler:
  7318                           	opt callstack 26
  7319  001EB4                     
  7320                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  7321  001EB4  C011  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  7322  001EB8  C012  F04B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  7323  001EBC  0012               	return		;funcret
  7324  001EBE                     __end_of_TMR0_SetInterruptHandler:
  7325                           	opt callstack 0
  7326                           
  7327 ;; *************** function _PIN_MANAGER_Initialize *****************
  7328 ;; Defined at:
  7329 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;Total ram usage:        0 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    4
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		_SYSTEM_Initialize
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text27
  7358  001CD6                     __ptext27:
  7359                           	opt callstack 0
  7360  001CD6                     _PIN_MANAGER_Initialize:
  7361                           	opt callstack 25
  7362  001CD6                     
  7363                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7364  001CD6  0E00               	movlw	0
  7365  001CD8  6E89               	movwf	137,c	;volatile
  7366                           
  7367                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7368  001CDA  0E00               	movlw	0
  7369  001CDC  6E8A               	movwf	138,c	;volatile
  7370                           
  7371                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7372  001CDE  0E00               	movlw	0
  7373  001CE0  6E8B               	movwf	139,c	;volatile
  7374  001CE2                     
  7375                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  7376  001CE2  6892               	setf	146,c	;volatile
  7377  001CE4                     
  7378                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  7379  001CE4  6893               	setf	147,c	;volatile
  7380                           
  7381                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  7382  001CE6  0EBB               	movlw	187
  7383  001CE8  6E94               	movwf	148,c	;volatile
  7384                           
  7385                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  7386  001CEA  0E3C               	movlw	60
  7387  001CEC  010F               	movlb	15	; () banked
  7388  001CEE  6F3A               	movwf	58,b	;volatile
  7389                           
  7390                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  7391  001CF0  0E3F               	movlw	63
  7392  001CF2  6F39               	movwf	57,b	;volatile
  7393                           
  7394                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x23;
  7395  001CF4  0E23               	movlw	35
  7396  001CF6  6F38               	movwf	56,b	;volatile
  7397                           
  7398                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7399  001CF8  0E00               	movlw	0
  7400  001CFA  6E61               	movwf	97,c	;volatile
  7401  001CFC                     
  7402                           ; BSR set to: 15
  7403                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  7404  001CFC  8EF1               	bsf	241,7,c	;volatile
  7405  001CFE                     
  7406                           ; BSR set to: 15
  7407  001CFE  0012               	return		;funcret
  7408  001D00                     __end_of_PIN_MANAGER_Initialize:
  7409                           	opt callstack 0
  7410                           
  7411 ;; *************** function _OSCILLATOR_Initialize *****************
  7412 ;; Defined at:
  7413 ;;		line 61 in file "mcc_generated_files/mcc.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;		None
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;		None
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, status,2
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;Total ram usage:        0 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; Hardware stack levels required when called:    4
  7434 ;; This function calls:
  7435 ;;		Nothing
  7436 ;; This function is called by:
  7437 ;;		_SYSTEM_Initialize
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text28
  7442  001DB2                     __ptext28:
  7443                           	opt callstack 0
  7444  001DB2                     _OSCILLATOR_Initialize:
  7445                           	opt callstack 25
  7446  001DB2                     
  7447                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  7448  001DB2  0E70               	movlw	112
  7449  001DB4  6ED3               	movwf	211,c	;volatile
  7450                           
  7451                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  7452  001DB6  0E04               	movlw	4
  7453  001DB8  6ED2               	movwf	210,c	;volatile
  7454                           
  7455                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  7456  001DBA  0E40               	movlw	64
  7457  001DBC  6E9B               	movwf	155,c	;volatile
  7458  001DBE                     l204:
  7459                           
  7460                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  7461  001DBE  AED2               	btfss	4050,7,c	;volatile
  7462  001DC0  EFE4  F00E         	goto	u2071
  7463  001DC4  EFE6  F00E         	goto	u2070
  7464  001DC8                     u2071:
  7465  001DC8  EFDF  F00E         	goto	l204
  7466  001DCC                     u2070:
  7467  001DCC  0012               	return		;funcret
  7468  001DCE                     __end_of_OSCILLATOR_Initialize:
  7469                           	opt callstack 0
  7470                           
  7471 ;; *************** function _INTERRUPT_Initialize *****************
  7472 ;; Defined at:
  7473 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;		None
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;		None
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1    wreg      void 
  7480 ;; Registers used:
  7481 ;;		None
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;Total ram usage:        0 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:    4
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_SYSTEM_Initialize
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text29
  7502  001EEC                     __ptext29:
  7503                           	opt callstack 0
  7504  001EEC                     _INTERRUPT_Initialize:
  7505                           	opt callstack 25
  7506  001EEC                     
  7507                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  7508  001EEC  9ED0               	bcf	208,7,c	;volatile
  7509  001EEE  0012               	return		;funcret
  7510  001EF0                     __end_of_INTERRUPT_Initialize:
  7511                           	opt callstack 0
  7512                           
  7513 ;; *************** function _EUSART1_Initialize *****************
  7514 ;; Defined at:
  7515 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;		None
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      void 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0, cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;Total ram usage:        0 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:    5
  7536 ;; This function calls:
  7537 ;;		_EUSART1_SetErrorHandler
  7538 ;;		_EUSART1_SetFramingErrorHandler
  7539 ;;		_EUSART1_SetOverrunErrorHandler
  7540 ;; This function is called by:
  7541 ;;		_SYSTEM_Initialize
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text30
  7546  001BBE                     __ptext30:
  7547                           	opt callstack 0
  7548  001BBE                     _EUSART1_Initialize:
  7549                           	opt callstack 24
  7550  001BBE                     
  7551                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  7552  001BBE  0E08               	movlw	8
  7553  001BC0  6EB8               	movwf	184,c	;volatile
  7554                           
  7555                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  7556  001BC2  0E90               	movlw	144
  7557  001BC4  6EAB               	movwf	171,c	;volatile
  7558                           
  7559                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  7560  001BC6  0E24               	movlw	36
  7561  001BC8  6EAC               	movwf	172,c	;volatile
  7562                           
  7563                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  7564  001BCA  0E82               	movlw	130
  7565  001BCC  6EAF               	movwf	175,c	;volatile
  7566                           
  7567                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  7568  001BCE  0E06               	movlw	6
  7569  001BD0  6EB0               	movwf	176,c	;volatile
  7570  001BD2                     
  7571                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  7572  001BD2  0E00               	movlw	0
  7573  001BD4  6E11               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  7574  001BD6  0E00               	movlw	0
  7575  001BD8  6E12               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  7576  001BDA  EC64  F00F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7577  001BDE                     
  7578                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  7579  001BDE  0E00               	movlw	0
  7580  001BE0  6E11               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  7581  001BE2  0E00               	movlw	0
  7582  001BE4  6E12               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7583  001BE6  EC5F  F00F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7584  001BEA                     
  7585                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  7586  001BEA  0E00               	movlw	0
  7587  001BEC  6E11               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  7588  001BEE  0E00               	movlw	0
  7589  001BF0  6E12               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  7590  001BF2  EC69  F00F         	call	_EUSART1_SetErrorHandler	;wreg free
  7591  001BF6                     
  7592                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  7593  001BF6  0E00               	movlw	0
  7594  001BF8  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  7595  001BFA  0012               	return		;funcret
  7596  001BFC                     __end_of_EUSART1_Initialize:
  7597                           	opt callstack 0
  7598                           
  7599 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7600 ;; Defined at:
  7601 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  7604 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;Total ram usage:        2 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:    4
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_EUSART1_Initialize
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text31
  7631  001EBE                     __ptext31:
  7632                           	opt callstack 0
  7633  001EBE                     _EUSART1_SetOverrunErrorHandler:
  7634                           	opt callstack 24
  7635  001EBE                     
  7636                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  7637  001EBE  C011  F044         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  7638  001EC2  C012  F045         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  7639  001EC6  0012               	return		;funcret
  7640  001EC8                     __end_of_EUSART1_SetOverrunErrorHandler:
  7641                           	opt callstack 0
  7642                           
  7643 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7644 ;; Defined at:
  7645 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  7648 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2, status,0
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7664 ;;Total ram usage:        2 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:    4
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_EUSART1_Initialize
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text32
  7675  001EC8                     __ptext32:
  7676                           	opt callstack 0
  7677  001EC8                     _EUSART1_SetFramingErrorHandler:
  7678                           	opt callstack 24
  7679  001EC8                     
  7680                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  7681  001EC8  C011  F046         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  7682  001ECC  C012  F047         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  7683  001ED0  0012               	return		;funcret
  7684  001ED2                     __end_of_EUSART1_SetFramingErrorHandler:
  7685                           	opt callstack 0
  7686                           
  7687 ;; *************** function _EUSART1_SetErrorHandler *****************
  7688 ;; Defined at:
  7689 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  7692 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;Total ram usage:        2 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:    4
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_EUSART1_Initialize
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text33
  7719  001ED2                     __ptext33:
  7720                           	opt callstack 0
  7721  001ED2                     _EUSART1_SetErrorHandler:
  7722                           	opt callstack 24
  7723  001ED2                     
  7724                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  7725  001ED2  C011  F0CA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7726  001ED6  C012  F0CB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7727  001EDA  0012               	return		;funcret
  7728  001EDC                     __end_of_EUSART1_SetErrorHandler:
  7729                           	opt callstack 0
  7730                           
  7731 ;; *************** function _ADC_Initialize *****************
  7732 ;; Defined at:
  7733 ;;		line 60 in file "mcc_generated_files/adc.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;		None
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;		None
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  1    wreg      void 
  7740 ;; Registers used:
  7741 ;;		wreg, status,2
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;Total ram usage:        0 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    4
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_SYSTEM_Initialize
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text34
  7762  001E44                     __ptext34:
  7763                           	opt callstack 0
  7764  001E44                     _ADC_Initialize:
  7765                           	opt callstack 25
  7766  001E44                     
  7767                           ;mcc_generated_files/adc.c: 65:     ADCON0 = 0x01;
  7768  001E44  0E01               	movlw	1
  7769  001E46  6EC2               	movwf	194,c	;volatile
  7770                           
  7771                           ;mcc_generated_files/adc.c: 68:     ADCON1 = 0x00;
  7772  001E48  0E00               	movlw	0
  7773  001E4A  6EC1               	movwf	193,c	;volatile
  7774                           
  7775                           ;mcc_generated_files/adc.c: 71:     ADCON2 = 0x26;
  7776  001E4C  0E26               	movlw	38
  7777  001E4E  6EC0               	movwf	192,c	;volatile
  7778                           
  7779                           ;mcc_generated_files/adc.c: 74:     ADRESL = 0x00;
  7780  001E50  0E00               	movlw	0
  7781  001E52  6EC3               	movwf	195,c	;volatile
  7782                           
  7783                           ;mcc_generated_files/adc.c: 77:     ADRESH = 0x00;
  7784  001E54  0E00               	movlw	0
  7785  001E56  6EC4               	movwf	196,c	;volatile
  7786  001E58  0012               	return		;funcret
  7787  001E5A                     __end_of_ADC_Initialize:
  7788                           	opt callstack 0
  7789                           
  7790 ;; *************** function _EUSART1_is_rx_ready *****************
  7791 ;; Defined at:
  7792 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;		None
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      _Bool 
  7799 ;; Registers used:
  7800 ;;		wreg
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;Total ram usage:        0 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:    4
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_main
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text35
  7821  001E5A                     __ptext35:
  7822                           	opt callstack 0
  7823  001E5A                     _EUSART1_is_rx_ready:
  7824                           	opt callstack 26
  7825  001E5A                     
  7826                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  7827  001E5A  BA9E               	btfsc	158,5,c	;volatile
  7828  001E5C  EF32  F00F         	goto	u2201
  7829  001E60  EF35  F00F         	goto	u2200
  7830  001E64                     u2201:
  7831  001E64  0E01               	movlw	1
  7832  001E66  EF36  F00F         	goto	u2206
  7833  001E6A                     u2200:
  7834  001E6A  0E00               	movlw	0
  7835  001E6C                     u2206:
  7836  001E6C  0012               	return		;funcret
  7837  001E6E                     __end_of_EUSART1_is_rx_ready:
  7838                           	opt callstack 0
  7839                           
  7840 ;; *************** function _EUSART1_Read *****************
  7841 ;; Defined at:
  7842 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;		None
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;		None
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1    wreg      unsigned char 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;Total ram usage:        0 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:    4
  7863 ;; This function calls:
  7864 ;;		Nothing
  7865 ;; This function is called by:
  7866 ;;		_main
  7867 ;;		_getch
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text36
  7872  001D28                     __ptext36:
  7873                           	opt callstack 0
  7874  001D28                     _EUSART1_Read:
  7875                           	opt callstack 26
  7876  001D28                     l144:
  7877                           
  7878                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7879  001D28  AA9E               	btfss	158,5,c	;volatile
  7880  001D2A  EF99  F00E         	goto	u2211
  7881  001D2E  EF9B  F00E         	goto	u2210
  7882  001D32                     u2211:
  7883  001D32  EF94  F00E         	goto	l144
  7884  001D36                     u2210:
  7885  001D36                     
  7886                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7887  001D36  0E00               	movlw	0
  7888  001D38  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  7889  001D3A                     
  7890                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  7891  001D3A  A2AB               	btfss	171,1,c	;volatile
  7892  001D3C  EFA2  F00E         	goto	u2221
  7893  001D40  EFA4  F00E         	goto	u2220
  7894  001D44                     u2221:
  7895  001D44  EFA6  F00E         	goto	l2792
  7896  001D48                     u2220:
  7897  001D48                     
  7898                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  7899  001D48  98AB               	bcf	171,4,c	;volatile
  7900                           
  7901                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  7902  001D4A  88AB               	bsf	171,4,c	;volatile
  7903  001D4C                     l2792:
  7904                           
  7905                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  7906  001D4C  50AE               	movf	174,w,c	;volatile
  7907  001D4E  0012               	return		;funcret
  7908  001D50                     __end_of_EUSART1_Read:
  7909                           	opt callstack 0
  7910                           
  7911 ;; *************** function _ADC_StartConversion *****************
  7912 ;; Defined at:
  7913 ;;		line 89 in file "mcc_generated_files/adc.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		None
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    4
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text37
  7942  001EF0                     __ptext37:
  7943                           	opt callstack 0
  7944  001EF0                     _ADC_StartConversion:
  7945                           	opt callstack 26
  7946  001EF0                     
  7947                           ;mcc_generated_files/adc.c: 92:     ADCON0bits.GO_nDONE = 1;
  7948  001EF0  82C2               	bsf	194,1,c	;volatile
  7949  001EF2  0012               	return		;funcret
  7950  001EF4                     __end_of_ADC_StartConversion:
  7951                           	opt callstack 0
  7952                           
  7953 ;; *************** function _ADC_SelectChannel *****************
  7954 ;; Defined at:
  7955 ;;		line 81 in file "mcc_generated_files/adc.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  channel         1    wreg     enum E5751
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  channel         1   17[COMRAM] enum E5751
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      void 
  7962 ;; Registers used:
  7963 ;;		wreg, status,2, status,0
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;Total ram usage:        2 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:    4
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_main
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text38
  7984  001E00                     __ptext38:
  7985                           	opt callstack 0
  7986  001E00                     _ADC_SelectChannel:
  7987                           	opt callstack 26
  7988                           
  7989                           ;incstack = 0
  7990                           ;ADC_SelectChannel@channel stored from wreg
  7991  001E00  6E12               	movwf	ADC_SelectChannel@channel^0,c
  7992  001E02                     
  7993                           ;mcc_generated_files/adc.c: 81: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 82: {;mcc_generated_files/adc.c: 84:     ADCON0bits.CHS = channel;
  7994  001E02  C012  F011         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  7995  001E06  4611               	rlncf	??_ADC_SelectChannel^0,f,c
  7996  001E08  4611               	rlncf	??_ADC_SelectChannel^0,f,c
  7997  001E0A  50C2               	movf	194,w,c	;volatile
  7998  001E0C  1811               	xorwf	??_ADC_SelectChannel^0,w,c
  7999  001E0E  0B83               	andlw	-125
  8000  001E10  1811               	xorwf	??_ADC_SelectChannel^0,w,c
  8001  001E12  6EC2               	movwf	194,c	;volatile
  8002  001E14                     
  8003                           ;mcc_generated_files/adc.c: 86:     ADCON0bits.ADON = 1;
  8004  001E14  80C2               	bsf	194,0,c	;volatile
  8005  001E16  0012               	return		;funcret
  8006  001E18                     __end_of_ADC_SelectChannel:
  8007                           	opt callstack 0
  8008                           
  8009 ;; *************** function _ADC_IsConversionDone *****************
  8010 ;; Defined at:
  8011 ;;		line 96 in file "mcc_generated_files/adc.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;		None
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;		None
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      _Bool 
  8018 ;; Registers used:
  8019 ;;		wreg
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;Total ram usage:        0 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; Hardware stack levels required when called:    4
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_main
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           	psect	text39
  8040  001E6E                     __ptext39:
  8041                           	opt callstack 0
  8042  001E6E                     _ADC_IsConversionDone:
  8043                           	opt callstack 26
  8044  001E6E                     
  8045                           ;mcc_generated_files/adc.c: 99:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  8046  001E6E  A2C2               	btfss	194,1,c	;volatile
  8047  001E70  EF3C  F00F         	goto	u2181
  8048  001E74  EF3F  F00F         	goto	u2180
  8049  001E78                     u2181:
  8050  001E78  0E01               	movlw	1
  8051  001E7A  EF40  F00F         	goto	u2190
  8052  001E7E                     u2180:
  8053  001E7E  0E00               	movlw	0
  8054  001E80                     u2190:
  8055  001E80  0012               	return		;funcret
  8056  001E82                     __end_of_ADC_IsConversionDone:
  8057                           	opt callstack 0
  8058                           
  8059 ;; *************** function _ADC_GetConversionResult *****************
  8060 ;; Defined at:
  8061 ;;		line 102 in file "mcc_generated_files/adc.c"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;		None
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;		None
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  2   16[COMRAM] unsigned short 
  8068 ;; Registers used:
  8069 ;;		wreg, status,2, status,0
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;Total ram usage:        4 bytes
  8080 ;; Hardware stack levels used:    1
  8081 ;; Hardware stack levels required when called:    4
  8082 ;; This function calls:
  8083 ;;		Nothing
  8084 ;; This function is called by:
  8085 ;;		_main
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text40
  8090  001E82                     __ptext40:
  8091                           	opt callstack 0
  8092  001E82                     _ADC_GetConversionResult:
  8093                           	opt callstack 26
  8094  001E82                     
  8095                           ;mcc_generated_files/adc.c: 105:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8096  001E82  50C4               	movf	196,w,c	;volatile
  8097  001E84  6E14               	movwf	(??_ADC_GetConversionResult+1)^0,c
  8098  001E86  6A13               	clrf	??_ADC_GetConversionResult^0,c
  8099  001E88  50C3               	movf	195,w,c	;volatile
  8100  001E8A  2413               	addwf	??_ADC_GetConversionResult^0,w,c
  8101  001E8C  6E11               	movwf	?_ADC_GetConversionResult^0,c
  8102  001E8E  0E00               	movlw	0
  8103  001E90  2014               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  8104  001E92  6E12               	movwf	(?_ADC_GetConversionResult+1)^0,c
  8105  001E94  0012               	return		;funcret
  8106  001E96                     __end_of_ADC_GetConversionResult:
  8107                           	opt callstack 0
  8108                           
  8109 ;; *************** function _INTERRUPT_InterruptManager *****************
  8110 ;; Defined at:
  8111 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;		None
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;Total ram usage:        4 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    3
  8132 ;; This function calls:
  8133 ;;		_TMR0_ISR
  8134 ;; This function is called by:
  8135 ;;		Interrupt level 2
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	intcode
  8140  000008                     __pintcode:
  8141                           	opt callstack 0
  8142  000008                     _INTERRUPT_InterruptManager:
  8143                           	opt callstack 18
  8144                           
  8145                           ;incstack = 0
  8146  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8147  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  8148  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8149  000012  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  8150  000016  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  8151  00001A                     
  8152                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  8153  00001A  AAF2               	btfss	242,5,c	;volatile
  8154  00001C  EF12  F000         	goto	i2u223_41
  8155  000020  EF14  F000         	goto	i2u223_40
  8156  000024                     i2u223_41:
  8157  000024  EF1D  F000         	goto	i2l253
  8158  000028                     i2u223_40:
  8159  000028  A4F2               	btfss	242,2,c	;volatile
  8160  00002A  EF19  F000         	goto	i2u224_41
  8161  00002E  EF1B  F000         	goto	i2u224_40
  8162  000032                     i2u224_41:
  8163  000032  EF1D  F000         	goto	i2l253
  8164  000036                     i2u224_40:
  8165  000036                     
  8166                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  8167  000036  EC50  F00E         	call	_TMR0_ISR	;wreg free
  8168  00003A                     i2l253:
  8169  00003A  C010  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8170  00003E  C00F  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8171  000042  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8172  000046  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8173  00004A  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8174  00004C  0011               	retfie		f
  8175  00004E                     __end_of_INTERRUPT_InterruptManager:
  8176                           	opt callstack 0
  8177                           
  8178 ;; *************** function _TMR0_ISR *****************
  8179 ;; Defined at:
  8180 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;		None
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;		None
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1    wreg      void 
  8187 ;; Registers used:
  8188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;Total ram usage:        0 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    2
  8201 ;; This function calls:
  8202 ;;		Absolute function
  8203 ;;		_TMR0_DefaultInterruptHandler
  8204 ;;		_myTMR0ISR
  8205 ;; This function is called by:
  8206 ;;		_INTERRUPT_InterruptManager
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text42
  8211  001CA0                     __ptext42:
  8212                           	opt callstack 0
  8213  001CA0                     _TMR0_ISR:
  8214                           	opt callstack 18
  8215  001CA0                     
  8216                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  8217  001CA0  94F2               	bcf	242,2,c	;volatile
  8218  001CA2                     
  8219                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  8220  001CA2  5049               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  8221  001CA4  6ED7               	movwf	215,c	;volatile
  8222  001CA6                     
  8223                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  8224  001CA6  C048  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  8225  001CAA                     
  8226                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  8227  001CAA  504A               	movf	_TMR0_InterruptHandler^0,w,c
  8228  001CAC  104B               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  8229  001CAE  B4D8               	btfsc	status,2,c
  8230  001CB0  EF5C  F00E         	goto	i2u216_41
  8231  001CB4  EF5E  F00E         	goto	i2u216_40
  8232  001CB8                     i2u216_41:
  8233  001CB8  EF6A  F00E         	goto	i2l40
  8234  001CBC                     i2u216_40:
  8235  001CBC                     
  8236                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  8237  001CBC  D802               	call	i2u217_48
  8238  001CBE  EF6A  F00E         	goto	i2u217_49
  8239  001CC2                     i2u217_48:
  8240  001CC2  0005               	push	
  8241  001CC4  6EFA               	movwf	pclath,c
  8242  001CC6  504A               	movf	_TMR0_InterruptHandler^0,w,c
  8243  001CC8  6EFD               	movwf	tosl,c
  8244  001CCA  504B               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  8245  001CCC  6EFE               	movwf	tosh,c
  8246  001CCE  6AFF               	clrf	tosu,c
  8247  001CD0  50FA               	movf	pclath,w,c
  8248  001CD2  0012               	return		;indir
  8249  001CD4                     i2u217_49:
  8250  001CD4                     i2l40:
  8251  001CD4  0012               	return		;funcret
  8252  001CD6                     __end_of_TMR0_ISR:
  8253                           	opt callstack 0
  8254                           
  8255 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8256 ;; Defined at:
  8257 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;		None
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      void 
  8264 ;; Registers used:
  8265 ;;		None
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;Total ram usage:        0 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_TMR0_Initialize
  8281 ;;		_TMR0_ISR
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text43
  8286  001EF8                     __ptext43:
  8287                           	opt callstack 0
  8288  001EF8                     _TMR0_DefaultInterruptHandler:
  8289                           	opt callstack 19
  8290  001EF8  0012               	return		;funcret
  8291  001EFA                     __end_of_TMR0_DefaultInterruptHandler:
  8292                           	opt callstack 0
  8293                           
  8294 ;; *************** function _myTMR0ISR *****************
  8295 ;; Defined at:
  8296 ;;		line 358 in file "main_d11.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;		None
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;		None
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8314 ;;Total ram usage:        2 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    1
  8317 ;; This function calls:
  8318 ;;		_TMR0_ReadTimer
  8319 ;;		_TMR0_WriteTimer
  8320 ;;		i2_ADC_GetConversionResult
  8321 ;;		i2_ADC_StartConversion
  8322 ;; This function is called by:
  8323 ;;		_main
  8324 ;;		_TMR0_ISR
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           	psect	text44
  8329  00159C                     __ptext44:
  8330                           	opt callstack 0
  8331  00159C                     _myTMR0ISR:
  8332                           	opt callstack 18
  8333  00159C                     
  8334                           ;main_d11.c: 359:     INTCONbits.TMR0IF = 0;
  8335  00159C  94F2               	bcf	242,2,c	;volatile
  8336  00159E                     
  8337                           ;main_d11.c: 360:     static uint8_t i = 0;;main_d11.c: 361:     if(keyState == 0){
  8338  00159E  0100               	movlb	0	; () banked
  8339  0015A0  51CD               	movf	_keyState& (0+255),w,b
  8340  0015A2  A4D8               	btfss	status,2,c
  8341  0015A4  EFD6  F00A         	goto	i2u209_41
  8342  0015A8  EFD8  F00A         	goto	i2u209_40
  8343  0015AC                     i2u209_41:
  8344  0015AC  EFF6  F00A         	goto	i2l2726
  8345  0015B0                     i2u209_40:
  8346  0015B0                     
  8347                           ; BSR set to: 0
  8348                           ;main_d11.c: 362:         if((ADC_GetConversionResult()>>8) < nominalHallUnPressed - del
      +                          ta){
  8349  0015B0  51F0               	movf	_delta& (0+255),w,b
  8350  0015B2  C0F2  F00B         	movff	_nominalHallUnPressed,??_myTMR0ISR
  8351  0015B6  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
  8352  0015B8  5E0B               	subwf	??_myTMR0ISR^0,f,c
  8353  0015BA  0E00               	movlw	0
  8354  0015BC  5A0C               	subwfb	(??_myTMR0ISR+1)^0,f,c
  8355  0015BE  EC4B  F00F         	call	i2_ADC_GetConversionResult	;wreg free
  8356  0015C2  C002  F001         	movff	?i2_ADC_GetConversionResult+1,?i2_ADC_GetConversionResult
  8357  0015C6  6A02               	clrf	(?i2_ADC_GetConversionResult+1)^0,c
  8358  0015C8  500B               	movf	??_myTMR0ISR^0,w,c
  8359  0015CA  5C01               	subwf	?i2_ADC_GetConversionResult^0,w,c
  8360  0015CC  500C               	movf	(??_myTMR0ISR+1)^0,w,c
  8361  0015CE  5802               	subwfb	(?i2_ADC_GetConversionResult+1)^0,w,c
  8362  0015D0  B0D8               	btfsc	status,0,c
  8363  0015D2  EFED  F00A         	goto	i2u210_41
  8364  0015D6  EFEF  F00A         	goto	i2u210_40
  8365  0015DA                     i2u210_41:
  8366  0015DA  EFF2  F00A         	goto	i2l2724
  8367  0015DE                     i2u210_40:
  8368  0015DE                     
  8369                           ;main_d11.c: 363:             keyState = 1;
  8370  0015DE  0E01               	movlw	1
  8371  0015E0  0100               	movlb	0	; () banked
  8372  0015E2  6FCD               	movwf	_keyState& (0+255),b
  8373  0015E4                     i2l2724:
  8374                           
  8375                           ;main_d11.c: 365:         ADC_StartConversion();
  8376  0015E4  EC7A  F00F         	call	i2_ADC_StartConversion	;wreg free
  8377                           
  8378                           ;main_d11.c: 366:     }
  8379  0015E8  EF42  F00B         	goto	i2l2746
  8380  0015EC                     i2l2726:
  8381                           
  8382                           ; BSR set to: 0
  8383  0015EC  05CD               	decf	_keyState& (0+255),w,b
  8384  0015EE  A4D8               	btfss	status,2,c
  8385  0015F0  EFFC  F00A         	goto	i2u211_41
  8386  0015F4  EFFE  F00A         	goto	i2u211_40
  8387  0015F8                     i2u211_41:
  8388  0015F8  EF1D  F00B         	goto	i2l2738
  8389  0015FC                     i2u211_40:
  8390  0015FC                     
  8391                           ; BSR set to: 0
  8392                           ;main_d11.c: 368:         sample[i] = (ADC_GetConversionResult()>>8);
  8393  0015FC  0E00               	movlw	low _sample
  8394  0015FE  244C               	addwf	myTMR0ISR@i^0,w,c
  8395  001600  6ED9               	movwf	fsr2l,c
  8396  001602  6ADA               	clrf	fsr2h,c
  8397  001604  0E01               	movlw	high _sample
  8398  001606  22DA               	addwfc	fsr2h,f,c
  8399  001608  EC4B  F00F         	call	i2_ADC_GetConversionResult	;wreg free
  8400  00160C  C002  F001         	movff	?i2_ADC_GetConversionResult+1,?i2_ADC_GetConversionResult
  8401  001610  6A02               	clrf	(?i2_ADC_GetConversionResult+1)^0,c
  8402  001612  5001               	movf	?i2_ADC_GetConversionResult^0,w,c
  8403  001614  6EDF               	movwf	indf2,c
  8404  001616                     
  8405                           ;main_d11.c: 369:         ADC_StartConversion();
  8406  001616  EC7A  F00F         	call	i2_ADC_StartConversion	;wreg free
  8407  00161A                     
  8408                           ;main_d11.c: 370:         i += 1;
  8409  00161A  2A4C               	incf	myTMR0ISR@i^0,f,c
  8410  00161C                     
  8411                           ;main_d11.c: 371:         if (i > (64 -1)){
  8412  00161C  0E3F               	movlw	63
  8413  00161E  644C               	cpfsgt	myTMR0ISR@i^0,c
  8414  001620  EF14  F00B         	goto	i2u212_41
  8415  001624  EF16  F00B         	goto	i2u212_40
  8416  001628                     i2u212_41:
  8417  001628  EF42  F00B         	goto	i2l2746
  8418  00162C                     i2u212_40:
  8419  00162C                     
  8420                           ;main_d11.c: 372:             i = 0;
  8421  00162C  0E00               	movlw	0
  8422  00162E  6E4C               	movwf	myTMR0ISR@i^0,c
  8423                           
  8424                           ;main_d11.c: 373:             keyState = 2;
  8425  001630  0E02               	movlw	2
  8426  001632  0100               	movlb	0	; () banked
  8427  001634  6FCD               	movwf	_keyState& (0+255),b
  8428  001636  EF42  F00B         	goto	i2l2746
  8429  00163A                     i2l2738:
  8430                           
  8431                           ; BSR set to: 0
  8432  00163A  0E02               	movlw	2
  8433  00163C  19CD               	xorwf	_keyState& (0+255),w,b
  8434  00163E  A4D8               	btfss	status,2,c
  8435  001640  EF24  F00B         	goto	i2u213_41
  8436  001644  EF26  F00B         	goto	i2u213_40
  8437  001648                     i2u213_41:
  8438  001648  EF42  F00B         	goto	i2l2746
  8439  00164C                     i2u213_40:
  8440  00164C                     
  8441                           ; BSR set to: 0
  8442                           ;main_d11.c: 377:         if((ADC_GetConversionResult()>>8) > nominalHallUnPressed - del
      +                          ta){
  8443  00164C  EC4B  F00F         	call	i2_ADC_GetConversionResult	;wreg free
  8444  001650  C002  F001         	movff	?i2_ADC_GetConversionResult+1,?i2_ADC_GetConversionResult
  8445  001654  6A02               	clrf	(?i2_ADC_GetConversionResult+1)^0,c
  8446  001656  0100               	movlb	0	; () banked
  8447  001658  51F0               	movf	_delta& (0+255),w,b
  8448  00165A  C0F2  F00B         	movff	_nominalHallUnPressed,??_myTMR0ISR
  8449  00165E  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
  8450  001660  5E0B               	subwf	??_myTMR0ISR^0,f,c
  8451  001662  0E00               	movlw	0
  8452  001664  5A0C               	subwfb	(??_myTMR0ISR+1)^0,f,c
  8453  001666  5001               	movf	?i2_ADC_GetConversionResult^0,w,c
  8454  001668  5C0B               	subwf	??_myTMR0ISR^0,w,c
  8455  00166A  5002               	movf	(?i2_ADC_GetConversionResult+1)^0,w,c
  8456  00166C  580C               	subwfb	(??_myTMR0ISR+1)^0,w,c
  8457  00166E  B0D8               	btfsc	status,0,c
  8458  001670  EF3C  F00B         	goto	i2u214_41
  8459  001674  EF3E  F00B         	goto	i2u214_40
  8460  001678                     i2u214_41:
  8461  001678  EFF2  F00A         	goto	i2l2724
  8462  00167C                     i2u214_40:
  8463  00167C                     
  8464                           ; BSR set to: 0
  8465                           ;main_d11.c: 378:             keyState = 0;
  8466  00167C  0E00               	movlw	0
  8467  00167E  6FCD               	movwf	_keyState& (0+255),b
  8468  001680  EFF2  F00A         	goto	i2l2724
  8469  001684                     i2l2746:
  8470                           
  8471                           ;main_d11.c: 382:     TMR0_WriteTimer(TMR0_ReadTimer() + 0xFFFF - sampleRate);
  8472  001684  ECCA  F00E         	call	_TMR0_ReadTimer	;wreg free
  8473  001688  0100               	movlb	0	; () banked
  8474  00168A  51EE               	movf	_sampleRate& (0+255),w,b
  8475  00168C  5E01               	subwf	?_TMR0_ReadTimer^0,f,c
  8476  00168E  51EF               	movf	(_sampleRate+1)& (0+255),w,b
  8477  001690  5A02               	subwfb	(?_TMR0_ReadTimer+1)^0,f,c
  8478  001692  0EFF               	movlw	255
  8479  001694  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  8480  001696  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  8481  001698  0EFF               	movlw	255
  8482  00169A  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  8483  00169C  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  8484  00169E  EC6E  F00F         	call	_TMR0_WriteTimer	;wreg free
  8485  0016A2  0012               	return		;funcret
  8486  0016A4                     __end_of_myTMR0ISR:
  8487                           	opt callstack 0
  8488                           
  8489 ;; *************** function i2_ADC_StartConversion *****************
  8490 ;; Defined at:
  8491 ;;		line 89 in file "mcc_generated_files/adc.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;		None
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		None
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;Total ram usage:        0 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_myTMR0ISR
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text45
  8519  001EF4                     __ptext45:
  8520                           	opt callstack 0
  8521  001EF4                     i2_ADC_StartConversion:
  8522                           	opt callstack 18
  8523  001EF4                     
  8524                           ;mcc_generated_files/adc.c: 92:     ADCON0bits.GO_nDONE = 1;
  8525  001EF4  82C2               	bsf	194,1,c	;volatile
  8526  001EF6  0012               	return		;funcret
  8527  001EF8                     __end_ofi2_ADC_StartConversion:
  8528                           	opt callstack 0
  8529                           
  8530 ;; *************** function i2_ADC_GetConversionResult *****************
  8531 ;; Defined at:
  8532 ;;		line 102 in file "mcc_generated_files/adc.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;		None
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  2    0[COMRAM] unsigned short 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;Total ram usage:        4 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_myTMR0ISR
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           	psect	text46
  8560  001E96                     __ptext46:
  8561                           	opt callstack 0
  8562  001E96                     i2_ADC_GetConversionResult:
  8563                           	opt callstack 18
  8564  001E96                     
  8565                           ;mcc_generated_files/adc.c: 105:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8566  001E96  50C4               	movf	196,w,c	;volatile
  8567  001E98  6E04               	movwf	(??i2_ADC_GetConversionResult+1)^0,c
  8568  001E9A  6A03               	clrf	??i2_ADC_GetConversionResult^0,c
  8569  001E9C  50C3               	movf	195,w,c	;volatile
  8570  001E9E  2403               	addwf	??i2_ADC_GetConversionResult^0,w,c
  8571  001EA0  6E01               	movwf	?i2_ADC_GetConversionResult^0,c
  8572  001EA2  0E00               	movlw	0
  8573  001EA4  2004               	addwfc	(??i2_ADC_GetConversionResult+1)^0,w,c
  8574  001EA6  6E02               	movwf	(?i2_ADC_GetConversionResult+1)^0,c
  8575  001EA8  0012               	return		;funcret
  8576  001EAA                     __end_ofi2_ADC_GetConversionResult:
  8577                           	opt callstack 0
  8578                           
  8579 ;; *************** function _TMR0_WriteTimer *****************
  8580 ;; Defined at:
  8581 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  timerVal        2    8[COMRAM] unsigned short 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;Total ram usage:        2 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		_myTMR0ISR
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text47
  8609  001EDC                     __ptext47:
  8610                           	opt callstack 0
  8611  001EDC                     _TMR0_WriteTimer:
  8612                           	opt callstack 18
  8613  001EDC                     
  8614                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  8615  001EDC  500A               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  8616  001EDE  6ED7               	movwf	215,c	;volatile
  8617  001EE0                     
  8618                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  8619  001EE0  C009  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  8620  001EE4  0012               	return		;funcret
  8621  001EE6                     __end_of_TMR0_WriteTimer:
  8622                           	opt callstack 0
  8623                           
  8624 ;; *************** function _TMR0_ReadTimer *****************
  8625 ;; Defined at:
  8626 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;		None
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  readVal         2    4[COMRAM] unsigned short 
  8631 ;;  readValHigh     1    7[COMRAM] unsigned char 
  8632 ;;  readValLow      1    6[COMRAM] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  2    0[COMRAM] unsigned short 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;Total ram usage:        8 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_myTMR0ISR
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text48
  8656  001D94                     __ptext48:
  8657                           	opt callstack 0
  8658  001D94                     _TMR0_ReadTimer:
  8659                           	opt callstack 18
  8660  001D94                     
  8661                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  8662  001D94  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  8663                           
  8664                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  8665  001D98  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  8666  001D9C                     
  8667                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  8668  001D9C  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  8669  001D9E  6E03               	movwf	??_TMR0_ReadTimer^0,c
  8670  001DA0  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  8671  001DA2  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  8672  001DA4  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  8673  001DA8                     
  8674                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  8675  001DA8  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  8676  001DAC  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  8677  001DB0  0012               	return		;funcret
  8678  001DB2                     __end_of_TMR0_ReadTimer:
  8679                           	opt callstack 0
  8680                           
  8681                           	psect	text49
  8682  000000                     __ptext49:
  8683                           	opt callstack 0
  8684  000000                     
  8685                           	psect	rparam
  8686  0000                     
  8687                           	psect	temp
  8688  00004E                     btemp:
  8689                           	opt callstack 0
  8690  00004E                     	ds	1
  8691  0000                     int$flags	set	btemp
  8692  0000                     wtemp8	set	btemp+1
  8693  0000                     ttemp5	set	btemp+1
  8694  0000                     ttemp6	set	btemp+4
  8695  0000                     ttemp7	set	btemp+8
  8696                           tosu	equ	0xFFF
  8697                           tosh	equ	0xFFE
  8698                           tosl	equ	0xFFD
  8699                           stkptr	equ	0xFFC
  8700                           pclatu	equ	0xFFB
  8701                           pclath	equ	0xFFA
  8702                           pcl	equ	0xFF9
  8703                           tblptru	equ	0xFF8
  8704                           tblptrh	equ	0xFF7
  8705                           tblptrl	equ	0xFF6
  8706                           tablat	equ	0xFF5
  8707                           prodh	equ	0xFF4
  8708                           prodl	equ	0xFF3
  8709                           indf0	equ	0xFEF
  8710                           postinc0	equ	0xFEE
  8711                           postdec0	equ	0xFED
  8712                           preinc0	equ	0xFEC
  8713                           plusw0	equ	0xFEB
  8714                           fsr0h	equ	0xFEA
  8715                           fsr0l	equ	0xFE9
  8716                           wreg	equ	0xFE8
  8717                           indf1	equ	0xFE7
  8718                           postinc1	equ	0xFE6
  8719                           postdec1	equ	0xFE5
  8720                           preinc1	equ	0xFE4
  8721                           plusw1	equ	0xFE3
  8722                           fsr1h	equ	0xFE2
  8723                           fsr1l	equ	0xFE1
  8724                           bsr	equ	0xFE0
  8725                           indf2	equ	0xFDF
  8726                           postinc2	equ	0xFDE
  8727                           postdec2	equ	0xFDD
  8728                           preinc2	equ	0xFDC
  8729                           plusw2	equ	0xFDB
  8730                           fsr2h	equ	0xFDA
  8731                           fsr2l	equ	0xFD9
  8732                           status	equ	0xFD8


Data Sizes:
    Strings     1608
    Constant    0
    Data        35
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      77
    BANK0           160    104     147
    BANK1           256      0      94
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_59(CODE[17]), STR_58(CODE[50]), STR_57(CODE[25]), STR_56(CODE[38]), 
		 -> STR_55(CODE[41]), STR_54(CODE[42]), STR_53(CODE[67]), STR_52(CODE[68]), 
		 -> STR_51(CODE[52]), STR_50(CODE[48]), STR_49(CODE[42]), STR_48(CODE[26]), 
		 -> STR_47(CODE[31]), STR_46(CODE[35]), STR_45(CODE[37]), STR_44(CODE[15]), 
		 -> STR_43(CODE[27]), STR_42(CODE[24]), STR_41(CODE[23]), STR_40(CODE[20]), 
		 -> STR_39(CODE[23]), STR_38(CODE[26]), STR_37(CODE[38]), STR_36(CODE[29]), 
		 -> STR_35(CODE[10]), STR_34(CODE[36]), STR_33(CODE[48]), STR_32(CODE[24]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[19]), STR_28(CODE[18]), 
		 -> STR_27(CODE[36]), STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), 
		 -> STR_19(CODE[27]), STR_18(CODE[16]), STR_17(CODE[31]), STR_16(CODE[68]), 
		 -> STR_15(CODE[48]), STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), 
		 -> STR_7(CODE[17]), STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), 
		 -> STR_3(CODE[22]), STR_2(CODE[21]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1628_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_59(CODE[17]), STR_58(CODE[50]), STR_57(CODE[25]), STR_56(CODE[38]), 
		 -> STR_55(CODE[41]), STR_54(CODE[42]), STR_53(CODE[67]), STR_52(CODE[68]), 
		 -> STR_51(CODE[52]), STR_50(CODE[48]), STR_49(CODE[42]), STR_48(CODE[26]), 
		 -> STR_47(CODE[31]), STR_46(CODE[35]), STR_45(CODE[37]), STR_44(CODE[15]), 
		 -> STR_43(CODE[27]), STR_42(CODE[24]), STR_41(CODE[23]), STR_40(CODE[20]), 
		 -> STR_39(CODE[23]), STR_38(CODE[26]), STR_37(CODE[38]), STR_36(CODE[29]), 
		 -> STR_35(CODE[10]), STR_34(CODE[36]), STR_33(CODE[48]), STR_32(CODE[24]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[19]), STR_28(CODE[18]), 
		 -> STR_27(CODE[36]), STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), 
		 -> STR_19(CODE[27]), STR_18(CODE[16]), STR_17(CODE[31]), STR_16(CODE[68]), 
		 -> STR_15(CODE[48]), STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), 
		 -> STR_7(CODE[17]), STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), 
		 -> STR_3(CODE[22]), STR_2(CODE[21]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_59(CODE[17]), STR_58(CODE[50]), STR_57(CODE[25]), STR_56(CODE[38]), 
		 -> STR_55(CODE[41]), STR_54(CODE[42]), STR_53(CODE[67]), STR_52(CODE[68]), 
		 -> STR_51(CODE[52]), STR_50(CODE[48]), STR_49(CODE[42]), STR_48(CODE[26]), 
		 -> STR_47(CODE[31]), STR_46(CODE[35]), STR_45(CODE[37]), STR_44(CODE[15]), 
		 -> STR_43(CODE[27]), STR_42(CODE[24]), STR_41(CODE[23]), STR_40(CODE[20]), 
		 -> STR_39(CODE[23]), STR_38(CODE[26]), STR_37(CODE[38]), STR_36(CODE[29]), 
		 -> STR_35(CODE[10]), STR_34(CODE[36]), STR_33(CODE[48]), STR_32(CODE[24]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[19]), STR_28(CODE[18]), 
		 -> STR_27(CODE[36]), STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), 
		 -> STR_19(CODE[27]), STR_18(CODE[16]), STR_17(CODE[31]), STR_16(CODE[68]), 
		 -> STR_15(CODE[48]), STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), 
		 -> STR_7(CODE[17]), STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), 
		 -> STR_3(CODE[22]), STR_2(CODE[21]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 74
		 -> STR_59(CODE[17]), STR_58(CODE[50]), STR_57(CODE[25]), STR_56(CODE[38]), 
		 -> STR_55(CODE[41]), STR_54(CODE[42]), STR_53(CODE[67]), STR_52(CODE[68]), 
		 -> STR_51(CODE[52]), STR_50(CODE[48]), STR_49(CODE[42]), STR_48(CODE[26]), 
		 -> STR_47(CODE[31]), STR_46(CODE[35]), STR_45(CODE[37]), STR_44(CODE[15]), 
		 -> STR_43(CODE[27]), STR_42(CODE[24]), STR_41(CODE[23]), STR_40(CODE[20]), 
		 -> STR_39(CODE[23]), STR_38(CODE[26]), STR_37(CODE[38]), STR_36(CODE[29]), 
		 -> STR_35(CODE[10]), STR_34(CODE[36]), STR_33(CODE[48]), STR_32(CODE[24]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[19]), STR_28(CODE[18]), 
		 -> STR_27(CODE[36]), STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), 
		 -> STR_19(CODE[27]), STR_18(CODE[16]), STR_17(CODE[31]), STR_16(CODE[68]), 
		 -> STR_15(CODE[48]), STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), 
		 -> STR_7(CODE[17]), STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), 
		 -> STR_3(CODE[22]), STR_2(CODE[21]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _noteOn->_putByteSCI
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->_TMR0_WriteTimer
    _TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   28244
                                             67 BANK0     37    37      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _noteOn
                             _printf
                         _putByteSCI
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   25876
                                             57 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   20467
                                             59 COMRAM     2     2      0
                                             51 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   19952
                                             55 COMRAM     4     4      0
                                             26 BANK0     25    19      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5307
                                             45 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             16 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             16 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6161
                                             45 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4174
                                             45 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3895
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1006
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             17 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1715
                                             23 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             16 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     612
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _noteOn                                               3     1      2     392
                                             17 COMRAM     3     1      2
                         _putByteSCI
 ---------------------------------------------------------------------------------
 (1) _putByteSCI                                           1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             18 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     189
                                             12 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     189
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           2     2      0     189
                                             10 COMRAM     2     2      0
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
          i2_ADC_GetConversionResult
              i2_ADC_StartConversion
 ---------------------------------------------------------------------------------
 (13) i2_ADC_StartConversion                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_ADC_GetConversionResult                           4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_WriteTimer                                     2     0      2     120
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _noteOn
     _putByteSCI
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
   _putByteSCI

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       _TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)
       i2_ADC_GetConversionResult
       i2_ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5E       7       36.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4D       1       81.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13E      12        0.0%
DATA                 0      0     13E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 09 09:36:23 2020

                                            l21 1C9E                                              l43 1EBC  
                                            l63 1E58                                              l72 1E80  
                                            l66 1E16                                              l75 1E94  
                                            l69 1EF2                             ___wmul@multiplicand 0013  
                               _timer0ReloadVal 0048                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l201 1DE6                                             l204 1DBE  
                                           l135 1E6C                                             l127 1BFA  
                                           l207 1DCC                                             l151 1E1A  
                                           l144 1D28                                             l400 1DEA  
                                           l160 1EB2                                             l321 024C  
                                           l234 1CFE                                             l402 1DF8  
                                           l154 1E2C                                             l403 1DFE  
                                           l148 1D4E                                             l172 1ED0  
                                           l246 1EEE                                             l406 1E42  
                                           l175 1EC6                                             l503 1114  
                                           l178 1EDA                                             l450 18A8  
                                           l532 1D74                                             l453 18EA  
                                           l462 1AE6                                             l470 0CD6  
                                           l518 0C2C                                             l455 1924  
                                           l528 1A84                                             l376 06AA  
                                           l529 1A8C                                             l468 0CCE  
                                           l493 0F48                                             l646 1436  
                                           l495 0F50                                             l488 0F0E  
                                           l659 159A                                             l970 1772  
                                           l980 1842                                             l977 1792  
                                           l987 1862                                    __CFG_CPB$OFF 000000  
                                  __CFG_CPD$OFF 000000                                             _abs 1B7E  
                                           _pad 1864                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1210 1BBC                                            ?_abs 0023  
                                          l1207 1BB4                                            l1241 12AE  
                                          l1244 1C32                                            l1252 1B38  
                                          l1238 12A6                                            l3102 1E1A  
                                          l3110 1938                                            l3104 1E28  
                                          l3112 194A                                            l3200 136C  
                                          l3106 1EAC                                            l3114 1954  
                                          l3122 1B3A                                            l3130 1C34  
                                          l3210 13E0                                            l3202 137E  
                                          l1282 1D26                                            l1267 19BA  
                                          l1275 1B7C                                            l3300 1B2E  
                                          l3116 1972                                            l3108 1926  
                                          l3124 1B46                                            l3132 1C40  
                                          l3140 1864                                            l3204 13AC  
                                          l3212 13E6                                            l3220 1438  
                                          l3302 1B32                                            l3118 19A8  
                                          l3126 1B58                                            l3134 1C44  
                                          l3150 18B4                                            l3142 1872  
                                          l3310 1AAC                                            l3214 13F6  
                                          l3206 13CC                                            l3230 147C  
                                          l3222 143C                                            l3128 1B5C  
                                          l1288 1C68                                            l3136 1C5C  
                                          l3152 18C8                                            l3144 1886  
                                          l3312 1AB8                                            l3216 1416  
                                          l3208 13CE                                            l3240 14E4  
                                          l3232 149C                                            l3224 144A  
                                          l3320 0C2E                                            l3400 100E  
                                          l3170 1D50                                            l3154 18CC  
                                          l3146 1894                                            l3314 1ABC  
                                          l3306 1A8E                                            l3250 155A  
                                          l3242 1512                                            l3234 14BA  
                                          l3226 146A                                            l3162 1B7E  
                                          l3330 0CA8                                            l3322 0C4E  
                                          l3410 10C4                                            l3402 1014  
                                          l2700 1EEC                                            l3172 1D6C  
                                          l3420 112A                                            l3156 18F8  
                                          l3148 18A0                                            l3316 1AC2  
                                          l3308 1AA0                                            l3180 12C2  
                                          l3252 157A                                            l3244 1532  
                                          l3236 14C2                                            l3228 146E  
                                          l3164 1B98                                            l3340 0D04  
                                          l3332 0CC2                                            l3324 0C78  
                                          l3260 16CE                                            l3412 10DE  
                                          l3404 1078                                            l3500 0AA0  
                                          l2710 1DB2                                            l2702 1CD6  
                                          l3166 1BFC                                            l3430 118C  
                                          l3422 112E                                            l3158 190C  
                                          l3190 1318                                            l3182 12E2  
                                          l3246 1544                                            l3238 14D6  
                                          l3350 0DA4                                            l3342 0D0C  
                                          l3334 0CDE                                            l3326 0C98  
                                          l3270 1738                                            l3262 16D6  
                                          l3406 108C                                            l3414 10EC  
                                          l2704 1CE2                                            l2800 1DD6  
                                          l2712 1DEA                                            l3440 11B8  
                                          l3424 1132                                            l3192 1324  
                                          l3184 12E6                                            l3176 12B0  
                                          l3248 154A                                            l3360 0E62  
                                          l3352 0DAA                                            l3344 0D14  
                                          l3336 0CF0                                            l3328 0CA6  
                                          l3272 1758                                            l3264 16EA  
                                          l3256 16A4                                            l3280 17B2  
                                          l3408 10AA                                            l3512 0B82  
                                          l3504 0AD8                                            l3600 0252  
                                          l2706 1CE4                                            l2802 1DDA  
                                          l2714 1DFA                                            l3450 1266  
                                          l3442 11EE                                            l3434 1192  
                                          l3426 1150                                            l3418 1116  
                                          l3194 1342                                            l3186 12F4  
                                          l3178 12B4                                            l3370 0EB0  
                                          l3362 0E7C                                            l3346 0D1A  
                                          l3354 0E0E                                            l3338 0CFE  
                                          l3274 175A                                            l3266 16F8  
                                          l3258 16B0                                            l3290 182A  
                                          l3282 17BA                                            l3530 0C1A  
                                          l3514 0BA8                                            l3522 0BD8  
                                          l3506 0AFE                                            l3610 0266  
                                          l2708 1CFC                                            l2572 1EB4  
                                          l2804 1DDE                                            l3452 1278  
                                          l3436 11A8                                            l3428 1188  
                                          l3196 134A                                            l3188 1314  
                                          l3372 0EC2                                            l3356 0E2A  
                                          l3364 0E8A                                            l3348 0D9C  
                                          l3276 176C                                            l3268 170A  
                                          l3292 183C                                            l3284 17CE  
                                          l3524 0BE6                                            l3516 0BB6  
                                          l3508 0B4A                                            l3460 084A  
                                          l3540 1A40                                            l3620 02A2  
                                          l3612 027A                                            l2590 1ED2  
                                          l2806 1DE2                                            l2814 1E30  
                                          l3294 1AE8                                            l3454 128A  
                                          l3446 1226                                            l3438 11B0  
                                          l3198 135E                                            l3374 0ECE  
                                          l3366 0E9C                                            l3358 0E48  
                                          l3286 17DC                                            l3278 1794  
                                          l3390 0F78                                            l3382 0F10  
                                          l3518 0BCA                                            l3470 08B8  
                                          l3462 0870                                            l3542 1A66  
                                          l3710 04C0                                            l3630 02FC  
                                          l3622 02B6                                            l3614 0286  
                                          l3606 0256                                            l3550 0052  
                                          l2680 1C8A                                            l3296 1AEC  
                                          l3376 0ED6                                            l3368 0EAA  
                                          l3288 180A                                            l3392 0F82  
                                          l3384 0F1E                                            l3480 0938  
                                          l3472 08EE                                            l3464 087E  
                                          l3528 0BF4                                            l3536 1A2A  
                                          l3544 1D00                                            l3712 04D2  
                                          l3704 0498                                            l3720 050E  
                                          l3640 033E                                            l3632 0300  
                                          l3624 02C6                                            l3616 029A  
                                          l3608 0262                                            l3560 0074  
                                          l3552 0064                                            l2770 1EF0  
                                          l2586 1EC8                                            l2690 1BBE  
                                          l2682 1C8C                                            l2674 1C6A  
                                          l3298 1B00                                            l3378 0EE6  
                                          l3394 0F8A                                            l3386 0F20  
                                          l3490 09EE                                            l3474 08FC  
                                          l3466 088E                                            l3538 1A32  
                                          l3546 1D0A                                            l3730 0552  
                                          l3722 0526                                            l3714 04EA  
                                          l3706 04B6                                            l3650 037A  
                                          l3642 0350                                            l3634 0304  
                                          l3626 02DC                                            l3618 029E  
                                          l3570 00A0                                            l3562 0080  
                                          l3554 0064                                            l2772 1E6E  
                                          l2780 1E5A                                            l2588 1EBE  
                                          l2692 1BD2                                            l2684 1C8E  
                                          l2676 1C6C                                            l3396 0F90  
                                          l3388 0F3A                                            l3484 0982  
                                          l3476 090A                                            l3468 0892  
                                          l3740 06CA                                            l3732 0556  
                                          l3716 04EC                                            l3660 03A0  
                                          l3652 038C                                            l3644 0356  
                                          l3636 0318                                            l3628 02E8  
                                          l3580 00E4                                            l3572 00AE  
                                          l3564 0082                                            l3556 006A  
                                          l2766 1E02                                            l2790 1D48  
                                          l2694 1BDE                                            l2686 1C9A  
                                          l2678 1C74                                            l3398 1008  
                                          l3494 0A0A                                            l3478 092A  
                                          l3486 0994                                            l3750 0700  
                                          l3742 06DE                                            l3734 056A  
                                          l3718 04FC                                            l3662 03C2  
                                          l3654 039C                                            l3646 0358  
                                          l3638 0328                                            l3582 00F8  
                                          l3574 00BC                                            l3566 0084  
                                          l3558 006E                                            ?_pad 0023  
                                          l2776 1E82                                            l2768 1E14  
                                          l2792 1D4C                                            l2784 1D28  
                                          l2688 1E44                                            l2696 1BEA  
                                          l3496 0A30                                            l3488 09BA  
                                          l3760 0736                                            l3736 06B8  
                                          l3728 052A                                            l3680 0410  
                                          l3664 03C6                                            l3648 036E  
                                          l3584 0104                                            l3576 00C0  
                                          l3568 0092                                            l2786 1D36  
                                          l2698 1BF6                                            l3498 0A56  
                                          l3826 07E0                                            l3770 0790  
                                          l3762 0746                                            l3754 070A  
                                          l3738 06BE                                            l3690 045E  
                                          l3682 0422                                            l3674 03E8  
                                          l3666 03D6                                            l3594 022C  
                                          l3586 0218                                            l3578 00D4  
                                          l2788 1D3A                                            l2796 1DCE  
                                          l3828 11D8                                            l3772 07A0  
                                          l3764 0760                                            l3756 071C  
                                          l3748 06E2                                            l3692 0462  
                                          l3684 043A                                            l3676 0406  
                                          l3668 03E2                                            l3596 0238  
                                          l3588 0228                                            l3780 07CC  
                                          l2798 1DD2                                            l3766 0772  
                                          l3758 0734                                            l3774 07A4  
                                          l3694 0472                                            l3686 043C  
                                          l3598 023C                                            l3776 07B6  
                                          l3768 078C                                            l3696 0484  
                                          l3688 044C                                            l3698 0494  
                                          STR_1 FFB9                                            STR_2 FF2A  
                                          STR_3 FEFE                                            STR_4 FFF5  
                                          STR_5 FB48                                            STR_6 FEE7  
                                          STR_7 FF89                                            STR_8 FC91  
                                          STR_9 FB48                                            u2200 1E6A  
                                          u3000 0E2A                                            u2201 1E64  
                                          u3001 0E26                                            u2210 1D36  
                                          u3010 0E48                                            u2211 1D32  
                                          u3011 0E44                                            u2220 1D48  
                                          u3020 0E62                                            u3100 108C  
                                          u2221 1D44                                            u3021 0E5E  
                                          u3101 1088                                            _LATA 000F89  
                                          u2206 1E6C                                            u2070 1DCC  
                                          u3030 0E7C                                            u3110 10AA  
                                          _LATB 000F8A                                            u2071 1DC8  
                                          u3031 0E78                                            u3111 10A6  
                                          _LATC 000F8B                                            u2080 1DF8  
                                          u3200 1278                                            u3040 0E8A  
                                          u3120 10C4                                            u2081 1DF4  
                                          u3201 1274                                            u3041 0E86  
                                          u3121 10C0                                            u3210 128A  
                                          u3050 0E9C                                            u3130 10DE  
                                          u3211 1286                                            u3051 0E98  
                                          u3131 10DA                                            u2180 1E7E  
                                          u3060 0EAA                                            u3140 10EC  
                                          u3300 0A56                                            u3220 0870  
                                          u2181 1E78                                            u3061 0EA6  
                                          u3141 10E8                                            u3301 0A52  
                                          u3221 086C                                            u2190 1E80  
                                          u3150 1150                                            u3070 0EC2  
                                          u3310 0AFE                                            u3230 08B8  
                                          u3151 114C                                            u3071 0EBE  
                                          u3311 0AFA                                            u3231 08B4  
                                          u3160 1188                                            u2600 19A8  
                                          u3080 0F1E                                            u3320 0BA8  
                                          u3240 08FC                                            u3400 02B6  
                                          u3161 1184                                            u2601 19A4  
                                          u3081 0F1A                                            u3321 0BA4  
                                          u3241 08F8                                            u3401 02B2  
                                          u3170 11A4                                            u2610 1B7C  
                                          u3090 0F3A                                            u3250 097A  
                                          u3330 1A84                                            u3410 02FC  
                                          u3171 11A0                                            u2611 1B78  
                                          u3091 0F36                                            u3251 0974  
                                          u3331 1A80                                            u3411 02F8  
                                          u3180 1260                                            u2620 1C5C  
                                          u2700 12C2                                            u3260 097C  
                                          u3500 0484                                            u3420 0318  
                                          u3181 125A                                            u2621 1C58  
                                          u2701 12BE                                            u3501 0480  
                                          u3421 0314                                            u3341 005C  
                                          u3190 1262                                            u2630 1872  
                                          u2710 12F4                                            u3270 0994  
                                          u3510 0494                                            u3430 0350  
                                          u3350 00D4                                            u2631 186E  
                                          u2711 12F0                                            u3271 0990  
                                          u3511 0490                                            u3431 034C  
                                          u3351 00D0                                            u2560 1E28  
                                          u2640 1894                                            u2800 14E4  
                                          u3280 09BA                                            u3600 071C  
                                          u3520 04B6                                            u3440 038C  
                                          u3360 00F8                                            u2561 1E24  
                                          u2641 1890                                            u2721 131E  
                                          u2801 14E0                                            u3281 09B6  
                                          u3601 0718                                            u3521 04B2  
                                          u3441 0388                                            u3361 00F4  
                                          u2570 1938                                            u2650 18EA  
                                          u2730 1342                                            u2810 1512  
                                          u3290 0A30                                            u3610 0746  
                                          u3530 04D2                                            u3450 039C  
                                          u3370 024C                                            u2571 1934  
                                          u2651 18E6                                            u2731 133E  
                                          u2811 150E                                            u3291 0A2C  
                                          u3611 0742                                            u3531 04CE  
                                          u3451 0398                                            u3371 0248  
                                          u2900 1B00                                            u2580 194A  
                                          u2660 18F8                                            u2740 136C  
                                          u2820 155A                                            u3620 0772  
                                          u3540 04FC                                            u3460 03D6  
                                          u3380 0276                                            u2901 1AFC  
                                          u2581 1946                                            u2661 18F4  
                                          u2741 1368                                            u2821 1556  
                                          u3621 076E                                            u3541 04F8  
                                          u3461 03D2                                            u3381 0272  
                                          u2910 1B2E                                            u2590 1972  
                                          u2750 13AC                                            u2670 1B98  
                                          u3630 07A0                                            u3550 0522  
                                          u3470 0406                                            u3390 029A  
                                          u2911 1B2A                                            u2591 196E  
                                          u2751 13A8                                            u2671 1B94  
                                          u2831 16AA                                            u3631 079C  
                                          u3551 051E                                            u3471 0402  
                                          u3391 0296                                            u2680 1C2C  
                                          u2920 1AA0                                            u2760 13F6  
                                          u2840 16CE                                            u3640 07B2  
                                          u3560 0566                                            u3480 0422  
                                          u2681 1C26                                            u2921 1A9C  
                                          u2761 13F2                                            u2841 16CA  
                                          u3641 07AE                                            u3561 0562  
                                          u3481 041E                                            u2690 1C2E  
                                          u2770 144A                                            u2930 0C60  
                                          u2850 16F8                                            u3570 06B8  
                                          u3490 044C                                            u2771 1446  
                                          u2931 0C5A                                            u2851 16F4  
                                          u3571 06B4                                            u3491 0448  
                                          u2780 147C                                            u2940 0C62  
                                          u2860 1738                                            u3580 06DE  
                                          u2781 1478                                            u2861 1734  
                                          u3581 06DA                                            u2790 14BA  
                                          u2950 0C78                                            u2870 17B2  
                                          u3590 0700                                            u2791 14B6  
                                          u2951 0C74                                            u2871 17AE  
                                          u3591 06FC                                            u2960 0CA6  
                                          u2880 17DC                                            u2961 0CA2  
                                          u2881 17D8                                            u2970 0CC2  
                                          u2890 180A                                            u2971 0CBE  
                                          u2891 1806                                            u2980 0CF0  
                                          u2981 0CEC                                            i2l30 1DB0  
                                          u2990 0CFE                                            u2991 0CFA  
                                          i2l40 1CD4                                            i2l33 1EE4  
                                          i2l46 1EF8                                            i2l75 1EA8  
                                          i2l69 1EF6                                            _WPUB 000F61  
                                 _EUSART1_Write 1E18                                            abs@a 0023  
                                          _dbuf 00CE                                            _atoi 1116  
                                          _ctoa 1A8E                                            _main 0052  
                                          _dtoa 0C2E                                   ?_EUSART1_Read 0001  
                                          _prec 0040                                            _nout 00C8  
                                          pad@i 002A                                            pad@p 0027  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002C                                            fsr2l 000FD9  
                                          btemp 004E                                            _utoa 0F10  
                                 __CFG_BORV$190 000000                                            prodh 000FF4  
                                          prodl 000FF3                                            start 004E  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                                         ??_abs 0025                                           ??_pad 0029  
                       __end_of_TMR0_Initialize 1CA0                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 1DCE  
                               __end_of___aodiv 1438                                           ?_atoi 0018  
                                         ?_ctoa 002E                                           ?_main 0001  
                                         ?_dtoa 002E                                 __end_of___aomod 159C  
                                         STR_10 FFC8                                           STR_11 FFEE  
                                         STR_20 FB48                                           STR_12 FF14  
                                         STR_21 FFD7                                           STR_13 FE57  
                                         STR_22 FD6F                                           STR_30 FFFA  
                                         STR_14 FD71                                           STR_23 FD6F  
                                         STR_31 FFEB                                           STR_15 FBDE  
                                         STR_40 FF3F                                           STR_32 FEA1  
                                         STR_16 FA49                                           STR_24 F9B7  
                                         STR_41 FED0                                           STR_17 FDB1  
                                         STR_25 FCE0                                           STR_33 FC0E  
                                         STR_18 FF9A                                           STR_42 FE89  
                                         STR_34 FD06                                           STR_50 FBAE  
                                         STR_26 FA01                                           STR_35 FFE4  
                                         STR_43 FE08                                           STR_19 FDED  
                                         STR_27 FD2A                                           STR_51 FB14  
                                         STR_44 FFAA                                           STR_28 FF66  
                                         STR_36 FDD0                                           STR_52 FA8D  
                                         STR_45 FC6C                                           STR_37 FC42  
                                         STR_29 FF53                                           STR_53 FAD1  
                                         STR_54 FC3E                                           STR_38 FE3D  
                                         STR_46 FD4E                                           STR_39 FEB9  
                                         STR_47 FD92                                           STR_55 FC68  
                                         STR_48 FE23                                           STR_56 FCBA  
                                         STR_57 FE70                                           STR_49 FC3E  
                                         STR_58 FB7C                                           STR_59 FF78  
                     TMR0_ReadTimer@readValHigh 0008                                           ?_utoa 002E  
                                         _T0CON 000FD5                                 __end_of___lodiv 1794  
                               __end_of___lomod 1864                                  __CFG_DEBUG$OFF 000000  
                                         i2l253 003A                                 _TMR0_WriteTimer 1EDC  
                                         i2l419 16A2                                    vfpfcnvrt@fmt 007C  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0088  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
              __size_of_ADC_GetConversionResult 0014               __size_of_TMR0_SetInterruptHandler 000A  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                       ?_TMR0_SetInterruptHandler 0011  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR0_ISR 1CD6                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _delta 00F0  
                                         _flags 0042                                           _fputc 1926  
                                         _fputs 1B3A                                 __end_of_isdigit 1C34  
                                noteOn@velocity 0013                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0025                                           pad@fp 0023  
                                         atoi@s 0018                                           _width 003E  
                                         ctoa@c 0030                                           _putch 1EAA  
                                         ctoa@w 0031                                           main@i 00C7  
                                         dtoa@d 0030                                           dtoa@i 0078  
                                         dtoa@n 0070                                           dtoa@p 006A  
                                         dtoa@s 006E                                           dtoa@w 006C  
                               __end_of_isspace 1B3A                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                  main@velocity 00C6                                  ??_EUSART1_Read 0011  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         ttemp5 004F                                           ttemp6 0052  
                                         ttemp7 0056                                           utoa@d 0030  
                                         utoa@i 0074                                           utoa@n 006C  
                                         utoa@p 0068                                           utoa@w 006A  
                                         status 000FD8                                           wtemp8 004F  
                                __CFG_HFOFST$ON 000000                                ___lodiv@dividend 0011  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                               __initialization 19BC                                    __end_of_atoi 12B0  
                                  __end_of_ctoa 1AE8                      __end_of_EUSART1_Initialize 1BFC  
                                  __end_of_main 084A                                    __end_of_dtoa 0F10  
                                  __end_of_utoa 1116                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 001A                                          ??_ctoa 0031  
                                        ??_main 00A3                                          ??_dtoa 0060  
                                        ??_utoa 0060                                   __activetblptr 000003  
                              ___lodiv@quotient 0021                   __size_of_ADC_IsConversionDone 0014  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0013  
                                        ?_fputs 001C                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                __CFG_WDTEN$OFF 000000                                          i2l2720 15B0  
                                        i2l2730 1616                                          i2l2722 15DE  
                                        i2l2740 164C                                          i2l2732 161A  
                                        i2l2724 15E4                                          i2l2716 159C  
                                        i2l2820 001A                                          i2l2574 1D94  
                                        i2l2582 1EDC                                          i2l2670 1E96  
                                        i2l2742 167C                                          i2l2734 161C  
                                        i2l2726 15EC                                          i2l2718 159E  
                                        i2l2822 0028                                          i2l2576 1D9C  
                                        i2l2584 1EE0                                          i2l2736 162C  
                                        i2l2728 15FC                                          i2l2760 1CA6  
                                        i2l2824 0036                                          i2l2578 1DA8  
                                        i2l2738 163A                                          i2l2746 1684  
                                        i2l2762 1CAA                                          i2l2668 1EF4  
                                        i2l2764 1CBC                                          i2l2756 1CA0  
                                        i2l2758 1CA2                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TX1REG 000FAD                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                            _nominalHallUnPressed 00F2  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 003C  
                                     ??___aodiv 0021                                       ??___aomod 0021  
                                        ___wmul 1D50                                  __CFG_STVREN$ON 000000  
                       __end_of_TMR0_WriteTimer 1EE6                                       ??___lodiv 0021  
                                     ??___lomod 0021                        ?_EUSART1_SetErrorHandler 0011  
                              ?_TMR0_Initialize 0001                                          clear_0 1A02  
                                        clear_1 1A0E                                          clear_2 1A1A  
                                        _sample 0100                                          _noteOn 1E2E  
                                        _printf 1D00                                          pad@buf 0025  
              ??_EUSART1_SetOverrunErrorHandler 0013                 ?_EUSART1_SetOverrunErrorHandler 0011  
                                        ctoa@fp 002E                                          dtoa@fp 002E  
                                        _strlen 1C34                                          fputc@c 0013  
                                        fputs@c 0020                                          fputs@i 0021  
                                        fputs@s 001C                                       ??_isdigit 0013  
                                  __mediumconst F9B6                                       ??_isspace 0013  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 1A8E  
                               ??_EUSART1_Write 0011                                          utoa@fp 002E  
      TMR0_SetInterruptHandler@InterruptHandler 0011                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 1DCE                                      __accesstop 0060  
                       __end_of__initialization 1A20                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                    __size_of_ADC_StartConversion 0004  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 1EE6  
                                  __pidataBANK1 1D76                             ??_SYSTEM_Initialize 0015  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 19BC  
                                 __end_of_fputs 1B7E                                   __end_of_putch 1EB4  
                       __size_of_TMR0_ReadTimer 001E                            __end_of_EUSART1_Read 1D50  
            __size_ofi2_ADC_GetConversionResult 0014                      ?i2_ADC_GetConversionResult 0001  
                       _ADC_GetConversionResult 1E82                           i2_ADC_StartConversion 1EF4  
                                       ??_fputc 0017                       __end_of_SYSTEM_Initialize 1DE8  
                                       ??_fputs 0020                              __size_of_myTMR0ISR 0108  
                                       ??_putch 0012                                      __pbssBANK0 00C8  
                                    __pbssBANK1 0100                                 __CFG_PLLCFG$OFF 000000  
               __end_of_EUSART1_SetErrorHandler 1EDC                              __CFG_CCP2MX$PORTC1 000000  
              __end_of_TMR0_SetInterruptHandler 1EBE                                         ?___wmul 0011  
                                    ??_TMR0_ISR 000D                              __CFG_CCP3MX$PORTB5 000000  
                              ?_TMR0_WriteTimer 0009                                         ?_noteOn 0012  
                                       ?_printf 0099                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 0011          __end_of_EUSART1_SetFramingErrorHandler 1ED2  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 1EC8  
             __end_ofi2_ADC_GetConversionResult 1EAA                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 03E4                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                ___lomod@dividend 0011  
                                   noteOn@pitch 0012                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv 12B0                                         ___aomod 1438  
                               __size_of___wmul 0026                                         ___lodiv 16A4  
                                       ___lomod 1794                               __end_of_myTMR0ISR 16A4  
                                     ?_vfprintf 0093                             _EUSART1_is_rx_ready 1E5A  
                     ??_ADC_GetConversionResult 0013                                  main@instrument 00C4  
                                       __pcinit 19BC                                         __ramtop 1000  
                               __size_of_noteOn 0016                                         __ptext0 0052  
                                       __ptext1 1D00                                         __ptext2 1A2A  
                                       __ptext3 084A                                         __ptext4 0F10  
                                       __ptext5 1794                                         __ptext6 16A4  
                                       __ptext7 0C2E                                         __ptext8 1B7E  
                                       __ptext9 1438                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 1DB2                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isdigit 1BFC  
                        ?i2_ADC_StartConversion 0001                              _EUSART1_Initialize 1BBE  
                      ??_PIN_MANAGER_Initialize 0011                                         _isspace 1AE8  
                                       atoi@neg 001E                                         main@cmd 00C5  
                    __size_of_SYSTEM_Initialize 001A                            end_of_initialization 1A20  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                    _sampleRate 00EE                                         fputc@fp 0015  
                   _EUSART1_OverrunErrorHandler 0044                                         fputs@fp 001E  
                  __end_of_ADC_IsConversionDone 1E82                               __end_of_vfpfcnvrt 0C2E  
                         TMR0_ReadTimer@readVal 0005                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 003C  
                                _TMR0_ReadTimer 1D94                            ??_EUSART1_Initialize 0013  
                                       strlen@a 0013                                         strlen@s 0011  
                                    _putByteSCI 1DE8                        _TMR0_SetInterruptHandler 1EB4  
                                     _PORTAbits 000F80                             _ADC_StartConversion 1EF0  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0011  
                         ??_EUSART1_is_rx_ready 0011                                    _EUSART1_Read 1D28  
                          ?_ADC_StartConversion 0001                          __end_of_TMR0_ReadTimer 1DB2  
                  __end_of_INTERRUPT_Initialize 1EF0                                      myTMR0ISR@i 004C  
                                   vfpfcnvrt@ap 007E                                     vfpfcnvrt@fp 007A  
                                   vfpfcnvrt@ll 0080                                  __end_of___wmul 1D76  
                             __size_of_TMR0_ISR 0036                                  _ADC_Initialize 1E44  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_noteOn 1E44  
                                __end_of_printf 1D28                     ??i2_ADC_GetConversionResult 0003  
                                __end_of_strlen 1C6A                             start_initialization 19BC  
                               ___lodiv@divisor 0019                                 ___lodiv@counter 0029  
                      __size_of_TMR0_Initialize 0036                 __size_of_PIN_MANAGER_Initialize 002A  
                                   __end_of_abs 1BBE                                     __end_of_pad 1926  
                                   putch@txData 0012                           __end_of_EUSART1_Write 1E2E  
                         ??_ADC_StartConversion 0011                                     vfprintf@fmt 0095  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0015  
                        __end_of_ADC_Initialize 1E5A                                     __pdataBANK0 00EE  
                                   __pdataBANK1 0140                                        ??_noteOn 0014  
                                   ?_putByteSCI 0001                                        ??_printf 003E  
                                      ??_strlen 0013                                     __pbssCOMRAM 003E  
                                 __pcstackBANK0 0060                                ___aodiv@dividend 0011  
                          _ADC_IsConversionDone 1E6E                ??_EUSART1_SetFramingErrorHandler 0013  
               ?_EUSART1_SetFramingErrorHandler 0011                       i2_ADC_GetConversionResult 1E96  
                                     _atoi$1606 0020                                       _atoi$1607 0024  
                                     _atoi$1608 0022                           _TMR0_InterruptHandler 004A  
                        _PIN_MANAGER_Initialize 1CD6                                       _dtoa$1126 0068  
                                     __pintcode 0008                               _ADC_SelectChannel 1E00  
                                 __pmediumconst F9B6                                        ?___aodiv 0011  
                                      ?___aomod 0011                                ___aodiv@quotient 0023  
                                      ?___lodiv 0011                                        ?___lomod 0011  
                               ?_ADC_Initialize 0001                              ?_ADC_SelectChannel 0001  
                  ??_INTERRUPT_InterruptManager 000D                         ??i2_ADC_StartConversion 0001  
                              __CFG_PRICLKEN$ON 000000                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 159C                                 ___lomod@divisor 0019  
                               ___lomod@counter 0021                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 0011  
                           ??_ADC_SelectChannel 0011                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00CA                           ?_ADC_IsConversionDone 0001  
                                      ?_isspace 0011                         _EUSART1_SetErrorHandler 1ED2  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 1EEC  
                             ??_TMR0_Initialize 0013                                  ___wmul@product 0015  
       EUSART1_SetErrorHandler@interruptHandler 0011                             __size_of_putByteSCI 0018  
                     __end_of_ADC_SelectChannel 1E18                                        i2u210_40 15DE  
                                      i2u210_41 15DA                                        i2u211_40 15FC  
                                      i2u211_41 15F8                                        i2u212_40 162C  
                                      i2u212_41 1628                                        i2u213_40 164C  
                                      i2u213_41 1648                                        i2u214_40 167C  
                                      i2u214_41 1678                                        i2u223_40 0028  
                                      i2u223_41 0024             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u216_40 1CBC                                        i2u224_40 0036  
                                      i2u216_41 1CB8                                        i2u224_41 0032  
                                      i2u209_40 15B0                                        i2u209_41 15AC  
                                      i2u217_48 1CC2                                        i2u217_49 1CD4  
                    ??_TMR0_SetInterruptHandler 0013                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                     main@F6148 0140                                        _TMR0_ISR 1CA0  
                                     _songIndex 00CC                                       _vfpfcnvrt 084A  
                      TMR0_ReadTimer@readValLow 0007                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0011                                      ?_myTMR0ISR 0001  
                      ADC_SelectChannel@channel 0012                                    _isspace$1624 0017  
                                    vfpfcnvrt@c 0090                                     _INTCON2bits 000FF1  
                                     copy_data0 19D0                                       copy_data1 19F0  
                         ?_INTERRUPT_Initialize 0001                                        __Hrparam 0000  
                                    vfprintf@ap 0097                                        __Lrparam 0000  
                                    vfprintf@fp 0093                        ?_ADC_GetConversionResult 0011  
                            _nominalHallPressed 00F1                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0011  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                     __size_of_EUSART1_Initialize 003E  
                              __size_of___lomod 00D0                                      ?_vfpfcnvrt 007A  
                               ___aodiv@divisor 0019                                 ___aodiv@counter 0021  
                     ??_EUSART1_SetErrorHandler 0013                             putByteSCI@writeByte 0011  
                        ??_ADC_IsConversionDone 0011                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1E6E                                __size_of_isdigit 0038  
                              __size_of_isspace 0052                                        __ptext10 12B0  
                                      __ptext11 1A8E                                        __ptext20 1BFC  
                                      __ptext12 1864                                        __ptext21 1D50  
                                      __ptext13 1C34                                        __ptext30 1BBE  
                                      __ptext22 1E2E                                        __ptext14 1B3A  
                                      __ptext31 1EBE                                        __ptext23 1DE8  
                                      __ptext15 1926                                        __ptext40 1E82  
                                      __ptext32 1EC8                                        __ptext24 1DCE  
                                      __ptext16 1EAA                                        __ptext33 1ED2  
                                      __ptext25 1C6A                                        __ptext17 1E18  
                                      __ptext42 1CA0                                        __ptext34 1E44  
                                      __ptext26 1EB4                                        __ptext18 1116  
                                      __ptext43 1EF8                                        __ptext35 1E5A  
                                      __ptext27 1CD6                                        __ptext19 1AE8  
                                      __ptext44 159C                                        __ptext36 1D28  
                                      __ptext28 1DB2                                        __ptext45 1EF4  
                                      __ptext37 1EF0                                        __ptext29 1EEC  
                                      __ptext46 1E96                                        __ptext38 1E00  
                                      __ptext47 1EDC                                        __ptext39 1E6E  
                                      __ptext48 1D94                                        __ptext49 0000  
                       TMR0_WriteTimer@timerVal 0009                                       noteOn@cmd 0014  
                             ??_TMR0_WriteTimer 000B                                        _keyState 00CD  
                                 __size_of_atoi 019A                                   __size_of_ctoa 005A  
                                 __size_of_main 07F8                                   __size_of_dtoa 02E2  
                                 __size_of_utoa 0206                                ??_TMR0_ReadTimer 0003  
          __end_of_TMR0_DefaultInterruptHandler 1EFA           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 1EF8                      __size_of_ADC_SelectChannel 0018  
EUSART1_SetOverrunErrorHandler@interruptHandler 0011                                        int$flags 004E  
                                      _vfprintf 1A2A              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0099  
                                      main@song 00A5                                    ??_putByteSCI 0011  
                   _EUSART1_FramingErrorHandler 0046                                ___aomod@dividend 0011  
                                   ??_myTMR0ISR 000B                                  _vfpfcnvrt$1147 0091  
                                    _INTCONbits 000FF2                                        isdigit@c 0011  
                        ??_INTERRUPT_Initialize 0011                                        intlevel2 0000  
                   __end_of_ADC_StartConversion 1EF4                                        isspace@c 0011  
                       ?_PIN_MANAGER_Initialize 0001                 __end_of_ADC_GetConversionResult 1E96  
        __end_of_EUSART1_SetOverrunErrorHandler 1EC8         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1EBE                                      _RCSTA1bits 000FAB  
                            __end_of_putByteSCI 1E00                                ??_ADC_Initialize 0011  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 00A1  EUSART1_SetFramingErrorHandler@interruptHandler 0011  
                               ___aomod@divisor 0019                                     ??_vfpfcnvrt 0038  
                               ___aomod@counter 0021                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 004D                  __size_ofi2_ADC_StartConversion 0004  
                 __end_ofi2_ADC_StartConversion 1EF8                                 _TMR0_Initialize 1C6A  
                             __CFG_T3CMX$PORTC0 000000                                    ___aodiv@sign 0022  
                __end_of_PIN_MANAGER_Initialize 1D00                               __CFG_FOSC$INTIO67 000000  
                                  ___aomod@sign 0022                                    fp__myTMR0ISR 0000  
