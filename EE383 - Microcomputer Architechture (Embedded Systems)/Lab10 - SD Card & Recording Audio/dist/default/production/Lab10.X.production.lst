

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 02 15:48:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           ; Version 2.10
    66                           ; Generated 31/07/2019 GMT
    67                           ; 
    68                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F26K22 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   101  0000                     
   102 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   103  0000                     
   104 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   105  0000                     
   106                           	psect	idataBANK0
   107  001B94                     __pidataBANK0:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _sampleRate
   111  001B94  0640               	dw	1600
   112                           
   113                           ;initializer for _blueBufferIsEmpty
   114  001B96  01                 	db	1
   115                           
   116                           ;initializer for _redBufferIsEmpty
   117  001B97  01                 	db	1
   118                           
   119                           	psect	mediumconst
   120  00F8EA                     __pmediumconst:
   121                           	opt callstack 0
   122  00F8EA  00                 	db	0
   123  00F8EB                     main@F5845:
   124                           	opt callstack 0
   125  00F8EB  80                 	db	128
   126  00F8EC  9F                 	db	159
   127  00F8ED  BB                 	db	187
   128  00F8EE  D5                 	db	213
   129  00F8EF  E9                 	db	233
   130  00F8F0  F8                 	db	248
   131  00F8F1  FF                 	db	255
   132  00F8F2  FF                 	db	255
   133  00F8F3  F8                 	db	248
   134  00F8F4  E9                 	db	233
   135  00F8F5  D5                 	db	213
   136  00F8F6  BB                 	db	187
   137  00F8F7  9F                 	db	159
   138  00F8F8  80                 	db	128
   139  00F8F9  61                 	db	97
   140  00F8FA  45                 	db	69
   141  00F8FB  2B                 	db	43
   142  00F8FC  17                 	db	23
   143  00F8FD  08                 	db	8
   144  00F8FE  01                 	db	1
   145  00F8FF  01                 	db	1
   146  00F900  08                 	db	8
   147  00F901  17                 	db	23
   148  00F902  2B                 	db	43
   149  00F903  45                 	db	69
   150  00F904  61                 	db	97
   151  00F905                     __end_ofmain@F5845:
   152                           	opt callstack 0
   153  00F905                     _dpowers:
   154                           	opt callstack 0
   155  00F905  0001               	dw	1
   156  00F907  000A               	dw	10
   157  00F909  0064               	dw	100
   158  00F90B  03E8               	dw	1000
   159  00F90D  2710               	dw	10000
   160  00F90F                     __end_of_dpowers:
   161                           	opt callstack 0
   162  00F90F                     _hexpowers:
   163                           	opt callstack 0
   164  00F90F  0001               	dw	1
   165  00F911  0010               	dw	16
   166  00F913  0100               	dw	256
   167  00F915  1000               	dw	4096
   168  00F917                     __end_of_hexpowers:
   169                           	opt callstack 0
   170  00F917                     _spi2_configuration:
   171                           	opt callstack 0
   172  00F917  01                 	db	1
   173  00F918  40                 	db	64
   174  00F919  01                 	db	1
   175  00F91A  00                 	db	0
   176  00F91B                     __end_of_spi2_configuration:
   177                           	opt callstack 0
   178  0000                     _CCPTMRS0bits	set	3913
   179  0000                     _ANSELA	set	3896
   180  0000                     _ANSELB	set	3897
   181  0000                     _ANSELC	set	3898
   182  0000                     _T2CONbits	set	4026
   183  0000                     _T2CON	set	4026
   184  0000                     _TMR2	set	4028
   185  0000                     _PR2	set	4027
   186  0000                     _LATBbits	set	3978
   187  0000                     _CCPR1L	set	4030
   188  0000                     _CCPR1H	set	4031
   189  0000                     _PSTR1CON	set	4025
   190  0000                     _PWM1CON	set	4023
   191  0000                     _ECCP1AS	set	4022
   192  0000                     _CCP1CON	set	4029
   193  0000                     _INTCON2bits	set	4081
   194  0000                     _WPUB	set	3937
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISA	set	3986
   198  0000                     _LATC	set	3979
   199  0000                     _LATB	set	3978
   200  0000                     _LATA	set	3977
   201  0000                     _OSCTUNE	set	3995
   202  0000                     _OSCCON2	set	4050
   203  0000                     _OSCCON	set	4051
   204  0000                     _RCONbits	set	4048
   205  0000                     _TXREG1	set	4013
   206  0000                     _RCREG1	set	4014
   207  0000                     _RCSTA1bits	set	4011
   208  0000                     _TXSTA1bits	set	4012
   209  0000                     _PIR1bits	set	3998
   210  0000                     _SPBRGH1	set	4016
   211  0000                     _SPBRG1	set	4015
   212  0000                     _TXSTA1	set	4012
   213  0000                     _RCSTA1	set	4011
   214  0000                     _BAUDCON1	set	4024
   215  0000                     _ADCON0bits	set	4034
   216  0000                     _ADRESH	set	4036
   217  0000                     _ADRESL	set	4035
   218  0000                     _ADCON2	set	4032
   219  0000                     _ADCON1	set	4033
   220  0000                     _ADCON0	set	4034
   221  0000                     _PIR3bits	set	4004
   222  0000                     _SSP2BUF	set	3951
   223  0000                     _SSP2CON2	set	3947
   224  0000                     _SSP2CON1bits	set	3948
   225  0000                     _TRISBbits	set	3987
   226  0000                     _SSP2ADD	set	3950
   227  0000                     _SSP2CON1	set	3948
   228  0000                     _SSP2STAT	set	3949
   229  0000                     _T0CON	set	4053
   230  0000                     _INTCONbits	set	4082
   231  0000                     _TMR0L	set	4054
   232  0000                     _TMR0H	set	4055
   233  0000                     _T0CONbits	set	4053
   234  0000                     _PLLRDY	set	32407
   235  00F91B                     STR_45:
   236  00F91B  50                 	db	80	;'P'
   237  00F91C  72                 	db	114	;'r'
   238  00F91D  65                 	db	101	;'e'
   239  00F91E  73                 	db	115	;'s'
   240  00F91F  73                 	db	115	;'s'
   241  00F920  20                 	db	32
   242  00F921  61                 	db	97	;'a'
   243  00F922  6E                 	db	110	;'n'
   244  00F923  79                 	db	121	;'y'
   245  00F924  20                 	db	32
   246  00F925  6B                 	db	107	;'k'
   247  00F926  65                 	db	101	;'e'
   248  00F927  79                 	db	121	;'y'
   249  00F928  20                 	db	32
   250  00F929  74                 	db	116	;'t'
   251  00F92A  6F                 	db	111	;'o'
   252  00F92B  20                 	db	32
   253  00F92C  73                 	db	115	;'s'
   254  00F92D  74                 	db	116	;'t'
   255  00F92E  61                 	db	97	;'a'
   256  00F92F  72                 	db	114	;'r'
   257  00F930  74                 	db	116	;'t'
   258  00F931  20                 	db	32
   259  00F932  72                 	db	114	;'r'
   260  00F933  65                 	db	101	;'e'
   261  00F934  63                 	db	99	;'c'
   262  00F935  6F                 	db	111	;'o'
   263  00F936  72                 	db	114	;'r'
   264  00F937  64                 	db	100	;'d'
   265  00F938  69                 	db	105	;'i'
   266  00F939  6E                 	db	110	;'n'
   267  00F93A  67                 	db	103	;'g'
   268  00F93B  20                 	db	32
   269  00F93C  61                 	db	97	;'a'
   270  00F93D  75                 	db	117	;'u'
   271  00F93E  64                 	db	100	;'d'
   272  00F93F  69                 	db	105	;'i'
   273  00F940  6F                 	db	111	;'o'
   274  00F941  20                 	db	32
   275  00F942  61                 	db	97	;'a'
   276  00F943  6E                 	db	110	;'n'
   277  00F944  64                 	db	100	;'d'
   278  00F945  20                 	db	32
   279  00F946  70                 	db	112	;'p'
   280  00F947  72                 	db	114	;'r'
   281  00F948  65                 	db	101	;'e'
   282  00F949  73                 	db	115	;'s'
   283  00F94A  73                 	db	115	;'s'
   284  00F94B  20                 	db	32
   285  00F94C  61                 	db	97	;'a'
   286  00F94D  6E                 	db	110	;'n'
   287  00F94E  79                 	db	121	;'y'
   288  00F94F  20                 	db	32
   289  00F950  6B                 	db	107	;'k'
   290  00F951  65                 	db	101	;'e'
   291  00F952  79                 	db	121	;'y'
   292  00F953  20                 	db	32
   293  00F954  74                 	db	116	;'t'
   294  00F955  6F                 	db	111	;'o'
   295  00F956  20                 	db	32
   296  00F957  73                 	db	115	;'s'
   297  00F958  74                 	db	116	;'t'
   298  00F959  6F                 	db	111	;'o'
   299  00F95A  70                 	db	112	;'p'
   300  00F95B  20                 	db	32
   301  00F95C  72                 	db	114	;'r'
   302  00F95D  65                 	db	101	;'e'
   303  00F95E  63                 	db	99	;'c'
   304  00F95F  6F                 	db	111	;'o'
   305  00F960  72                 	db	114	;'r'
   306  00F961  64                 	db	100	;'d'
   307  00F962  69                 	db	105	;'i'
   308  00F963  6E                 	db	110	;'n'
   309  00F964  67                 	db	103	;'g'
   310  00F965  2E                 	db	46
   311  00F966  0D                 	db	13
   312  00F967  0A                 	db	10
   313  00F968  00                 	db	0
   314  00F969                     STR_53:
   315  00F969  4C                 	db	76	;'L'
   316  00F96A  6F                 	db	111	;'o'
   317  00F96B  67                 	db	103	;'g'
   318  00F96C  20                 	db	32
   319  00F96D  66                 	db	102	;'f'
   320  00F96E  69                 	db	105	;'i'
   321  00F96F  6C                 	db	108	;'l'
   322  00F970  65                 	db	101	;'e'
   323  00F971  20                 	db	32
   324  00F972  6E                 	db	110	;'n'
   325  00F973  61                 	db	97	;'a'
   326  00F974  6D                 	db	109	;'m'
   327  00F975  65                 	db	101	;'e'
   328  00F976  3A                 	db	58	;':'
   329  00F977  20                 	db	32
   330  00F978  20                 	db	32
   331  00F979  42                 	db	66	;'B'
   332  00F97A  72                 	db	114	;'r'
   333  00F97B  6F                 	db	111	;'o'
   334  00F97C  77                 	db	119	;'w'
   335  00F97D  73                 	db	115	;'s'
   336  00F97E  65                 	db	101	;'e'
   337  00F97F  20                 	db	32
   338  00F980  61                 	db	97	;'a'
   339  00F981  6E                 	db	110	;'n'
   340  00F982  64                 	db	100	;'d'
   341  00F983  20                 	db	32
   342  00F984  70                 	db	112	;'p'
   343  00F985  72                 	db	114	;'r'
   344  00F986  6F                 	db	111	;'o'
   345  00F987  76                 	db	118	;'v'
   346  00F988  69                 	db	105	;'i'
   347  00F989  64                 	db	100	;'d'
   348  00F98A  65                 	db	101	;'e'
   349  00F98B  20                 	db	32
   350  00F98C  61                 	db	97	;'a'
   351  00F98D  20                 	db	32
   352  00F98E  2E                 	db	46
   353  00F98F  63                 	db	99	;'c'
   354  00F990  73                 	db	115	;'s'
   355  00F991  76                 	db	118	;'v'
   356  00F992  20                 	db	32
   357  00F993  65                 	db	101	;'e'
   358  00F994  78                 	db	120	;'x'
   359  00F995  74                 	db	116	;'t'
   360  00F996  65                 	db	101	;'e'
   361  00F997  6E                 	db	110	;'n'
   362  00F998  73                 	db	115	;'s'
   363  00F999  69                 	db	105	;'i'
   364  00F99A  6F                 	db	111	;'o'
   365  00F99B  6E                 	db	110	;'n'
   366  00F99C  20                 	db	32
   367  00F99D  74                 	db	116	;'t'
   368  00F99E  6F                 	db	111	;'o'
   369  00F99F  20                 	db	32
   370  00F9A0  79                 	db	121	;'y'
   371  00F9A1  6F                 	db	111	;'o'
   372  00F9A2  75                 	db	117	;'u'
   373  00F9A3  72                 	db	114	;'r'
   374  00F9A4  20                 	db	32
   375  00F9A5  66                 	db	102	;'f'
   376  00F9A6  69                 	db	105	;'i'
   377  00F9A7  6C                 	db	108	;'l'
   378  00F9A8  65                 	db	101	;'e'
   379  00F9A9  20                 	db	32
   380  00F9AA  6E                 	db	110	;'n'
   381  00F9AB  61                 	db	97	;'a'
   382  00F9AC  6D                 	db	109	;'m'
   383  00F9AD  65                 	db	101	;'e'
   384  00F9AE  0D                 	db	13
   385  00F9AF  0A                 	db	10
   386  00F9B0  00                 	db	0
   387  00F9B1                     STR_49:
   388  00F9B1  54                 	db	84	;'T'
   389  00F9B2  6F                 	db	111	;'o'
   390  00F9B3  20                 	db	32
   391  00F9B4  73                 	db	115	;'s'
   392  00F9B5  70                 	db	112	;'p'
   393  00F9B6  6F                 	db	111	;'o'
   394  00F9B7  6F                 	db	111	;'o'
   395  00F9B8  6C                 	db	108	;'l'
   396  00F9B9  20                 	db	32
   397  00F9BA  74                 	db	116	;'t'
   398  00F9BB  65                 	db	101	;'e'
   399  00F9BC  72                 	db	114	;'r'
   400  00F9BD  6D                 	db	109	;'m'
   401  00F9BE  69                 	db	105	;'i'
   402  00F9BF  6E                 	db	110	;'n'
   403  00F9C0  61                 	db	97	;'a'
   404  00F9C1  6C                 	db	108	;'l'
   405  00F9C2  20                 	db	32
   406  00F9C3  63                 	db	99	;'c'
   407  00F9C4  6F                 	db	111	;'o'
   408  00F9C5  6E                 	db	110	;'n'
   409  00F9C6  74                 	db	116	;'t'
   410  00F9C7  65                 	db	101	;'e'
   411  00F9C8  6E                 	db	110	;'n'
   412  00F9C9  74                 	db	116	;'t'
   413  00F9CA  73                 	db	115	;'s'
   414  00F9CB  20                 	db	32
   415  00F9CC  69                 	db	105	;'i'
   416  00F9CD  6E                 	db	110	;'n'
   417  00F9CE  74                 	db	116	;'t'
   418  00F9CF  6F                 	db	111	;'o'
   419  00F9D0  20                 	db	32
   420  00F9D1  61                 	db	97	;'a'
   421  00F9D2  20                 	db	32
   422  00F9D3  66                 	db	102	;'f'
   423  00F9D4  69                 	db	105	;'i'
   424  00F9D5  6C                 	db	108	;'l'
   425  00F9D6  65                 	db	101	;'e'
   426  00F9D7  20                 	db	32
   427  00F9D8  66                 	db	102	;'f'
   428  00F9D9  6F                 	db	111	;'o'
   429  00F9DA  6C                 	db	108	;'l'
   430  00F9DB  6C                 	db	108	;'l'
   431  00F9DC  6F                 	db	111	;'o'
   432  00F9DD  77                 	db	119	;'w'
   433  00F9DE  20                 	db	32
   434  00F9DF  74                 	db	116	;'t'
   435  00F9E0  68                 	db	104	;'h'
   436  00F9E1  65                 	db	101	;'e'
   437  00F9E2  73                 	db	115	;'s'
   438  00F9E3  65                 	db	101	;'e'
   439  00F9E4  20                 	db	32
   440  00F9E5  69                 	db	105	;'i'
   441  00F9E6  6E                 	db	110	;'n'
   442  00F9E7  73                 	db	115	;'s'
   443  00F9E8  74                 	db	116	;'t'
   444  00F9E9  72                 	db	114	;'r'
   445  00F9EA  75                 	db	117	;'u'
   446  00F9EB  63                 	db	99	;'c'
   447  00F9EC  74                 	db	116	;'t'
   448  00F9ED  69                 	db	105	;'i'
   449  00F9EE  6F                 	db	111	;'o'
   450  00F9EF  6E                 	db	110	;'n'
   451  00F9F0  73                 	db	115	;'s'
   452  00F9F1  3A                 	db	58	;':'
   453  00F9F2  0D                 	db	13
   454  00F9F3  0A                 	db	10
   455  00F9F4  0D                 	db	13
   456  00F9F5  0A                 	db	10
   457  00F9F6  00                 	db	0
   458  00F9F7                     STR_60:
   459  00F9F7  52                 	db	82	;'R'
   460  00F9F8  69                 	db	105	;'i'
   461  00F9F9  67                 	db	103	;'g'
   462  00F9FA  68                 	db	104	;'h'
   463  00F9FB  74                 	db	116	;'t'
   464  00F9FC  20                 	db	32
   465  00F9FD  6D                 	db	109	;'m'
   466  00F9FE  6F                 	db	111	;'o'
   467  00F9FF  75                 	db	117	;'u'
   468  00FA00  73                 	db	115	;'s'
   469  00FA01  65                 	db	101	;'e'
   470  00FA02  20                 	db	32
   471  00FA03  63                 	db	99	;'c'
   472  00FA04  6C                 	db	108	;'l'
   473  00FA05  69                 	db	105	;'i'
   474  00FA06  63                 	db	99	;'c'
   475  00FA07  6B                 	db	107	;'k'
   476  00FA08  20                 	db	32
   477  00FA09  6F                 	db	111	;'o'
   478  00FA0A  6E                 	db	110	;'n'
   479  00FA0B  20                 	db	32
   480  00FA0C  74                 	db	116	;'t'
   481  00FA0D  68                 	db	104	;'h'
   482  00FA0E  65                 	db	101	;'e'
   483  00FA0F  20                 	db	32
   484  00FA10  75                 	db	117	;'u'
   485  00FA11  70                 	db	112	;'p'
   486  00FA12  70                 	db	112	;'p'
   487  00FA13  65                 	db	101	;'e'
   488  00FA14  72                 	db	114	;'r'
   489  00FA15  20                 	db	32
   490  00FA16  6C                 	db	108	;'l'
   491  00FA17  65                 	db	101	;'e'
   492  00FA18  66                 	db	102	;'f'
   493  00FA19  74                 	db	116	;'t'
   494  00FA1A  20                 	db	32
   495  00FA1B  6F                 	db	111	;'o'
   496  00FA1C  66                 	db	102	;'f'
   497  00FA1D  20                 	db	32
   498  00FA1E  74                 	db	116	;'t'
   499  00FA1F  68                 	db	104	;'h'
   500  00FA20  65                 	db	101	;'e'
   501  00FA21  20                 	db	32
   502  00FA22  50                 	db	80	;'P'
   503  00FA23  75                 	db	117	;'u'
   504  00FA24  54                 	db	84	;'T'
   505  00FA25  54                 	db	84	;'T'
   506  00FA26  59                 	db	89	;'Y'
   507  00FA27  20                 	db	32
   508  00FA28  77                 	db	119	;'w'
   509  00FA29  69                 	db	105	;'i'
   510  00FA2A  6E                 	db	110	;'n'
   511  00FA2B  64                 	db	100	;'d'
   512  00FA2C  6F                 	db	111	;'o'
   513  00FA2D  77                 	db	119	;'w'
   514  00FA2E  0D                 	db	13
   515  00FA2F  0A                 	db	10
   516  00FA30  00                 	db	0
   517  00FA31                     STR_48:
   518  00FA31  59                 	db	89	;'Y'
   519  00FA32  6F                 	db	111	;'o'
   520  00FA33  75                 	db	117	;'u'
   521  00FA34  20                 	db	32
   522  00FA35  6D                 	db	109	;'m'
   523  00FA36  61                 	db	97	;'a'
   524  00FA37  79                 	db	121	;'y'
   525  00FA38  20                 	db	32
   526  00FA39  73                 	db	115	;'s'
   527  00FA3A  74                 	db	116	;'t'
   528  00FA3B  6F                 	db	111	;'o'
   529  00FA3C  70                 	db	112	;'p'
   530  00FA3D  20                 	db	32
   531  00FA3E  73                 	db	115	;'s'
   532  00FA3F  70                 	db	112	;'p'
   533  00FA40  6F                 	db	111	;'o'
   534  00FA41  6F                 	db	111	;'o'
   535  00FA42  6C                 	db	108	;'l'
   536  00FA43  69                 	db	105	;'i'
   537  00FA44  6E                 	db	110	;'n'
   538  00FA45  67                 	db	103	;'g'
   539  00FA46  20                 	db	32
   540  00FA47  61                 	db	97	;'a'
   541  00FA48  74                 	db	116	;'t'
   542  00FA49  20                 	db	32
   543  00FA4A  61                 	db	97	;'a'
   544  00FA4B  6E                 	db	110	;'n'
   545  00FA4C  79                 	db	121	;'y'
   546  00FA4D  74                 	db	116	;'t'
   547  00FA4E  69                 	db	105	;'i'
   548  00FA4F  6D                 	db	109	;'m'
   549  00FA50  65                 	db	101	;'e'
   550  00FA51  20                 	db	32
   551  00FA52  62                 	db	98	;'b'
   552  00FA53  79                 	db	121	;'y'
   553  00FA54  20                 	db	32
   554  00FA55  70                 	db	112	;'p'
   555  00FA56  72                 	db	114	;'r'
   556  00FA57  65                 	db	101	;'e'
   557  00FA58  73                 	db	115	;'s'
   558  00FA59  73                 	db	115	;'s'
   559  00FA5A  69                 	db	105	;'i'
   560  00FA5B  6E                 	db	110	;'n'
   561  00FA5C  67                 	db	103	;'g'
   562  00FA5D  20                 	db	32
   563  00FA5E  61                 	db	97	;'a'
   564  00FA5F  6E                 	db	110	;'n'
   565  00FA60  79                 	db	121	;'y'
   566  00FA61  20                 	db	32
   567  00FA62  6B                 	db	107	;'k'
   568  00FA63  65                 	db	101	;'e'
   569  00FA64  79                 	db	121	;'y'
   570  00FA65  2E                 	db	46
   571  00FA66  0D                 	db	13
   572  00FA67  0A                 	db	10
   573  00FA68  00                 	db	0
   574  00FA69                     STR_68:
   575  00FA69  2D                 	db	45
   576  00FA6A  2D                 	db	45
   577  00FA6B  2D                 	db	45
   578  00FA6C  2D                 	db	45
   579  00FA6D  2D                 	db	45
   580  00FA6E  2D                 	db	45
   581  00FA6F  2D                 	db	45
   582  00FA70  2D                 	db	45
   583  00FA71  2D                 	db	45
   584  00FA72  2D                 	db	45
   585  00FA73  2D                 	db	45
   586  00FA74  2D                 	db	45
   587  00FA75  2D                 	db	45
   588  00FA76  2D                 	db	45
   589  00FA77  2D                 	db	45
   590  00FA78  2D                 	db	45
   591  00FA79  2D                 	db	45
   592  00FA7A  2D                 	db	45
   593  00FA7B  2D                 	db	45
   594  00FA7C  2D                 	db	45
   595  00FA7D  2D                 	db	45
   596  00FA7E  2D                 	db	45
   597  00FA7F  2D                 	db	45
   598  00FA80  2D                 	db	45
   599  00FA81  2D                 	db	45
   600  00FA82  2D                 	db	45
   601  00FA83  2D                 	db	45
   602  00FA84  2D                 	db	45
   603  00FA85  2D                 	db	45
   604  00FA86  2D                 	db	45
   605  00FA87  2D                 	db	45
   606  00FA88  2D                 	db	45
   607  00FA89  2D                 	db	45
   608  00FA8A  2D                 	db	45
   609  00FA8B  2D                 	db	45
   610  00FA8C  2D                 	db	45
   611  00FA8D  2D                 	db	45
   612  00FA8E  2D                 	db	45
   613  00FA8F  2D                 	db	45
   614  00FA90  2D                 	db	45
   615  00FA91  2D                 	db	45
   616  00FA92  2D                 	db	45
   617  00FA93  2D                 	db	45
   618  00FA94  2D                 	db	45
   619  00FA95  2D                 	db	45
   620  00FA96  2D                 	db	45
   621  00FA97  2D                 	db	45
   622  00FA98  2D                 	db	45
   623  00FA99  2D                 	db	45
   624  00FA9A  0D                 	db	13
   625  00FA9B  0A                 	db	10
   626  00FA9C  00                 	db	0
   627  00FA9D                     STR_80:
   628  00FA9D  31                 	db	49	;'1'
   629  00FA9E  3A                 	db	58	;':'
   630  00FA9F  20                 	db	32
   631  00FAA0  77                 	db	119	;'w'
   632  00FAA1  72                 	db	114	;'r'
   633  00FAA2  69                 	db	105	;'i'
   634  00FAA3  74                 	db	116	;'t'
   635  00FAA4  65                 	db	101	;'e'
   636  00FAA5  20                 	db	32
   637  00FAA6  70                 	db	112	;'p'
   638  00FAA7  65                 	db	101	;'e'
   639  00FAA8  72                 	db	114	;'r'
   640  00FAA9  66                 	db	102	;'f'
   641  00FAAA  65                 	db	101	;'e'
   642  00FAAB  63                 	db	99	;'c'
   643  00FAAC  74                 	db	116	;'t'
   644  00FAAD  20                 	db	32
   645  00FAAE  32                 	db	50	;'2'
   646  00FAAF  36                 	db	54	;'6'
   647  00FAB0  20                 	db	32
   648  00FAB1  76                 	db	118	;'v'
   649  00FAB2  61                 	db	97	;'a'
   650  00FAB3  6C                 	db	108	;'l'
   651  00FAB4  75                 	db	117	;'u'
   652  00FAB5  65                 	db	101	;'e'
   653  00FAB6  20                 	db	32
   654  00FAB7  73                 	db	115	;'s'
   655  00FAB8  69                 	db	105	;'i'
   656  00FAB9  6E                 	db	110	;'n'
   657  00FABA  65                 	db	101	;'e'
   658  00FABB  20                 	db	32
   659  00FABC  77                 	db	119	;'w'
   660  00FABD  61                 	db	97	;'a'
   661  00FABE  76                 	db	118	;'v'
   662  00FABF  65                 	db	101	;'e'
   663  00FAC0  20                 	db	32
   664  00FAC1  74                 	db	116	;'t'
   665  00FAC2  6F                 	db	111	;'o'
   666  00FAC3  20                 	db	32
   667  00FAC4  31                 	db	49	;'1'
   668  00FAC5  32                 	db	50	;'2'
   669  00FAC6  38                 	db	56	;'8'
   670  00FAC7  20                 	db	32
   671  00FAC8  62                 	db	98	;'b'
   672  00FAC9  6C                 	db	108	;'l'
   673  00FACA  6F                 	db	111	;'o'
   674  00FACB  63                 	db	99	;'c'
   675  00FACC  6B                 	db	107	;'k'
   676  00FACD  73                 	db	115	;'s'
   677  00FACE  0D                 	db	13
   678  00FACF  0A                 	db	10
   679  00FAD0  00                 	db	0
   680  00FAD1                     STR_84:
   681  00FAD1  2B                 	db	43
   682  00FAD2  2F                 	db	47
   683  00FAD3  2D                 	db	45
   684  00FAD4  3A                 	db	58	;':'
   685  00FAD5  20                 	db	32
   686  00FAD6  49                 	db	73	;'I'
   687  00FAD7  6E                 	db	110	;'n'
   688  00FAD8  63                 	db	99	;'c'
   689  00FAD9  72                 	db	114	;'r'
   690  00FADA  65                 	db	101	;'e'
   691  00FADB  61                 	db	97	;'a'
   692  00FADC  73                 	db	115	;'s'
   693  00FADD  65                 	db	101	;'e'
   694  00FADE  2F                 	db	47
   695  00FADF  44                 	db	68	;'D'
   696  00FAE0  65                 	db	101	;'e'
   697  00FAE1  63                 	db	99	;'c'
   698  00FAE2  72                 	db	114	;'r'
   699  00FAE3  65                 	db	101	;'e'
   700  00FAE4  61                 	db	97	;'a'
   701  00FAE5  73                 	db	115	;'s'
   702  00FAE6  65                 	db	101	;'e'
   703  00FAE7  20                 	db	32
   704  00FAE8  74                 	db	116	;'t'
   705  00FAE9  68                 	db	104	;'h'
   706  00FAEA  65                 	db	101	;'e'
   707  00FAEB  20                 	db	32
   708  00FAEC  73                 	db	115	;'s'
   709  00FAED  61                 	db	97	;'a'
   710  00FAEE  6D                 	db	109	;'m'
   711  00FAEF  70                 	db	112	;'p'
   712  00FAF0  6C                 	db	108	;'l'
   713  00FAF1  65                 	db	101	;'e'
   714  00FAF2  20                 	db	32
   715  00FAF3  72                 	db	114	;'r'
   716  00FAF4  61                 	db	97	;'a'
   717  00FAF5  74                 	db	116	;'t'
   718  00FAF6  65                 	db	101	;'e'
   719  00FAF7  20                 	db	32
   720  00FAF8  62                 	db	98	;'b'
   721  00FAF9  79                 	db	121	;'y'
   722  00FAFA  20                 	db	32
   723  00FAFB  31                 	db	49	;'1'
   724  00FAFC  30                 	db	48	;'0'
   725  00FAFD  20                 	db	32
   726  00FAFE  75                 	db	117	;'u'
   727  00FAFF  73                 	db	115	;'s'
   728  00FB00  0D                 	db	13
   729  00FB01  0A                 	db	10
   730  00FB02  00                 	db	0
   731  00FB03                     STR_52:
   732  00FB03  53                 	db	83	;'S'
   733  00FB04  65                 	db	101	;'e'
   734  00FB05  6C                 	db	108	;'l'
   735  00FB06  65                 	db	101	;'e'
   736  00FB07  63                 	db	99	;'c'
   737  00FB08  74                 	db	116	;'t'
   738  00FB09  3A                 	db	58	;':'
   739  00FB0A  20                 	db	32
   740  00FB0B  20                 	db	32
   741  00FB0C  20                 	db	32
   742  00FB0D  20                 	db	32
   743  00FB0E  20                 	db	32
   744  00FB0F  53                 	db	83	;'S'
   745  00FB10  65                 	db	101	;'e'
   746  00FB11  73                 	db	115	;'s'
   747  00FB12  73                 	db	115	;'s'
   748  00FB13  69                 	db	105	;'i'
   749  00FB14  6F                 	db	111	;'o'
   750  00FB15  6E                 	db	110	;'n'
   751  00FB16  20                 	db	32
   752  00FB17  6C                 	db	108	;'l'
   753  00FB18  6F                 	db	111	;'o'
   754  00FB19  67                 	db	103	;'g'
   755  00FB1A  67                 	db	103	;'g'
   756  00FB1B  69                 	db	105	;'i'
   757  00FB1C  6E                 	db	110	;'n'
   758  00FB1D  67                 	db	103	;'g'
   759  00FB1E  3A                 	db	58	;':'
   760  00FB1F  20                 	db	32
   761  00FB20  41                 	db	65	;'A'
   762  00FB21  6C                 	db	108	;'l'
   763  00FB22  6C                 	db	108	;'l'
   764  00FB23  20                 	db	32
   765  00FB24  73                 	db	115	;'s'
   766  00FB25  65                 	db	101	;'e'
   767  00FB26  73                 	db	115	;'s'
   768  00FB27  73                 	db	115	;'s'
   769  00FB28  69                 	db	105	;'i'
   770  00FB29  6F                 	db	111	;'o'
   771  00FB2A  6E                 	db	110	;'n'
   772  00FB2B  20                 	db	32
   773  00FB2C  6F                 	db	111	;'o'
   774  00FB2D  75                 	db	117	;'u'
   775  00FB2E  74                 	db	116	;'t'
   776  00FB2F  70                 	db	112	;'p'
   777  00FB30  75                 	db	117	;'u'
   778  00FB31  74                 	db	116	;'t'
   779  00FB32  0D                 	db	13
   780  00FB33  0A                 	db	10
   781  00FB34  00                 	db	0
   782  00FB35                     STR_58:
   783  00FB35  54                 	db	84	;'T'
   784  00FB36  6F                 	db	111	;'o'
   785  00FB37  20                 	db	32
   786  00FB38  63                 	db	99	;'c'
   787  00FB39  6C                 	db	108	;'l'
   788  00FB3A  6F                 	db	111	;'o'
   789  00FB3B  73                 	db	115	;'s'
   790  00FB3C  65                 	db	101	;'e'
   791  00FB3D  20                 	db	32
   792  00FB3E  74                 	db	116	;'t'
   793  00FB3F  68                 	db	104	;'h'
   794  00FB40  65                 	db	101	;'e'
   795  00FB41  20                 	db	32
   796  00FB42  66                 	db	102	;'f'
   797  00FB43  69                 	db	105	;'i'
   798  00FB44  6C                 	db	108	;'l'
   799  00FB45  65                 	db	101	;'e'
   800  00FB46  20                 	db	32
   801  00FB47  66                 	db	102	;'f'
   802  00FB48  6F                 	db	111	;'o'
   803  00FB49  6C                 	db	108	;'l'
   804  00FB4A  6C                 	db	108	;'l'
   805  00FB4B  6F                 	db	111	;'o'
   806  00FB4C  77                 	db	119	;'w'
   807  00FB4D  20                 	db	32
   808  00FB4E  74                 	db	116	;'t'
   809  00FB4F  68                 	db	104	;'h'
   810  00FB50  65                 	db	101	;'e'
   811  00FB51  73                 	db	115	;'s'
   812  00FB52  65                 	db	101	;'e'
   813  00FB53  20                 	db	32
   814  00FB54  69                 	db	105	;'i'
   815  00FB55  6E                 	db	110	;'n'
   816  00FB56  73                 	db	115	;'s'
   817  00FB57  74                 	db	116	;'t'
   818  00FB58  72                 	db	114	;'r'
   819  00FB59  75                 	db	117	;'u'
   820  00FB5A  63                 	db	99	;'c'
   821  00FB5B  74                 	db	116	;'t'
   822  00FB5C  69                 	db	105	;'i'
   823  00FB5D  6F                 	db	111	;'o'
   824  00FB5E  6E                 	db	110	;'n'
   825  00FB5F  73                 	db	115	;'s'
   826  00FB60  3A                 	db	58	;':'
   827  00FB61  0D                 	db	13
   828  00FB62  0A                 	db	10
   829  00FB63  00                 	db	0
   830  00FB64                     STR_85:
   831  00FB64  50                 	db	80	;'P'
   832  00FB65  3A                 	db	58	;':'
   833  00FB66  20                 	db	32
   834  00FB67  50                 	db	80	;'P'
   835  00FB68  6C                 	db	108	;'l'
   836  00FB69  61                 	db	97	;'a'
   837  00FB6A  79                 	db	121	;'y'
   838  00FB6B  20                 	db	32
   839  00FB6C  66                 	db	102	;'f'
   840  00FB6D  72                 	db	114	;'r'
   841  00FB6E  6F                 	db	111	;'o'
   842  00FB6F  6D                 	db	109	;'m'
   843  00FB70  20                 	db	32
   844  00FB71  53                 	db	83	;'S'
   845  00FB72  44                 	db	68	;'D'
   846  00FB73  20                 	db	32
   847  00FB74  63                 	db	99	;'c'
   848  00FB75  61                 	db	97	;'a'
   849  00FB76  72                 	db	114	;'r'
   850  00FB77  64                 	db	100	;'d'
   851  00FB78  20                 	db	32
   852  00FB79  74                 	db	116	;'t'
   853  00FB7A  6F                 	db	111	;'o'
   854  00FB7B  20                 	db	32
   855  00FB7C  50                 	db	80	;'P'
   856  00FB7D  57                 	db	87	;'W'
   857  00FB7E  4D                 	db	77	;'M'
   858  00FB7F  20                 	db	32
   859  00FB80  2D                 	db	45
   860  00FB81  3E                 	db	62	;'>'
   861  00FB82  20                 	db	32
   862  00FB83  4C                 	db	76	;'L'
   863  00FB84  50                 	db	80	;'P'
   864  00FB85  46                 	db	70	;'F'
   865  00FB86  20                 	db	32
   866  00FB87  2D                 	db	45
   867  00FB88  3E                 	db	62	;'>'
   868  00FB89  20                 	db	32
   869  00FB8A  41                 	db	65	;'A'
   870  00FB8B  75                 	db	117	;'u'
   871  00FB8C  64                 	db	100	;'d'
   872  00FB8D  69                 	db	105	;'i'
   873  00FB8E  6F                 	db	111	;'o'
   874  00FB8F  0D                 	db	13
   875  00FB90  0A                 	db	10
   876  00FB91  00                 	db	0
   877  00FB92                     STR_79:
   878  00FB92  72                 	db	114	;'r'
   879  00FB93  3A                 	db	58	;':'
   880  00FB94  20                 	db	32
   881  00FB95  72                 	db	114	;'r'
   882  00FB96  65                 	db	101	;'e'
   883  00FB97  61                 	db	97	;'a'
   884  00FB98  64                 	db	100	;'d'
   885  00FB99  20                 	db	32
   886  00FB9A  61                 	db	97	;'a'
   887  00FB9B  20                 	db	32
   888  00FB9C  62                 	db	98	;'b'
   889  00FB9D  6C                 	db	108	;'l'
   890  00FB9E  6F                 	db	111	;'o'
   891  00FB9F  63                 	db	99	;'c'
   892  00FBA0  6B                 	db	107	;'k'
   893  00FBA1  20                 	db	32
   894  00FBA2  6F                 	db	111	;'o'
   895  00FBA3  66                 	db	102	;'f'
   896  00FBA4  20                 	db	32
   897  00FBA5  35                 	db	53	;'5'
   898  00FBA6  31                 	db	49	;'1'
   899  00FBA7  32                 	db	50	;'2'
   900  00FBA8  20                 	db	32
   901  00FBA9  62                 	db	98	;'b'
   902  00FBAA  79                 	db	121	;'y'
   903  00FBAB  74                 	db	116	;'t'
   904  00FBAC  65                 	db	101	;'e'
   905  00FBAD  73                 	db	115	;'s'
   906  00FBAE  20                 	db	32
   907  00FBAF  66                 	db	102	;'f'
   908  00FBB0  72                 	db	114	;'r'
   909  00FBB1  6F                 	db	111	;'o'
   910  00FBB2  6D                 	db	109	;'m'
   911  00FBB3  20                 	db	32
   912  00FBB4  53                 	db	83	;'S'
   913  00FBB5  44                 	db	68	;'D'
   914  00FBB6  20                 	db	32
   915  00FBB7  63                 	db	99	;'c'
   916  00FBB8  61                 	db	97	;'a'
   917  00FBB9  72                 	db	114	;'r'
   918  00FBBA  64                 	db	100	;'d'
   919  00FBBB  0D                 	db	13
   920  00FBBC  0A                 	db	10
   921  00FBBD  00                 	db	0
   922  00FBBE                     STR_37:
   923  00FBBE  50                 	db	80	;'P'
   924  00FBBF  72                 	db	114	;'r'
   925  00FBC0  65                 	db	101	;'e'
   926  00FBC1  73                 	db	115	;'s'
   927  00FBC2  73                 	db	115	;'s'
   928  00FBC3  20                 	db	32
   929  00FBC4  61                 	db	97	;'a'
   930  00FBC5  6E                 	db	110	;'n'
   931  00FBC6  79                 	db	121	;'y'
   932  00FBC7  20                 	db	32
   933  00FBC8  6B                 	db	107	;'k'
   934  00FBC9  65                 	db	101	;'e'
   935  00FBCA  79                 	db	121	;'y'
   936  00FBCB  20                 	db	32
   937  00FBCC  74                 	db	116	;'t'
   938  00FBCD  6F                 	db	111	;'o'
   939  00FBCE  20                 	db	32
   940  00FBCF  73                 	db	115	;'s'
   941  00FBD0  74                 	db	116	;'t'
   942  00FBD1  61                 	db	97	;'a'
   943  00FBD2  72                 	db	114	;'r'
   944  00FBD3  74                 	db	116	;'t'
   945  00FBD4  20                 	db	32
   946  00FBD5  73                 	db	115	;'s'
   947  00FBD6  74                 	db	116	;'t'
   948  00FBD7  6F                 	db	111	;'o'
   949  00FBD8  72                 	db	114	;'r'
   950  00FBD9  69                 	db	105	;'i'
   951  00FBDA  6E                 	db	110	;'n'
   952  00FBDB  67                 	db	103	;'g'
   953  00FBDC  20                 	db	32
   954  00FBDD  73                 	db	115	;'s'
   955  00FBDE  69                 	db	105	;'i'
   956  00FBDF  6E                 	db	110	;'n'
   957  00FBE0  65                 	db	101	;'e'
   958  00FBE1  20                 	db	32
   959  00FBE2  77                 	db	119	;'w'
   960  00FBE3  61                 	db	97	;'a'
   961  00FBE4  76                 	db	118	;'v'
   962  00FBE5  65                 	db	101	;'e'
   963  00FBE6  73                 	db	115	;'s'
   964  00FBE7  0D                 	db	13
   965  00FBE8  0A                 	db	10
   966  00FBE9  00                 	db	0
   967  00FBEA                     STR_38:
   968  00FBEA  50                 	db	80	;'P'
   969  00FBEB  72                 	db	114	;'r'
   970  00FBEC  65                 	db	101	;'e'
   971  00FBED  73                 	db	115	;'s'
   972  00FBEE  73                 	db	115	;'s'
   973  00FBEF  20                 	db	32
   974  00FBF0  61                 	db	97	;'a'
   975  00FBF1  6E                 	db	110	;'n'
   976  00FBF2  79                 	db	121	;'y'
   977  00FBF3  20                 	db	32
   978  00FBF4  6B                 	db	107	;'k'
   979  00FBF5  65                 	db	101	;'e'
   980  00FBF6  79                 	db	121	;'y'
   981  00FBF7  20                 	db	32
   982  00FBF8  74                 	db	116	;'t'
   983  00FBF9  6F                 	db	111	;'o'
   984  00FBFA  20                 	db	32
   985  00FBFB  73                 	db	115	;'s'
   986  00FBFC  74                 	db	116	;'t'
   987  00FBFD  6F                 	db	111	;'o'
   988  00FBFE  70                 	db	112	;'p'
   989  00FBFF  20                 	db	32
   990  00FC00  73                 	db	115	;'s'
   991  00FC01  74                 	db	116	;'t'
   992  00FC02  6F                 	db	111	;'o'
   993  00FC03  72                 	db	114	;'r'
   994  00FC04  69                 	db	105	;'i'
   995  00FC05  6E                 	db	110	;'n'
   996  00FC06  67                 	db	103	;'g'
   997  00FC07  20                 	db	32
   998  00FC08  73                 	db	115	;'s'
   999  00FC09  69                 	db	105	;'i'
  1000  00FC0A  6E                 	db	110	;'n'
  1001  00FC0B  65                 	db	101	;'e'
  1002  00FC0C  20                 	db	32
  1003  00FC0D  77                 	db	119	;'w'
  1004  00FC0E  61                 	db	97	;'a'
  1005  00FC0F  76                 	db	118	;'v'
  1006  00FC10  65                 	db	101	;'e'
  1007  00FC11  73                 	db	115	;'s'
  1008  00FC12  0D                 	db	13
  1009  00FC13  0A                 	db	10
  1010  00FC14  00                 	db	0
  1011  00FC15                     STR_43:
  1012  00FC15  43                 	db	67	;'C'
  1013  00FC16  61                 	db	97	;'a'
  1014  00FC17  6E                 	db	110	;'n'
  1015  00FC18  6E                 	db	110	;'n'
  1016  00FC19  6F                 	db	111	;'o'
  1017  00FC1A  74                 	db	116	;'t'
  1018  00FC1B  20                 	db	32
  1019  00FC1C  64                 	db	100	;'d'
  1020  00FC1D  65                 	db	101	;'e'
  1021  00FC1E  63                 	db	99	;'c'
  1022  00FC1F  72                 	db	114	;'r'
  1023  00FC20  65                 	db	101	;'e'
  1024  00FC21  61                 	db	97	;'a'
  1025  00FC22  73                 	db	115	;'s'
  1026  00FC23  65                 	db	101	;'e'
  1027  00FC24  20                 	db	32
  1028  00FC25  73                 	db	115	;'s'
  1029  00FC26  61                 	db	97	;'a'
  1030  00FC27  6D                 	db	109	;'m'
  1031  00FC28  70                 	db	112	;'p'
  1032  00FC29  6C                 	db	108	;'l'
  1033  00FC2A  69                 	db	105	;'i'
  1034  00FC2B  6E                 	db	110	;'n'
  1035  00FC2C  67                 	db	103	;'g'
  1036  00FC2D  20                 	db	32
  1037  00FC2E  72                 	db	114	;'r'
  1038  00FC2F  61                 	db	97	;'a'
  1039  00FC30  74                 	db	116	;'t'
  1040  00FC31  65                 	db	101	;'e'
  1041  00FC32  20                 	db	32
  1042  00FC33  62                 	db	98	;'b'
  1043  00FC34  65                 	db	101	;'e'
  1044  00FC35  6C                 	db	108	;'l'
  1045  00FC36  6F                 	db	111	;'o'
  1046  00FC37  77                 	db	119	;'w'
  1047  00FC38  20                 	db	32
  1048  00FC39  32                 	db	50	;'2'
  1049  00FC3A  30                 	db	48	;'0'
  1050  00FC3B  75                 	db	117	;'u'
  1051  00FC3C  73                 	db	115	;'s'
  1052  00FC3D  0D                 	db	13
  1053  00FC3E  0A                 	db	10
  1054  00FC3F  00                 	db	0
  1055  00FC40                     STR_92:
  1056  00FC40  4D                 	db	77	;'M'
  1057  00FC41  61                 	db	97	;'a'
  1058  00FC42  6B                 	db	107	;'k'
  1059  00FC43  65                 	db	101	;'e'
  1060  00FC44  20                 	db	32
  1061  00FC45  73                 	db	115	;'s'
  1062  00FC46  75                 	db	117	;'u'
  1063  00FC47  72                 	db	114	;'r'
  1064  00FC48  65                 	db	101	;'e'
  1065  00FC49  20                 	db	32
  1066  00FC4A  53                 	db	83	;'S'
  1067  00FC4B  44                 	db	68	;'D'
  1068  00FC4C  20                 	db	32
  1069  00FC4D  63                 	db	99	;'c'
  1070  00FC4E  61                 	db	97	;'a'
  1071  00FC4F  72                 	db	114	;'r'
  1072  00FC50  64                 	db	100	;'d'
  1073  00FC51  20                 	db	32
  1074  00FC52  69                 	db	105	;'i'
  1075  00FC53  73                 	db	115	;'s'
  1076  00FC54  20                 	db	32
  1077  00FC55  70                 	db	112	;'p'
  1078  00FC56  72                 	db	114	;'r'
  1079  00FC57  6F                 	db	111	;'o'
  1080  00FC58  70                 	db	112	;'p'
  1081  00FC59  65                 	db	101	;'e'
  1082  00FC5A  72                 	db	114	;'r'
  1083  00FC5B  6C                 	db	108	;'l'
  1084  00FC5C  79                 	db	121	;'y'
  1085  00FC5D  20                 	db	32
  1086  00FC5E  69                 	db	105	;'i'
  1087  00FC5F  6E                 	db	110	;'n'
  1088  00FC60  73                 	db	115	;'s'
  1089  00FC61  65                 	db	101	;'e'
  1090  00FC62  72                 	db	114	;'r'
  1091  00FC63  74                 	db	116	;'t'
  1092  00FC64  65                 	db	101	;'e'
  1093  00FC65  64                 	db	100	;'d'
  1094  00FC66  2E                 	db	46
  1095  00FC67  0D                 	db	13
  1096  00FC68  0A                 	db	10
  1097  00FC69  00                 	db	0
  1098  00FC6A                     STR_78:
  1099  00FC6A  61                 	db	97	;'a'
  1100  00FC6B  2F                 	db	47
  1101  00FC6C  41                 	db	65	;'A'
  1102  00FC6D  3A                 	db	58	;':'
  1103  00FC6E  20                 	db	32
  1104  00FC6F  64                 	db	100	;'d'
  1105  00FC70  65                 	db	101	;'e'
  1106  00FC71  63                 	db	99	;'c'
  1107  00FC72  72                 	db	114	;'r'
  1108  00FC73  65                 	db	101	;'e'
  1109  00FC74  61                 	db	97	;'a'
  1110  00FC75  73                 	db	115	;'s'
  1111  00FC76  65                 	db	101	;'e'
  1112  00FC77  2F                 	db	47
  1113  00FC78  69                 	db	105	;'i'
  1114  00FC79  6E                 	db	110	;'n'
  1115  00FC7A  63                 	db	99	;'c'
  1116  00FC7B  72                 	db	114	;'r'
  1117  00FC7C  65                 	db	101	;'e'
  1118  00FC7D  61                 	db	97	;'a'
  1119  00FC7E  73                 	db	115	;'s'
  1120  00FC7F  65                 	db	101	;'e'
  1121  00FC80  20                 	db	32
  1122  00FC81  72                 	db	114	;'r'
  1123  00FC82  65                 	db	101	;'e'
  1124  00FC83  61                 	db	97	;'a'
  1125  00FC84  64                 	db	100	;'d'
  1126  00FC85  20                 	db	32
  1127  00FC86  61                 	db	97	;'a'
  1128  00FC87  64                 	db	100	;'d'
  1129  00FC88  64                 	db	100	;'d'
  1130  00FC89  72                 	db	114	;'r'
  1131  00FC8A  65                 	db	101	;'e'
  1132  00FC8B  73                 	db	115	;'s'
  1133  00FC8C  73                 	db	115	;'s'
  1134  00FC8D  0D                 	db	13
  1135  00FC8E  0A                 	db	10
  1136  00FC8F  00                 	db	0
  1137  00FC90                     STR_63:
  1138  00FC90  53                 	db	83	;'S'
  1139  00FC91  65                 	db	101	;'e'
  1140  00FC92  6C                 	db	108	;'l'
  1141  00FC93  65                 	db	101	;'e'
  1142  00FC94  63                 	db	99	;'c'
  1143  00FC95  74                 	db	116	;'t'
  1144  00FC96  3A                 	db	58	;':'
  1145  00FC97  20                 	db	32
  1146  00FC98  20                 	db	32
  1147  00FC99  20                 	db	32
  1148  00FC9A  20                 	db	32
  1149  00FC9B  20                 	db	32
  1150  00FC9C  53                 	db	83	;'S'
  1151  00FC9D  65                 	db	101	;'e'
  1152  00FC9E  73                 	db	115	;'s'
  1153  00FC9F  73                 	db	115	;'s'
  1154  00FCA0  69                 	db	105	;'i'
  1155  00FCA1  6F                 	db	111	;'o'
  1156  00FCA2  6E                 	db	110	;'n'
  1157  00FCA3  20                 	db	32
  1158  00FCA4  20                 	db	32
  1159  00FCA5  6C                 	db	108	;'l'
  1160  00FCA6  6F                 	db	111	;'o'
  1161  00FCA7  67                 	db	103	;'g'
  1162  00FCA8  67                 	db	103	;'g'
  1163  00FCA9  69                 	db	105	;'i'
  1164  00FCAA  6E                 	db	110	;'n'
  1165  00FCAB  67                 	db	103	;'g'
  1166  00FCAC  3A                 	db	58	;':'
  1167  00FCAD  20                 	db	32
  1168  00FCAE  4E                 	db	78	;'N'
  1169  00FCAF  6F                 	db	111	;'o'
  1170  00FCB0  6E                 	db	110	;'n'
  1171  00FCB1  65                 	db	101	;'e'
  1172  00FCB2  0D                 	db	13
  1173  00FCB3  0A                 	db	10
  1174  00FCB4  00                 	db	0
  1175  00FCB5                     STR_57:
  1176  00FCB5  53                 	db	83	;'S'
  1177  00FCB6  70                 	db	112	;'p'
  1178  00FCB7  6F                 	db	111	;'o'
  1179  00FCB8  6F                 	db	111	;'o'
  1180  00FCB9  6C                 	db	108	;'l'
  1181  00FCBA  65                 	db	101	;'e'
  1182  00FCBB  64                 	db	100	;'d'
  1183  00FCBC  20                 	db	32
  1184  00FCBD  25                 	db	37
  1185  00FCBE  64                 	db	100	;'d'
  1186  00FCBF  20                 	db	32
  1187  00FCC0  6F                 	db	111	;'o'
  1188  00FCC1  75                 	db	117	;'u'
  1189  00FCC2  74                 	db	116	;'t'
  1190  00FCC3  20                 	db	32
  1191  00FCC4  6F                 	db	111	;'o'
  1192  00FCC5  66                 	db	102	;'f'
  1193  00FCC6  20                 	db	32
  1194  00FCC7  74                 	db	116	;'t'
  1195  00FCC8  68                 	db	104	;'h'
  1196  00FCC9  65                 	db	101	;'e'
  1197  00FCCA  20                 	db	32
  1198  00FCCB  35                 	db	53	;'5'
  1199  00FCCC  31                 	db	49	;'1'
  1200  00FCCD  32                 	db	50	;'2'
  1201  00FCCE  20                 	db	32
  1202  00FCCF  62                 	db	98	;'b'
  1203  00FCD0  6C                 	db	108	;'l'
  1204  00FCD1  6F                 	db	111	;'o'
  1205  00FCD2  63                 	db	99	;'c'
  1206  00FCD3  6B                 	db	107	;'k'
  1207  00FCD4  73                 	db	115	;'s'
  1208  00FCD5  2E                 	db	46
  1209  00FCD6  0D                 	db	13
  1210  00FCD7  0A                 	db	10
  1211  00FCD8  00                 	db	0
  1212  00FCD9                     STR_86:
  1213  00FCD9  57                 	db	87	;'W'
  1214  00FCDA  3A                 	db	58	;':'
  1215  00FCDB  20                 	db	32
  1216  00FCDC  57                 	db	87	;'W'
  1217  00FCDD  72                 	db	114	;'r'
  1218  00FCDE  69                 	db	105	;'i'
  1219  00FCDF  74                 	db	116	;'t'
  1220  00FCE0  65                 	db	101	;'e'
  1221  00FCE1  20                 	db	32
  1222  00FCE2  6D                 	db	109	;'m'
  1223  00FCE3  69                 	db	105	;'i'
  1224  00FCE4  63                 	db	99	;'c'
  1225  00FCE5  72                 	db	114	;'r'
  1226  00FCE6  6F                 	db	111	;'o'
  1227  00FCE7  70                 	db	112	;'p'
  1228  00FCE8  68                 	db	104	;'h'
  1229  00FCE9  6F                 	db	111	;'o'
  1230  00FCEA  6E                 	db	110	;'n'
  1231  00FCEB  65                 	db	101	;'e'
  1232  00FCEC  20                 	db	32
  1233  00FCED  3D                 	db	61	;'='
  1234  00FCEE  3E                 	db	62	;'>'
  1235  00FCEF  20                 	db	32
  1236  00FCF0  53                 	db	83	;'S'
  1237  00FCF1  44                 	db	68	;'D'
  1238  00FCF2  20                 	db	32
  1239  00FCF3  63                 	db	99	;'c'
  1240  00FCF4  61                 	db	97	;'a'
  1241  00FCF5  72                 	db	114	;'r'
  1242  00FCF6  64                 	db	100	;'d'
  1243  00FCF7  20                 	db	32
  1244  00FCF8  0D                 	db	13
  1245  00FCF9  0A                 	db	10
  1246  00FCFA  00                 	db	0
  1247  00FCFB                     STR_50:
  1248  00FCFB  53                 	db	83	;'S'
  1249  00FCFC  65                 	db	101	;'e'
  1250  00FCFD  6C                 	db	108	;'l'
  1251  00FCFE  65                 	db	101	;'e'
  1252  00FCFF  63                 	db	99	;'c'
  1253  00FD00  74                 	db	116	;'t'
  1254  00FD01  3A                 	db	58	;':'
  1255  00FD02  20                 	db	32
  1256  00FD03  20                 	db	32
  1257  00FD04  20                 	db	32
  1258  00FD05  20                 	db	32
  1259  00FD06  20                 	db	32
  1260  00FD07  43                 	db	67	;'C'
  1261  00FD08  68                 	db	104	;'h'
  1262  00FD09  61                 	db	97	;'a'
  1263  00FD0A  6E                 	db	110	;'n'
  1264  00FD0B  67                 	db	103	;'g'
  1265  00FD0C  65                 	db	101	;'e'
  1266  00FD0D  20                 	db	32
  1267  00FD0E  73                 	db	115	;'s'
  1268  00FD0F  65                 	db	101	;'e'
  1269  00FD10  74                 	db	116	;'t'
  1270  00FD11  74                 	db	116	;'t'
  1271  00FD12  69                 	db	105	;'i'
  1272  00FD13  6E                 	db	110	;'n'
  1273  00FD14  67                 	db	103	;'g'
  1274  00FD15  73                 	db	115	;'s'
  1275  00FD16  2E                 	db	46
  1276  00FD17  2E                 	db	46
  1277  00FD18  2E                 	db	46
  1278  00FD19  0D                 	db	13
  1279  00FD1A  0A                 	db	10
  1280  00FD1B  00                 	db	0
  1281  00FD1C                     STR_90:
  1282  00FD1C  41                 	db	65	;'A'
  1283  00FD1D  75                 	db	117	;'u'
  1284  00FD1E  64                 	db	100	;'d'
  1285  00FD1F  69                 	db	105	;'i'
  1286  00FD20  6F                 	db	111	;'o'
  1287  00FD21  20                 	db	32
  1288  00FD22  72                 	db	114	;'r'
  1289  00FD23  65                 	db	101	;'e'
  1290  00FD24  63                 	db	99	;'c'
  1291  00FD25  6F                 	db	111	;'o'
  1292  00FD26  72                 	db	114	;'r'
  1293  00FD27  64                 	db	100	;'d'
  1294  00FD28  69                 	db	105	;'i'
  1295  00FD29  6E                 	db	110	;'n'
  1296  00FD2A  67                 	db	103	;'g'
  1297  00FD2B  20                 	db	32
  1298  00FD2C  61                 	db	97	;'a'
  1299  00FD2D  6E                 	db	110	;'n'
  1300  00FD2E  64                 	db	100	;'d'
  1301  00FD2F  20                 	db	32
  1302  00FD30  70                 	db	112	;'p'
  1303  00FD31  6C                 	db	108	;'l'
  1304  00FD32  61                 	db	97	;'a'
  1305  00FD33  79                 	db	121	;'y'
  1306  00FD34  62                 	db	98	;'b'
  1307  00FD35  61                 	db	97	;'a'
  1308  00FD36  63                 	db	99	;'c'
  1309  00FD37  6B                 	db	107	;'k'
  1310  00FD38  20                 	db	32
  1311  00FD39  0D                 	db	13
  1312  00FD3A  0A                 	db	10
  1313  00FD3B  00                 	db	0
  1314  00FD3C                     STR_82:
  1315  00FD3C  73                 	db	115	;'s'
  1316  00FD3D  3A                 	db	58	;':'
  1317  00FD3E  20                 	db	32
  1318  00FD3F  73                 	db	115	;'s'
  1319  00FD40  70                 	db	112	;'p'
  1320  00FD41  6F                 	db	111	;'o'
  1321  00FD42  6F                 	db	111	;'o'
  1322  00FD43  6C                 	db	108	;'l'
  1323  00FD44  20                 	db	32
  1324  00FD45  6D                 	db	109	;'m'
  1325  00FD46  65                 	db	101	;'e'
  1326  00FD47  6D                 	db	109	;'m'
  1327  00FD48  6F                 	db	111	;'o'
  1328  00FD49  72                 	db	114	;'r'
  1329  00FD4A  79                 	db	121	;'y'
  1330  00FD4B  20                 	db	32
  1331  00FD4C  74                 	db	116	;'t'
  1332  00FD4D  6F                 	db	111	;'o'
  1333  00FD4E  20                 	db	32
  1334  00FD4F  61                 	db	97	;'a'
  1335  00FD50  20                 	db	32
  1336  00FD51  63                 	db	99	;'c'
  1337  00FD52  73                 	db	115	;'s'
  1338  00FD53  76                 	db	118	;'v'
  1339  00FD54  20                 	db	32
  1340  00FD55  66                 	db	102	;'f'
  1341  00FD56  69                 	db	105	;'i'
  1342  00FD57  6C                 	db	108	;'l'
  1343  00FD58  65                 	db	101	;'e'
  1344  00FD59  0D                 	db	13
  1345  00FD5A  0A                 	db	10
  1346  00FD5B  00                 	db	0
  1347  00FD5C                     STR_93:
  1348  00FD5C  50                 	db	80	;'P'
  1349  00FD5D  72                 	db	114	;'r'
  1350  00FD5E  65                 	db	101	;'e'
  1351  00FD5F  73                 	db	115	;'s'
  1352  00FD60  73                 	db	115	;'s'
  1353  00FD61  20                 	db	32
  1354  00FD62  61                 	db	97	;'a'
  1355  00FD63  6E                 	db	110	;'n'
  1356  00FD64  79                 	db	121	;'y'
  1357  00FD65  20                 	db	32
  1358  00FD66  6B                 	db	107	;'k'
  1359  00FD67  65                 	db	101	;'e'
  1360  00FD68  79                 	db	121	;'y'
  1361  00FD69  20                 	db	32
  1362  00FD6A  74                 	db	116	;'t'
  1363  00FD6B  6F                 	db	111	;'o'
  1364  00FD6C  20                 	db	32
  1365  00FD6D  63                 	db	99	;'c'
  1366  00FD6E  6F                 	db	111	;'o'
  1367  00FD6F  6E                 	db	110	;'n'
  1368  00FD70  74                 	db	116	;'t'
  1369  00FD71  69                 	db	105	;'i'
  1370  00FD72  6E                 	db	110	;'n'
  1371  00FD73  75                 	db	117	;'u'
  1372  00FD74  65                 	db	101	;'e'
  1373  00FD75  2E                 	db	46
  1374  00FD76  0D                 	db	13
  1375  00FD77  0A                 	db	10
  1376  00FD78  00                 	db	0
  1377  00FD79                     STR_15:
  1378  00FD79  09                 	db	9
  1379  00FD7A  50                 	db	80	;'P'
  1380  00FD7B  6C                 	db	108	;'l'
  1381  00FD7C  61                 	db	97	;'a'
  1382  00FD7D  79                 	db	121	;'y'
  1383  00FD7E  20                 	db	32
  1384  00FD7F  6C                 	db	108	;'l'
  1385  00FD80  65                 	db	101	;'e'
  1386  00FD81  6E                 	db	110	;'n'
  1387  00FD82  67                 	db	103	;'g'
  1388  00FD83  74                 	db	116	;'t'
  1389  00FD84  68                 	db	104	;'h'
  1390  00FD85  20                 	db	32
  1391  00FD86  69                 	db	105	;'i'
  1392  00FD87  6E                 	db	110	;'n'
  1393  00FD88  20                 	db	32
  1394  00FD89  62                 	db	98	;'b'
  1395  00FD8A  6C                 	db	108	;'l'
  1396  00FD8B  6F                 	db	111	;'o'
  1397  00FD8C  63                 	db	99	;'c'
  1398  00FD8D  6B                 	db	107	;'k'
  1399  00FD8E  73                 	db	115	;'s'
  1400  00FD8F  3A                 	db	58	;':'
  1401  00FD90  20                 	db	32
  1402  00FD91  25                 	db	37
  1403  00FD92  75                 	db	117	;'u'
  1404  00FD93  0D                 	db	13
  1405  00FD94  0A                 	db	10
  1406  00FD95  00                 	db	0
  1407  00FD96                     STR_2:
  1408  00FD96  42                 	db	66	;'B'
  1409  00FD97  6C                 	db	108	;'l'
  1410  00FD98  6F                 	db	111	;'o'
  1411  00FD99  63                 	db	99	;'c'
  1412  00FD9A  6B                 	db	107	;'k'
  1413  00FD9B  20                 	db	32
  1414  00FD9C  4C                 	db	76	;'L'
  1415  00FD9D  65                 	db	101	;'e'
  1416  00FD9E  6E                 	db	110	;'n'
  1417  00FD9F  67                 	db	103	;'g'
  1418  00FDA0  74                 	db	116	;'t'
  1419  00FDA1  68                 	db	104	;'h'
  1420  00FDA2  20                 	db	32
  1421  00FDA3  52                 	db	82	;'R'
  1422  00FDA4  65                 	db	101	;'e'
  1423  00FDA5  73                 	db	115	;'s'
  1424  00FDA6  70                 	db	112	;'p'
  1425  00FDA7  6F                 	db	111	;'o'
  1426  00FDA8  6E                 	db	110	;'n'
  1427  00FDA9  73                 	db	115	;'s'
  1428  00FDAA  65                 	db	101	;'e'
  1429  00FDAB  3A                 	db	58	;':'
  1430  00FDAC  20                 	db	32
  1431  00FDAD  25                 	db	37
  1432  00FDAE  78                 	db	120	;'x'
  1433  00FDAF  0D                 	db	13
  1434  00FDB0  0A                 	db	10
  1435  00FDB1  00                 	db	0
  1436  00FDB2                     STR_3:
  1437  00FDB2  43                 	db	67	;'C'
  1438  00FDB3  4D                 	db	77	;'M'
  1439  00FDB4  44                 	db	68	;'D'
  1440  00FDB5  30                 	db	48	;'0'
  1441  00FDB6  2C                 	db	44
  1442  00FDB7  20                 	db	32
  1443  00FDB8  52                 	db	82	;'R'
  1444  00FDB9  65                 	db	101	;'e'
  1445  00FDBA  73                 	db	115	;'s'
  1446  00FDBB  65                 	db	101	;'e'
  1447  00FDBC  74                 	db	116	;'t'
  1448  00FDBD  20                 	db	32
  1449  00FDBE  52                 	db	82	;'R'
  1450  00FDBF  65                 	db	101	;'e'
  1451  00FDC0  73                 	db	115	;'s'
  1452  00FDC1  70                 	db	112	;'p'
  1453  00FDC2  6F                 	db	111	;'o'
  1454  00FDC3  6E                 	db	110	;'n'
  1455  00FDC4  73                 	db	115	;'s'
  1456  00FDC5  65                 	db	101	;'e'
  1457  00FDC6  3A                 	db	58	;':'
  1458  00FDC7  20                 	db	32
  1459  00FDC8  25                 	db	37
  1460  00FDC9  78                 	db	120	;'x'
  1461  00FDCA  0D                 	db	13
  1462  00FDCB  0A                 	db	10
  1463  00FDCC  00                 	db	0
  1464  00FDCD                     STR_1:
  1465  00FDCD  43                 	db	67	;'C'
  1466  00FDCE  4D                 	db	77	;'M'
  1467  00FDCF  44                 	db	68	;'D'
  1468  00FDD0  31                 	db	49	;'1'
  1469  00FDD1  2C                 	db	44
  1470  00FDD2  20                 	db	32
  1471  00FDD3  49                 	db	73	;'I'
  1472  00FDD4  6E                 	db	110	;'n'
  1473  00FDD5  69                 	db	105	;'i'
  1474  00FDD6  74                 	db	116	;'t'
  1475  00FDD7  20                 	db	32
  1476  00FDD8  52                 	db	82	;'R'
  1477  00FDD9  65                 	db	101	;'e'
  1478  00FDDA  73                 	db	115	;'s'
  1479  00FDDB  70                 	db	112	;'p'
  1480  00FDDC  6F                 	db	111	;'o'
  1481  00FDDD  6E                 	db	110	;'n'
  1482  00FDDE  73                 	db	115	;'s'
  1483  00FDDF  65                 	db	101	;'e'
  1484  00FDE0  3A                 	db	58	;':'
  1485  00FDE1  20                 	db	32
  1486  00FDE2  25                 	db	37
  1487  00FDE3  78                 	db	120	;'x'
  1488  00FDE4  0D                 	db	13
  1489  00FDE5  0A                 	db	10
  1490  00FDE6  00                 	db	0
  1491  00FDE7                     STR_55:
  1492  00FDE7  50                 	db	80	;'P'
  1493  00FDE8  72                 	db	114	;'r'
  1494  00FDE9  65                 	db	101	;'e'
  1495  00FDEA  73                 	db	115	;'s'
  1496  00FDEB  73                 	db	115	;'s'
  1497  00FDEC  20                 	db	32
  1498  00FDED  61                 	db	97	;'a'
  1499  00FDEE  6E                 	db	110	;'n'
  1500  00FDEF  79                 	db	121	;'y'
  1501  00FDF0  20                 	db	32
  1502  00FDF1  6B                 	db	107	;'k'
  1503  00FDF2  65                 	db	101	;'e'
  1504  00FDF3  79                 	db	121	;'y'
  1505  00FDF4  20                 	db	32
  1506  00FDF5  74                 	db	116	;'t'
  1507  00FDF6  6F                 	db	111	;'o'
  1508  00FDF7  20                 	db	32
  1509  00FDF8  73                 	db	115	;'s'
  1510  00FDF9  74                 	db	116	;'t'
  1511  00FDFA  61                 	db	97	;'a'
  1512  00FDFB  72                 	db	114	;'r'
  1513  00FDFC  74                 	db	116	;'t'
  1514  00FDFD  0D                 	db	13
  1515  00FDFE  0A                 	db	10
  1516  00FDFF  00                 	db	0
  1517  00FE00                     STR_39:
  1518  00FE00  25                 	db	37
  1519  00FE01  75                 	db	117	;'u'
  1520  00FE02  20                 	db	32
  1521  00FE03  62                 	db	98	;'b'
  1522  00FE04  6C                 	db	108	;'l'
  1523  00FE05  6F                 	db	111	;'o'
  1524  00FE06  63                 	db	99	;'c'
  1525  00FE07  6B                 	db	107	;'k'
  1526  00FE08  73                 	db	115	;'s'
  1527  00FE09  20                 	db	32
  1528  00FE0A  77                 	db	119	;'w'
  1529  00FE0B  65                 	db	101	;'e'
  1530  00FE0C  72                 	db	114	;'r'
  1531  00FE0D  65                 	db	101	;'e'
  1532  00FE0E  20                 	db	32
  1533  00FE0F  73                 	db	115	;'s'
  1534  00FE10  74                 	db	116	;'t'
  1535  00FE11  6F                 	db	111	;'o'
  1536  00FE12  72                 	db	114	;'r'
  1537  00FE13  65                 	db	101	;'e'
  1538  00FE14  64                 	db	100	;'d'
  1539  00FE15  0D                 	db	13
  1540  00FE16  0A                 	db	10
  1541  00FE17  00                 	db	0
  1542  00FE18                     STR_76:
  1543  00FE18  69                 	db	105	;'i'
  1544  00FE19  3A                 	db	58	;':'
  1545  00FE1A  20                 	db	32
  1546  00FE1B  49                 	db	73	;'I'
  1547  00FE1C  6E                 	db	110	;'n'
  1548  00FE1D  69                 	db	105	;'i'
  1549  00FE1E  74                 	db	116	;'t'
  1550  00FE1F  69                 	db	105	;'i'
  1551  00FE20  61                 	db	97	;'a'
  1552  00FE21  6C                 	db	108	;'l'
  1553  00FE22  69                 	db	105	;'i'
  1554  00FE23  7A                 	db	122	;'z'
  1555  00FE24  65                 	db	101	;'e'
  1556  00FE25  20                 	db	32
  1557  00FE26  53                 	db	83	;'S'
  1558  00FE27  44                 	db	68	;'D'
  1559  00FE28  20                 	db	32
  1560  00FE29  63                 	db	99	;'c'
  1561  00FE2A  61                 	db	97	;'a'
  1562  00FE2B  72                 	db	114	;'r'
  1563  00FE2C  64                 	db	100	;'d'
  1564  00FE2D  0D                 	db	13
  1565  00FE2E  0A                 	db	10
  1566  00FE2F  00                 	db	0
  1567  00FE30                     STR_74:
  1568  00FE30  7A                 	db	122	;'z'
  1569  00FE31  3A                 	db	58	;':'
  1570  00FE32  20                 	db	32
  1571  00FE33  43                 	db	67	;'C'
  1572  00FE34  6C                 	db	108	;'l'
  1573  00FE35  65                 	db	101	;'e'
  1574  00FE36  61                 	db	97	;'a'
  1575  00FE37  72                 	db	114	;'r'
  1576  00FE38  20                 	db	32
  1577  00FE39  74                 	db	116	;'t'
  1578  00FE3A  68                 	db	104	;'h'
  1579  00FE3B  65                 	db	101	;'e'
  1580  00FE3C  20                 	db	32
  1581  00FE3D  74                 	db	116	;'t'
  1582  00FE3E  65                 	db	101	;'e'
  1583  00FE3F  72                 	db	114	;'r'
  1584  00FE40  6D                 	db	109	;'m'
  1585  00FE41  69                 	db	105	;'i'
  1586  00FE42  6E                 	db	110	;'n'
  1587  00FE43  61                 	db	97	;'a'
  1588  00FE44  6C                 	db	108	;'l'
  1589  00FE45  0D                 	db	13
  1590  00FE46  0A                 	db	10
  1591  00FE47  00                 	db	0
  1592  00FE48                     STR_65:
  1593  00FE48  50                 	db	80	;'P'
  1594  00FE49  6C                 	db	108	;'l'
  1595  00FE4A  61                 	db	97	;'a'
  1596  00FE4B  79                 	db	121	;'y'
  1597  00FE4C  69                 	db	105	;'i'
  1598  00FE4D  6E                 	db	110	;'n'
  1599  00FE4E  67                 	db	103	;'g'
  1600  00FE4F  20                 	db	32
  1601  00FE50  68                 	db	104	;'h'
  1602  00FE51  61                 	db	97	;'a'
  1603  00FE52  73                 	db	115	;'s'
  1604  00FE53  20                 	db	32
  1605  00FE54  73                 	db	115	;'s'
  1606  00FE55  74                 	db	116	;'t'
  1607  00FE56  61                 	db	97	;'a'
  1608  00FE57  72                 	db	114	;'r'
  1609  00FE58  74                 	db	116	;'t'
  1610  00FE59  65                 	db	101	;'e'
  1611  00FE5A  64                 	db	100	;'d'
  1612  00FE5B  0D                 	db	13
  1613  00FE5C  0A                 	db	10
  1614  00FE5D  00                 	db	0
  1615  00FE5E                     STR_51:
  1616  00FE5E  53                 	db	83	;'S'
  1617  00FE5F  65                 	db	101	;'e'
  1618  00FE60  6C                 	db	108	;'l'
  1619  00FE61  65                 	db	101	;'e'
  1620  00FE62  63                 	db	99	;'c'
  1621  00FE63  74                 	db	116	;'t'
  1622  00FE64  3A                 	db	58	;':'
  1623  00FE65  20                 	db	32
  1624  00FE66  20                 	db	32
  1625  00FE67  20                 	db	32
  1626  00FE68  20                 	db	32
  1627  00FE69  20                 	db	32
  1628  00FE6A  4C                 	db	76	;'L'
  1629  00FE6B  6F                 	db	111	;'o'
  1630  00FE6C  67                 	db	103	;'g'
  1631  00FE6D  67                 	db	103	;'g'
  1632  00FE6E  69                 	db	105	;'i'
  1633  00FE6F  6E                 	db	110	;'n'
  1634  00FE70  67                 	db	103	;'g'
  1635  00FE71  0D                 	db	13
  1636  00FE72  0A                 	db	10
  1637  00FE73  00                 	db	0
  1638  00FE74                     STR_73:
  1639  00FE74  5A                 	db	90	;'Z'
  1640  00FE75  3A                 	db	58	;':'
  1641  00FE76  20                 	db	32
  1642  00FE77  52                 	db	82	;'R'
  1643  00FE78  65                 	db	101	;'e'
  1644  00FE79  73                 	db	115	;'s'
  1645  00FE7A  65                 	db	101	;'e'
  1646  00FE7B  74                 	db	116	;'t'
  1647  00FE7C  20                 	db	32
  1648  00FE7D  70                 	db	112	;'p'
  1649  00FE7E  72                 	db	114	;'r'
  1650  00FE7F  6F                 	db	111	;'o'
  1651  00FE80  63                 	db	99	;'c'
  1652  00FE81  65                 	db	101	;'e'
  1653  00FE82  73                 	db	115	;'s'
  1654  00FE83  73                 	db	115	;'s'
  1655  00FE84  6F                 	db	111	;'o'
  1656  00FE85  72                 	db	114	;'r'
  1657  00FE86  0D                 	db	13
  1658  00FE87  0A                 	db	10
  1659  00FE88  00                 	db	0
  1660  00FE89                     STR_16:
  1661  00FE89  09                 	db	9
  1662  00FE8A  73                 	db	115	;'s'
  1663  00FE8B  64                 	db	100	;'d'
  1664  00FE8C  43                 	db	67	;'C'
  1665  00FE8D  61                 	db	97	;'a'
  1666  00FE8E  72                 	db	114	;'r'
  1667  00FE8F  64                 	db	100	;'d'
  1668  00FE90  41                 	db	65	;'A'
  1669  00FE91  64                 	db	100	;'d'
  1670  00FE92  64                 	db	100	;'d'
  1671  00FE93  72                 	db	114	;'r'
  1672  00FE94  65                 	db	101	;'e'
  1673  00FE95  73                 	db	115	;'s'
  1674  00FE96  73                 	db	115	;'s'
  1675  00FE97  3A                 	db	58	;':'
  1676  00FE98  20                 	db	32
  1677  00FE99  25                 	db	37
  1678  00FE9A  30                 	db	48	;'0'
  1679  00FE9B  34                 	db	52	;'4'
  1680  00FE9C  78                 	db	120	;'x'
  1681  00FE9D  00                 	db	0
  1682  00FE9E                     STR_66:
  1683  00FE9E  50                 	db	80	;'P'
  1684  00FE9F  6C                 	db	108	;'l'
  1685  00FEA0  61                 	db	97	;'a'
  1686  00FEA1  79                 	db	121	;'y'
  1687  00FEA2  69                 	db	105	;'i'
  1688  00FEA3  6E                 	db	110	;'n'
  1689  00FEA4  67                 	db	103	;'g'
  1690  00FEA5  20                 	db	32
  1691  00FEA6  68                 	db	104	;'h'
  1692  00FEA7  61                 	db	97	;'a'
  1693  00FEA8  73                 	db	115	;'s'
  1694  00FEA9  20                 	db	32
  1695  00FEAA  65                 	db	101	;'e'
  1696  00FEAB  6E                 	db	110	;'n'
  1697  00FEAC  64                 	db	100	;'d'
  1698  00FEAD  65                 	db	101	;'e'
  1699  00FEAE  64                 	db	100	;'d'
  1700  00FEAF  0D                 	db	13
  1701  00FEB0  0A                 	db	10
  1702  00FEB1  00                 	db	0
  1703  00FEB2                     STR_46:
  1704  00FEB2  52                 	db	82	;'R'
  1705  00FEB3  65                 	db	101	;'e'
  1706  00FEB4  63                 	db	99	;'c'
  1707  00FEB5  6F                 	db	111	;'o'
  1708  00FEB6  72                 	db	114	;'r'
  1709  00FEB7  64                 	db	100	;'d'
  1710  00FEB8  69                 	db	105	;'i'
  1711  00FEB9  6E                 	db	110	;'n'
  1712  00FEBA  67                 	db	103	;'g'
  1713  00FEBB  20                 	db	32
  1714  00FEBC  73                 	db	115	;'s'
  1715  00FEBD  74                 	db	116	;'t'
  1716  00FEBE  61                 	db	97	;'a'
  1717  00FEBF  72                 	db	114	;'r'
  1718  00FEC0  74                 	db	116	;'t'
  1719  00FEC1  65                 	db	101	;'e'
  1720  00FEC2  64                 	db	100	;'d'
  1721  00FEC3  0D                 	db	13
  1722  00FEC4  0A                 	db	10
  1723  00FEC5  00                 	db	0
  1724  00FEC6                     STR_88:
  1725  00FEC6  44                 	db	68	;'D'
  1726  00FEC7  65                 	db	101	;'e'
  1727  00FEC8  76                 	db	118	;'v'
  1728  00FEC9  65                 	db	101	;'e'
  1729  00FECA  6C                 	db	108	;'l'
  1730  00FECB  6F                 	db	111	;'o'
  1731  00FECC  70                 	db	112	;'p'
  1732  00FECD  6D                 	db	109	;'m'
  1733  00FECE  65                 	db	101	;'e'
  1734  00FECF  6E                 	db	110	;'n'
  1735  00FED0  74                 	db	116	;'t'
  1736  00FED1  20                 	db	32
  1737  00FED2  42                 	db	66	;'B'
  1738  00FED3  6F                 	db	111	;'o'
  1739  00FED4  61                 	db	97	;'a'
  1740  00FED5  72                 	db	114	;'r'
  1741  00FED6  64                 	db	100	;'d'
  1742  00FED7  0D                 	db	13
  1743  00FED8  0A                 	db	10
  1744  00FED9  00                 	db	0
  1745  00FEDA                     STR_54:
  1746  00FEDA  53                 	db	83	;'S'
  1747  00FEDB  65                 	db	101	;'e'
  1748  00FEDC  6C                 	db	108	;'l'
  1749  00FEDD  65                 	db	101	;'e'
  1750  00FEDE  63                 	db	99	;'c'
  1751  00FEDF  74                 	db	116	;'t'
  1752  00FEE0  3A                 	db	58	;':'
  1753  00FEE1  20                 	db	32
  1754  00FEE2  20                 	db	32
  1755  00FEE3  20                 	db	32
  1756  00FEE4  20                 	db	32
  1757  00FEE5  20                 	db	32
  1758  00FEE6  41                 	db	65	;'A'
  1759  00FEE7  70                 	db	112	;'p'
  1760  00FEE8  70                 	db	112	;'p'
  1761  00FEE9  6C                 	db	108	;'l'
  1762  00FEEA  79                 	db	121	;'y'
  1763  00FEEB  0D                 	db	13
  1764  00FEEC  0A                 	db	10
  1765  00FEED  00                 	db	0
  1766  00FEEE                     STR_47:
  1767  00FEEE  52                 	db	82	;'R'
  1768  00FEEF  65                 	db	101	;'e'
  1769  00FEF0  63                 	db	99	;'c'
  1770  00FEF1  6F                 	db	111	;'o'
  1771  00FEF2  72                 	db	114	;'r'
  1772  00FEF3  64                 	db	100	;'d'
  1773  00FEF4  69                 	db	105	;'i'
  1774  00FEF5  6E                 	db	110	;'n'
  1775  00FEF6  67                 	db	103	;'g'
  1776  00FEF7  20                 	db	32
  1777  00FEF8  73                 	db	115	;'s'
  1778  00FEF9  74                 	db	116	;'t'
  1779  00FEFA  6F                 	db	111	;'o'
  1780  00FEFB  72                 	db	114	;'r'
  1781  00FEFC  65                 	db	101	;'e'
  1782  00FEFD  64                 	db	100	;'d'
  1783  00FEFE  0D                 	db	13
  1784  00FEFF  0A                 	db	10
  1785  00FF00  00                 	db	0
  1786  00FF01                     STR_26:
  1787  00FF01  53                 	db	83	;'S'
  1788  00FF02  44                 	db	68	;'D'
  1789  00FF03  20                 	db	32
  1790  00FF04  63                 	db	99	;'c'
  1791  00FF05  61                 	db	97	;'a'
  1792  00FF06  72                 	db	114	;'r'
  1793  00FF07  64                 	db	100	;'d'
  1794  00FF08  20                 	db	32
  1795  00FF09  61                 	db	97	;'a'
  1796  00FF0A  64                 	db	100	;'d'
  1797  00FF0B  64                 	db	100	;'d'
  1798  00FF0C  72                 	db	114	;'r'
  1799  00FF0D  65                 	db	101	;'e'
  1800  00FF0E  73                 	db	115	;'s'
  1801  00FF0F  73                 	db	115	;'s'
  1802  00FF10  3A                 	db	58	;':'
  1803  00FF11  20                 	db	32
  1804  00FF12  20                 	db	32
  1805  00FF13  00                 	db	0
  1806  00FF14                     STR_20:
  1807  00FF14  53                 	db	83	;'S'
  1808  00FF15  61                 	db	97	;'a'
  1809  00FF16  6D                 	db	109	;'m'
  1810  00FF17  70                 	db	112	;'p'
  1811  00FF18  6C                 	db	108	;'l'
  1812  00FF19  65                 	db	101	;'e'
  1813  00FF1A  20                 	db	32
  1814  00FF1B  52                 	db	82	;'R'
  1815  00FF1C  61                 	db	97	;'a'
  1816  00FF1D  74                 	db	116	;'t'
  1817  00FF1E  65                 	db	101	;'e'
  1818  00FF1F  3A                 	db	58	;':'
  1819  00FF20  20                 	db	32
  1820  00FF21  25                 	db	37
  1821  00FF22  75                 	db	117	;'u'
  1822  00FF23  20                 	db	32
  1823  00FF24  75                 	db	117	;'u'
  1824  00FF25  73                 	db	115	;'s'
  1825  00FF26  00                 	db	0
  1826  00FF27                     STR_89:
  1827  00FF27  4C                 	db	76	;'L'
  1828  00FF28  61                 	db	97	;'a'
  1829  00FF29  62                 	db	98	;'b'
  1830  00FF2A  20                 	db	32
  1831  00FF2B  31                 	db	49	;'1'
  1832  00FF2C  30                 	db	48	;'0'
  1833  00FF2D  20                 	db	32
  1834  00FF2E  74                 	db	116	;'t'
  1835  00FF2F  65                 	db	101	;'e'
  1836  00FF30  72                 	db	114	;'r'
  1837  00FF31  6D                 	db	109	;'m'
  1838  00FF32  69                 	db	105	;'i'
  1839  00FF33  6E                 	db	110	;'n'
  1840  00FF34  61                 	db	97	;'a'
  1841  00FF35  6C                 	db	108	;'l'
  1842  00FF36  0D                 	db	13
  1843  00FF37  0A                 	db	10
  1844  00FF38  00                 	db	0
  1845  00FF39                     STR_42:
  1846  00FF39  64                 	db	100	;'d'
  1847  00FF3A  65                 	db	101	;'e'
  1848  00FF3B  63                 	db	99	;'c'
  1849  00FF3C  72                 	db	114	;'r'
  1850  00FF3D  65                 	db	101	;'e'
  1851  00FF3E  61                 	db	97	;'a'
  1852  00FF3F  73                 	db	115	;'s'
  1853  00FF40  65                 	db	101	;'e'
  1854  00FF41  64                 	db	100	;'d'
  1855  00FF42  20                 	db	32
  1856  00FF43  74                 	db	116	;'t'
  1857  00FF44  6F                 	db	111	;'o'
  1858  00FF45  20                 	db	32
  1859  00FF46  25                 	db	37
  1860  00FF47  75                 	db	117	;'u'
  1861  00FF48  0D                 	db	13
  1862  00FF49  0A                 	db	10
  1863  00FF4A  00                 	db	0
  1864  00FF4B                     STR_41:
  1865  00FF4B  69                 	db	105	;'i'
  1866  00FF4C  6E                 	db	110	;'n'
  1867  00FF4D  63                 	db	99	;'c'
  1868  00FF4E  72                 	db	114	;'r'
  1869  00FF4F  65                 	db	101	;'e'
  1870  00FF50  61                 	db	97	;'a'
  1871  00FF51  73                 	db	115	;'s'
  1872  00FF52  65                 	db	101	;'e'
  1873  00FF53  64                 	db	100	;'d'
  1874  00FF54  20                 	db	32
  1875  00FF55  74                 	db	116	;'t'
  1876  00FF56  6F                 	db	111	;'o'
  1877  00FF57  20                 	db	32
  1878  00FF58  25                 	db	37
  1879  00FF59  75                 	db	117	;'u'
  1880  00FF5A  0D                 	db	13
  1881  00FF5B  0A                 	db	10
  1882  00FF5C  00                 	db	0
  1883  00FF5D                     STR_94:
  1884  00FF5D  30                 	db	48	;'0'
  1885  00FF5E  31                 	db	49	;'1'
  1886  00FF5F  32                 	db	50	;'2'
  1887  00FF60  33                 	db	51	;'3'
  1888  00FF61  34                 	db	52	;'4'
  1889  00FF62  35                 	db	53	;'5'
  1890  00FF63  36                 	db	54	;'6'
  1891  00FF64  37                 	db	55	;'7'
  1892  00FF65  38                 	db	56	;'8'
  1893  00FF66  39                 	db	57	;'9'
  1894  00FF67  61                 	db	97	;'a'
  1895  00FF68  62                 	db	98	;'b'
  1896  00FF69  63                 	db	99	;'c'
  1897  00FF6A  64                 	db	100	;'d'
  1898  00FF6B  65                 	db	101	;'e'
  1899  00FF6C  66                 	db	102	;'f'
  1900  00FF6D  00                 	db	0
  1901  00FF6E                     STR_67:
  1902  00FF6E  55                 	db	85	;'U'
  1903  00FF6F  6E                 	db	110	;'n'
  1904  00FF70  6B                 	db	107	;'k'
  1905  00FF71  6E                 	db	110	;'n'
  1906  00FF72  6F                 	db	111	;'o'
  1907  00FF73  77                 	db	119	;'w'
  1908  00FF74  6E                 	db	110	;'n'
  1909  00FF75  20                 	db	32
  1910  00FF76  6B                 	db	107	;'k'
  1911  00FF77  65                 	db	101	;'e'
  1912  00FF78  79                 	db	121	;'y'
  1913  00FF79  20                 	db	32
  1914  00FF7A  25                 	db	37
  1915  00FF7B  63                 	db	99	;'c'
  1916  00FF7C  0D                 	db	13
  1917  00FF7D  0A                 	db	10
  1918  00FF7E  00                 	db	0
  1919  00FF7F                     STR_32:
  1920  00FF7F  20                 	db	32
  1921  00FF80  20                 	db	32
  1922  00FF81  20                 	db	32
  1923  00FF82  20                 	db	32
  1924  00FF83  41                 	db	65	;'A'
  1925  00FF84  64                 	db	100	;'d'
  1926  00FF85  64                 	db	100	;'d'
  1927  00FF86  72                 	db	114	;'r'
  1928  00FF87  65                 	db	101	;'e'
  1929  00FF88  73                 	db	115	;'s'
  1930  00FF89  73                 	db	115	;'s'
  1931  00FF8A  3A                 	db	58	;':'
  1932  00FF8B  20                 	db	32
  1933  00FF8C  20                 	db	32
  1934  00FF8D  20                 	db	32
  1935  00FF8E  20                 	db	32
  1936  00FF8F  00                 	db	0
  1937  00FF90                     STR_31:
  1938  00FF90  52                 	db	82	;'R'
  1939  00FF91  65                 	db	101	;'e'
  1940  00FF92  61                 	db	97	;'a'
  1941  00FF93  64                 	db	100	;'d'
  1942  00FF94  20                 	db	32
  1943  00FF95  62                 	db	98	;'b'
  1944  00FF96  6C                 	db	108	;'l'
  1945  00FF97  6F                 	db	111	;'o'
  1946  00FF98  63                 	db	99	;'c'
  1947  00FF99  6B                 	db	107	;'k'
  1948  00FF9A  3A                 	db	58	;':'
  1949  00FF9B  20                 	db	32
  1950  00FF9C  0D                 	db	13
  1951  00FF9D  0A                 	db	10
  1952  00FF9E  00                 	db	0
  1953  00FF9F                     STR_71:
  1954  00FF9F  3F                 	db	63	;'?'
  1955  00FFA0  3A                 	db	58	;':'
  1956  00FFA1  20                 	db	32
  1957  00FFA2  68                 	db	104	;'h'
  1958  00FFA3  65                 	db	101	;'e'
  1959  00FFA4  6C                 	db	108	;'l'
  1960  00FFA5  70                 	db	112	;'p'
  1961  00FFA6  20                 	db	32
  1962  00FFA7  6D                 	db	109	;'m'
  1963  00FFA8  65                 	db	101	;'e'
  1964  00FFA9  6E                 	db	110	;'n'
  1965  00FFAA  75                 	db	117	;'u'
  1966  00FFAB  0D                 	db	13
  1967  00FFAC  0A                 	db	10
  1968  00FFAD  00                 	db	0
  1969  00FFAE                     STR_40:
  1970  00FFAE  53                 	db	83	;'S'
  1971  00FFAF  61                 	db	97	;'a'
  1972  00FFB0  6D                 	db	109	;'m'
  1973  00FFB1  70                 	db	112	;'p'
  1974  00FFB2  6C                 	db	108	;'l'
  1975  00FFB3  69                 	db	105	;'i'
  1976  00FFB4  6E                 	db	110	;'n'
  1977  00FFB5  67                 	db	103	;'g'
  1978  00FFB6  20                 	db	32
  1979  00FFB7  72                 	db	114	;'r'
  1980  00FFB8  61                 	db	97	;'a'
  1981  00FFB9  74                 	db	116	;'t'
  1982  00FFBA  65                 	db	101	;'e'
  1983  00FFBB  20                 	db	32
  1984  00FFBC  00                 	db	0
  1985  00FFBD                     STR_24:
  1986  00FFBD  44                 	db	68	;'D'
  1987  00FFBE  65                 	db	101	;'e'
  1988  00FFBF  63                 	db	99	;'c'
  1989  00FFC0  72                 	db	114	;'r'
  1990  00FFC1  65                 	db	101	;'e'
  1991  00FFC2  61                 	db	97	;'a'
  1992  00FFC3  73                 	db	115	;'s'
  1993  00FFC4  65                 	db	101	;'e'
  1994  00FFC5  64                 	db	100	;'d'
  1995  00FFC6  20                 	db	32
  1996  00FFC7  00                 	db	0
  1997  00FFC8                     STR_25:
  1998  00FFC8  49                 	db	73	;'I'
  1999  00FFC9  6E                 	db	110	;'n'
  2000  00FFCA  63                 	db	99	;'c'
  2001  00FFCB  72                 	db	114	;'r'
  2002  00FFCC  65                 	db	101	;'e'
  2003  00FFCD  61                 	db	97	;'a'
  2004  00FFCE  73                 	db	115	;'s'
  2005  00FFCF  65                 	db	101	;'e'
  2006  00FFD0  64                 	db	100	;'d'
  2007  00FFD1  20                 	db	32
  2008  00FFD2  00                 	db	0
  2009  00FFD3                     STR_21:
  2010  00FFD3  6F                 	db	111	;'o'
  2011  00FFD4  3A                 	db	58	;':'
  2012  00FFD5  09                 	db	9
  2013  00FFD6  6F                 	db	111	;'o'
  2014  00FFD7  6B                 	db	107	;'k'
  2015  00FFD8  0D                 	db	13
  2016  00FFD9  0A                 	db	10
  2017  00FFDA  00                 	db	0
  2018  00FFDB                     STR_72:
  2019  00FFDB  6F                 	db	111	;'o'
  2020  00FFDC  3A                 	db	58	;':'
  2021  00FFDD  20                 	db	32
  2022  00FFDE  6B                 	db	107	;'k'
  2023  00FFDF  0D                 	db	13
  2024  00FFE0  0A                 	db	10
  2025  00FFE1  00                 	db	0
  2026  00FFE2                     STR_56:
  2027  00FFE2  25                 	db	37
  2028  00FFE3  64                 	db	100	;'d'
  2029  00FFE4  20                 	db	32
  2030  00FFE5  0D                 	db	13
  2031  00FFE6  0A                 	db	10
  2032  00FFE7  00                 	db	0
  2033  00FFE8                     STR_10:
  2034  00FFE8  25                 	db	37
  2035  00FFE9  30                 	db	48	;'0'
  2036  00FFEA  32                 	db	50	;'2'
  2037  00FFEB  78                 	db	120	;'x'
  2038  00FFEC  20                 	db	32
  2039  00FFED  00                 	db	0
  2040  00FFEE                     STR_91:
  2041  00FFEE  0D                 	db	13
  2042  00FFEF  0A                 	db	10
  2043  00FFF0  3E                 	db	62	;'>'
  2044  00FFF1  20                 	db	32
  2045  00FFF2  00                 	db	0
  2046  00FFF3                     STR_4:
  2047  00FFF3  0D                 	db	13
  2048  00FFF4  0A                 	db	10
  2049  00FFF5  0A                 	db	10
  2050  00FFF6  00                 	db	0
  2051  00FFF7                     STR_8:
  2052  00FFF7  25                 	db	37
  2053  00FFF8  63                 	db	99	;'c'
  2054  00FFF9  00                 	db	0
  2055  00FFFA                     STR_17:
  2056  00FFFA  3A                 	db	58	;':'
  2057  00FFFB  00                 	db	0
  2058  00FFFC                     STR_7:
  2059  00FFFC  2E                 	db	46
  2060  00FFFD  00                 	db	0
  2061  0000                     
  2062                           ; #config settings
  2063  00FFFE  00                 	db	0	; dummy byte at the end
  2064  0000                     
  2065                           	psect	cinit
  2066  0017B4                     __pcinit:
  2067                           	opt callstack 0
  2068  0017B4                     start_initialization:
  2069                           	opt callstack 0
  2070  0017B4                     __initialization:
  2071                           	opt callstack 0
  2072                           
  2073                           ; Initialize objects allocated to BANK0 (4 bytes)
  2074                           ; load TBLPTR registers with __pidataBANK0
  2075  0017B4  0E94               	movlw	low __pidataBANK0
  2076  0017B6  6EF6               	movwf	tblptrl,c
  2077  0017B8  0E1B               	movlw	high __pidataBANK0
  2078  0017BA  6EF7               	movwf	tblptrh,c
  2079  0017BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2080  0017BE  6EF8               	movwf	tblptru,c
  2081  0017C0  EE00  F096         	lfsr	0,__pdataBANK0
  2082  0017C4  EE10 F004          	lfsr	1,4
  2083  0017C8                     copy_data0:
  2084  0017C8  0009               	tblrd		*+
  2085  0017CA  CFF5 FFEE          	movff	tablat,postinc0
  2086  0017CE  50E5               	movf	postdec1,w,c
  2087  0017D0  50E1               	movf	fsr1l,w,c
  2088  0017D2  E1FA               	bnz	copy_data0
  2089                           
  2090                           ; Clear objects allocated to BIGRAM (1536 bytes)
  2091  0017D4  EE00  F09C         	lfsr	0,__pbssBIGRAM
  2092  0017D8  EE16 F000          	lfsr	1,1536
  2093  0017DC                     clear_0:
  2094  0017DC  6AEE               	clrf	postinc0,c
  2095  0017DE  50E5               	movf	postdec1,w,c
  2096  0017E0  50E1               	movf	fsr1l,w,c
  2097  0017E2  E1FC               	bnz	clear_0
  2098  0017E4  50E2               	movf	fsr1h,w,c
  2099  0017E6  E1FA               	bnz	clear_0
  2100                           
  2101                           ; Clear objects allocated to BANK0 (2 bytes)
  2102  0017E8  0100               	movlb	0
  2103  0017EA  6B9B               	clrf	(__pbssBANK0+1)& (0+255),b
  2104  0017EC  6B9A               	clrf	__pbssBANK0& (0+255),b
  2105                           
  2106                           ; Clear objects allocated to COMRAM (19 bytes)
  2107  0017EE  EE00  F03A         	lfsr	0,__pbssCOMRAM
  2108  0017F2  0E13               	movlw	19
  2109  0017F4                     clear_1:
  2110  0017F4  6AEE               	clrf	postinc0,c
  2111  0017F6  06E8               	decf	wreg,f,c
  2112  0017F8  E1FD               	bnz	clear_1
  2113  0017FA                     end_of_initialization:
  2114                           	opt callstack 0
  2115  0017FA                     __end_of__initialization:
  2116                           	opt callstack 0
  2117  0017FA  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2118  0017FC  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2119  0017FE  0100               	movlb	0
  2120  001800  EF29  F000         	goto	_main	;jump to C main() function
  2121                           
  2122                           	psect	bssCOMRAM
  2123  00003A                     __pbssCOMRAM:
  2124                           	opt callstack 0
  2125  00003A                     myTMR0ISR@i:
  2126                           	opt callstack 0
  2127  00003A                     	ds	2
  2128  00003C                     _EUSART1_ErrorHandler:
  2129                           	opt callstack 0
  2130  00003C                     	ds	2
  2131  00003E                     _EUSART1_OverrunErrorHandler:
  2132                           	opt callstack 0
  2133  00003E                     	ds	2
  2134  000040                     _EUSART1_FramingErrorHandler:
  2135                           	opt callstack 0
  2136  000040                     	ds	2
  2137  000042                     _ADC_InterruptHandler:
  2138                           	opt callstack 0
  2139  000042                     	ds	2
  2140  000044                     _timer0ReloadVal:
  2141                           	opt callstack 0
  2142  000044                     	ds	2
  2143  000046                     _TMR0_InterruptHandler:
  2144                           	opt callstack 0
  2145  000046                     	ds	2
  2146  000048                     myTMR0ISR@adcResult:
  2147                           	opt callstack 0
  2148  000048                     	ds	1
  2149  000049                     myTMR0ISR@currentColor:
  2150                           	opt callstack 0
  2151  000049                     	ds	1
  2152  00004A                     _playingSound:
  2153                           	opt callstack 0
  2154  00004A                     	ds	1
  2155  00004B                     _recording:
  2156                           	opt callstack 0
  2157  00004B                     	ds	1
  2158  00004C                     _eusart1RxLastError:
  2159                           	opt callstack 0
  2160  00004C                     	ds	1
  2161                           
  2162                           	psect	bssBANK0
  2163  00009A                     __pbssBANK0:
  2164                           	opt callstack 0
  2165  00009A                     _blueBufferFull:
  2166                           	opt callstack 0
  2167  00009A                     	ds	1
  2168  00009B                     _redBufferFull:
  2169                           	opt callstack 0
  2170  00009B                     	ds	1
  2171                           
  2172                           	psect	dataBANK0
  2173  000096                     __pdataBANK0:
  2174                           	opt callstack 0
  2175  000096                     _sampleRate:
  2176                           	opt callstack 0
  2177  000096                     	ds	2
  2178  000098                     _blueBufferIsEmpty:
  2179                           	opt callstack 0
  2180  000098                     	ds	1
  2181  000099                     _redBufferIsEmpty:
  2182                           	opt callstack 0
  2183  000099                     	ds	1
  2184                           
  2185                           	psect	bssBIGRAM
  2186  00009C                     __pbssBIGRAM:
  2187                           	opt callstack 0
  2188  00009C                     _redBuffer:
  2189                           	opt callstack 0
  2190  00009C                     	ds	512
  2191  00029C                     _blueBuffer:
  2192                           	opt callstack 0
  2193  00029C                     	ds	512
  2194  00049C                     _sdCardBuffer:
  2195                           	opt callstack 0
  2196  00049C                     	ds	512
  2197                           
  2198                           	psect	cstackBANK0
  2199  000060                     __pcstackBANK0:
  2200                           	opt callstack 0
  2201  000060                     hexDumpBuffer@j:
  2202                           	opt callstack 0
  2203                           
  2204                           ; 2 bytes @ 0x0
  2205  000060                     	ds	2
  2206  000062                     hexDumpBuffer@j_1051:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 2 bytes @ 0x2
  2210  000062                     	ds	2
  2211  000064                     hexDumpBuffer@i:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 2 bytes @ 0x4
  2215  000064                     	ds	2
  2216  000066                     ??_main:
  2217                           
  2218                           ; 1 bytes @ 0x6
  2219  000066                     	ds	4
  2220  00006A                     main@sin:
  2221                           	opt callstack 0
  2222                           
  2223                           ; 26 bytes @ 0xA
  2224  00006A                     	ds	27
  2225  000085                     main@status:
  2226                           	opt callstack 0
  2227                           
  2228                           ; 1 bytes @ 0x25
  2229  000085                     	ds	1
  2230  000086                     main@sinIndex:
  2231                           	opt callstack 0
  2232                           
  2233                           ; 1 bytes @ 0x26
  2234  000086                     	ds	1
  2235  000087                     main@blocksWritten:
  2236                           	opt callstack 0
  2237                           
  2238                           ; 2 bytes @ 0x27
  2239  000087                     	ds	2
  2240  000089                     main@cmd:
  2241                           	opt callstack 0
  2242                           
  2243                           ; 1 bytes @ 0x29
  2244  000089                     	ds	1
  2245  00008A                     main@blockIndex:
  2246                           	opt callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x2A
  2249  00008A                     	ds	2
  2250  00008C                     main@readAddress:
  2251                           	opt callstack 0
  2252                           
  2253                           ; 4 bytes @ 0x2C
  2254  00008C                     	ds	4
  2255  000090                     main@address:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 4 bytes @ 0x30
  2259  000090                     	ds	4
  2260  000094                     main@i:
  2261                           	opt callstack 0
  2262                           
  2263                           ; 2 bytes @ 0x34
  2264  000094                     	ds	2
  2265                           
  2266                           	psect	cstackCOMRAM
  2267  000001                     __pcstackCOMRAM:
  2268                           	opt callstack 0
  2269  000001                     ?_TMR0_ReadTimer:
  2270                           	opt callstack 0
  2271  000001                     EPWM1_LoadDutyValue@dutyValue:
  2272                           	opt callstack 0
  2273                           
  2274                           ; 2 bytes @ 0x0
  2275  000001                     	ds	2
  2276  000003                     ??_TMR0_ReadTimer:
  2277  000003                     ??_EPWM1_LoadDutyValue:
  2278                           
  2279                           ; 1 bytes @ 0x2
  2280  000003                     	ds	2
  2281  000005                     TMR0_ReadTimer@readVal:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 2 bytes @ 0x4
  2285  000005                     	ds	2
  2286  000007                     TMR0_ReadTimer@readValLow:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 1 bytes @ 0x6
  2290  000007                     	ds	1
  2291  000008                     TMR0_ReadTimer@readValHigh:
  2292                           	opt callstack 0
  2293                           
  2294                           ; 1 bytes @ 0x7
  2295  000008                     	ds	1
  2296  000009                     i2TMR0_WriteTimer@timerVal:
  2297                           	opt callstack 0
  2298                           
  2299                           ; 2 bytes @ 0x8
  2300  000009                     	ds	2
  2301  00000B                     ??_myTMR0ISR:
  2302  00000B                     
  2303                           ; 1 bytes @ 0xA
  2304  00000B                     	ds	1
  2305  00000C                     ??_INTERRUPT_InterruptManager:
  2306                           
  2307                           ; 1 bytes @ 0xB
  2308  00000C                     	ds	4
  2309  000010                     ??_isdigit:
  2310  000010                     ??_SPI2_Open:
  2311  000010                     ?___wmul:
  2312                           	opt callstack 0
  2313  000010                     ?___awmod:
  2314                           	opt callstack 0
  2315  000010                     ?___lwdiv:
  2316                           	opt callstack 0
  2317  000010                     SPI2_ExchangeByte@data:
  2318                           	opt callstack 0
  2319  000010                     EUSART1_Write@txData:
  2320                           	opt callstack 0
  2321  000010                     TMR0_WriteTimer@timerVal:
  2322                           	opt callstack 0
  2323  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  2324                           	opt callstack 0
  2325  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2326                           	opt callstack 0
  2327  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2328                           	opt callstack 0
  2329  000010                     EUSART1_SetErrorHandler@interruptHandler:
  2330                           	opt callstack 0
  2331  000010                     ___wmul@multiplier:
  2332                           	opt callstack 0
  2333  000010                     ___awmod@dividend:
  2334                           	opt callstack 0
  2335  000010                     ___lwdiv@dividend:
  2336                           	opt callstack 0
  2337                           
  2338                           ; 2 bytes @ 0xF
  2339  000010                     	ds	1
  2340  000011                     SPI2_Open@spi2UniqueConfiguration:
  2341                           	opt callstack 0
  2342  000011                     putch@txData:
  2343                           	opt callstack 0
  2344  000011                     SDCARD_PollWriteComplete@status:
  2345                           	opt callstack 0
  2346  000011                     SDCARD_SetBlockLength@response:
  2347                           	opt callstack 0
  2348  000011                     _isdigit$1846:
  2349                           	opt callstack 0
  2350  000011                     SDCARD_ReadBlock@addr:
  2351                           	opt callstack 0
  2352  000011                     SDCARD_WriteBlock@addr:
  2353                           	opt callstack 0
  2354                           
  2355                           ; 4 bytes @ 0x10
  2356  000011                     	ds	1
  2357  000012                     ??_TMR0_Initialize:
  2358  000012                     isdigit@c:
  2359                           	opt callstack 0
  2360  000012                     ___wmul@multiplicand:
  2361                           	opt callstack 0
  2362  000012                     ___awmod@divisor:
  2363                           	opt callstack 0
  2364  000012                     ___lwdiv@divisor:
  2365                           	opt callstack 0
  2366                           
  2367                           ; 2 bytes @ 0x11
  2368  000012                     	ds	2
  2369  000014                     ___awmod@counter:
  2370                           	opt callstack 0
  2371  000014                     ___lwdiv@counter:
  2372                           	opt callstack 0
  2373  000014                     ___wmul@product:
  2374                           	opt callstack 0
  2375                           
  2376                           ; 2 bytes @ 0x13
  2377  000014                     	ds	1
  2378  000015                     ___awmod@sign:
  2379                           	opt callstack 0
  2380  000015                     SDCARD_ReadBlock@sdCardBuffer:
  2381                           	opt callstack 0
  2382  000015                     SDCARD_WriteBlock@sdCardBuffer:
  2383                           	opt callstack 0
  2384  000015                     ___lwdiv@quotient:
  2385                           	opt callstack 0
  2386                           
  2387                           ; 2 bytes @ 0x14
  2388  000015                     	ds	2
  2389  000017                     ?___lwmod:
  2390                           	opt callstack 0
  2391  000017                     SDCARD_ReadBlock@i:
  2392                           	opt callstack 0
  2393  000017                     SDCARD_WriteBlock@i:
  2394                           	opt callstack 0
  2395  000017                     ___lwmod@dividend:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x16
  2399  000017                     	ds	2
  2400  000019                     ___lwmod@divisor:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x18
  2404  000019                     	ds	2
  2405  00001B                     ___lwmod@counter:
  2406                           	opt callstack 0
  2407                           
  2408                           ; 1 bytes @ 0x1A
  2409  00001B                     	ds	1
  2410  00001C                     ?_printf:
  2411                           	opt callstack 0
  2412  00001C                     printf@f:
  2413                           	opt callstack 0
  2414                           
  2415                           ; 2 bytes @ 0x1B
  2416  00001C                     	ds	6
  2417  000022                     ??_printf:
  2418                           
  2419                           ; 1 bytes @ 0x21
  2420  000022                     	ds	4
  2421  000026                     printf@idx:
  2422                           	opt callstack 0
  2423                           
  2424                           ; 1 bytes @ 0x25
  2425  000026                     	ds	1
  2426  000027                     printf@cp:
  2427                           	opt callstack 0
  2428                           
  2429                           ; 2 bytes @ 0x26
  2430  000027                     	ds	2
  2431  000029                     printf@len:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x28
  2435  000029                     	ds	2
  2436  00002B                     printf@prec:
  2437                           	opt callstack 0
  2438                           
  2439                           ; 1 bytes @ 0x2A
  2440  00002B                     	ds	1
  2441  00002C                     printf@ap:
  2442                           	opt callstack 0
  2443                           
  2444                           ; 2 bytes @ 0x2B
  2445  00002C                     	ds	2
  2446  00002E                     printf@val:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 2 bytes @ 0x2D
  2450  00002E                     	ds	2
  2451  000030                     printf@flag:
  2452                           	opt callstack 0
  2453                           
  2454                           ; 1 bytes @ 0x2F
  2455  000030                     	ds	1
  2456  000031                     printf@width:
  2457                           	opt callstack 0
  2458                           
  2459                           ; 2 bytes @ 0x30
  2460  000031                     	ds	2
  2461  000033                     printf@c:
  2462                           	opt callstack 0
  2463                           
  2464                           ; 1 bytes @ 0x32
  2465  000033                     	ds	1
  2466  000034                     SDCARD_SetIdle@verbose:
  2467                           	opt callstack 0
  2468  000034                     hexDumpBuffer@sdCardBuffer:
  2469                           	opt callstack 0
  2470                           
  2471                           ; 2 bytes @ 0x33
  2472  000034                     	ds	1
  2473  000035                     SDCARD_SetIdle@response:
  2474                           	opt callstack 0
  2475                           
  2476                           ; 1 bytes @ 0x34
  2477  000035                     	ds	1
  2478  000036                     ??_hexDumpBuffer:
  2479  000036                     SDCARD_SetIdle@i:
  2480                           	opt callstack 0
  2481                           
  2482                           ; 2 bytes @ 0x35
  2483  000036                     	ds	2
  2484  000038                     SDCARD_Initialize@verbose:
  2485                           	opt callstack 0
  2486                           
  2487                           ; 1 bytes @ 0x37
  2488  000038                     	ds	1
  2489  000039                     SDCARD_Initialize@response:
  2490                           	opt callstack 0
  2491                           
  2492                           ; 1 bytes @ 0x38
  2493  000039                     	ds	1
  2494  00003A                     
  2495                           ; 1 bytes @ 0x39
  2496 ;;
  2497 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2498 ;;
  2499 ;; *************** function _main *****************
  2500 ;; Defined at:
  2501 ;;		line 85 in file "main.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  sinIndex        1   38[BANK0 ] unsigned char 
  2506 ;;  sin            26   10[BANK0 ] const unsigned char [26]
  2507 ;;  address         4   48[BANK0 ] unsigned long 
  2508 ;;  readAddress     4   44[BANK0 ] unsigned long 
  2509 ;;  i               2   52[BANK0 ] unsigned int 
  2510 ;;  blockIndex      2   42[BANK0 ] unsigned int 
  2511 ;;  blocksWritte    2   39[BANK0 ] unsigned int 
  2512 ;;  cmd             1   41[BANK0 ] unsigned char 
  2513 ;;  status          1   37[BANK0 ] unsigned char 
  2514 ;;  letter          1    0        unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;Total ram usage:       48 bytes
  2529 ;; Hardware stack levels required when called:   10
  2530 ;; This function calls:
  2531 ;;		_EUSART1_Read
  2532 ;;		_EUSART1_is_rx_ready
  2533 ;;		_SDCARD_PollWriteComplete
  2534 ;;		_SDCARD_ReadBlock
  2535 ;;		_SDCARD_WriteBlock
  2536 ;;		___awmod
  2537 ;;		_doSDInit
  2538 ;;		_hexDumpBuffer
  2539 ;;		_initializeAll
  2540 ;;		_printMenu
  2541 ;;		_printf
  2542 ;; This function is called by:
  2543 ;;		Startup code after reset
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text0
  2548  000052                     __ptext0:
  2549                           	opt callstack 0
  2550  000052                     _main:
  2551                           	opt callstack 21
  2552  000052                     
  2553                           ;main.c: 89: uint16_t i;;main.c: 90: uint32_t readAddress = 0x00000000;
  2554  000052  0E00               	movlw	0
  2555  000054  0100               	movlb	0	; () banked
  2556  000056  6F8C               	movwf	main@readAddress& (0+255),b
  2557  000058  0E00               	movlw	0
  2558  00005A  6F8D               	movwf	(main@readAddress+1)& (0+255),b
  2559  00005C  0E00               	movlw	0
  2560  00005E  6F8E               	movwf	(main@readAddress+2)& (0+255),b
  2561  000060  0E00               	movlw	0
  2562  000062  6F8F               	movwf	(main@readAddress+3)& (0+255),b
  2563                           
  2564                           ;main.c: 91: uint32_t address = 0;
  2565  000064  0E00               	movlw	0
  2566  000066  6F90               	movwf	main@address& (0+255),b
  2567  000068  0E00               	movlw	0
  2568  00006A  6F91               	movwf	(main@address+1)& (0+255),b
  2569  00006C  0E00               	movlw	0
  2570  00006E  6F92               	movwf	(main@address+2)& (0+255),b
  2571  000070  0E00               	movlw	0
  2572  000072  6F93               	movwf	(main@address+3)& (0+255),b
  2573                           
  2574                           ;main.c: 92: char cmd, letter;;main.c: 94: uint16_t blocksWritten = 0;
  2575  000074  0E00               	movlw	0
  2576  000076  6F88               	movwf	(main@blocksWritten+1)& (0+255),b
  2577  000078  0E00               	movlw	0
  2578  00007A  6F87               	movwf	main@blocksWritten& (0+255),b
  2579  00007C                     
  2580                           ; BSR set to: 0
  2581                           ;main.c: 96: const uint8_t sin[26] = {128, 159, 187, 213, 233, 248, 255, 255, 248, 233, 
      +                          213, 187, 159, 128, 97, 69, 43, 23, 8, 1, 1, 8, 23, 43, 69, 97};
  2582  00007C  0EEB               	movlw	low main@F5845
  2583  00007E  6EF6               	movwf	tblptrl,c
  2584  000080                     	if	1	;There is more than 1 active tblptr byte
  2585  000080  0EF8               	movlw	high main@F5845
  2586  000082  6EF7               	movwf	tblptrh,c
  2587  000084                     	endif
  2588  000084                     	if	1	;There are 3 active tblptr bytes
  2589  000084  0E00               	movlw	low (main@F5845 shr (0+16))
  2590  000086  6EF8               	movwf	tblptru,c
  2591  000088                     	endif
  2592  000088  EE20  F06A         	lfsr	2,main@sin
  2593  00008C  0E19               	movlw	25
  2594  00008E                     u2740:
  2595  00008E  0009               	tblrd		*+
  2596  000090  CFF5 FFDE          	movff	tablat,postinc2
  2597  000094  06E8               	decf	wreg,f,c
  2598  000096  E2FB               	bc	u2740
  2599  000098                     
  2600                           ; BSR set to: 0
  2601                           ;main.c: 98: ADCON0bits.GO_NOT_DONE = 1;
  2602  000098  82C2               	bsf	194,1,c	;volatile
  2603  00009A                     
  2604                           ; BSR set to: 0
  2605                           ;main.c: 102: initializeAll();
  2606  00009A  EC76  F00B         	call	_initializeAll	;wreg free
  2607  00009E                     l3942:
  2608                           
  2609                           ;main.c: 106: if ((EUSART1_is_rx_ready())) {
  2610  00009E  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  2611  0000A2  0900               	iorlw	0
  2612  0000A4  B4D8               	btfsc	status,2,c
  2613  0000A6  EF57  F000         	goto	u2751
  2614  0000AA  EF59  F000         	goto	u2750
  2615  0000AE                     u2751:
  2616  0000AE  EF4F  F000         	goto	l3942
  2617  0000B2                     u2750:
  2618  0000B2                     
  2619                           ;main.c: 107: cmd = EUSART1_Read();
  2620  0000B2  EC02  F00D         	call	_EUSART1_Read	;wreg free
  2621  0000B6  0100               	movlb	0	; () banked
  2622  0000B8  6F89               	movwf	main@cmd& (0+255),b
  2623                           
  2624                           ;main.c: 108: switch (cmd) {
  2625  0000BA  EF6D  F004         	goto	l4218
  2626  0000BE                     l3946:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;main.c: 114: printf("\tPlay length in blocks: %u\r\n", blocksWritten);
  2630  0000BE  0E79               	movlw	low STR_15
  2631  0000C0  6E1C               	movwf	printf@f^0,c
  2632  0000C2  0EFD               	movlw	high STR_15
  2633  0000C4  6E1D               	movwf	(printf@f+1)^0,c
  2634  0000C6  C087  F01E         	movff	main@blocksWritten,?_printf+2
  2635  0000CA  C088  F01F         	movff	main@blocksWritten+1,?_printf+3
  2636  0000CE  ECAA  F004         	call	_printf	;wreg free
  2637                           
  2638                           ;main.c: 115: printf("\tsdCardAddress: %04x", readAddress>>16); printf(":"); printf("%04
      +                          x", readAddress&0X0000FFFF); printf("\r\n");
  2639  0000D2  0E89               	movlw	low STR_16
  2640  0000D4  6E1C               	movwf	printf@f^0,c
  2641  0000D6  0EFE               	movlw	high STR_16
  2642  0000D8  6E1D               	movwf	(printf@f+1)^0,c
  2643  0000DA  C08E  F01E         	movff	main@readAddress+2,?_printf+2
  2644  0000DE  C08F  F01F         	movff	main@readAddress+3,?_printf+3
  2645  0000E2  6A20               	clrf	(?_printf+4)^0,c
  2646  0000E4  6A21               	clrf	(?_printf+5)^0,c
  2647  0000E6  ECAA  F004         	call	_printf	;wreg free
  2648  0000EA  0EFA               	movlw	low STR_17
  2649  0000EC  6E1C               	movwf	printf@f^0,c
  2650  0000EE  0EFF               	movlw	high STR_17
  2651  0000F0  6E1D               	movwf	(printf@f+1)^0,c
  2652  0000F2  ECAA  F004         	call	_printf	;wreg free
  2653  0000F6  0E99               	movlw	low (STR_16+16)
  2654  0000F8  6E1C               	movwf	printf@f^0,c
  2655  0000FA  0EFE               	movlw	high (STR_16+16)
  2656  0000FC  6E1D               	movwf	(printf@f+1)^0,c
  2657  0000FE  0EFF               	movlw	255
  2658  000100  0100               	movlb	0	; () banked
  2659  000102  158C               	andwf	main@readAddress& (0+255),w,b
  2660  000104  6E1E               	movwf	(?_printf+2)^0,c
  2661  000106  0EFF               	movlw	255
  2662  000108  158D               	andwf	(main@readAddress+1)& (0+255),w,b
  2663  00010A  6E1F               	movwf	(?_printf+3)^0,c
  2664  00010C  0E00               	movlw	0
  2665  00010E  158E               	andwf	(main@readAddress+2)& (0+255),w,b
  2666  000110  6E20               	movwf	(?_printf+4)^0,c
  2667  000112  0E00               	movlw	0
  2668  000114  158F               	andwf	(main@readAddress+3)& (0+255),w,b
  2669  000116  6E21               	movwf	(?_printf+5)^0,c
  2670  000118  ECAA  F004         	call	_printf	;wreg free
  2671  00011C  0EF4               	movlw	low (STR_49+67)
  2672  00011E  6E1C               	movwf	printf@f^0,c
  2673  000120  0EF9               	movlw	high (STR_49+67)
  2674  000122  6E1D               	movwf	(printf@f+1)^0,c
  2675  000124  ECAA  F004         	call	_printf	;wreg free
  2676                           
  2677                           ;main.c: 116: printf("Sample Rate: %u us", 1600/16);
  2678  000128  0E14               	movlw	low STR_20
  2679  00012A  6E1C               	movwf	printf@f^0,c
  2680  00012C  0EFF               	movlw	high STR_20
  2681  00012E  6E1D               	movwf	(printf@f+1)^0,c
  2682  000130  0E00               	movlw	0
  2683  000132  6E1F               	movwf	(?_printf+3)^0,c
  2684  000134  0E64               	movlw	100
  2685  000136  6E1E               	movwf	(?_printf+2)^0,c
  2686  000138  ECAA  F004         	call	_printf	;wreg free
  2687                           
  2688                           ;main.c: 117: printMenu();
  2689  00013C  ECE9  F008         	call	_printMenu	;wreg free
  2690                           
  2691                           ;main.c: 118: break;
  2692  000140  EF4F  F000         	goto	l3942
  2693  000144                     l3948:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;main.c: 124: printf("o:	ok\r\n");
  2697  000144  0ED3               	movlw	low STR_21
  2698  000146  6E1C               	movwf	printf@f^0,c
  2699  000148  0EFF               	movlw	high STR_21
  2700  00014A  6E1D               	movwf	(printf@f+1)^0,c
  2701  00014C  ECAA  F004         	call	_printf	;wreg free
  2702                           
  2703                           ;main.c: 125: break;
  2704  000150  EF4F  F000         	goto	l3942
  2705  000154                     l3950:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;main.c: 131: for (i=0; i<40; i++) printf("\n");
  2709  000154  0E00               	movlw	0
  2710  000156  6F95               	movwf	(main@i+1)& (0+255),b
  2711  000158  0E00               	movlw	0
  2712  00015A  6F94               	movwf	main@i& (0+255),b
  2713  00015C                     l3956:
  2714                           
  2715                           ; BSR set to: 0
  2716  00015C  0EF5               	movlw	low (STR_4+2)
  2717  00015E  6E1C               	movwf	printf@f^0,c
  2718  000160  0EFF               	movlw	high (STR_4+2)
  2719  000162  6E1D               	movwf	(printf@f+1)^0,c
  2720  000164  ECAA  F004         	call	_printf	;wreg free
  2721  000168  0100               	movlb	0	; () banked
  2722  00016A  4B94               	infsnz	main@i& (0+255),f,b
  2723  00016C  2B95               	incf	(main@i+1)& (0+255),f,b
  2724  00016E                     
  2725                           ; BSR set to: 0
  2726  00016E  5195               	movf	(main@i+1)& (0+255),w,b
  2727  000170  E109               	bnz	u2760
  2728  000172  0E28               	movlw	40
  2729  000174  5D94               	subwf	main@i& (0+255),w,b
  2730  000176  A0D8               	btfss	status,0,c
  2731  000178  EFC0  F000         	goto	u2761
  2732  00017C  EFC2  F000         	goto	u2760
  2733  000180                     u2761:
  2734  000180  EFAE  F000         	goto	l3956
  2735  000184                     u2760:
  2736  000184                     
  2737                           ; BSR set to: 0
  2738  000184  00FF               	reset		;# 
  2739                           
  2740                           ;main.c: 133: break;
  2741  000186  EF4F  F000         	goto	l3942
  2742  00018A                     l3962:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;main.c: 139: for (i=0; i<40; i++) printf("\n");
  2746  00018A  0E00               	movlw	0
  2747  00018C  6F95               	movwf	(main@i+1)& (0+255),b
  2748  00018E  0E00               	movlw	0
  2749  000190  6F94               	movwf	main@i& (0+255),b
  2750  000192                     l3968:
  2751                           
  2752                           ; BSR set to: 0
  2753  000192  0EF5               	movlw	low (STR_4+2)
  2754  000194  6E1C               	movwf	printf@f^0,c
  2755  000196  0EFF               	movlw	high (STR_4+2)
  2756  000198  6E1D               	movwf	(printf@f+1)^0,c
  2757  00019A  ECAA  F004         	call	_printf	;wreg free
  2758  00019E  0100               	movlb	0	; () banked
  2759  0001A0  4B94               	infsnz	main@i& (0+255),f,b
  2760  0001A2  2B95               	incf	(main@i+1)& (0+255),f,b
  2761  0001A4                     
  2762                           ; BSR set to: 0
  2763  0001A4  5195               	movf	(main@i+1)& (0+255),w,b
  2764  0001A6  E109               	bnz	u2770
  2765  0001A8  0E28               	movlw	40
  2766  0001AA  5D94               	subwf	main@i& (0+255),w,b
  2767  0001AC  A0D8               	btfss	status,0,c
  2768  0001AE  EFDB  F000         	goto	u2771
  2769  0001B2  EFDD  F000         	goto	u2770
  2770  0001B6                     u2771:
  2771  0001B6  EFC9  F000         	goto	l3968
  2772  0001BA                     u2770:
  2773  0001BA  EF4F  F000         	goto	l3942
  2774  0001BE                     l3974:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;main.c: 148: doSDInit();
  2778  0001BE  EC2A  F00C         	call	_doSDInit	;wreg free
  2779                           
  2780                           ;main.c: 149: break;
  2781  0001C2  EF4F  F000         	goto	l3942
  2782  0001C6                     l3976:
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;main.c: 155: case 'a':;main.c: 156: if (cmd == 'a') {
  2786  0001C6  0E61               	movlw	97
  2787  0001C8  1989               	xorwf	main@cmd& (0+255),w,b
  2788  0001CA  A4D8               	btfss	status,2,c
  2789  0001CC  EFEA  F000         	goto	u2781
  2790  0001D0  EFEC  F000         	goto	u2780
  2791  0001D4                     u2781:
  2792  0001D4  EFFC  F000         	goto	l3982
  2793  0001D8                     u2780:
  2794  0001D8                     
  2795                           ; BSR set to: 0
  2796                           ;main.c: 157: readAddress -= 512;
  2797  0001D8  0E00               	movlw	0
  2798  0001DA  5F8C               	subwf	main@readAddress& (0+255),f,b
  2799  0001DC  0E02               	movlw	2
  2800  0001DE  5B8D               	subwfb	(main@readAddress+1)& (0+255),f,b
  2801  0001E0  0E00               	movlw	0
  2802  0001E2  5B8E               	subwfb	(main@readAddress+2)& (0+255),f,b
  2803  0001E4  0E00               	movlw	0
  2804  0001E6  5B8F               	subwfb	(main@readAddress+3)& (0+255),f,b
  2805  0001E8                     
  2806                           ; BSR set to: 0
  2807                           ;main.c: 158: printf("Decreased ");
  2808  0001E8  0EBD               	movlw	low STR_24
  2809  0001EA  6E1C               	movwf	printf@f^0,c
  2810  0001EC  0EFF               	movlw	high STR_24
  2811  0001EE  6E1D               	movwf	(printf@f+1)^0,c
  2812  0001F0  ECAA  F004         	call	_printf	;wreg free
  2813                           
  2814                           ;main.c: 159: } else{
  2815  0001F4  EF0A  F001         	goto	l3986
  2816  0001F8                     l3982:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;main.c: 160: readAddress += 512;
  2820  0001F8  0E00               	movlw	0
  2821  0001FA  278C               	addwf	main@readAddress& (0+255),f,b
  2822  0001FC  0E02               	movlw	2
  2823  0001FE  238D               	addwfc	(main@readAddress+1)& (0+255),f,b
  2824  000200  0E00               	movlw	0
  2825  000202  238E               	addwfc	(main@readAddress+2)& (0+255),f,b
  2826  000204  0E00               	movlw	0
  2827  000206  238F               	addwfc	(main@readAddress+3)& (0+255),f,b
  2828  000208                     
  2829                           ; BSR set to: 0
  2830                           ;main.c: 161: printf("Increased ");
  2831  000208  0EC8               	movlw	low STR_25
  2832  00020A  6E1C               	movwf	printf@f^0,c
  2833  00020C  0EFF               	movlw	high STR_25
  2834  00020E  6E1D               	movwf	(printf@f+1)^0,c
  2835  000210  ECAA  F004         	call	_printf	;wreg free
  2836  000214                     l3986:
  2837                           
  2838                           ;main.c: 162: };main.c: 163: printf("SD card address:  ");
  2839  000214  0E01               	movlw	low STR_26
  2840  000216  6E1C               	movwf	printf@f^0,c
  2841  000218  0EFF               	movlw	high STR_26
  2842  00021A  6E1D               	movwf	(printf@f+1)^0,c
  2843  00021C  ECAA  F004         	call	_printf	;wreg free
  2844  000220                     
  2845                           ;main.c: 164: printf("%04x", readAddress>>16); printf(":"); printf("%04x", readAddress&0
      +                          X0000FFFF); printf("\r\n");
  2846  000220  0E99               	movlw	low (STR_16+16)
  2847  000222  6E1C               	movwf	printf@f^0,c
  2848  000224  0EFE               	movlw	high (STR_16+16)
  2849  000226  6E1D               	movwf	(printf@f+1)^0,c
  2850  000228  C08E  F01E         	movff	main@readAddress+2,?_printf+2
  2851  00022C  C08F  F01F         	movff	main@readAddress+3,?_printf+3
  2852  000230  6A20               	clrf	(?_printf+4)^0,c
  2853  000232  6A21               	clrf	(?_printf+5)^0,c
  2854  000234  ECAA  F004         	call	_printf	;wreg free
  2855  000238  0EFA               	movlw	low STR_17
  2856  00023A  6E1C               	movwf	printf@f^0,c
  2857  00023C  0EFF               	movlw	high STR_17
  2858  00023E  6E1D               	movwf	(printf@f+1)^0,c
  2859  000240  ECAA  F004         	call	_printf	;wreg free
  2860  000244  0E99               	movlw	low (STR_16+16)
  2861  000246  6E1C               	movwf	printf@f^0,c
  2862  000248  0EFE               	movlw	high (STR_16+16)
  2863  00024A  6E1D               	movwf	(printf@f+1)^0,c
  2864  00024C  0EFF               	movlw	255
  2865  00024E  0100               	movlb	0	; () banked
  2866  000250  158C               	andwf	main@readAddress& (0+255),w,b
  2867  000252  6E1E               	movwf	(?_printf+2)^0,c
  2868  000254  0EFF               	movlw	255
  2869  000256  158D               	andwf	(main@readAddress+1)& (0+255),w,b
  2870  000258  6E1F               	movwf	(?_printf+3)^0,c
  2871  00025A  0E00               	movlw	0
  2872  00025C  158E               	andwf	(main@readAddress+2)& (0+255),w,b
  2873  00025E  6E20               	movwf	(?_printf+4)^0,c
  2874  000260  0E00               	movlw	0
  2875  000262  158F               	andwf	(main@readAddress+3)& (0+255),w,b
  2876  000264  6E21               	movwf	(?_printf+5)^0,c
  2877  000266  ECAA  F004         	call	_printf	;wreg free
  2878  00026A  0EF4               	movlw	low (STR_49+67)
  2879  00026C  6E1C               	movwf	printf@f^0,c
  2880  00026E  0EF9               	movlw	high (STR_49+67)
  2881  000270  6E1D               	movwf	(printf@f+1)^0,c
  2882  000272  ECAA  F004         	call	_printf	;wreg free
  2883                           
  2884                           ;main.c: 165: break;
  2885  000276  EF4F  F000         	goto	l3942
  2886  00027A                     l3996:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;main.c: 171: SDCARD_ReadBlock(readAddress,sdCardBuffer);
  2890  00027A  C08C  F011         	movff	main@readAddress,SDCARD_ReadBlock@addr
  2891  00027E  C08D  F012         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  2892  000282  C08E  F013         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  2893  000286  C08F  F014         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  2894  00028A  0E9C               	movlw	low _sdCardBuffer
  2895  00028C  6E15               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  2896  00028E  0E04               	movlw	high _sdCardBuffer
  2897  000290  6E16               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  2898  000292  EC60  F00A         	call	_SDCARD_ReadBlock	;wreg free
  2899  000296                     
  2900                           ;main.c: 172: printf("Read block: \r\n");
  2901  000296  0E90               	movlw	low STR_31
  2902  000298  6E1C               	movwf	printf@f^0,c
  2903  00029A  0EFF               	movlw	high STR_31
  2904  00029C  6E1D               	movwf	(printf@f+1)^0,c
  2905  00029E  ECAA  F004         	call	_printf	;wreg free
  2906  0002A2                     
  2907                           ;main.c: 173: printf("    Address:    ");
  2908  0002A2  0E7F               	movlw	low STR_32
  2909  0002A4  6E1C               	movwf	printf@f^0,c
  2910  0002A6  0EFF               	movlw	high STR_32
  2911  0002A8  6E1D               	movwf	(printf@f+1)^0,c
  2912  0002AA  ECAA  F004         	call	_printf	;wreg free
  2913  0002AE                     
  2914                           ;main.c: 174: printf("%04x", readAddress>>16); printf(":"); printf("%04x", readAddress&0
      +                          X0000FFFF); printf("\r\n");
  2915  0002AE  0E99               	movlw	low (STR_16+16)
  2916  0002B0  6E1C               	movwf	printf@f^0,c
  2917  0002B2  0EFE               	movlw	high (STR_16+16)
  2918  0002B4  6E1D               	movwf	(printf@f+1)^0,c
  2919  0002B6  C08E  F01E         	movff	main@readAddress+2,?_printf+2
  2920  0002BA  C08F  F01F         	movff	main@readAddress+3,?_printf+3
  2921  0002BE  6A20               	clrf	(?_printf+4)^0,c
  2922  0002C0  6A21               	clrf	(?_printf+5)^0,c
  2923  0002C2  ECAA  F004         	call	_printf	;wreg free
  2924  0002C6  0EFA               	movlw	low STR_17
  2925  0002C8  6E1C               	movwf	printf@f^0,c
  2926  0002CA  0EFF               	movlw	high STR_17
  2927  0002CC  6E1D               	movwf	(printf@f+1)^0,c
  2928  0002CE  ECAA  F004         	call	_printf	;wreg free
  2929  0002D2  0E99               	movlw	low (STR_16+16)
  2930  0002D4  6E1C               	movwf	printf@f^0,c
  2931  0002D6  0EFE               	movlw	high (STR_16+16)
  2932  0002D8  6E1D               	movwf	(printf@f+1)^0,c
  2933  0002DA  0EFF               	movlw	255
  2934  0002DC  0100               	movlb	0	; () banked
  2935  0002DE  158C               	andwf	main@readAddress& (0+255),w,b
  2936  0002E0  6E1E               	movwf	(?_printf+2)^0,c
  2937  0002E2  0EFF               	movlw	255
  2938  0002E4  158D               	andwf	(main@readAddress+1)& (0+255),w,b
  2939  0002E6  6E1F               	movwf	(?_printf+3)^0,c
  2940  0002E8  0E00               	movlw	0
  2941  0002EA  158E               	andwf	(main@readAddress+2)& (0+255),w,b
  2942  0002EC  6E20               	movwf	(?_printf+4)^0,c
  2943  0002EE  0E00               	movlw	0
  2944  0002F0  158F               	andwf	(main@readAddress+3)& (0+255),w,b
  2945  0002F2  6E21               	movwf	(?_printf+5)^0,c
  2946  0002F4  ECAA  F004         	call	_printf	;wreg free
  2947  0002F8  0EF4               	movlw	low (STR_49+67)
  2948  0002FA  6E1C               	movwf	printf@f^0,c
  2949  0002FC  0EF9               	movlw	high (STR_49+67)
  2950  0002FE  6E1D               	movwf	(printf@f+1)^0,c
  2951  000300  ECAA  F004         	call	_printf	;wreg free
  2952  000304                     
  2953                           ;main.c: 175: hexDumpBuffer(sdCardBuffer);
  2954  000304  0E9C               	movlw	low _sdCardBuffer
  2955  000306  6E34               	movwf	hexDumpBuffer@sdCardBuffer^0,c
  2956  000308  0E04               	movlw	high _sdCardBuffer
  2957  00030A  6E35               	movwf	(hexDumpBuffer@sdCardBuffer+1)^0,c
  2958  00030C  EC42  F007         	call	_hexDumpBuffer	;wreg free
  2959                           
  2960                           ;main.c: 176: break;
  2961  000310  EF4F  F000         	goto	l3942
  2962  000314                     l4012:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;main.c: 184: address = 0;
  2966  000314  0E00               	movlw	0
  2967  000316  6F90               	movwf	main@address& (0+255),b
  2968  000318  0E00               	movlw	0
  2969  00031A  6F91               	movwf	(main@address+1)& (0+255),b
  2970  00031C  0E00               	movlw	0
  2971  00031E  6F92               	movwf	(main@address+2)& (0+255),b
  2972  000320  0E00               	movlw	0
  2973  000322  6F93               	movwf	(main@address+3)& (0+255),b
  2974                           
  2975                           ;main.c: 185: blockIndex = 0;
  2976  000324  0E00               	movlw	0
  2977  000326  6F8B               	movwf	(main@blockIndex+1)& (0+255),b
  2978  000328  0E00               	movlw	0
  2979  00032A  6F8A               	movwf	main@blockIndex& (0+255),b
  2980                           
  2981                           ;main.c: 186: uint8_t sinIndex = 0;
  2982  00032C  0E00               	movlw	0
  2983  00032E  6F86               	movwf	main@sinIndex& (0+255),b
  2984  000330                     
  2985                           ; BSR set to: 0
  2986                           ;main.c: 188: printf("Press any key to start storing sine waves\r\n");
  2987  000330  0EBE               	movlw	low STR_37
  2988  000332  6E1C               	movwf	printf@f^0,c
  2989  000334  0EFB               	movlw	high STR_37
  2990  000336  6E1D               	movwf	(printf@f+1)^0,c
  2991  000338  ECAA  F004         	call	_printf	;wreg free
  2992  00033C                     l4016:
  2993  00033C  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  2994  000340  0900               	iorlw	0
  2995  000342  B4D8               	btfsc	status,2,c
  2996  000344  EFA6  F001         	goto	u2791
  2997  000348  EFA8  F001         	goto	u2790
  2998  00034C                     u2791:
  2999  00034C  EF9E  F001         	goto	l4016
  3000  000350                     u2790:
  3001  000350                     
  3002                           ;main.c: 190: (void) EUSART1_Read();
  3003  000350  EC02  F00D         	call	_EUSART1_Read	;wreg free
  3004  000354                     
  3005                           ;main.c: 192: printf("Press any key to stop storing sine waves\r\n");
  3006  000354  0EEA               	movlw	low STR_38
  3007  000356  6E1C               	movwf	printf@f^0,c
  3008  000358  0EFB               	movlw	high STR_38
  3009  00035A  6E1D               	movwf	(printf@f+1)^0,c
  3010  00035C  ECAA  F004         	call	_printf	;wreg free
  3011  000360                     
  3012                           ;main.c: 193: blocksWritten = 0;
  3013  000360  0E00               	movlw	0
  3014  000362  0100               	movlb	0	; () banked
  3015  000364  6F88               	movwf	(main@blocksWritten+1)& (0+255),b
  3016  000366  0E00               	movlw	0
  3017  000368  6F87               	movwf	main@blocksWritten& (0+255),b
  3018                           
  3019                           ;main.c: 194: while(!(EUSART1_is_rx_ready()) && (blockIndex < 512)) {
  3020  00036A  EF05  F002         	goto	l4048
  3021  00036E                     l4024:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;main.c: 195: for(i = 0; i < 512; i++) {
  3025  00036E  0E00               	movlw	0
  3026  000370  6F95               	movwf	(main@i+1)& (0+255),b
  3027  000372  0E00               	movlw	0
  3028  000374  6F94               	movwf	main@i& (0+255),b
  3029  000376                     l4030:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;main.c: 196: sdCardBuffer[i] = sin[sinIndex % 26];
  3033  000376  C086  F010         	movff	main@sinIndex,___awmod@dividend
  3034  00037A  6A11               	clrf	(___awmod@dividend+1)^0,c
  3035  00037C  0E00               	movlw	0
  3036  00037E  6E13               	movwf	(___awmod@divisor+1)^0,c
  3037  000380  0E1A               	movlw	26
  3038  000382  6E12               	movwf	___awmod@divisor^0,c
  3039  000384  EC62  F009         	call	___awmod	;wreg free
  3040  000388  0E6A               	movlw	low main@sin
  3041  00038A  2410               	addwf	?___awmod^0,w,c
  3042  00038C  6ED9               	movwf	fsr2l,c
  3043  00038E  0E00               	movlw	high main@sin
  3044  000390  2011               	addwfc	(?___awmod+1)^0,w,c
  3045  000392  6EDA               	movwf	fsr2h,c
  3046  000394  0E9C               	movlw	low _sdCardBuffer
  3047  000396  0100               	movlb	0	; () banked
  3048  000398  2594               	addwf	main@i& (0+255),w,b
  3049  00039A  6EE1               	movwf	fsr1l,c
  3050  00039C  0E04               	movlw	high _sdCardBuffer
  3051  00039E  2195               	addwfc	(main@i+1)& (0+255),w,b
  3052  0003A0  6EE2               	movwf	fsr1h,c
  3053  0003A2  CFDF FFE7          	movff	indf2,indf1
  3054  0003A6                     
  3055                           ; BSR set to: 0
  3056                           ;main.c: 197: sinIndex++;
  3057  0003A6  2B86               	incf	main@sinIndex& (0+255),f,b
  3058  0003A8                     
  3059                           ; BSR set to: 0
  3060  0003A8  4B94               	infsnz	main@i& (0+255),f,b
  3061  0003AA  2B95               	incf	(main@i+1)& (0+255),f,b
  3062  0003AC                     
  3063                           ; BSR set to: 0
  3064  0003AC  0E02               	movlw	2
  3065  0003AE  5D95               	subwf	(main@i+1)& (0+255),w,b
  3066  0003B0  A0D8               	btfss	status,0,c
  3067  0003B2  EFDD  F001         	goto	u2801
  3068  0003B6  EFDF  F001         	goto	u2800
  3069  0003BA                     u2801:
  3070  0003BA  EFBB  F001         	goto	l4030
  3071  0003BE                     u2800:
  3072  0003BE                     
  3073                           ; BSR set to: 0
  3074                           ;main.c: 198: };main.c: 199: SDCARD_WriteBlock(address, sdCardBuffer);
  3075  0003BE  C090  F011         	movff	main@address,SDCARD_WriteBlock@addr
  3076  0003C2  C091  F012         	movff	main@address+1,SDCARD_WriteBlock@addr+1
  3077  0003C6  C092  F013         	movff	main@address+2,SDCARD_WriteBlock@addr+2
  3078  0003CA  C093  F014         	movff	main@address+3,SDCARD_WriteBlock@addr+3
  3079  0003CE  0E9C               	movlw	low _sdCardBuffer
  3080  0003D0  6E15               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3081  0003D2  0E04               	movlw	high _sdCardBuffer
  3082  0003D4  6E16               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3083  0003D6  ECF5  F00A         	call	_SDCARD_WriteBlock	;wreg free
  3084  0003DA                     l4040:
  3085  0003DA  EC6A  F00C         	call	_SDCARD_PollWriteComplete	;wreg free
  3086  0003DE  0100               	movlb	0	; () banked
  3087  0003E0  6F85               	movwf	main@status& (0+255),b
  3088  0003E2  2985               	incf	main@status& (0+255),w,b
  3089  0003E4  B4D8               	btfsc	status,2,c
  3090  0003E6  EFF7  F001         	goto	u2811
  3091  0003EA  EFF9  F001         	goto	u2810
  3092  0003EE                     u2811:
  3093  0003EE  EFED  F001         	goto	l4040
  3094  0003F2                     u2810:
  3095  0003F2                     
  3096                           ; BSR set to: 0
  3097                           ;main.c: 201: address += 512;
  3098  0003F2  0E00               	movlw	0
  3099  0003F4  2790               	addwf	main@address& (0+255),f,b
  3100  0003F6  0E02               	movlw	2
  3101  0003F8  2391               	addwfc	(main@address+1)& (0+255),f,b
  3102  0003FA  0E00               	movlw	0
  3103  0003FC  2392               	addwfc	(main@address+2)& (0+255),f,b
  3104  0003FE  0E00               	movlw	0
  3105  000400  2393               	addwfc	(main@address+3)& (0+255),f,b
  3106  000402                     
  3107                           ; BSR set to: 0
  3108                           ;main.c: 202: blockIndex++;
  3109  000402  4B8A               	infsnz	main@blockIndex& (0+255),f,b
  3110  000404  2B8B               	incf	(main@blockIndex+1)& (0+255),f,b
  3111  000406                     
  3112                           ; BSR set to: 0
  3113                           ;main.c: 203: blocksWritten++;
  3114  000406  4B87               	infsnz	main@blocksWritten& (0+255),f,b
  3115  000408  2B88               	incf	(main@blocksWritten+1)& (0+255),f,b
  3116  00040A                     l4048:
  3117                           
  3118                           ; BSR set to: 0
  3119  00040A  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  3120  00040E  0900               	iorlw	0
  3121  000410  A4D8               	btfss	status,2,c
  3122  000412  EF0D  F002         	goto	u2821
  3123  000416  EF0F  F002         	goto	u2820
  3124  00041A                     u2821:
  3125  00041A  EF19  F002         	goto	l4052
  3126  00041E                     u2820:
  3127  00041E  0E02               	movlw	2
  3128  000420  0100               	movlb	0	; () banked
  3129  000422  5D8B               	subwf	(main@blockIndex+1)& (0+255),w,b
  3130  000424  A0D8               	btfss	status,0,c
  3131  000426  EF17  F002         	goto	u2831
  3132  00042A  EF19  F002         	goto	u2830
  3133  00042E                     u2831:
  3134  00042E  EFB7  F001         	goto	l4024
  3135  000432                     u2830:
  3136  000432                     l4052:
  3137                           
  3138                           ;main.c: 204: };main.c: 205: (void) EUSART1_Read();
  3139  000432  EC02  F00D         	call	_EUSART1_Read	;wreg free
  3140  000436                     
  3141                           ;main.c: 207: printf("%u blocks were stored\r\n", blockIndex);
  3142  000436  0E00               	movlw	low STR_39
  3143  000438  6E1C               	movwf	printf@f^0,c
  3144  00043A  0EFE               	movlw	high STR_39
  3145  00043C  6E1D               	movwf	(printf@f+1)^0,c
  3146  00043E  C08A  F01E         	movff	main@blockIndex,?_printf+2
  3147  000442  C08B  F01F         	movff	main@blockIndex+1,?_printf+3
  3148  000446  ECAA  F004         	call	_printf	;wreg free
  3149                           
  3150                           ;main.c: 209: break;
  3151  00044A  EF4F  F000         	goto	l3942
  3152  00044E                     l4056:
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;main.c: 215: case '-':;main.c: 216: printf("Sampling rate ");
  3156  00044E  0EAE               	movlw	low STR_40
  3157  000450  6E1C               	movwf	printf@f^0,c
  3158  000452  0EFF               	movlw	high STR_40
  3159  000454  6E1D               	movwf	(printf@f+1)^0,c
  3160  000456  ECAA  F004         	call	_printf	;wreg free
  3161  00045A                     
  3162                           ;main.c: 217: if (cmd == '+') {
  3163  00045A  0E2B               	movlw	43
  3164  00045C  0100               	movlb	0	; () banked
  3165  00045E  1989               	xorwf	main@cmd& (0+255),w,b
  3166  000460  A4D8               	btfss	status,2,c
  3167  000462  EF35  F002         	goto	u2841
  3168  000466  EF37  F002         	goto	u2840
  3169  00046A                     u2841:
  3170  00046A  EF47  F002         	goto	l4064
  3171  00046E                     u2840:
  3172  00046E                     
  3173                           ; BSR set to: 0
  3174                           ;main.c: 218: sampleRate += 160;
  3175  00046E  0EA0               	movlw	160
  3176  000470  2796               	addwf	_sampleRate& (0+255),f,b
  3177  000472  0E00               	movlw	0
  3178  000474  2397               	addwfc	(_sampleRate+1)& (0+255),f,b
  3179  000476                     
  3180                           ; BSR set to: 0
  3181                           ;main.c: 219: printf("increased to %u\r\n", sampleRate);
  3182  000476  0E4B               	movlw	low STR_41
  3183  000478  6E1C               	movwf	printf@f^0,c
  3184  00047A  0EFF               	movlw	high STR_41
  3185  00047C  6E1D               	movwf	(printf@f+1)^0,c
  3186  00047E  C096  F01E         	movff	_sampleRate,?_printf+2
  3187  000482  C097  F01F         	movff	_sampleRate+1,?_printf+3
  3188  000486  ECAA  F004         	call	_printf	;wreg free
  3189                           
  3190                           ;main.c: 221: } else{
  3191  00048A  EF72  F002         	goto	l541
  3192  00048E                     l4064:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;main.c: 222: if(sampleRate - 160 > 0) {
  3196  00048E  0E60               	movlw	96
  3197  000490  6F66               	movwf	??_main& (0+255),b
  3198  000492  0EFF               	movlw	255
  3199  000494  6F67               	movwf	(??_main+1)& (0+255),b
  3200  000496  C096  F068         	movff	_sampleRate,??_main+2
  3201  00049A  C097  F069         	movff	_sampleRate+1,??_main+3
  3202  00049E  5166               	movf	??_main& (0+255),w,b
  3203  0004A0  2768               	addwf	(??_main+2)& (0+255),f,b
  3204  0004A2  5167               	movf	(??_main+1)& (0+255),w,b
  3205  0004A4  2369               	addwfc	(??_main+3)& (0+255),f,b
  3206  0004A6  5168               	movf	(??_main+2)& (0+255),w,b
  3207  0004A8  1169               	iorwf	(??_main+3)& (0+255),w,b
  3208  0004AA  B4D8               	btfsc	status,2,c
  3209  0004AC  EF5A  F002         	goto	u2851
  3210  0004B0  EF5C  F002         	goto	u2850
  3211  0004B4                     u2851:
  3212  0004B4  EF6C  F002         	goto	l4070
  3213  0004B8                     u2850:
  3214  0004B8                     
  3215                           ; BSR set to: 0
  3216                           ;main.c: 223: sampleRate -= 160;
  3217  0004B8  0EA0               	movlw	160
  3218  0004BA  5F96               	subwf	_sampleRate& (0+255),f,b
  3219  0004BC  0E00               	movlw	0
  3220  0004BE  5B97               	subwfb	(_sampleRate+1)& (0+255),f,b
  3221  0004C0                     
  3222                           ; BSR set to: 0
  3223                           ;main.c: 224: printf("decreased to %u\r\n", sampleRate);
  3224  0004C0  0E39               	movlw	low STR_42
  3225  0004C2  6E1C               	movwf	printf@f^0,c
  3226  0004C4  0EFF               	movlw	high STR_42
  3227  0004C6  6E1D               	movwf	(printf@f+1)^0,c
  3228  0004C8  C096  F01E         	movff	_sampleRate,?_printf+2
  3229  0004CC  C097  F01F         	movff	_sampleRate+1,?_printf+3
  3230  0004D0  ECAA  F004         	call	_printf	;wreg free
  3231                           
  3232                           ;main.c: 225: }
  3233  0004D4  EF72  F002         	goto	l541
  3234  0004D8                     l4070:
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;main.c: 226: else;main.c: 227: printf("Cannot decrease sampling rate below 20us\r\n");
  3238  0004D8  0E15               	movlw	low STR_43
  3239  0004DA  6E1C               	movwf	printf@f^0,c
  3240  0004DC  0EFC               	movlw	high STR_43
  3241  0004DE  6E1D               	movwf	(printf@f+1)^0,c
  3242  0004E0  ECAA  F004         	call	_printf	;wreg free
  3243  0004E4                     l541:
  3244                           
  3245                           ;main.c: 228: };main.c: 229: printf("%u\r\n", sampleRate);
  3246  0004E4  0E91               	movlw	low (STR_15+24)
  3247  0004E6  6E1C               	movwf	printf@f^0,c
  3248  0004E8  0EFD               	movlw	high (STR_15+24)
  3249  0004EA  6E1D               	movwf	(printf@f+1)^0,c
  3250  0004EC  C096  F01E         	movff	_sampleRate,?_printf+2
  3251  0004F0  C097  F01F         	movff	_sampleRate+1,?_printf+3
  3252  0004F4  ECAA  F004         	call	_printf	;wreg free
  3253                           
  3254                           ;main.c: 231: break;
  3255  0004F8  EF4F  F000         	goto	l3942
  3256  0004FC                     l4072:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;main.c: 237: address = 0;
  3260  0004FC  0E00               	movlw	0
  3261  0004FE  6F90               	movwf	main@address& (0+255),b
  3262  000500  0E00               	movlw	0
  3263  000502  6F91               	movwf	(main@address+1)& (0+255),b
  3264  000504  0E00               	movlw	0
  3265  000506  6F92               	movwf	(main@address+2)& (0+255),b
  3266  000508  0E00               	movlw	0
  3267  00050A  6F93               	movwf	(main@address+3)& (0+255),b
  3268  00050C                     
  3269                           ; BSR set to: 0
  3270                           ;main.c: 239: printf("Press any key to start recording audio and press any key to stop r
      +                          ecording.\r\n");
  3271  00050C  0E1B               	movlw	low STR_45
  3272  00050E  6E1C               	movwf	printf@f^0,c
  3273  000510  0EF9               	movlw	high STR_45
  3274  000512  6E1D               	movwf	(printf@f+1)^0,c
  3275  000514  ECAA  F004         	call	_printf	;wreg free
  3276  000518                     l4076:
  3277  000518  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  3278  00051C  0900               	iorlw	0
  3279  00051E  B4D8               	btfsc	status,2,c
  3280  000520  EF94  F002         	goto	u2861
  3281  000524  EF96  F002         	goto	u2860
  3282  000528                     u2861:
  3283  000528  EF8C  F002         	goto	l4076
  3284  00052C                     u2860:
  3285  00052C                     
  3286                           ;main.c: 241: (void) EUSART1_Read();
  3287  00052C  EC02  F00D         	call	_EUSART1_Read	;wreg free
  3288  000530                     
  3289                           ;main.c: 243: recording = 1;
  3290  000530  0E01               	movlw	1
  3291  000532  6E4B               	movwf	_recording^0,c
  3292  000534                     
  3293                           ;main.c: 244: printf("Recording started\r\n");
  3294  000534  0EB2               	movlw	low STR_46
  3295  000536  6E1C               	movwf	printf@f^0,c
  3296  000538  0EFE               	movlw	high STR_46
  3297  00053A  6E1D               	movwf	(printf@f+1)^0,c
  3298  00053C  ECAA  F004         	call	_printf	;wreg free
  3299  000540                     
  3300                           ;main.c: 246: blocksWritten = 0;
  3301  000540  0E00               	movlw	0
  3302  000542  0100               	movlb	0	; () banked
  3303  000544  6F88               	movwf	(main@blocksWritten+1)& (0+255),b
  3304  000546  0E00               	movlw	0
  3305  000548  6F87               	movwf	main@blocksWritten& (0+255),b
  3306                           
  3307                           ;main.c: 248: while(!(EUSART1_is_rx_ready())) {
  3308  00054A  EF04  F003         	goto	l4110
  3309  00054E                     l4086:
  3310  00054E  0100               	movlb	0	; () banked
  3311  000550  519B               	movf	_redBufferFull& (0+255),w,b
  3312  000552  B4D8               	btfsc	status,2,c
  3313  000554  EFAE  F002         	goto	u2871
  3314  000558  EFB0  F002         	goto	u2870
  3315  00055C                     u2871:
  3316  00055C  EFA7  F002         	goto	l4086
  3317  000560                     u2870:
  3318  000560                     
  3319                           ; BSR set to: 0
  3320                           ;main.c: 250: SDCARD_WriteBlock(address, redBuffer);
  3321  000560  C090  F011         	movff	main@address,SDCARD_WriteBlock@addr
  3322  000564  C091  F012         	movff	main@address+1,SDCARD_WriteBlock@addr+1
  3323  000568  C092  F013         	movff	main@address+2,SDCARD_WriteBlock@addr+2
  3324  00056C  C093  F014         	movff	main@address+3,SDCARD_WriteBlock@addr+3
  3325  000570  0E9C               	movlw	low _redBuffer
  3326  000572  6E15               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3327  000574  0E00               	movlw	high _redBuffer
  3328  000576  6E16               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3329  000578  ECF5  F00A         	call	_SDCARD_WriteBlock	;wreg free
  3330  00057C                     l4090:
  3331  00057C  EC6A  F00C         	call	_SDCARD_PollWriteComplete	;wreg free
  3332  000580  0100               	movlb	0	; () banked
  3333  000582  6F85               	movwf	main@status& (0+255),b
  3334  000584  2985               	incf	main@status& (0+255),w,b
  3335  000586  B4D8               	btfsc	status,2,c
  3336  000588  EFC8  F002         	goto	u2881
  3337  00058C  EFCA  F002         	goto	u2880
  3338  000590                     u2881:
  3339  000590  EFBE  F002         	goto	l4090
  3340  000594                     u2880:
  3341  000594                     
  3342                           ; BSR set to: 0
  3343                           ;main.c: 252: redBufferFull = 0;
  3344  000594  0E00               	movlw	0
  3345  000596  6F9B               	movwf	_redBufferFull& (0+255),b
  3346  000598                     
  3347                           ; BSR set to: 0
  3348                           ;main.c: 253: address += 512;
  3349  000598  0E00               	movlw	0
  3350  00059A  2790               	addwf	main@address& (0+255),f,b
  3351  00059C  0E02               	movlw	2
  3352  00059E  2391               	addwfc	(main@address+1)& (0+255),f,b
  3353  0005A0  0E00               	movlw	0
  3354  0005A2  2392               	addwfc	(main@address+2)& (0+255),f,b
  3355  0005A4  0E00               	movlw	0
  3356  0005A6  2393               	addwfc	(main@address+3)& (0+255),f,b
  3357  0005A8                     
  3358                           ; BSR set to: 0
  3359                           ;main.c: 254: blocksWritten++;
  3360  0005A8  4B87               	infsnz	main@blocksWritten& (0+255),f,b
  3361  0005AA  2B88               	incf	(main@blocksWritten+1)& (0+255),f,b
  3362  0005AC                     l4098:
  3363                           
  3364                           ; BSR set to: 0
  3365  0005AC  519A               	movf	_blueBufferFull& (0+255),w,b
  3366  0005AE  B4D8               	btfsc	status,2,c
  3367  0005B0  EFDC  F002         	goto	u2891
  3368  0005B4  EFDE  F002         	goto	u2890
  3369  0005B8                     u2891:
  3370  0005B8  EFD6  F002         	goto	l4098
  3371  0005BC                     u2890:
  3372  0005BC                     
  3373                           ; BSR set to: 0
  3374                           ;main.c: 257: SDCARD_WriteBlock(address, blueBuffer);
  3375  0005BC  C090  F011         	movff	main@address,SDCARD_WriteBlock@addr
  3376  0005C0  C091  F012         	movff	main@address+1,SDCARD_WriteBlock@addr+1
  3377  0005C4  C092  F013         	movff	main@address+2,SDCARD_WriteBlock@addr+2
  3378  0005C8  C093  F014         	movff	main@address+3,SDCARD_WriteBlock@addr+3
  3379  0005CC  0E9C               	movlw	low _blueBuffer
  3380  0005CE  6E15               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3381  0005D0  0E02               	movlw	high _blueBuffer
  3382  0005D2  6E16               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3383  0005D4  ECF5  F00A         	call	_SDCARD_WriteBlock	;wreg free
  3384  0005D8                     l4102:
  3385  0005D8  EC6A  F00C         	call	_SDCARD_PollWriteComplete	;wreg free
  3386  0005DC  0100               	movlb	0	; () banked
  3387  0005DE  6F85               	movwf	main@status& (0+255),b
  3388  0005E0  2985               	incf	main@status& (0+255),w,b
  3389  0005E2  B4D8               	btfsc	status,2,c
  3390  0005E4  EFF6  F002         	goto	u2901
  3391  0005E8  EFF8  F002         	goto	u2900
  3392  0005EC                     u2901:
  3393  0005EC  EFEC  F002         	goto	l4102
  3394  0005F0                     u2900:
  3395  0005F0                     
  3396                           ; BSR set to: 0
  3397                           ;main.c: 259: blueBufferFull = 0;
  3398  0005F0  0E00               	movlw	0
  3399  0005F2  6F9A               	movwf	_blueBufferFull& (0+255),b
  3400  0005F4                     
  3401                           ; BSR set to: 0
  3402                           ;main.c: 260: address += 512;
  3403  0005F4  0E00               	movlw	0
  3404  0005F6  2790               	addwf	main@address& (0+255),f,b
  3405  0005F8  0E02               	movlw	2
  3406  0005FA  2391               	addwfc	(main@address+1)& (0+255),f,b
  3407  0005FC  0E00               	movlw	0
  3408  0005FE  2392               	addwfc	(main@address+2)& (0+255),f,b
  3409  000600  0E00               	movlw	0
  3410  000602  2393               	addwfc	(main@address+3)& (0+255),f,b
  3411  000604                     
  3412                           ; BSR set to: 0
  3413                           ;main.c: 261: blocksWritten++;
  3414  000604  4B87               	infsnz	main@blocksWritten& (0+255),f,b
  3415  000606  2B88               	incf	(main@blocksWritten+1)& (0+255),f,b
  3416  000608                     l4110:
  3417                           
  3418                           ; BSR set to: 0
  3419  000608  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  3420  00060C  0900               	iorlw	0
  3421  00060E  B4D8               	btfsc	status,2,c
  3422  000610  EF0C  F003         	goto	u2911
  3423  000614  EF0E  F003         	goto	u2910
  3424  000618                     u2911:
  3425  000618  EFA7  F002         	goto	l4086
  3426  00061C                     u2910:
  3427  00061C                     
  3428                           ;main.c: 262: };main.c: 264: (void) EUSART1_Read();
  3429  00061C  EC02  F00D         	call	_EUSART1_Read	;wreg free
  3430  000620                     
  3431                           ;main.c: 266: recording = 0;
  3432  000620  0E00               	movlw	0
  3433  000622  6E4B               	movwf	_recording^0,c
  3434  000624                     
  3435                           ;main.c: 267: printf("Recording stored\r\n");
  3436  000624  0EEE               	movlw	low STR_47
  3437  000626  6E1C               	movwf	printf@f^0,c
  3438  000628  0EFE               	movlw	high STR_47
  3439  00062A  6E1D               	movwf	(printf@f+1)^0,c
  3440  00062C  ECAA  F004         	call	_printf	;wreg free
  3441                           
  3442                           ;main.c: 268: break;
  3443  000630  EF4F  F000         	goto	l3942
  3444  000634                     l4118:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;main.c: 274: blockIndex = 0;
  3448  000634  0E00               	movlw	0
  3449  000636  6F8B               	movwf	(main@blockIndex+1)& (0+255),b
  3450  000638  0E00               	movlw	0
  3451  00063A  6F8A               	movwf	main@blockIndex& (0+255),b
  3452  00063C                     
  3453                           ; BSR set to: 0
  3454                           ;main.c: 276: printf("You may stop spooling at anytime by pressing any key.\r\n");
  3455  00063C  0E31               	movlw	low STR_48
  3456  00063E  6E1C               	movwf	printf@f^0,c
  3457  000640  0EFA               	movlw	high STR_48
  3458  000642  6E1D               	movwf	(printf@f+1)^0,c
  3459  000644  ECAA  F004         	call	_printf	;wreg free
  3460  000648                     
  3461                           ;main.c: 279: printf("To spool terminal contents into a file follow these instructions:\
      +                          r\n\r\n");
  3462  000648  0EB1               	movlw	low STR_49
  3463  00064A  6E1C               	movwf	printf@f^0,c
  3464  00064C  0EF9               	movlw	high STR_49
  3465  00064E  6E1D               	movwf	(printf@f+1)^0,c
  3466  000650  ECAA  F004         	call	_printf	;wreg free
  3467  000654                     
  3468                           ;main.c: 280: printf("Select:     Change settings...\r\n");
  3469  000654  0EFB               	movlw	low STR_50
  3470  000656  6E1C               	movwf	printf@f^0,c
  3471  000658  0EFC               	movlw	high STR_50
  3472  00065A  6E1D               	movwf	(printf@f+1)^0,c
  3473  00065C  ECAA  F004         	call	_printf	;wreg free
  3474  000660                     
  3475                           ;main.c: 281: printf("Select:     Logging\r\n");
  3476  000660  0E5E               	movlw	low STR_51
  3477  000662  6E1C               	movwf	printf@f^0,c
  3478  000664  0EFE               	movlw	high STR_51
  3479  000666  6E1D               	movwf	(printf@f+1)^0,c
  3480  000668  ECAA  F004         	call	_printf	;wreg free
  3481  00066C                     
  3482                           ;main.c: 282: printf("Select:     Session logging: All session output\r\n");
  3483  00066C  0E03               	movlw	low STR_52
  3484  00066E  6E1C               	movwf	printf@f^0,c
  3485  000670  0EFB               	movlw	high STR_52
  3486  000672  6E1D               	movwf	(printf@f+1)^0,c
  3487  000674  ECAA  F004         	call	_printf	;wreg free
  3488  000678                     
  3489                           ;main.c: 283: printf("Log file name:  Browse and provide a .csv extension to your file n
      +                          ame\r\n");
  3490  000678  0E69               	movlw	low STR_53
  3491  00067A  6E1C               	movwf	printf@f^0,c
  3492  00067C  0EF9               	movlw	high STR_53
  3493  00067E  6E1D               	movwf	(printf@f+1)^0,c
  3494  000680  ECAA  F004         	call	_printf	;wreg free
  3495  000684                     
  3496                           ;main.c: 284: printf("Select:     Apply\r\n");
  3497  000684  0EDA               	movlw	low STR_54
  3498  000686  6E1C               	movwf	printf@f^0,c
  3499  000688  0EFE               	movlw	high STR_54
  3500  00068A  6E1D               	movwf	(printf@f+1)^0,c
  3501  00068C  ECAA  F004         	call	_printf	;wreg free
  3502  000690                     
  3503                           ;main.c: 285: printf("Press any key to start\r\n");
  3504  000690  0EE7               	movlw	low STR_55
  3505  000692  6E1C               	movwf	printf@f^0,c
  3506  000694  0EFD               	movlw	high STR_55
  3507  000696  6E1D               	movwf	(printf@f+1)^0,c
  3508  000698  ECAA  F004         	call	_printf	;wreg free
  3509  00069C                     l4136:
  3510  00069C  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  3511  0006A0  0900               	iorlw	0
  3512  0006A2  B4D8               	btfsc	status,2,c
  3513  0006A4  EF56  F003         	goto	u2921
  3514  0006A8  EF58  F003         	goto	u2920
  3515  0006AC                     u2921:
  3516  0006AC  EF4E  F003         	goto	l4136
  3517  0006B0                     u2920:
  3518  0006B0                     
  3519                           ;main.c: 289: (void) EUSART1_Read();
  3520  0006B0  EC02  F00D         	call	_EUSART1_Read	;wreg free
  3521                           
  3522                           ;main.c: 291: while(!(EUSART1_is_rx_ready()) && (blockIndex < 512)) {
  3523  0006B4  EF96  F003         	goto	l4158
  3524  0006B8                     l4140:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;main.c: 292: SDCARD_ReadBlock(address, blueBuffer);
  3528  0006B8  C090  F011         	movff	main@address,SDCARD_ReadBlock@addr
  3529  0006BC  C091  F012         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  3530  0006C0  C092  F013         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  3531  0006C4  C093  F014         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  3532  0006C8  0E9C               	movlw	low _blueBuffer
  3533  0006CA  6E15               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3534  0006CC  0E02               	movlw	high _blueBuffer
  3535  0006CE  6E16               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3536  0006D0  EC60  F00A         	call	_SDCARD_ReadBlock	;wreg free
  3537  0006D4                     
  3538                           ;main.c: 294: for (i = 0; i < 512; i++) printf("%d \r\n", blueBuffer[i]);
  3539  0006D4  0E00               	movlw	0
  3540  0006D6  0100               	movlb	0	; () banked
  3541  0006D8  6F95               	movwf	(main@i+1)& (0+255),b
  3542  0006DA  0E00               	movlw	0
  3543  0006DC  6F94               	movwf	main@i& (0+255),b
  3544  0006DE                     l4148:
  3545                           
  3546                           ; BSR set to: 0
  3547  0006DE  0EE2               	movlw	low STR_56
  3548  0006E0  6E1C               	movwf	printf@f^0,c
  3549  0006E2  0EFF               	movlw	high STR_56
  3550  0006E4  6E1D               	movwf	(printf@f+1)^0,c
  3551  0006E6  0E9C               	movlw	low _blueBuffer
  3552  0006E8  2594               	addwf	main@i& (0+255),w,b
  3553  0006EA  6ED9               	movwf	fsr2l,c
  3554  0006EC  0E02               	movlw	high _blueBuffer
  3555  0006EE  2195               	addwfc	(main@i+1)& (0+255),w,b
  3556  0006F0  6EDA               	movwf	fsr2h,c
  3557  0006F2  50DF               	movf	indf2,w,c
  3558  0006F4  6F66               	movwf	??_main& (0+255),b
  3559  0006F6  5166               	movf	??_main& (0+255),w,b
  3560  0006F8  6E1E               	movwf	(?_printf+2)^0,c
  3561  0006FA  6A1F               	clrf	(?_printf+3)^0,c
  3562  0006FC  ECAA  F004         	call	_printf	;wreg free
  3563  000700  0100               	movlb	0	; () banked
  3564  000702  4B94               	infsnz	main@i& (0+255),f,b
  3565  000704  2B95               	incf	(main@i+1)& (0+255),f,b
  3566  000706                     
  3567                           ; BSR set to: 0
  3568  000706  0E02               	movlw	2
  3569  000708  5D95               	subwf	(main@i+1)& (0+255),w,b
  3570  00070A  A0D8               	btfss	status,0,c
  3571  00070C  EF8A  F003         	goto	u2931
  3572  000710  EF8C  F003         	goto	u2930
  3573  000714                     u2931:
  3574  000714  EF6F  F003         	goto	l4148
  3575  000718                     u2930:
  3576  000718                     
  3577                           ; BSR set to: 0
  3578                           ;main.c: 297: address += 512;
  3579  000718  0E00               	movlw	0
  3580  00071A  2790               	addwf	main@address& (0+255),f,b
  3581  00071C  0E02               	movlw	2
  3582  00071E  2391               	addwfc	(main@address+1)& (0+255),f,b
  3583  000720  0E00               	movlw	0
  3584  000722  2392               	addwfc	(main@address+2)& (0+255),f,b
  3585  000724  0E00               	movlw	0
  3586  000726  2393               	addwfc	(main@address+3)& (0+255),f,b
  3587  000728                     
  3588                           ; BSR set to: 0
  3589                           ;main.c: 298: blockIndex++;
  3590  000728  4B8A               	infsnz	main@blockIndex& (0+255),f,b
  3591  00072A  2B8B               	incf	(main@blockIndex+1)& (0+255),f,b
  3592  00072C                     l4158:
  3593  00072C  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  3594  000730  0900               	iorlw	0
  3595  000732  A4D8               	btfss	status,2,c
  3596  000734  EF9E  F003         	goto	u2941
  3597  000738  EFA0  F003         	goto	u2940
  3598  00073C                     u2941:
  3599  00073C  EFAA  F003         	goto	l4162
  3600  000740                     u2940:
  3601  000740  0E02               	movlw	2
  3602  000742  0100               	movlb	0	; () banked
  3603  000744  5D8B               	subwf	(main@blockIndex+1)& (0+255),w,b
  3604  000746  A0D8               	btfss	status,0,c
  3605  000748  EFA8  F003         	goto	u2951
  3606  00074C  EFAA  F003         	goto	u2950
  3607  000750                     u2951:
  3608  000750  EF5C  F003         	goto	l4140
  3609  000754                     u2950:
  3610  000754                     l4162:
  3611                           
  3612                           ;main.c: 299: };main.c: 301: (void) EUSART1_Read();
  3613  000754  EC02  F00D         	call	_EUSART1_Read	;wreg free
  3614  000758                     
  3615                           ;main.c: 304: printf("Spooled %d out of the 512 blocks.\r\n", blockIndex);
  3616  000758  0EB5               	movlw	low STR_57
  3617  00075A  6E1C               	movwf	printf@f^0,c
  3618  00075C  0EFC               	movlw	high STR_57
  3619  00075E  6E1D               	movwf	(printf@f+1)^0,c
  3620  000760  C08A  F01E         	movff	main@blockIndex,?_printf+2
  3621  000764  C08B  F01F         	movff	main@blockIndex+1,?_printf+3
  3622  000768  ECAA  F004         	call	_printf	;wreg free
  3623  00076C                     
  3624                           ;main.c: 305: printf("To close the file follow these instructions:\r\n");
  3625  00076C  0E35               	movlw	low STR_58
  3626  00076E  6E1C               	movwf	printf@f^0,c
  3627  000770  0EFB               	movlw	high STR_58
  3628  000772  6E1D               	movwf	(printf@f+1)^0,c
  3629  000774  ECAA  F004         	call	_printf	;wreg free
  3630  000778                     
  3631                           ;main.c: 306: printf("\r\n");
  3632  000778  0EF4               	movlw	low (STR_49+67)
  3633  00077A  6E1C               	movwf	printf@f^0,c
  3634  00077C  0EF9               	movlw	high (STR_49+67)
  3635  00077E  6E1D               	movwf	(printf@f+1)^0,c
  3636  000780  ECAA  F004         	call	_printf	;wreg free
  3637  000784                     
  3638                           ;main.c: 307: printf("Right mouse click on the upper left of the PuTTY window\r\n");
  3639  000784  0EF7               	movlw	low STR_60
  3640  000786  6E1C               	movwf	printf@f^0,c
  3641  000788  0EF9               	movlw	high STR_60
  3642  00078A  6E1D               	movwf	(printf@f+1)^0,c
  3643  00078C  ECAA  F004         	call	_printf	;wreg free
  3644  000790                     
  3645                           ;main.c: 308: printf("Select:     Change settings...\r\n");
  3646  000790  0EFB               	movlw	low STR_50
  3647  000792  6E1C               	movwf	printf@f^0,c
  3648  000794  0EFC               	movlw	high STR_50
  3649  000796  6E1D               	movwf	(printf@f+1)^0,c
  3650  000798  ECAA  F004         	call	_printf	;wreg free
  3651  00079C                     
  3652                           ;main.c: 309: printf("Select:     Logging\r\n");
  3653  00079C  0E5E               	movlw	low STR_51
  3654  00079E  6E1C               	movwf	printf@f^0,c
  3655  0007A0  0EFE               	movlw	high STR_51
  3656  0007A2  6E1D               	movwf	(printf@f+1)^0,c
  3657  0007A4  ECAA  F004         	call	_printf	;wreg free
  3658  0007A8                     
  3659                           ;main.c: 310: printf("Select:     Session  logging: None\r\n");
  3660  0007A8  0E90               	movlw	low STR_63
  3661  0007AA  6E1C               	movwf	printf@f^0,c
  3662  0007AC  0EFC               	movlw	high STR_63
  3663  0007AE  6E1D               	movwf	(printf@f+1)^0,c
  3664  0007B0  ECAA  F004         	call	_printf	;wreg free
  3665  0007B4                     
  3666                           ;main.c: 311: printf("Select:     Apply\r\n");
  3667  0007B4  0EDA               	movlw	low STR_54
  3668  0007B6  6E1C               	movwf	printf@f^0,c
  3669  0007B8  0EFE               	movlw	high STR_54
  3670  0007BA  6E1D               	movwf	(printf@f+1)^0,c
  3671  0007BC  ECAA  F004         	call	_printf	;wreg free
  3672                           
  3673                           ;main.c: 313: break;
  3674  0007C0  EF4F  F000         	goto	l3942
  3675  0007C4                     l4180:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;main.c: 320: address = 0;
  3679  0007C4  0E00               	movlw	0
  3680  0007C6  6F90               	movwf	main@address& (0+255),b
  3681  0007C8  0E00               	movlw	0
  3682  0007CA  6F91               	movwf	(main@address+1)& (0+255),b
  3683  0007CC  0E00               	movlw	0
  3684  0007CE  6F92               	movwf	(main@address+2)& (0+255),b
  3685  0007D0  0E00               	movlw	0
  3686  0007D2  6F93               	movwf	(main@address+3)& (0+255),b
  3687                           
  3688                           ;main.c: 321: playingSound = 1;
  3689  0007D4  0E01               	movlw	1
  3690  0007D6  6E4A               	movwf	_playingSound^0,c
  3691  0007D8                     
  3692                           ; BSR set to: 0
  3693                           ;main.c: 322: printf("Playing has started\r\n");
  3694  0007D8  0E48               	movlw	low STR_65
  3695  0007DA  6E1C               	movwf	printf@f^0,c
  3696  0007DC  0EFE               	movlw	high STR_65
  3697  0007DE  6E1D               	movwf	(printf@f+1)^0,c
  3698  0007E0  ECAA  F004         	call	_printf	;wreg free
  3699  0007E4                     
  3700                           ;main.c: 323: for (i = 0; i < blocksWritten; i++){
  3701  0007E4  0E00               	movlw	0
  3702  0007E6  0100               	movlb	0	; () banked
  3703  0007E8  6F95               	movwf	(main@i+1)& (0+255),b
  3704  0007EA  0E00               	movlw	0
  3705  0007EC  6F94               	movwf	main@i& (0+255),b
  3706  0007EE  EF4D  F004         	goto	l4208
  3707  0007F2                     l4186:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;main.c: 324: if((EUSART1_is_rx_ready())){
  3711  0007F2  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  3712  0007F6  0900               	iorlw	0
  3713  0007F8  B4D8               	btfsc	status,2,c
  3714  0007FA  EF01  F004         	goto	u2961
  3715  0007FE  EF03  F004         	goto	u2960
  3716  000802                     u2961:
  3717  000802  EF07  F004         	goto	l577
  3718  000806                     u2960:
  3719  000806                     
  3720                           ;main.c: 325: (void) EUSART1_Read();
  3721  000806  EC02  F00D         	call	_EUSART1_Read	;wreg free
  3722                           
  3723                           ;main.c: 326: break;
  3724  00080A  EF58  F004         	goto	l4210
  3725  00080E                     l577:
  3726                           
  3727                           ;main.c: 327: };main.c: 328: if(i % 2 == 0) {
  3728  00080E  0100               	movlb	0	; () banked
  3729  000810  B194               	btfsc	main@i& (0+255),0,b
  3730  000812  EF0D  F004         	goto	u2971
  3731  000816  EF0F  F004         	goto	u2970
  3732  00081A                     u2971:
  3733  00081A  EF2A  F004         	goto	l4198
  3734  00081E                     u2970:
  3735  00081E                     l4192:
  3736                           
  3737                           ; BSR set to: 0
  3738  00081E  5199               	movf	_redBufferIsEmpty& (0+255),w,b
  3739  000820  B4D8               	btfsc	status,2,c
  3740  000822  EF15  F004         	goto	u2981
  3741  000826  EF17  F004         	goto	u2980
  3742  00082A                     u2981:
  3743  00082A  EF0F  F004         	goto	l4192
  3744  00082E                     u2980:
  3745  00082E                     
  3746                           ; BSR set to: 0
  3747                           ;main.c: 330: SDCARD_ReadBlock(address, redBuffer);
  3748  00082E  C090  F011         	movff	main@address,SDCARD_ReadBlock@addr
  3749  000832  C091  F012         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  3750  000836  C092  F013         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  3751  00083A  C093  F014         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  3752  00083E  0E9C               	movlw	low _redBuffer
  3753  000840  6E15               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3754  000842  0E00               	movlw	high _redBuffer
  3755  000844  6E16               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3756  000846  EC60  F00A         	call	_SDCARD_ReadBlock	;wreg free
  3757  00084A                     
  3758                           ;main.c: 331: redBufferIsEmpty = 0;
  3759  00084A  0E00               	movlw	0
  3760  00084C  0100               	movlb	0	; () banked
  3761  00084E  6F99               	movwf	_redBufferIsEmpty& (0+255),b
  3762                           
  3763                           ;main.c: 332: }
  3764  000850  EF43  F004         	goto	l4204
  3765  000854                     l4198:
  3766                           
  3767                           ; BSR set to: 0
  3768  000854  5198               	movf	_blueBufferIsEmpty& (0+255),w,b
  3769  000856  B4D8               	btfsc	status,2,c
  3770  000858  EF30  F004         	goto	u2991
  3771  00085C  EF32  F004         	goto	u2990
  3772  000860                     u2991:
  3773  000860  EF2A  F004         	goto	l4198
  3774  000864                     u2990:
  3775  000864                     
  3776                           ; BSR set to: 0
  3777                           ;main.c: 335: SDCARD_ReadBlock(address, blueBuffer);
  3778  000864  C090  F011         	movff	main@address,SDCARD_ReadBlock@addr
  3779  000868  C091  F012         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  3780  00086C  C092  F013         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  3781  000870  C093  F014         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  3782  000874  0E9C               	movlw	low _blueBuffer
  3783  000876  6E15               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3784  000878  0E02               	movlw	high _blueBuffer
  3785  00087A  6E16               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3786  00087C  EC60  F00A         	call	_SDCARD_ReadBlock	;wreg free
  3787  000880                     
  3788                           ;main.c: 336: blueBufferIsEmpty = 0;
  3789  000880  0E00               	movlw	0
  3790  000882  0100               	movlb	0	; () banked
  3791  000884  6F98               	movwf	_blueBufferIsEmpty& (0+255),b
  3792  000886                     l4204:
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;main.c: 337: };main.c: 338: address += 512;
  3796  000886  0E00               	movlw	0
  3797  000888  2790               	addwf	main@address& (0+255),f,b
  3798  00088A  0E02               	movlw	2
  3799  00088C  2391               	addwfc	(main@address+1)& (0+255),f,b
  3800  00088E  0E00               	movlw	0
  3801  000890  2392               	addwfc	(main@address+2)& (0+255),f,b
  3802  000892  0E00               	movlw	0
  3803  000894  2393               	addwfc	(main@address+3)& (0+255),f,b
  3804  000896                     
  3805                           ; BSR set to: 0
  3806  000896  4B94               	infsnz	main@i& (0+255),f,b
  3807  000898  2B95               	incf	(main@i+1)& (0+255),f,b
  3808  00089A                     l4208:
  3809                           
  3810                           ; BSR set to: 0
  3811  00089A  5187               	movf	main@blocksWritten& (0+255),w,b
  3812  00089C  5D94               	subwf	main@i& (0+255),w,b
  3813  00089E  5188               	movf	(main@blocksWritten+1)& (0+255),w,b
  3814  0008A0  5995               	subwfb	(main@i+1)& (0+255),w,b
  3815  0008A2  A0D8               	btfss	status,0,c
  3816  0008A4  EF56  F004         	goto	u3001
  3817  0008A8  EF58  F004         	goto	u3000
  3818  0008AC                     u3001:
  3819  0008AC  EFF9  F003         	goto	l4186
  3820  0008B0                     u3000:
  3821  0008B0                     l4210:
  3822                           
  3823                           ;main.c: 339: };main.c: 340: playingSound = 0;
  3824  0008B0  0E00               	movlw	0
  3825  0008B2  6E4A               	movwf	_playingSound^0,c
  3826  0008B4                     
  3827                           ;main.c: 341: printf("Playing has ended\r\n");
  3828  0008B4  0E9E               	movlw	low STR_66
  3829  0008B6  6E1C               	movwf	printf@f^0,c
  3830  0008B8  0EFE               	movlw	high STR_66
  3831  0008BA  6E1D               	movwf	(printf@f+1)^0,c
  3832  0008BC  ECAA  F004         	call	_printf	;wreg free
  3833                           
  3834                           ;main.c: 344: break;
  3835  0008C0  EF4F  F000         	goto	l3942
  3836  0008C4                     l4214:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;main.c: 350: printf("Unknown key %c\r\n",cmd);
  3840  0008C4  0E6E               	movlw	low STR_67
  3841  0008C6  6E1C               	movwf	printf@f^0,c
  3842  0008C8  0EFF               	movlw	high STR_67
  3843  0008CA  6E1D               	movwf	(printf@f+1)^0,c
  3844  0008CC  C089  F01E         	movff	main@cmd,?_printf+2
  3845  0008D0  6A1F               	clrf	(?_printf+3)^0,c
  3846  0008D2  ECAA  F004         	call	_printf	;wreg free
  3847                           
  3848                           ;main.c: 351: break;
  3849  0008D6  EF4F  F000         	goto	l3942
  3850  0008DA                     l4218:
  3851                           
  3852                           ; BSR set to: 0
  3853  0008DA  5189               	movf	main@cmd& (0+255),w,b
  3854                           
  3855                           ; Switch size 1, requested type "simple"
  3856                           ; Number of cases is 14, Range of values is 43 to 122
  3857                           ; switch strategies available:
  3858                           ; Name         Instructions Cycles
  3859                           ; simple_byte           43    22 (average)
  3860                           ;	Chosen strategy is simple_byte
  3861  0008DC  0A2B               	xorlw	43	; case 43
  3862  0008DE  B4D8               	btfsc	status,2,c
  3863  0008E0  EF27  F002         	goto	l4056
  3864  0008E4  0A06               	xorlw	6	; case 45
  3865  0008E6  B4D8               	btfsc	status,2,c
  3866  0008E8  EF27  F002         	goto	l4056
  3867  0008EC  0A1C               	xorlw	28	; case 49
  3868  0008EE  B4D8               	btfsc	status,2,c
  3869  0008F0  EF8A  F001         	goto	l4012
  3870  0008F4  0A0E               	xorlw	14	; case 63
  3871  0008F6  B4D8               	btfsc	status,2,c
  3872  0008F8  EF5F  F000         	goto	l3946
  3873  0008FC  0A7E               	xorlw	126	; case 65
  3874  0008FE  B4D8               	btfsc	status,2,c
  3875  000900  EFE3  F000         	goto	l3976
  3876  000904  0A11               	xorlw	17	; case 80
  3877  000906  B4D8               	btfsc	status,2,c
  3878  000908  EFE2  F003         	goto	l4180
  3879  00090C  0A07               	xorlw	7	; case 87
  3880  00090E  B4D8               	btfsc	status,2,c
  3881  000910  EF7E  F002         	goto	l4072
  3882  000914  0A0D               	xorlw	13	; case 90
  3883  000916  B4D8               	btfsc	status,2,c
  3884  000918  EFAA  F000         	goto	l3950
  3885  00091C  0A3B               	xorlw	59	; case 97
  3886  00091E  B4D8               	btfsc	status,2,c
  3887  000920  EFE3  F000         	goto	l3976
  3888  000924  0A08               	xorlw	8	; case 105
  3889  000926  B4D8               	btfsc	status,2,c
  3890  000928  EFDF  F000         	goto	l3974
  3891  00092C  0A06               	xorlw	6	; case 111
  3892  00092E  B4D8               	btfsc	status,2,c
  3893  000930  EFA2  F000         	goto	l3948
  3894  000934  0A1D               	xorlw	29	; case 114
  3895  000936  B4D8               	btfsc	status,2,c
  3896  000938  EF3D  F001         	goto	l3996
  3897  00093C  0A01               	xorlw	1	; case 115
  3898  00093E  B4D8               	btfsc	status,2,c
  3899  000940  EF1A  F003         	goto	l4118
  3900  000944  0A09               	xorlw	9	; case 122
  3901  000946  B4D8               	btfsc	status,2,c
  3902  000948  EFC5  F000         	goto	l3962
  3903  00094C  EF62  F004         	goto	l4214
  3904  000950  EF27  F000         	goto	start
  3905  000954                     __end_of_main:
  3906                           	opt callstack 0
  3907                           
  3908 ;; *************** function _printMenu *****************
  3909 ;; Defined at:
  3910 ;;		line 429 in file "main.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    7
  3931 ;; This function calls:
  3932 ;;		_printf
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text1
  3939  0011D2                     __ptext1:
  3940                           	opt callstack 0
  3941  0011D2                     _printMenu:
  3942                           	opt callstack 23
  3943  0011D2                     
  3944                           ;main.c: 430: printf("-------------------------------------------------\r\n");
  3945  0011D2  0E69               	movlw	low STR_68
  3946  0011D4  6E1C               	movwf	printf@f^0,c
  3947  0011D6  0EFA               	movlw	high STR_68
  3948  0011D8  6E1D               	movwf	(printf@f+1)^0,c
  3949  0011DA  ECAA  F004         	call	_printf	;wreg free
  3950                           
  3951                           ;main.c: 431: printf("\r\n");
  3952  0011DE  0EF4               	movlw	low (STR_49+67)
  3953  0011E0  6E1C               	movwf	printf@f^0,c
  3954  0011E2  0EF9               	movlw	high (STR_49+67)
  3955  0011E4  6E1D               	movwf	(printf@f+1)^0,c
  3956  0011E6  ECAA  F004         	call	_printf	;wreg free
  3957                           
  3958                           ;main.c: 432: printf("-------------------------------------------------\r\n");
  3959  0011EA  0E69               	movlw	low STR_68
  3960  0011EC  6E1C               	movwf	printf@f^0,c
  3961  0011EE  0EFA               	movlw	high STR_68
  3962  0011F0  6E1D               	movwf	(printf@f+1)^0,c
  3963  0011F2  ECAA  F004         	call	_printf	;wreg free
  3964                           
  3965                           ;main.c: 433: printf("?: help menu\r\n");
  3966  0011F6  0E9F               	movlw	low STR_71
  3967  0011F8  6E1C               	movwf	printf@f^0,c
  3968  0011FA  0EFF               	movlw	high STR_71
  3969  0011FC  6E1D               	movwf	(printf@f+1)^0,c
  3970  0011FE  ECAA  F004         	call	_printf	;wreg free
  3971                           
  3972                           ;main.c: 434: printf("o: k\r\n");
  3973  001202  0EDB               	movlw	low STR_72
  3974  001204  6E1C               	movwf	printf@f^0,c
  3975  001206  0EFF               	movlw	high STR_72
  3976  001208  6E1D               	movwf	(printf@f+1)^0,c
  3977  00120A  ECAA  F004         	call	_printf	;wreg free
  3978                           
  3979                           ;main.c: 435: printf("Z: Reset processor\r\n");
  3980  00120E  0E74               	movlw	low STR_73
  3981  001210  6E1C               	movwf	printf@f^0,c
  3982  001212  0EFE               	movlw	high STR_73
  3983  001214  6E1D               	movwf	(printf@f+1)^0,c
  3984  001216  ECAA  F004         	call	_printf	;wreg free
  3985                           
  3986                           ;main.c: 436: printf("z: Clear the terminal\r\n");
  3987  00121A  0E30               	movlw	low STR_74
  3988  00121C  6E1C               	movwf	printf@f^0,c
  3989  00121E  0EFE               	movlw	high STR_74
  3990  001220  6E1D               	movwf	(printf@f+1)^0,c
  3991  001222  ECAA  F004         	call	_printf	;wreg free
  3992                           
  3993                           ;main.c: 437: printf("-------------------------------------------------\r\n");
  3994  001226  0E69               	movlw	low STR_68
  3995  001228  6E1C               	movwf	printf@f^0,c
  3996  00122A  0EFA               	movlw	high STR_68
  3997  00122C  6E1D               	movwf	(printf@f+1)^0,c
  3998  00122E  ECAA  F004         	call	_printf	;wreg free
  3999                           
  4000                           ;main.c: 438: printf("i: Initialize SD card\r\n");
  4001  001232  0E18               	movlw	low STR_76
  4002  001234  6E1C               	movwf	printf@f^0,c
  4003  001236  0EFE               	movlw	high STR_76
  4004  001238  6E1D               	movwf	(printf@f+1)^0,c
  4005  00123A  ECAA  F004         	call	_printf	;wreg free
  4006                           
  4007                           ;main.c: 439: printf("-------------------------------------------------\r\n");
  4008  00123E  0E69               	movlw	low STR_68
  4009  001240  6E1C               	movwf	printf@f^0,c
  4010  001242  0EFA               	movlw	high STR_68
  4011  001244  6E1D               	movwf	(printf@f+1)^0,c
  4012  001246  ECAA  F004         	call	_printf	;wreg free
  4013                           
  4014                           ;main.c: 440: printf("a/A: decrease/increase read address\r\n");
  4015  00124A  0E6A               	movlw	low STR_78
  4016  00124C  6E1C               	movwf	printf@f^0,c
  4017  00124E  0EFC               	movlw	high STR_78
  4018  001250  6E1D               	movwf	(printf@f+1)^0,c
  4019  001252  ECAA  F004         	call	_printf	;wreg free
  4020                           
  4021                           ;main.c: 441: printf("r: read a block of 512 bytes from SD card\r\n");
  4022  001256  0E92               	movlw	low STR_79
  4023  001258  6E1C               	movwf	printf@f^0,c
  4024  00125A  0EFB               	movlw	high STR_79
  4025  00125C  6E1D               	movwf	(printf@f+1)^0,c
  4026  00125E  ECAA  F004         	call	_printf	;wreg free
  4027                           
  4028                           ;main.c: 442: printf("1: write perfect 26 value sine wave to 128 blocks\r\n");
  4029  001262  0E9D               	movlw	low STR_80
  4030  001264  6E1C               	movwf	printf@f^0,c
  4031  001266  0EFA               	movlw	high STR_80
  4032  001268  6E1D               	movwf	(printf@f+1)^0,c
  4033  00126A  ECAA  F004         	call	_printf	;wreg free
  4034                           
  4035                           ;main.c: 443: printf("-------------------------------------------------\r\n");
  4036  00126E  0E69               	movlw	low STR_68
  4037  001270  6E1C               	movwf	printf@f^0,c
  4038  001272  0EFA               	movlw	high STR_68
  4039  001274  6E1D               	movwf	(printf@f+1)^0,c
  4040  001276  ECAA  F004         	call	_printf	;wreg free
  4041                           
  4042                           ;main.c: 444: printf("s: spool memory to a csv file\r\n");
  4043  00127A  0E3C               	movlw	low STR_82
  4044  00127C  6E1C               	movwf	printf@f^0,c
  4045  00127E  0EFD               	movlw	high STR_82
  4046  001280  6E1D               	movwf	(printf@f+1)^0,c
  4047  001282  ECAA  F004         	call	_printf	;wreg free
  4048                           
  4049                           ;main.c: 445: printf("-------------------------------------------------\r\n");
  4050  001286  0E69               	movlw	low STR_68
  4051  001288  6E1C               	movwf	printf@f^0,c
  4052  00128A  0EFA               	movlw	high STR_68
  4053  00128C  6E1D               	movwf	(printf@f+1)^0,c
  4054  00128E  ECAA  F004         	call	_printf	;wreg free
  4055                           
  4056                           ;main.c: 446: printf("+/-: Increase/Decrease the sample rate by 10 us\r\n");
  4057  001292  0ED1               	movlw	low STR_84
  4058  001294  6E1C               	movwf	printf@f^0,c
  4059  001296  0EFA               	movlw	high STR_84
  4060  001298  6E1D               	movwf	(printf@f+1)^0,c
  4061  00129A  ECAA  F004         	call	_printf	;wreg free
  4062                           
  4063                           ;main.c: 447: printf("P: Play from SD card to PWM -> LPF -> Audio\r\n");
  4064  00129E  0E64               	movlw	low STR_85
  4065  0012A0  6E1C               	movwf	printf@f^0,c
  4066  0012A2  0EFB               	movlw	high STR_85
  4067  0012A4  6E1D               	movwf	(printf@f+1)^0,c
  4068  0012A6  ECAA  F004         	call	_printf	;wreg free
  4069                           
  4070                           ;main.c: 448: printf("W: Write microphone => SD card \r\n");
  4071  0012AA  0ED9               	movlw	low STR_86
  4072  0012AC  6E1C               	movwf	printf@f^0,c
  4073  0012AE  0EFC               	movlw	high STR_86
  4074  0012B0  6E1D               	movwf	(printf@f+1)^0,c
  4075  0012B2  ECAA  F004         	call	_printf	;wreg free
  4076                           
  4077                           ;main.c: 449: printf("-------------------------------------------------\r\n");
  4078  0012B6  0E69               	movlw	low STR_68
  4079  0012B8  6E1C               	movwf	printf@f^0,c
  4080  0012BA  0EFA               	movlw	high STR_68
  4081  0012BC  6E1D               	movwf	(printf@f+1)^0,c
  4082  0012BE  ECAA  F004         	call	_printf	;wreg free
  4083  0012C2  0012               	return		;funcret
  4084  0012C4                     __end_of_printMenu:
  4085                           	opt callstack 0
  4086                           
  4087 ;; *************** function _initializeAll *****************
  4088 ;; Defined at:
  4089 ;;		line 452 in file "main.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;Total ram usage:        0 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    7
  4110 ;; This function calls:
  4111 ;;		_SYSTEM_Initialize
  4112 ;;		_TMR0_SetInterruptHandler
  4113 ;;		_TMR0_WriteTimer
  4114 ;;		_printf
  4115 ;; This function is called by:
  4116 ;;		_main
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text2
  4121  0016EC                     __ptext2:
  4122                           	opt callstack 0
  4123  0016EC                     _initializeAll:
  4124                           	opt callstack 23
  4125  0016EC                     
  4126                           ;main.c: 453: SYSTEM_Initialize();
  4127  0016EC  EC16  F00D         	call	_SYSTEM_Initialize	;wreg free
  4128  0016F0  888A               	bsf	138,4,c	;volatile
  4129  0016F2                     
  4130                           ;main.c: 457: TMR0_WriteTimer(0x0000);
  4131  0016F2  0E00               	movlw	0
  4132  0016F4  6E11               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4133  0016F6  0E00               	movlw	0
  4134  0016F8  6E10               	movwf	TMR0_WriteTimer@timerVal^0,c
  4135  0016FA  ECA7  F00D         	call	_TMR0_WriteTimer	;wreg free
  4136  0016FE                     
  4137                           ;main.c: 458: INTCONbits.TMR0IF = 0;
  4138  0016FE  94F2               	bcf	242,2,c	;volatile
  4139  001700                     l616:
  4140  001700  A4F2               	btfss	242,2,c	;volatile
  4141  001702  EF85  F00B         	goto	u2721
  4142  001706  EF87  F00B         	goto	u2720
  4143  00170A                     u2721:
  4144  00170A  EF80  F00B         	goto	l616
  4145  00170E                     u2720:
  4146  00170E                     
  4147                           ;main.c: 461: TMR0_SetInterruptHandler(myTMR0ISR);
  4148  00170E  0E6E               	movlw	low _myTMR0ISR
  4149  001710  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4150  001712  0E10               	movlw	high _myTMR0ISR
  4151  001714  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4152  001716  ECAC  F00D         	call	_TMR0_SetInterruptHandler	;wreg free
  4153  00171A                     
  4154                           ;main.c: 463: (INTCONbits.GIE = 1);
  4155  00171A  8EF2               	bsf	242,7,c	;volatile
  4156  00171C                     
  4157                           ;main.c: 464: (INTCONbits.PEIE = 1);
  4158  00171C  8CF2               	bsf	242,6,c	;volatile
  4159  00171E                     
  4160                           ;main.c: 466: printf("Development Board\r\n");
  4161  00171E  0EC6               	movlw	low STR_88
  4162  001720  6E1C               	movwf	printf@f^0,c
  4163  001722  0EFE               	movlw	high STR_88
  4164  001724  6E1D               	movwf	(printf@f+1)^0,c
  4165  001726  ECAA  F004         	call	_printf	;wreg free
  4166  00172A                     
  4167                           ;main.c: 467: printf("Lab 10 terminal\r\n");
  4168  00172A  0E27               	movlw	low STR_89
  4169  00172C  6E1C               	movwf	printf@f^0,c
  4170  00172E  0EFF               	movlw	high STR_89
  4171  001730  6E1D               	movwf	(printf@f+1)^0,c
  4172  001732  ECAA  F004         	call	_printf	;wreg free
  4173  001736                     
  4174                           ;main.c: 468: printf("Audio recording and playback \r\n");
  4175  001736  0E1C               	movlw	low STR_90
  4176  001738  6E1C               	movwf	printf@f^0,c
  4177  00173A  0EFD               	movlw	high STR_90
  4178  00173C  6E1D               	movwf	(printf@f+1)^0,c
  4179  00173E  ECAA  F004         	call	_printf	;wreg free
  4180  001742                     
  4181                           ;main.c: 469: printf("\r\n> ");
  4182  001742  0EEE               	movlw	low STR_91
  4183  001744  6E1C               	movwf	printf@f^0,c
  4184  001746  0EFF               	movlw	high STR_91
  4185  001748  6E1D               	movwf	(printf@f+1)^0,c
  4186  00174A  ECAA  F004         	call	_printf	;wreg free
  4187  00174E  0012               	return		;funcret
  4188  001750                     __end_of_initializeAll:
  4189                           	opt callstack 0
  4190                           
  4191 ;; *************** function _TMR0_WriteTimer *****************
  4192 ;; Defined at:
  4193 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  timerVal        2   15[COMRAM] unsigned int 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;Total ram usage:        2 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    4
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_initializeAll
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text3
  4222  001B4E                     __ptext3:
  4223                           	opt callstack 0
  4224  001B4E                     _TMR0_WriteTimer:
  4225                           	opt callstack 25
  4226  001B4E                     
  4227                           ;tmr0.c: 125: TMR0H = timerVal >> 8;
  4228  001B4E  5011               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4229  001B50  6ED7               	movwf	215,c	;volatile
  4230  001B52                     
  4231                           ;tmr0.c: 126: TMR0L = (uint8_t) timerVal;
  4232  001B52  C010  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4233  001B56  0012               	return		;funcret
  4234  001B58                     __end_of_TMR0_WriteTimer:
  4235                           	opt callstack 0
  4236                           
  4237 ;; *************** function _SYSTEM_Initialize *****************
  4238 ;; Defined at:
  4239 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        0 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    6
  4260 ;; This function calls:
  4261 ;;		_ADC_Initialize
  4262 ;;		_EPWM1_Initialize
  4263 ;;		_EUSART1_Initialize
  4264 ;;		_INTERRUPT_Initialize
  4265 ;;		_OSCILLATOR_Initialize
  4266 ;;		_PIN_MANAGER_Initialize
  4267 ;;		_SPI2_Initialize
  4268 ;;		_TMR0_Initialize
  4269 ;;		_TMR2_Initialize
  4270 ;; This function is called by:
  4271 ;;		_initializeAll
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text4
  4276  001A2C                     __ptext4:
  4277                           	opt callstack 0
  4278  001A2C                     _SYSTEM_Initialize:
  4279                           	opt callstack 23
  4280  001A2C                     
  4281                           ;mcc.c: 53: INTERRUPT_Initialize();
  4282  001A2C  ECCC  F00D         	call	_INTERRUPT_Initialize	;wreg free
  4283  001A30                     
  4284                           ;mcc.c: 54: SPI2_Initialize();
  4285  001A30  EC96  F00D         	call	_SPI2_Initialize	;wreg free
  4286  001A34                     
  4287                           ;mcc.c: 55: PIN_MANAGER_Initialize();
  4288  001A34  ECEC  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  4289  001A38                     
  4290                           ;mcc.c: 56: OSCILLATOR_Initialize();
  4291  001A38  EC5B  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  4292  001A3C                     
  4293                           ;mcc.c: 57: ADC_Initialize();
  4294  001A3C  EC76  F00D         	call	_ADC_Initialize	;wreg free
  4295  001A40                     
  4296                           ;mcc.c: 58: EPWM1_Initialize();
  4297  001A40  EC3C  F00D         	call	_EPWM1_Initialize	;wreg free
  4298  001A44                     
  4299                           ;mcc.c: 59: TMR2_Initialize();
  4300  001A44  EC9F  F00D         	call	_TMR2_Initialize	;wreg free
  4301  001A48                     
  4302                           ;mcc.c: 60: TMR0_Initialize();
  4303  001A48  ECA1  F00C         	call	_TMR0_Initialize	;wreg free
  4304  001A4C                     
  4305                           ;mcc.c: 61: EUSART1_Initialize();
  4306  001A4C  EC4B  F00C         	call	_EUSART1_Initialize	;wreg free
  4307  001A50  0012               	return		;funcret
  4308  001A52                     __end_of_SYSTEM_Initialize:
  4309                           	opt callstack 0
  4310                           
  4311 ;; *************** function _TMR2_Initialize *****************
  4312 ;; Defined at:
  4313 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    4
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_SYSTEM_Initialize
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text5
  4342  001B3E                     __ptext5:
  4343                           	opt callstack 0
  4344  001B3E                     _TMR2_Initialize:
  4345                           	opt callstack 24
  4346  001B3E                     
  4347                           ;tmr2.c: 67: PR2 = 0x3F;
  4348  001B3E  0E3F               	movlw	63
  4349  001B40  6EBB               	movwf	187,c	;volatile
  4350                           
  4351                           ;tmr2.c: 70: TMR2 = 0x00;
  4352  001B42  0E00               	movlw	0
  4353  001B44  6EBC               	movwf	188,c	;volatile
  4354  001B46                     
  4355                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  4356  001B46  929E               	bcf	158,1,c	;volatile
  4357                           
  4358                           ;tmr2.c: 76: T2CON = 0x06;
  4359  001B48  0E06               	movlw	6
  4360  001B4A  6EBA               	movwf	186,c	;volatile
  4361  001B4C  0012               	return		;funcret
  4362  001B4E                     __end_of_TMR2_Initialize:
  4363                           	opt callstack 0
  4364                           
  4365 ;; *************** function _TMR0_Initialize *****************
  4366 ;; Defined at:
  4367 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;Total ram usage:        2 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    5
  4388 ;; This function calls:
  4389 ;;		_TMR0_SetInterruptHandler
  4390 ;; This function is called by:
  4391 ;;		_SYSTEM_Initialize
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text6
  4396  001942                     __ptext6:
  4397                           	opt callstack 0
  4398  001942                     _TMR0_Initialize:
  4399                           	opt callstack 23
  4400  001942                     
  4401                           ;tmr0.c: 72: T0CONbits.T08BIT = 0;
  4402  001942  9CD5               	bcf	213,6,c	;volatile
  4403                           
  4404                           ;tmr0.c: 75: TMR0H = 0xFF;
  4405  001944  68D7               	setf	215,c	;volatile
  4406  001946                     
  4407                           ;tmr0.c: 78: TMR0L = 0xFD;
  4408  001946  0EFD               	movlw	253
  4409  001948  6ED6               	movwf	214,c	;volatile
  4410  00194A                     
  4411                           ;tmr0.c: 82: timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4412  00194A  50D6               	movf	214,w,c	;volatile
  4413  00194C  CFD7 F012          	movff	4055,??_TMR0_Initialize	;volatile
  4414  001950  6A13               	clrf	(??_TMR0_Initialize+1)^0,c
  4415  001952  C012  F013         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4416  001956  6A12               	clrf	??_TMR0_Initialize^0,c
  4417  001958  1012               	iorwf	??_TMR0_Initialize^0,w,c
  4418  00195A  6E44               	movwf	_timer0ReloadVal^0,c	;volatile
  4419  00195C  5013               	movf	(??_TMR0_Initialize+1)^0,w,c
  4420  00195E  6E45               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4421  001960                     
  4422                           ;tmr0.c: 85: INTCONbits.TMR0IF = 0;
  4423  001960  94F2               	bcf	242,2,c	;volatile
  4424  001962                     
  4425                           ;tmr0.c: 88: INTCONbits.TMR0IE = 1;
  4426  001962  8AF2               	bsf	242,5,c	;volatile
  4427  001964                     
  4428                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4429  001964  0EA0               	movlw	low _TMR0_DefaultInterruptHandler
  4430  001966  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4431  001968  0E1B               	movlw	high _TMR0_DefaultInterruptHandler
  4432  00196A  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4433  00196C  ECAC  F00D         	call	_TMR0_SetInterruptHandler	;wreg free
  4434  001970                     
  4435                           ;tmr0.c: 94: T0CON = 0x9F;
  4436  001970  0E9F               	movlw	159
  4437  001972  6ED5               	movwf	213,c	;volatile
  4438  001974  0012               	return		;funcret
  4439  001976                     __end_of_TMR0_Initialize:
  4440                           	opt callstack 0
  4441                           
  4442 ;; *************** function _TMR0_SetInterruptHandler *****************
  4443 ;; Defined at:
  4444 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
  4447 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;Total ram usage:        2 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    4
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_TMR0_Initialize
  4470 ;;		_initializeAll
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text7
  4475  001B58                     __ptext7:
  4476                           	opt callstack 0
  4477  001B58                     _TMR0_SetInterruptHandler:
  4478                           	opt callstack 25
  4479  001B58                     
  4480                           ;tmr0.c: 157: TMR0_InterruptHandler = InterruptHandler;
  4481  001B58  C010  F046         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4482  001B5C  C011  F047         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4483  001B60  0012               	return		;funcret
  4484  001B62                     __end_of_TMR0_SetInterruptHandler:
  4485                           	opt callstack 0
  4486                           
  4487 ;; *************** function _SPI2_Initialize *****************
  4488 ;; Defined at:
  4489 ;;		line 62 in file "mcc_generated_files/spi2.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;Total ram usage:        0 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    4
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_SYSTEM_Initialize
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text8
  4518  001B2C                     __ptext8:
  4519                           	opt callstack 0
  4520  001B2C                     _SPI2_Initialize:
  4521                           	opt callstack 24
  4522  001B2C                     
  4523                           ;spi2.c: 65: SSP2STAT = 0x40;
  4524  001B2C  0E40               	movlw	64
  4525  001B2E  6E6D               	movwf	109,c	;volatile
  4526                           
  4527                           ;spi2.c: 66: SSP2CON1 = 0x01;
  4528  001B30  0E01               	movlw	1
  4529  001B32  6E6C               	movwf	108,c	;volatile
  4530                           
  4531                           ;spi2.c: 67: SSP2ADD = 0x01;
  4532  001B34  0E01               	movlw	1
  4533  001B36  6E6E               	movwf	110,c	;volatile
  4534  001B38                     
  4535                           ;spi2.c: 68: TRISBbits.TRISB1 = 0;
  4536  001B38  9293               	bcf	147,1,c	;volatile
  4537  001B3A                     
  4538                           ;spi2.c: 69: SSP2CON1bits.SSPEN = 0;
  4539  001B3A  9A6C               	bcf	108,5,c	;volatile
  4540  001B3C  0012               	return		;funcret
  4541  001B3E                     __end_of_SPI2_Initialize:
  4542                           	opt callstack 0
  4543                           
  4544 ;; *************** function _PIN_MANAGER_Initialize *****************
  4545 ;; Defined at:
  4546 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    4
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_SYSTEM_Initialize
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text9
  4575  0019D8                     __ptext9:
  4576                           	opt callstack 0
  4577  0019D8                     _PIN_MANAGER_Initialize:
  4578                           	opt callstack 24
  4579  0019D8                     
  4580                           ;pin_manager.c: 60: LATA = 0x00;
  4581  0019D8  0E00               	movlw	0
  4582  0019DA  6E89               	movwf	137,c	;volatile
  4583                           
  4584                           ;pin_manager.c: 61: LATB = 0x00;
  4585  0019DC  0E00               	movlw	0
  4586  0019DE  6E8A               	movwf	138,c	;volatile
  4587                           
  4588                           ;pin_manager.c: 62: LATC = 0x00;
  4589  0019E0  0E00               	movlw	0
  4590  0019E2  6E8B               	movwf	139,c	;volatile
  4591  0019E4                     
  4592                           ;pin_manager.c: 67: TRISA = 0xFF;
  4593  0019E4  6892               	setf	146,c	;volatile
  4594                           
  4595                           ;pin_manager.c: 68: TRISB = 0xE5;
  4596  0019E6  0EE5               	movlw	229
  4597  0019E8  6E93               	movwf	147,c	;volatile
  4598                           
  4599                           ;pin_manager.c: 69: TRISC = 0xBA;
  4600  0019EA  0EBA               	movlw	186
  4601  0019EC  6E94               	movwf	148,c	;volatile
  4602                           
  4603                           ;pin_manager.c: 74: ANSELC = 0x3C;
  4604  0019EE  0E3C               	movlw	60
  4605  0019F0  010F               	movlb	15	; () banked
  4606  0019F2  6F3A               	movwf	58,b	;volatile
  4607                           
  4608                           ;pin_manager.c: 75: ANSELB = 0x31;
  4609  0019F4  0E31               	movlw	49
  4610  0019F6  6F39               	movwf	57,b	;volatile
  4611                           
  4612                           ;pin_manager.c: 76: ANSELA = 0x2F;
  4613  0019F8  0E2F               	movlw	47
  4614  0019FA  6F38               	movwf	56,b	;volatile
  4615                           
  4616                           ;pin_manager.c: 81: WPUB = 0x00;
  4617  0019FC  0E00               	movlw	0
  4618  0019FE  6E61               	movwf	97,c	;volatile
  4619  001A00                     
  4620                           ; BSR set to: 15
  4621                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  4622  001A00  8EF1               	bsf	241,7,c	;volatile
  4623  001A02                     
  4624                           ; BSR set to: 15
  4625  001A02  0012               	return		;funcret
  4626  001A04                     __end_of_PIN_MANAGER_Initialize:
  4627                           	opt callstack 0
  4628                           
  4629 ;; *************** function _OSCILLATOR_Initialize *****************
  4630 ;; Defined at:
  4631 ;;		line 64 in file "mcc_generated_files/mcc.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    4
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_SYSTEM_Initialize
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text10
  4660  001AB6                     __ptext10:
  4661                           	opt callstack 0
  4662  001AB6                     _OSCILLATOR_Initialize:
  4663                           	opt callstack 24
  4664  001AB6                     
  4665                           ;mcc.c: 67: OSCCON = 0x70;
  4666  001AB6  0E70               	movlw	112
  4667  001AB8  6ED3               	movwf	211,c	;volatile
  4668                           
  4669                           ;mcc.c: 69: OSCCON2 = 0x04;
  4670  001ABA  0E04               	movlw	4
  4671  001ABC  6ED2               	movwf	210,c	;volatile
  4672                           
  4673                           ;mcc.c: 71: OSCTUNE = 0x40;
  4674  001ABE  0E40               	movlw	64
  4675  001AC0  6E9B               	movwf	155,c	;volatile
  4676  001AC2                     l289:
  4677  001AC2  AED2               	btfss	4050,7,c	;volatile
  4678  001AC4  EF66  F00D         	goto	u1501
  4679  001AC8  EF68  F00D         	goto	u1500
  4680  001ACC                     u1501:
  4681  001ACC  EF61  F00D         	goto	l289
  4682  001AD0                     u1500:
  4683  001AD0  0012               	return		;funcret
  4684  001AD2                     __end_of_OSCILLATOR_Initialize:
  4685                           	opt callstack 0
  4686                           
  4687 ;; *************** function _INTERRUPT_Initialize *****************
  4688 ;; Defined at:
  4689 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;		None
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;		None
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		None
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;Total ram usage:        0 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    4
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_SYSTEM_Initialize
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text11
  4718  001B98                     __ptext11:
  4719                           	opt callstack 0
  4720  001B98                     _INTERRUPT_Initialize:
  4721                           	opt callstack 24
  4722  001B98                     
  4723                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  4724  001B98  9ED0               	bcf	208,7,c	;volatile
  4725  001B9A  0012               	return		;funcret
  4726  001B9C                     __end_of_INTERRUPT_Initialize:
  4727                           	opt callstack 0
  4728                           
  4729 ;; *************** function _EUSART1_Initialize *****************
  4730 ;; Defined at:
  4731 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;Total ram usage:        0 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    5
  4752 ;; This function calls:
  4753 ;;		_EUSART1_SetErrorHandler
  4754 ;;		_EUSART1_SetFramingErrorHandler
  4755 ;;		_EUSART1_SetOverrunErrorHandler
  4756 ;; This function is called by:
  4757 ;;		_SYSTEM_Initialize
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text12
  4762  001896                     __ptext12:
  4763                           	opt callstack 0
  4764  001896                     _EUSART1_Initialize:
  4765                           	opt callstack 23
  4766  001896                     
  4767                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  4768  001896  0E08               	movlw	8
  4769  001898  6EB8               	movwf	184,c	;volatile
  4770                           
  4771                           ;eusart1.c: 74: RCSTA1 = 0x90;
  4772  00189A  0E90               	movlw	144
  4773  00189C  6EAB               	movwf	171,c	;volatile
  4774                           
  4775                           ;eusart1.c: 77: TXSTA1 = 0x24;
  4776  00189E  0E24               	movlw	36
  4777  0018A0  6EAC               	movwf	172,c	;volatile
  4778                           
  4779                           ;eusart1.c: 80: SPBRG1 = 0x40;
  4780  0018A2  0E40               	movlw	64
  4781  0018A4  6EAF               	movwf	175,c	;volatile
  4782                           
  4783                           ;eusart1.c: 83: SPBRGH1 = 0x03;
  4784  0018A6  0E03               	movlw	3
  4785  0018A8  6EB0               	movwf	176,c	;volatile
  4786  0018AA                     
  4787                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  4788  0018AA  0E00               	movlw	0
  4789  0018AC  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4790  0018AE  0E00               	movlw	0
  4791  0018B0  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4792  0018B2  ECB6  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4793  0018B6                     
  4794                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  4795  0018B6  0E00               	movlw	0
  4796  0018B8  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4797  0018BA  0E00               	movlw	0
  4798  0018BC  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4799  0018BE  ECB1  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4800  0018C2                     
  4801                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  4802  0018C2  0E00               	movlw	0
  4803  0018C4  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4804  0018C6  0E00               	movlw	0
  4805  0018C8  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4806  0018CA  ECBB  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  4807  0018CE                     
  4808                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  4809  0018CE  0E00               	movlw	0
  4810  0018D0  6E4C               	movwf	_eusart1RxLastError^0,c	;volatile
  4811  0018D2  0012               	return		;funcret
  4812  0018D4                     __end_of_EUSART1_Initialize:
  4813                           	opt callstack 0
  4814                           
  4815 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4816 ;; Defined at:
  4817 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  4820 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;Total ram usage:        2 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    4
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_EUSART1_Initialize
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text13
  4847  001B62                     __ptext13:
  4848                           	opt callstack 0
  4849  001B62                     _EUSART1_SetOverrunErrorHandler:
  4850                           	opt callstack 23
  4851  001B62                     
  4852                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  4853  001B62  C010  F03E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4854  001B66  C011  F03F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4855  001B6A  0012               	return		;funcret
  4856  001B6C                     __end_of_EUSART1_SetOverrunErrorHandler:
  4857                           	opt callstack 0
  4858                           
  4859 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4860 ;; Defined at:
  4861 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  4864 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:        2 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    4
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_EUSART1_Initialize
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text14
  4891  001B6C                     __ptext14:
  4892                           	opt callstack 0
  4893  001B6C                     _EUSART1_SetFramingErrorHandler:
  4894                           	opt callstack 23
  4895  001B6C                     
  4896                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  4897  001B6C  C010  F040         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4898  001B70  C011  F041         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4899  001B74  0012               	return		;funcret
  4900  001B76                     __end_of_EUSART1_SetFramingErrorHandler:
  4901                           	opt callstack 0
  4902                           
  4903 ;; *************** function _EUSART1_SetErrorHandler *****************
  4904 ;; Defined at:
  4905 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  4908 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;Total ram usage:        2 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    4
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_EUSART1_Initialize
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text15
  4935  001B76                     __ptext15:
  4936                           	opt callstack 0
  4937  001B76                     _EUSART1_SetErrorHandler:
  4938                           	opt callstack 23
  4939  001B76                     
  4940                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  4941  001B76  C010  F03C         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4942  001B7A  C011  F03D         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4943  001B7E  0012               	return		;funcret
  4944  001B80                     __end_of_EUSART1_SetErrorHandler:
  4945                           	opt callstack 0
  4946                           
  4947 ;; *************** function _EPWM1_Initialize *****************
  4948 ;; Defined at:
  4949 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    4
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_SYSTEM_Initialize
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text16
  4978  001A78                     __ptext16:
  4979                           	opt callstack 0
  4980  001A78                     _EPWM1_Initialize:
  4981                           	opt callstack 24
  4982  001A78                     
  4983                           ;epwm1.c: 69: CCP1CON = 0x3C;
  4984  001A78  0E3C               	movlw	60
  4985  001A7A  6EBD               	movwf	189,c	;volatile
  4986                           
  4987                           ;epwm1.c: 72: ECCP1AS = 0x00;
  4988  001A7C  0E00               	movlw	0
  4989  001A7E  6EB6               	movwf	182,c	;volatile
  4990                           
  4991                           ;epwm1.c: 75: PWM1CON = 0x80;
  4992  001A80  0E80               	movlw	128
  4993  001A82  6EB7               	movwf	183,c	;volatile
  4994                           
  4995                           ;epwm1.c: 78: PSTR1CON = 0x01;
  4996  001A84  0E01               	movlw	1
  4997  001A86  6EB9               	movwf	185,c	;volatile
  4998                           
  4999                           ;epwm1.c: 81: CCPR1H = 0x00;
  5000  001A88  0E00               	movlw	0
  5001  001A8A  6EBF               	movwf	191,c	;volatile
  5002                           
  5003                           ;epwm1.c: 84: CCPR1L = 0x1F;
  5004  001A8C  0E1F               	movlw	31
  5005  001A8E  6EBE               	movwf	190,c	;volatile
  5006                           
  5007                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x0;
  5008  001A90  0EFC               	movlw	-4
  5009  001A92  010F               	movlb	15	; () banked
  5010  001A94  1749               	andwf	73,f,b	;volatile
  5011  001A96                     
  5012                           ; BSR set to: 15
  5013  001A96  0012               	return		;funcret
  5014  001A98                     __end_of_EPWM1_Initialize:
  5015                           	opt callstack 0
  5016                           
  5017 ;; *************** function _ADC_Initialize *****************
  5018 ;; Defined at:
  5019 ;;		line 62 in file "mcc_generated_files/adc.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;		None
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;		None
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;Total ram usage:        0 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    4
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_SYSTEM_Initialize
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text17
  5048  001AEC                     __ptext17:
  5049                           	opt callstack 0
  5050  001AEC                     _ADC_Initialize:
  5051                           	opt callstack 24
  5052  001AEC                     
  5053                           ;adc.c: 67: ADCON0 = 0x11;
  5054  001AEC  0E11               	movlw	17
  5055  001AEE  6EC2               	movwf	194,c	;volatile
  5056                           
  5057                           ;adc.c: 70: ADCON1 = 0x00;
  5058  001AF0  0E00               	movlw	0
  5059  001AF2  6EC1               	movwf	193,c	;volatile
  5060                           
  5061                           ;adc.c: 73: ADCON2 = 0x26;
  5062  001AF4  0E26               	movlw	38
  5063  001AF6  6EC0               	movwf	192,c	;volatile
  5064                           
  5065                           ;adc.c: 76: ADRESL = 0x00;
  5066  001AF8  0E00               	movlw	0
  5067  001AFA  6EC3               	movwf	195,c	;volatile
  5068                           
  5069                           ;adc.c: 79: ADRESH = 0x00;
  5070  001AFC  0E00               	movlw	0
  5071  001AFE  6EC4               	movwf	196,c	;volatile
  5072  001B00  0012               	return		;funcret
  5073  001B02                     __end_of_ADC_Initialize:
  5074                           	opt callstack 0
  5075                           
  5076 ;; *************** function _hexDumpBuffer *****************
  5077 ;; Defined at:
  5078 ;;		line 203 in file "sdCard.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  sdCardBuffer    2   51[COMRAM] PTR unsigned char 
  5081 ;;		 -> sdCardBuffer(512), 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  j               2    0[BANK0 ] int 
  5084 ;;  j               2    2[BANK0 ] int 
  5085 ;;  i               2    4[BANK0 ] unsigned int 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;Total ram usage:       10 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    7
  5102 ;; This function calls:
  5103 ;;		_printf
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text18
  5110  000E84                     __ptext18:
  5111                           	opt callstack 0
  5112  000E84                     _hexDumpBuffer:
  5113                           	opt callstack 23
  5114  000E84                     
  5115                           ;sdCard.c: 205: uint16_t i;;sdCard.c: 207: printf("\r\n\n");
  5116  000E84  0EF3               	movlw	low STR_4
  5117  000E86  6E1C               	movwf	printf@f^0,c
  5118  000E88  0EFF               	movlw	high STR_4
  5119  000E8A  6E1D               	movwf	(printf@f+1)^0,c
  5120  000E8C  ECAA  F004         	call	_printf	;wreg free
  5121  000E90                     
  5122                           ;sdCard.c: 209: for(i = 0; i < 512; i++) {
  5123  000E90  0E00               	movlw	0
  5124  000E92  0100               	movlb	0	; () banked
  5125  000E94  6F65               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  5126  000E96  0E00               	movlw	0
  5127  000E98  6F64               	movwf	hexDumpBuffer@i& (0+255),b
  5128  000E9A                     l3850:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;sdCard.c: 210: if(i != 0 && i % 8 == 0) printf(" ");
  5132  000E9A  5164               	movf	hexDumpBuffer@i& (0+255),w,b
  5133  000E9C  1165               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  5134  000E9E  B4D8               	btfsc	status,2,c
  5135  000EA0  EF54  F007         	goto	u2631
  5136  000EA4  EF56  F007         	goto	u2630
  5137  000EA8                     u2631:
  5138  000EA8  EF6B  F007         	goto	l3856
  5139  000EAC                     u2630:
  5140  000EAC                     
  5141                           ; BSR set to: 0
  5142  000EAC  0E07               	movlw	7
  5143  000EAE  1564               	andwf	hexDumpBuffer@i& (0+255),w,b
  5144  000EB0  6E36               	movwf	??_hexDumpBuffer^0,c
  5145  000EB2  0E00               	movlw	0
  5146  000EB4  1565               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  5147  000EB6  6E37               	movwf	(??_hexDumpBuffer+1)^0,c
  5148  000EB8  5036               	movf	??_hexDumpBuffer^0,w,c
  5149  000EBA  1037               	iorwf	(??_hexDumpBuffer+1)^0,w,c
  5150  000EBC  A4D8               	btfss	status,2,c
  5151  000EBE  EF63  F007         	goto	u2641
  5152  000EC2  EF65  F007         	goto	u2640
  5153  000EC6                     u2641:
  5154  000EC6  EF6B  F007         	goto	l3856
  5155  000ECA                     u2640:
  5156  000ECA                     
  5157                           ; BSR set to: 0
  5158  000ECA  0E8E               	movlw	low (STR_32+15)
  5159  000ECC  6E1C               	movwf	printf@f^0,c
  5160  000ECE  0EFF               	movlw	high (STR_32+15)
  5161  000ED0  6E1D               	movwf	(printf@f+1)^0,c
  5162  000ED2  ECAA  F004         	call	_printf	;wreg free
  5163  000ED6                     l3856:
  5164                           
  5165                           ;sdCard.c: 211: if(i != 0 && i % 16 == 0) {
  5166  000ED6  0100               	movlb	0	; () banked
  5167  000ED8  5164               	movf	hexDumpBuffer@i& (0+255),w,b
  5168  000EDA  1165               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  5169  000EDC  B4D8               	btfsc	status,2,c
  5170  000EDE  EF73  F007         	goto	u2651
  5171  000EE2  EF75  F007         	goto	u2650
  5172  000EE6                     u2651:
  5173  000EE6  EFCE  F007         	goto	l424
  5174  000EEA                     u2650:
  5175  000EEA                     
  5176                           ; BSR set to: 0
  5177  000EEA  0E0F               	movlw	15
  5178  000EEC  1564               	andwf	hexDumpBuffer@i& (0+255),w,b
  5179  000EEE  6E36               	movwf	??_hexDumpBuffer^0,c
  5180  000EF0  0E00               	movlw	0
  5181  000EF2  1565               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  5182  000EF4  6E37               	movwf	(??_hexDumpBuffer+1)^0,c
  5183  000EF6  5036               	movf	??_hexDumpBuffer^0,w,c
  5184  000EF8  1037               	iorwf	(??_hexDumpBuffer+1)^0,w,c
  5185  000EFA  A4D8               	btfss	status,2,c
  5186  000EFC  EF82  F007         	goto	u2661
  5187  000F00  EF84  F007         	goto	u2660
  5188  000F04                     u2661:
  5189  000F04  EFCE  F007         	goto	l424
  5190  000F08                     u2660:
  5191  000F08                     
  5192                           ; BSR set to: 0
  5193                           ;sdCard.c: 212: printf("  ");
  5194  000F08  0E8D               	movlw	low (STR_32+14)
  5195  000F0A  6E1C               	movwf	printf@f^0,c
  5196  000F0C  0EFF               	movlw	high (STR_32+14)
  5197  000F0E  6E1D               	movwf	(printf@f+1)^0,c
  5198  000F10  ECAA  F004         	call	_printf	;wreg free
  5199  000F14                     
  5200                           ;sdCard.c: 213: for(int j = i - 16; j < i; j++) {
  5201  000F14  0EF0               	movlw	240
  5202  000F16  0100               	movlb	0	; () banked
  5203  000F18  2564               	addwf	hexDumpBuffer@i& (0+255),w,b
  5204  000F1A  6F60               	movwf	hexDumpBuffer@j& (0+255),b
  5205  000F1C  0EFF               	movlw	255
  5206  000F1E  2165               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  5207  000F20  6F61               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  5208  000F22  EFBD  F007         	goto	l3872
  5209  000F26                     l3864:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;sdCard.c: 214: if(sdCardBuffer[j] < 32) {
  5213  000F26  5160               	movf	hexDumpBuffer@j& (0+255),w,b
  5214  000F28  2434               	addwf	hexDumpBuffer@sdCardBuffer^0,w,c
  5215  000F2A  6ED9               	movwf	fsr2l,c
  5216  000F2C  5161               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  5217  000F2E  2035               	addwfc	(hexDumpBuffer@sdCardBuffer+1)^0,w,c
  5218  000F30  6EDA               	movwf	fsr2h,c
  5219  000F32  0E20               	movlw	32
  5220  000F34  60DF               	cpfslt	indf2,c
  5221  000F36  EF9F  F007         	goto	u2671
  5222  000F3A  EFA1  F007         	goto	u2670
  5223  000F3E                     u2671:
  5224  000F3E  EFA9  F007         	goto	l3868
  5225  000F42                     u2670:
  5226  000F42                     
  5227                           ; BSR set to: 0
  5228                           ;sdCard.c: 215: printf(".");
  5229  000F42  0EFC               	movlw	low STR_7
  5230  000F44  6E1C               	movwf	printf@f^0,c
  5231  000F46  0EFF               	movlw	high STR_7
  5232  000F48  6E1D               	movwf	(printf@f+1)^0,c
  5233  000F4A  ECAA  F004         	call	_printf	;wreg free
  5234                           
  5235                           ;sdCard.c: 216: } else {
  5236  000F4E  EFBA  F007         	goto	l3870
  5237  000F52                     l3868:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;sdCard.c: 217: printf("%c", sdCardBuffer[j]);
  5241  000F52  0EF7               	movlw	low STR_8
  5242  000F54  6E1C               	movwf	printf@f^0,c
  5243  000F56  0EFF               	movlw	high STR_8
  5244  000F58  6E1D               	movwf	(printf@f+1)^0,c
  5245  000F5A  5160               	movf	hexDumpBuffer@j& (0+255),w,b
  5246  000F5C  2434               	addwf	hexDumpBuffer@sdCardBuffer^0,w,c
  5247  000F5E  6ED9               	movwf	fsr2l,c
  5248  000F60  5161               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  5249  000F62  2035               	addwfc	(hexDumpBuffer@sdCardBuffer+1)^0,w,c
  5250  000F64  6EDA               	movwf	fsr2h,c
  5251  000F66  50DF               	movf	indf2,w,c
  5252  000F68  6E36               	movwf	??_hexDumpBuffer^0,c
  5253  000F6A  5036               	movf	??_hexDumpBuffer^0,w,c
  5254  000F6C  6E1E               	movwf	(?_printf+2)^0,c
  5255  000F6E  6A1F               	clrf	(?_printf+3)^0,c
  5256  000F70  ECAA  F004         	call	_printf	;wreg free
  5257  000F74                     l3870:
  5258  000F74  0100               	movlb	0	; () banked
  5259  000F76  4B60               	infsnz	hexDumpBuffer@j& (0+255),f,b
  5260  000F78  2B61               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  5261  000F7A                     l3872:
  5262                           
  5263                           ; BSR set to: 0
  5264  000F7A  5164               	movf	hexDumpBuffer@i& (0+255),w,b
  5265  000F7C  5D60               	subwf	hexDumpBuffer@j& (0+255),w,b
  5266  000F7E  5165               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  5267  000F80  5961               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  5268  000F82  A0D8               	btfss	status,0,c
  5269  000F84  EFC6  F007         	goto	u2681
  5270  000F88  EFC8  F007         	goto	u2680
  5271  000F8C                     u2681:
  5272  000F8C  EF93  F007         	goto	l3864
  5273  000F90                     u2680:
  5274  000F90                     
  5275                           ; BSR set to: 0
  5276                           ;sdCard.c: 218: };sdCard.c: 219: };sdCard.c: 220: printf("\r\n");
  5277  000F90  0EF4               	movlw	low (STR_49+67)
  5278  000F92  6E1C               	movwf	printf@f^0,c
  5279  000F94  0EF9               	movlw	high (STR_49+67)
  5280  000F96  6E1D               	movwf	(printf@f+1)^0,c
  5281  000F98  ECAA  F004         	call	_printf	;wreg free
  5282  000F9C                     l424:
  5283                           
  5284                           ;sdCard.c: 221: };sdCard.c: 223: printf("%02x ", sdCardBuffer[i]);
  5285  000F9C  0EE8               	movlw	low STR_10
  5286  000F9E  6E1C               	movwf	printf@f^0,c
  5287  000FA0  0EFF               	movlw	high STR_10
  5288  000FA2  6E1D               	movwf	(printf@f+1)^0,c
  5289  000FA4  0100               	movlb	0	; () banked
  5290  000FA6  5164               	movf	hexDumpBuffer@i& (0+255),w,b
  5291  000FA8  2434               	addwf	hexDumpBuffer@sdCardBuffer^0,w,c
  5292  000FAA  6ED9               	movwf	fsr2l,c
  5293  000FAC  5165               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  5294  000FAE  2035               	addwfc	(hexDumpBuffer@sdCardBuffer+1)^0,w,c
  5295  000FB0  6EDA               	movwf	fsr2h,c
  5296  000FB2  50DF               	movf	indf2,w,c
  5297  000FB4  6E36               	movwf	??_hexDumpBuffer^0,c
  5298  000FB6  5036               	movf	??_hexDumpBuffer^0,w,c
  5299  000FB8  6E1E               	movwf	(?_printf+2)^0,c
  5300  000FBA  6A1F               	clrf	(?_printf+3)^0,c
  5301  000FBC  ECAA  F004         	call	_printf	;wreg free
  5302  000FC0  0100               	movlb	0	; () banked
  5303  000FC2  4B64               	infsnz	hexDumpBuffer@i& (0+255),f,b
  5304  000FC4  2B65               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  5305  000FC6                     
  5306                           ; BSR set to: 0
  5307  000FC6  0E02               	movlw	2
  5308  000FC8  5D65               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  5309  000FCA  A0D8               	btfss	status,0,c
  5310  000FCC  EFEA  F007         	goto	u2691
  5311  000FD0  EFEC  F007         	goto	u2690
  5312  000FD4                     u2691:
  5313  000FD4  EF4D  F007         	goto	l3850
  5314  000FD8                     u2690:
  5315  000FD8                     
  5316                           ; BSR set to: 0
  5317                           ;sdCard.c: 224: };sdCard.c: 226: printf("   ");
  5318  000FD8  0E8C               	movlw	low (STR_32+13)
  5319  000FDA  6E1C               	movwf	printf@f^0,c
  5320  000FDC  0EFF               	movlw	high (STR_32+13)
  5321  000FDE  6E1D               	movwf	(printf@f+1)^0,c
  5322  000FE0  ECAA  F004         	call	_printf	;wreg free
  5323  000FE4                     
  5324                           ;sdCard.c: 227: for(int j = i - 16; j < i; j++) {
  5325  000FE4  0EF0               	movlw	240
  5326  000FE6  0100               	movlb	0	; () banked
  5327  000FE8  2564               	addwf	hexDumpBuffer@i& (0+255),w,b
  5328  000FEA  6F62               	movwf	hexDumpBuffer@j_1051& (0+255),b
  5329  000FEC  0EFF               	movlw	255
  5330  000FEE  2165               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  5331  000FF0  6F63               	movwf	(hexDumpBuffer@j_1051+1)& (0+255),b
  5332  000FF2  EF25  F008         	goto	l3892
  5333  000FF6                     l3884:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;sdCard.c: 228: if(sdCardBuffer[j] < 32) {
  5337  000FF6  5162               	movf	hexDumpBuffer@j_1051& (0+255),w,b
  5338  000FF8  2434               	addwf	hexDumpBuffer@sdCardBuffer^0,w,c
  5339  000FFA  6ED9               	movwf	fsr2l,c
  5340  000FFC  5163               	movf	(hexDumpBuffer@j_1051+1)& (0+255),w,b
  5341  000FFE  2035               	addwfc	(hexDumpBuffer@sdCardBuffer+1)^0,w,c
  5342  001000  6EDA               	movwf	fsr2h,c
  5343  001002  0E20               	movlw	32
  5344  001004  60DF               	cpfslt	indf2,c
  5345  001006  EF07  F008         	goto	u2701
  5346  00100A  EF09  F008         	goto	u2700
  5347  00100E                     u2701:
  5348  00100E  EF11  F008         	goto	l3888
  5349  001012                     u2700:
  5350  001012                     
  5351                           ; BSR set to: 0
  5352                           ;sdCard.c: 229: printf(".");
  5353  001012  0EFC               	movlw	low STR_7
  5354  001014  6E1C               	movwf	printf@f^0,c
  5355  001016  0EFF               	movlw	high STR_7
  5356  001018  6E1D               	movwf	(printf@f+1)^0,c
  5357  00101A  ECAA  F004         	call	_printf	;wreg free
  5358                           
  5359                           ;sdCard.c: 230: } else {
  5360  00101E  EF22  F008         	goto	l3890
  5361  001022                     l3888:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;sdCard.c: 231: printf("%c", sdCardBuffer[j]);
  5365  001022  0EF7               	movlw	low STR_8
  5366  001024  6E1C               	movwf	printf@f^0,c
  5367  001026  0EFF               	movlw	high STR_8
  5368  001028  6E1D               	movwf	(printf@f+1)^0,c
  5369  00102A  5162               	movf	hexDumpBuffer@j_1051& (0+255),w,b
  5370  00102C  2434               	addwf	hexDumpBuffer@sdCardBuffer^0,w,c
  5371  00102E  6ED9               	movwf	fsr2l,c
  5372  001030  5163               	movf	(hexDumpBuffer@j_1051+1)& (0+255),w,b
  5373  001032  2035               	addwfc	(hexDumpBuffer@sdCardBuffer+1)^0,w,c
  5374  001034  6EDA               	movwf	fsr2h,c
  5375  001036  50DF               	movf	indf2,w,c
  5376  001038  6E36               	movwf	??_hexDumpBuffer^0,c
  5377  00103A  5036               	movf	??_hexDumpBuffer^0,w,c
  5378  00103C  6E1E               	movwf	(?_printf+2)^0,c
  5379  00103E  6A1F               	clrf	(?_printf+3)^0,c
  5380  001040  ECAA  F004         	call	_printf	;wreg free
  5381  001044                     l3890:
  5382  001044  0100               	movlb	0	; () banked
  5383  001046  4B62               	infsnz	hexDumpBuffer@j_1051& (0+255),f,b
  5384  001048  2B63               	incf	(hexDumpBuffer@j_1051+1)& (0+255),f,b
  5385  00104A                     l3892:
  5386                           
  5387                           ; BSR set to: 0
  5388  00104A  5164               	movf	hexDumpBuffer@i& (0+255),w,b
  5389  00104C  5D62               	subwf	hexDumpBuffer@j_1051& (0+255),w,b
  5390  00104E  5165               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  5391  001050  5963               	subwfb	(hexDumpBuffer@j_1051+1)& (0+255),w,b
  5392  001052  A0D8               	btfss	status,0,c
  5393  001054  EF2E  F008         	goto	u2711
  5394  001058  EF30  F008         	goto	u2710
  5395  00105C                     u2711:
  5396  00105C  EFFB  F007         	goto	l3884
  5397  001060                     u2710:
  5398  001060                     
  5399                           ; BSR set to: 0
  5400                           ;sdCard.c: 232: };sdCard.c: 233: };sdCard.c: 234: printf("\r\n");
  5401  001060  0EF4               	movlw	low (STR_49+67)
  5402  001062  6E1C               	movwf	printf@f^0,c
  5403  001064  0EF9               	movlw	high (STR_49+67)
  5404  001066  6E1D               	movwf	(printf@f+1)^0,c
  5405  001068  ECAA  F004         	call	_printf	;wreg free
  5406  00106C  0012               	return		;funcret
  5407  00106E                     __end_of_hexDumpBuffer:
  5408                           	opt callstack 0
  5409                           
  5410 ;; *************** function _doSDInit *****************
  5411 ;; Defined at:
  5412 ;;		line 472 in file "main.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;		None
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;Total ram usage:        0 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    9
  5433 ;; This function calls:
  5434 ;;		_EUSART1_Read
  5435 ;;		_EUSART1_is_rx_ready
  5436 ;;		_SDCARD_Initialize
  5437 ;;		_SPI2_Close
  5438 ;;		_SPI2_Open
  5439 ;;		_printf
  5440 ;; This function is called by:
  5441 ;;		_main
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text19
  5446  001854                     __ptext19:
  5447                           	opt callstack 0
  5448  001854                     _doSDInit:
  5449                           	opt callstack 21
  5450  001854                     
  5451                           ;main.c: 473: printf("Make sure SD card is properly inserted.\r\n");
  5452  001854  0E40               	movlw	low STR_92
  5453  001856  6E1C               	movwf	printf@f^0,c
  5454  001858  0EFC               	movlw	high STR_92
  5455  00185A  6E1D               	movwf	(printf@f+1)^0,c
  5456  00185C  ECAA  F004         	call	_printf	;wreg free
  5457                           
  5458                           ;main.c: 474: printf("Press any key to continue.\r\n");
  5459  001860  0E5C               	movlw	low STR_93
  5460  001862  6E1C               	movwf	printf@f^0,c
  5461  001864  0EFD               	movlw	high STR_93
  5462  001866  6E1D               	movwf	(printf@f+1)^0,c
  5463  001868  ECAA  F004         	call	_printf	;wreg free
  5464  00186C                     
  5465                           ;main.c: 475: SPI2_Close();
  5466  00186C  ECCE  F00D         	call	_SPI2_Close	;wreg free
  5467  001870                     
  5468                           ;main.c: 476: SPI2_Open(SPI2_DEFAULT);
  5469  001870  0E00               	movlw	0
  5470  001872  ECBA  F009         	call	_SPI2_Open
  5471  001876                     l3926:
  5472  001876  EC8C  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  5473  00187A  0900               	iorlw	0
  5474  00187C  B4D8               	btfsc	status,2,c
  5475  00187E  EF43  F00C         	goto	u2731
  5476  001882  EF45  F00C         	goto	u2730
  5477  001886                     u2731:
  5478  001886  EF3B  F00C         	goto	l3926
  5479  00188A                     u2730:
  5480  00188A                     
  5481                           ;main.c: 478: (void) EUSART1_Read();
  5482  00188A  EC02  F00D         	call	_EUSART1_Read	;wreg free
  5483  00188E                     
  5484                           ;main.c: 479: SDCARD_Initialize(1);
  5485  00188E  0E01               	movlw	1
  5486  001890  EC10  F00A         	call	_SDCARD_Initialize
  5487  001894  0012               	return		;funcret
  5488  001896                     __end_of_doSDInit:
  5489                           	opt callstack 0
  5490                           
  5491 ;; *************** function _SPI2_Open *****************
  5492 ;; Defined at:
  5493 ;;		line 72 in file "mcc_generated_files/spi2.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  spi2UniqueCo    1    wreg     enum E92
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  spi2UniqueCo    1   16[COMRAM] enum E92
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      unsigned char 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;Total ram usage:        2 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    4
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_doSDInit
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text20
  5522  001374                     __ptext20:
  5523                           	opt callstack 0
  5524  001374                     _SPI2_Open:
  5525                           	opt callstack 25
  5526                           
  5527                           ;incstack = 0
  5528                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  5529  001374  6E11               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  5530  001376                     
  5531                           ;spi2.c: 74: if(!SSP2CON1bits.SSPEN)
  5532  001376  BA6C               	btfsc	108,5,c	;volatile
  5533  001378  EFC0  F009         	goto	u1541
  5534  00137C  EFC2  F009         	goto	u1540
  5535  001380                     u1541:
  5536  001380  EF0F  F00A         	goto	l71
  5537  001384                     u1540:
  5538  001384                     
  5539                           ;spi2.c: 75: {;spi2.c: 76: SSP2STAT = spi2_configuration[spi2UniqueConfiguration].stat;
  5540  001384  5011               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5541  001386  0D04               	mullw	4
  5542  001388  0E01               	movlw	1
  5543  00138A  26F3               	addwf	243,f,c
  5544  00138C  0E00               	movlw	0
  5545  00138E  22F4               	addwfc	244,f,c
  5546  001390  0E17               	movlw	low _spi2_configuration
  5547  001392  24F3               	addwf	243,w,c
  5548  001394  6EF6               	movwf	tblptrl,c
  5549  001396  0EF9               	movlw	high _spi2_configuration
  5550  001398  20F4               	addwfc	244,w,c
  5551  00139A  6EF7               	movwf	tblptrh,c
  5552  00139C                     	if	1	;There are 3 active tblptr bytes
  5553  00139C  6AF8               	clrf	tblptru,c
  5554  00139E  0E00               	movlw	low (__mediumconst shr (0+16))
  5555  0013A0  22F8               	addwfc	tblptru,f,c
  5556  0013A2                     	endif
  5557  0013A2  0008               	tblrd		*
  5558  0013A4  CFF5 FF6D          	movff	tablat,3949	;volatile
  5559                           
  5560                           ;spi2.c: 77: SSP2CON1 = spi2_configuration[spi2UniqueConfiguration].con1;
  5561  0013A8  5011               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5562  0013AA  0D04               	mullw	4
  5563  0013AC  0E17               	movlw	low _spi2_configuration
  5564  0013AE  24F3               	addwf	243,w,c
  5565  0013B0  6EF6               	movwf	tblptrl,c
  5566  0013B2  0EF9               	movlw	high _spi2_configuration
  5567  0013B4  20F4               	addwfc	244,w,c
  5568  0013B6  6EF7               	movwf	tblptrh,c
  5569  0013B8                     	if	1	;There are 3 active tblptr bytes
  5570  0013B8  6AF8               	clrf	tblptru,c
  5571  0013BA  0E00               	movlw	low (__mediumconst shr (0+16))
  5572  0013BC  22F8               	addwfc	tblptru,f,c
  5573  0013BE                     	endif
  5574  0013BE  0008               	tblrd		*
  5575  0013C0  CFF5 FF6C          	movff	tablat,3948	;volatile
  5576  0013C4                     
  5577                           ;spi2.c: 78: SSP2CON2 = 0x00;
  5578  0013C4  0E00               	movlw	0
  5579  0013C6  6E6B               	movwf	107,c	;volatile
  5580  0013C8                     
  5581                           ;spi2.c: 79: SSP2ADD = spi2_configuration[spi2UniqueConfiguration].add;
  5582  0013C8  5011               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5583  0013CA  0D04               	mullw	4
  5584  0013CC  0E02               	movlw	2
  5585  0013CE  26F3               	addwf	243,f,c
  5586  0013D0  0E00               	movlw	0
  5587  0013D2  22F4               	addwfc	244,f,c
  5588  0013D4  0E17               	movlw	low _spi2_configuration
  5589  0013D6  24F3               	addwf	243,w,c
  5590  0013D8  6EF6               	movwf	tblptrl,c
  5591  0013DA  0EF9               	movlw	high _spi2_configuration
  5592  0013DC  20F4               	addwfc	244,w,c
  5593  0013DE  6EF7               	movwf	tblptrh,c
  5594  0013E0                     	if	1	;There are 3 active tblptr bytes
  5595  0013E0  6AF8               	clrf	tblptru,c
  5596  0013E2  0E00               	movlw	low (__mediumconst shr (0+16))
  5597  0013E4  22F8               	addwfc	tblptru,f,c
  5598  0013E6                     	endif
  5599  0013E6  0008               	tblrd		*
  5600  0013E8  CFF5 FF6E          	movff	tablat,3950	;volatile
  5601  0013EC                     
  5602                           ;spi2.c: 80: TRISBbits.TRISB1 = spi2_configuration[spi2UniqueConfiguration].operation;
  5603  0013EC  5011               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5604  0013EE  0D04               	mullw	4
  5605  0013F0  0E03               	movlw	3
  5606  0013F2  26F3               	addwf	243,f,c
  5607  0013F4  0E00               	movlw	0
  5608  0013F6  22F4               	addwfc	244,f,c
  5609  0013F8  0E17               	movlw	low _spi2_configuration
  5610  0013FA  24F3               	addwf	243,w,c
  5611  0013FC  6EF6               	movwf	tblptrl,c
  5612  0013FE  0EF9               	movlw	high _spi2_configuration
  5613  001400  20F4               	addwfc	244,w,c
  5614  001402  6EF7               	movwf	tblptrh,c
  5615  001404                     	if	1	;There are 3 active tblptr bytes
  5616  001404  6AF8               	clrf	tblptru,c
  5617  001406  0E00               	movlw	low (__mediumconst shr (0+16))
  5618  001408  22F8               	addwfc	tblptru,f,c
  5619  00140A                     	endif
  5620  00140A  0008               	tblrd		*
  5621  00140C  CFF5 F010          	movff	tablat,??_SPI2_Open
  5622  001410  4610               	rlncf	??_SPI2_Open^0,f,c
  5623  001412  5093               	movf	147,w,c	;volatile
  5624  001414  1810               	xorwf	??_SPI2_Open^0,w,c
  5625  001416  0BFD               	andlw	-3
  5626  001418  1810               	xorwf	??_SPI2_Open^0,w,c
  5627  00141A  6E93               	movwf	147,c	;volatile
  5628  00141C                     
  5629                           ;spi2.c: 81: SSP2CON1bits.SSPEN = 1;
  5630  00141C  8A6C               	bsf	108,5,c	;volatile
  5631  00141E                     l71:
  5632  00141E  0012               	return		;funcret
  5633  001420                     __end_of_SPI2_Open:
  5634                           	opt callstack 0
  5635                           
  5636 ;; *************** function _SPI2_Close *****************
  5637 ;; Defined at:
  5638 ;;		line 87 in file "mcc_generated_files/spi2.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		None
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    4
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_doSDInit
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text21
  5667  001B9C                     __ptext21:
  5668                           	opt callstack 0
  5669  001B9C                     _SPI2_Close:
  5670                           	opt callstack 25
  5671  001B9C                     
  5672                           ;spi2.c: 89: SSP2CON1bits.SSPEN = 0;
  5673  001B9C  9A6C               	bcf	108,5,c	;volatile
  5674  001B9E  0012               	return		;funcret
  5675  001BA0                     __end_of_SPI2_Close:
  5676                           	opt callstack 0
  5677                           
  5678 ;; *************** function _SDCARD_Initialize *****************
  5679 ;; Defined at:
  5680 ;;		line 112 in file "sdCard.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  verbose         1    wreg     unsigned char 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  verbose         1   55[COMRAM] unsigned char 
  5685 ;;  response        1   56[COMRAM] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      void 
  5688 ;; Registers used:
  5689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;Total ram usage:        2 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    8
  5702 ;; This function calls:
  5703 ;;		_SDCARD_SetBlockLength
  5704 ;;		_SDCARD_SetIdle
  5705 ;;		_SPI2_ExchangeByte
  5706 ;;		_printf
  5707 ;; This function is called by:
  5708 ;;		_doSDInit
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text22
  5713  001420                     __ptext22:
  5714                           	opt callstack 0
  5715  001420                     _SDCARD_Initialize:
  5716                           	opt callstack 21
  5717                           
  5718                           ;incstack = 0
  5719                           ;SDCARD_Initialize@verbose stored from wreg
  5720  001420  6E38               	movwf	SDCARD_Initialize@verbose^0,c
  5721  001422                     
  5722                           ;sdCard.c: 114: uint8_t response;;sdCard.c: 116: SDCARD_SetIdle(verbose);
  5723  001422  5038               	movf	SDCARD_Initialize@verbose^0,w,c
  5724  001424  ECAD  F00A         	call	_SDCARD_SetIdle
  5725  001428                     l3808:
  5726  001428  988A               	bcf	138,4,c	;volatile
  5727  00142A                     
  5728                           ;sdCard.c: 120: SPI2_ExchangeByte(0xFF);
  5729  00142A  0EFF               	movlw	255
  5730  00142C  EC69  F00D         	call	_SPI2_ExchangeByte
  5731  001430                     
  5732                           ;sdCard.c: 121: SPI2_ExchangeByte(0x41);
  5733  001430  0E41               	movlw	65
  5734  001432  EC69  F00D         	call	_SPI2_ExchangeByte
  5735  001436                     
  5736                           ;sdCard.c: 122: SPI2_ExchangeByte(0x00);
  5737  001436  0E00               	movlw	0
  5738  001438  EC69  F00D         	call	_SPI2_ExchangeByte
  5739  00143C                     
  5740                           ;sdCard.c: 123: SPI2_ExchangeByte(0x00);
  5741  00143C  0E00               	movlw	0
  5742  00143E  EC69  F00D         	call	_SPI2_ExchangeByte
  5743  001442                     
  5744                           ;sdCard.c: 124: SPI2_ExchangeByte(0x00);
  5745  001442  0E00               	movlw	0
  5746  001444  EC69  F00D         	call	_SPI2_ExchangeByte
  5747  001448                     
  5748                           ;sdCard.c: 125: SPI2_ExchangeByte(0x00);
  5749  001448  0E00               	movlw	0
  5750  00144A  EC69  F00D         	call	_SPI2_ExchangeByte
  5751  00144E                     
  5752                           ;sdCard.c: 126: SPI2_ExchangeByte(0xFF);
  5753  00144E  0EFF               	movlw	255
  5754  001450  EC69  F00D         	call	_SPI2_ExchangeByte
  5755  001454                     
  5756                           ;sdCard.c: 127: SPI2_ExchangeByte(0xFF);
  5757  001454  0EFF               	movlw	255
  5758  001456  EC69  F00D         	call	_SPI2_ExchangeByte
  5759  00145A                     
  5760                           ;sdCard.c: 128: response = SPI2_ExchangeByte(0xFF);
  5761  00145A  0EFF               	movlw	255
  5762  00145C  EC69  F00D         	call	_SPI2_ExchangeByte
  5763  001460  6E39               	movwf	SDCARD_Initialize@response^0,c
  5764  001462  888A               	bsf	138,4,c	;volatile
  5765  001464                     
  5766                           ;sdCard.c: 130: } while(response != 0);
  5767  001464  5039               	movf	SDCARD_Initialize@response^0,w,c
  5768  001466  A4D8               	btfss	status,2,c
  5769  001468  EF38  F00A         	goto	u2601
  5770  00146C  EF3A  F00A         	goto	u2600
  5771  001470                     u2601:
  5772  001470  EF14  F00A         	goto	l3808
  5773  001474                     u2600:
  5774  001474                     
  5775                           ;sdCard.c: 132: if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  5776  001474  0438               	decf	SDCARD_Initialize@verbose^0,w,c
  5777  001476  A4D8               	btfss	status,2,c
  5778  001478  EF40  F00A         	goto	u2611
  5779  00147C  EF42  F00A         	goto	u2610
  5780  001480                     u2611:
  5781  001480  EF4B  F00A         	goto	l3836
  5782  001484                     u2610:
  5783  001484  0ECD               	movlw	low STR_1
  5784  001486  6E1C               	movwf	printf@f^0,c
  5785  001488  0EFD               	movlw	high STR_1
  5786  00148A  6E1D               	movwf	(printf@f+1)^0,c
  5787  00148C  C039  F01E         	movff	SDCARD_Initialize@response,?_printf+2
  5788  001490  6A1F               	clrf	(?_printf+3)^0,c
  5789  001492  ECAA  F004         	call	_printf	;wreg free
  5790  001496                     l3836:
  5791                           
  5792                           ;sdCard.c: 134: response = SDCARD_SetBlockLength();
  5793  001496  EC02  F00C         	call	_SDCARD_SetBlockLength	;wreg free
  5794  00149A  6E39               	movwf	SDCARD_Initialize@response^0,c
  5795  00149C                     
  5796                           ;sdCard.c: 135: if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  5797  00149C  0438               	decf	SDCARD_Initialize@verbose^0,w,c
  5798  00149E  A4D8               	btfss	status,2,c
  5799  0014A0  EF54  F00A         	goto	u2621
  5800  0014A4  EF56  F00A         	goto	u2620
  5801  0014A8                     u2621:
  5802  0014A8  EF5F  F00A         	goto	l399
  5803  0014AC                     u2620:
  5804  0014AC  0E96               	movlw	low STR_2
  5805  0014AE  6E1C               	movwf	printf@f^0,c
  5806  0014B0  0EFD               	movlw	high STR_2
  5807  0014B2  6E1D               	movwf	(printf@f+1)^0,c
  5808  0014B4  C039  F01E         	movff	SDCARD_Initialize@response,?_printf+2
  5809  0014B8  6A1F               	clrf	(?_printf+3)^0,c
  5810  0014BA  ECAA  F004         	call	_printf	;wreg free
  5811  0014BE                     l399:
  5812  0014BE  0012               	return		;funcret
  5813  0014C0                     __end_of_SDCARD_Initialize:
  5814                           	opt callstack 0
  5815                           
  5816 ;; *************** function _SDCARD_SetIdle *****************
  5817 ;; Defined at:
  5818 ;;		line 143 in file "sdCard.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  verbose         1    wreg     unsigned char 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  verbose         1   51[COMRAM] unsigned char 
  5823 ;;  i               2   53[COMRAM] int 
  5824 ;;  response        1   52[COMRAM] unsigned char 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;Total ram usage:        4 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    7
  5841 ;; This function calls:
  5842 ;;		_SPI2_ExchangeByte
  5843 ;;		_printf
  5844 ;; This function is called by:
  5845 ;;		_SDCARD_Initialize
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text23
  5850  00155A                     __ptext23:
  5851                           	opt callstack 0
  5852  00155A                     _SDCARD_SetIdle:
  5853                           	opt callstack 21
  5854                           
  5855                           ;incstack = 0
  5856                           ;SDCARD_SetIdle@verbose stored from wreg
  5857  00155A  6E34               	movwf	SDCARD_SetIdle@verbose^0,c
  5858  00155C                     
  5859                           ;sdCard.c: 144: uint8_t response;;sdCard.c: 147: for(int i = 0; i < 10; i++) {
  5860  00155C  0E00               	movlw	0
  5861  00155E  6E37               	movwf	(SDCARD_SetIdle@i+1)^0,c
  5862  001560  0E00               	movlw	0
  5863  001562  6E36               	movwf	SDCARD_SetIdle@i^0,c
  5864  001564                     l3792:
  5865                           
  5866                           ;sdCard.c: 148: SPI2_ExchangeByte(0xFF);
  5867  001564  0EFF               	movlw	255
  5868  001566  EC69  F00D         	call	_SPI2_ExchangeByte
  5869  00156A  4A36               	infsnz	SDCARD_SetIdle@i^0,f,c
  5870  00156C  2A37               	incf	(SDCARD_SetIdle@i+1)^0,f,c
  5871  00156E  BE37               	btfsc	(SDCARD_SetIdle@i+1)^0,7,c
  5872  001570  EFC3  F00A         	goto	u2581
  5873  001574  5037               	movf	(SDCARD_SetIdle@i+1)^0,w,c
  5874  001576  E109               	bnz	u2580
  5875  001578  0E0A               	movlw	10
  5876  00157A  5C36               	subwf	SDCARD_SetIdle@i^0,w,c
  5877  00157C  A0D8               	btfss	status,0,c
  5878  00157E  EFC3  F00A         	goto	u2581
  5879  001582  EFC5  F00A         	goto	u2580
  5880  001586                     u2581:
  5881  001586  EFB2  F00A         	goto	l3792
  5882  00158A                     u2580:
  5883  00158A  988A               	bcf	138,4,c	;volatile
  5884  00158C                     
  5885                           ;sdCard.c: 153: SPI2_ExchangeByte(0xFF);
  5886  00158C  0EFF               	movlw	255
  5887  00158E  EC69  F00D         	call	_SPI2_ExchangeByte
  5888                           
  5889                           ;sdCard.c: 154: SPI2_ExchangeByte(0x40);
  5890  001592  0E40               	movlw	64
  5891  001594  EC69  F00D         	call	_SPI2_ExchangeByte
  5892                           
  5893                           ;sdCard.c: 155: SPI2_ExchangeByte(0x00);
  5894  001598  0E00               	movlw	0
  5895  00159A  EC69  F00D         	call	_SPI2_ExchangeByte
  5896                           
  5897                           ;sdCard.c: 156: SPI2_ExchangeByte(0x00);
  5898  00159E  0E00               	movlw	0
  5899  0015A0  EC69  F00D         	call	_SPI2_ExchangeByte
  5900                           
  5901                           ;sdCard.c: 157: SPI2_ExchangeByte(0x00);
  5902  0015A4  0E00               	movlw	0
  5903  0015A6  EC69  F00D         	call	_SPI2_ExchangeByte
  5904                           
  5905                           ;sdCard.c: 158: SPI2_ExchangeByte(0x00);
  5906  0015AA  0E00               	movlw	0
  5907  0015AC  EC69  F00D         	call	_SPI2_ExchangeByte
  5908                           
  5909                           ;sdCard.c: 159: SPI2_ExchangeByte(0x95);
  5910  0015B0  0E95               	movlw	149
  5911  0015B2  EC69  F00D         	call	_SPI2_ExchangeByte
  5912                           
  5913                           ;sdCard.c: 160: SPI2_ExchangeByte(0xFF);
  5914  0015B6  0EFF               	movlw	255
  5915  0015B8  EC69  F00D         	call	_SPI2_ExchangeByte
  5916                           
  5917                           ;sdCard.c: 161: response = SPI2_ExchangeByte(0xFF);
  5918  0015BC  0EFF               	movlw	255
  5919  0015BE  EC69  F00D         	call	_SPI2_ExchangeByte
  5920  0015C2  6E35               	movwf	SDCARD_SetIdle@response^0,c
  5921  0015C4  888A               	bsf	138,4,c	;volatile
  5922  0015C6                     
  5923                           ;sdCard.c: 164: if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  5924  0015C6  0434               	decf	SDCARD_SetIdle@verbose^0,w,c
  5925  0015C8  A4D8               	btfss	status,2,c
  5926  0015CA  EFE9  F00A         	goto	u2591
  5927  0015CE  EFEB  F00A         	goto	u2590
  5928  0015D2                     u2591:
  5929  0015D2  EFF4  F00A         	goto	l409
  5930  0015D6                     u2590:
  5931  0015D6  0EB2               	movlw	low STR_3
  5932  0015D8  6E1C               	movwf	printf@f^0,c
  5933  0015DA  0EFD               	movlw	high STR_3
  5934  0015DC  6E1D               	movwf	(printf@f+1)^0,c
  5935  0015DE  C035  F01E         	movff	SDCARD_SetIdle@response,?_printf+2
  5936  0015E2  6A1F               	clrf	(?_printf+3)^0,c
  5937  0015E4  ECAA  F004         	call	_printf	;wreg free
  5938  0015E8                     l409:
  5939  0015E8  0012               	return		;funcret
  5940  0015EA                     __end_of_SDCARD_SetIdle:
  5941                           	opt callstack 0
  5942                           
  5943 ;; *************** function _printf *****************
  5944 ;; Defined at:
  5945 ;;		line 477 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  f               2   27[COMRAM] PTR const unsigned char 
  5948 ;;		 -> STR_93(29), STR_92(42), STR_91(5), STR_90(32), 
  5949 ;;		 -> STR_89(18), STR_88(20), STR_87(52), STR_86(34), 
  5950 ;;		 -> STR_85(46), STR_84(50), STR_83(52), STR_82(32), 
  5951 ;;		 -> STR_81(52), STR_80(52), STR_79(44), STR_78(38), 
  5952 ;;		 -> STR_77(52), STR_76(24), STR_75(52), STR_74(24), 
  5953 ;;		 -> STR_73(21), STR_72(7), STR_71(15), STR_70(52), 
  5954 ;;		 -> STR_69(3), STR_68(52), STR_67(17), STR_66(20), 
  5955 ;;		 -> STR_65(22), STR_64(20), STR_63(37), STR_62(22), 
  5956 ;;		 -> STR_61(33), STR_60(58), STR_59(3), STR_58(47), 
  5957 ;;		 -> STR_57(36), STR_56(6), STR_55(25), STR_54(20), 
  5958 ;;		 -> STR_53(72), STR_52(50), STR_51(22), STR_50(33), 
  5959 ;;		 -> STR_49(70), STR_48(56), STR_47(19), STR_46(20), 
  5960 ;;		 -> STR_45(78), STR_44(5), STR_43(43), STR_42(18), 
  5961 ;;		 -> STR_41(18), STR_40(15), STR_39(24), STR_38(43), 
  5962 ;;		 -> STR_37(44), STR_36(3), STR_35(5), STR_34(2), 
  5963 ;;		 -> STR_33(5), STR_32(17), STR_31(15), STR_30(3), 
  5964 ;;		 -> STR_29(5), STR_28(2), STR_27(5), STR_26(19), 
  5965 ;;		 -> STR_25(11), STR_24(11), STR_23(2), STR_22(2), 
  5966 ;;		 -> STR_21(8), STR_20(19), STR_19(3), STR_18(5), 
  5967 ;;		 -> STR_17(2), STR_16(21), STR_15(29), STR_14(3), 
  5968 ;;		 -> STR_13(3), STR_12(2), STR_11(4), STR_10(6), 
  5969 ;;		 -> STR_9(3), STR_8(3), STR_7(2), STR_6(3), 
  5970 ;;		 -> STR_5(2), STR_4(4), STR_3(27), STR_2(28), 
  5971 ;;		 -> STR_1(26), 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  idx             1   37[COMRAM] unsigned char 
  5974 ;;  tmpval          4    0        struct .
  5975 ;;  width           2   48[COMRAM] int 
  5976 ;;  val             2   45[COMRAM] unsigned int 
  5977 ;;  ap              2   43[COMRAM] PTR void [1]
  5978 ;;		 -> ?_printf(2), 
  5979 ;;  len             2   40[COMRAM] unsigned int 
  5980 ;;  cp              2   38[COMRAM] PTR const unsigned char 
  5981 ;;		 -> printf@c(1), 
  5982 ;;  c               1   50[COMRAM] unsigned char 
  5983 ;;  flag            1   47[COMRAM] unsigned char 
  5984 ;;  prec            1   42[COMRAM] char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  2   27[COMRAM] int 
  5987 ;; Registers used:
  5988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5994 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;Total ram usage:       24 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    6
  6001 ;; This function calls:
  6002 ;;		___lwdiv
  6003 ;;		___lwmod
  6004 ;;		___wmul
  6005 ;;		_isdigit
  6006 ;;		_putch
  6007 ;; This function is called by:
  6008 ;;		_SDCARD_Initialize
  6009 ;;		_SDCARD_SetIdle
  6010 ;;		_hexDumpBuffer
  6011 ;;		_main
  6012 ;;		_printMenu
  6013 ;;		_initializeAll
  6014 ;;		_doSDInit
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text24
  6019  000954                     __ptext24:
  6020                           	opt callstack 0
  6021  000954                     _printf:
  6022                           	opt callstack 24
  6023  000954                     
  6024                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  6025  000954  0E1E               	movlw	low (?_printf+2)
  6026  000956  6E2C               	movwf	printf@ap^0,c
  6027  000958  0E00               	movlw	high (?_printf+2)
  6028  00095A  6E2D               	movwf	(printf@ap+1)^0,c
  6029                           
  6030                           ;doprnt.c: 553: while((c = *f++)) {
  6031  00095C  EF2F  F007         	goto	l3784
  6032  000960                     l3630:
  6033                           
  6034                           ;doprnt.c: 555: if(c != '%')
  6035  000960  0E25               	movlw	37
  6036  000962  1833               	xorwf	printf@c^0,w,c
  6037  000964  B4D8               	btfsc	status,2,c
  6038  000966  EFB7  F004         	goto	u2341
  6039  00096A  EFB9  F004         	goto	u2340
  6040  00096E                     u2341:
  6041  00096E  EFBE  F004         	goto	l3634
  6042  000972                     u2340:
  6043  000972                     
  6044                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  6045  000972  5033               	movf	printf@c^0,w,c
  6046  000974  ECC0  F00D         	call	_putch
  6047                           
  6048                           ;doprnt.c: 559: continue;
  6049  000978  EF2F  F007         	goto	l3784
  6050  00097C                     l3634:
  6051                           
  6052                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  6053  00097C  0E00               	movlw	0
  6054  00097E  6E32               	movwf	(printf@width+1)^0,c
  6055  000980  0E00               	movlw	0
  6056  000982  6E31               	movwf	printf@width^0,c
  6057                           
  6058                           ;doprnt.c: 565: flag = 0;
  6059  000984  0E00               	movlw	0
  6060  000986  6E30               	movwf	printf@flag^0,c
  6061  000988  EFC9  F004         	goto	l3640
  6062  00098C                     l3636:
  6063                           
  6064                           ;doprnt.c: 597: flag |= 0x04;
  6065  00098C  8430               	bsf	printf@flag^0,2,c
  6066                           
  6067                           ;doprnt.c: 598: f++;
  6068  00098E  4A1C               	infsnz	printf@f^0,f,c
  6069  000990  2A1D               	incf	(printf@f+1)^0,f,c
  6070  000992                     l3640:
  6071  000992  C01C  FFF6         	movff	printf@f,tblptrl
  6072  000996  C01D  FFF7         	movff	printf@f+1,tblptrh
  6073  00099A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6074  00099A  6AF8               	clrf	tblptru,c
  6075  00099C                     	endif
  6076  00099C                     	if	0	;tblptru may be non-zero
  6077  00099C                     	endif
  6078  00099C  0008               	tblrd		*
  6079  00099E  50F5               	movf	tablat,w,c
  6080                           
  6081                           ; Switch size 1, requested type "simple"
  6082                           ; Number of cases is 1, Range of values is 48 to 48
  6083                           ; switch strategies available:
  6084                           ; Name         Instructions Cycles
  6085                           ; simple_byte            4     3 (average)
  6086                           ;	Chosen strategy is simple_byte
  6087  0009A0  0A30               	xorlw	48	; case 48
  6088  0009A2  B4D8               	btfsc	status,2,c
  6089  0009A4  EFC6  F004         	goto	l3636
  6090  0009A8  EFD6  F004         	goto	l3642
  6091  0009AC                     l3642:
  6092                           
  6093                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  6094  0009AC  C01C  FFF6         	movff	printf@f,tblptrl
  6095  0009B0  C01D  FFF7         	movff	printf@f+1,tblptrh
  6096  0009B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6097  0009B4  6AF8               	clrf	tblptru,c
  6098  0009B6                     	endif
  6099  0009B6                     	if	0	;tblptru may be non-zero
  6100  0009B6                     	endif
  6101  0009B6  0008               	tblrd		*
  6102  0009B8  50F5               	movf	tablat,w,c
  6103  0009BA  ECBB  F00C         	call	_isdigit
  6104  0009BE  A0D8               	btfss	status,0,c
  6105  0009C0  EFE4  F004         	goto	u2351
  6106  0009C4  EFE6  F004         	goto	u2350
  6107  0009C8                     u2351:
  6108  0009C8  EF7C  F005         	goto	l3684
  6109  0009CC                     u2350:
  6110  0009CC                     
  6111                           ;doprnt.c: 615: width = 0;
  6112  0009CC  0E00               	movlw	0
  6113  0009CE  6E32               	movwf	(printf@width+1)^0,c
  6114  0009D0  0E00               	movlw	0
  6115  0009D2  6E31               	movwf	printf@width^0,c
  6116  0009D4                     l3646:
  6117                           
  6118                           ;doprnt.c: 617: width *= 10;
  6119  0009D4  C031  F010         	movff	printf@width,___wmul@multiplier
  6120  0009D8  C032  F011         	movff	printf@width+1,___wmul@multiplier+1
  6121  0009DC  0E00               	movlw	0
  6122  0009DE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  6123  0009E0  0E0A               	movlw	10
  6124  0009E2  6E12               	movwf	___wmul@multiplicand^0,c
  6125  0009E4  EC29  F00D         	call	___wmul	;wreg free
  6126  0009E8  C010  F031         	movff	?___wmul,printf@width
  6127  0009EC  C011  F032         	movff	?___wmul+1,printf@width+1
  6128  0009F0                     
  6129                           ;doprnt.c: 618: width += *f++ - '0';
  6130  0009F0  0ED0               	movlw	208
  6131  0009F2  6E22               	movwf	??_printf^0,c
  6132  0009F4  0EFF               	movlw	255
  6133  0009F6  6E23               	movwf	(??_printf+1)^0,c
  6134  0009F8  C01C  FFF6         	movff	printf@f,tblptrl
  6135  0009FC  C01D  FFF7         	movff	printf@f+1,tblptrh
  6136  000A00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6137  000A00  6AF8               	clrf	tblptru,c
  6138  000A02                     	endif
  6139  000A02                     	if	0	;tblptru may be non-zero
  6140  000A02                     	endif
  6141  000A02  0008               	tblrd		*
  6142  000A04  50F5               	movf	tablat,w,c
  6143  000A06  6E24               	movwf	(??_printf+2)^0,c
  6144  000A08  6A25               	clrf	(??_printf+3)^0,c
  6145  000A0A  5022               	movf	??_printf^0,w,c
  6146  000A0C  2624               	addwf	(??_printf+2)^0,f,c
  6147  000A0E  5023               	movf	(??_printf+1)^0,w,c
  6148  000A10  2225               	addwfc	(??_printf+3)^0,f,c
  6149  000A12  5024               	movf	(??_printf+2)^0,w,c
  6150  000A14  2631               	addwf	printf@width^0,f,c
  6151  000A16  5025               	movf	(??_printf+3)^0,w,c
  6152  000A18  2232               	addwfc	(printf@width+1)^0,f,c
  6153  000A1A  4A1C               	infsnz	printf@f^0,f,c
  6154  000A1C  2A1D               	incf	(printf@f+1)^0,f,c
  6155  000A1E                     
  6156                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  6157  000A1E  C01C  FFF6         	movff	printf@f,tblptrl
  6158  000A22  C01D  FFF7         	movff	printf@f+1,tblptrh
  6159  000A26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6160  000A26  6AF8               	clrf	tblptru,c
  6161  000A28                     	endif
  6162  000A28                     	if	0	;tblptru may be non-zero
  6163  000A28                     	endif
  6164  000A28  0008               	tblrd		*
  6165  000A2A  50F5               	movf	tablat,w,c
  6166  000A2C  ECBB  F00C         	call	_isdigit
  6167  000A30  B0D8               	btfsc	status,0,c
  6168  000A32  EF1D  F005         	goto	u2361
  6169  000A36  EF1F  F005         	goto	u2360
  6170  000A3A                     u2361:
  6171  000A3A  EFEA  F004         	goto	l3646
  6172  000A3E                     u2360:
  6173  000A3E  EF7C  F005         	goto	l3684
  6174  000A42                     l3654:
  6175                           
  6176                           ;doprnt.c: 747: flag |= 0x80;
  6177  000A42  8E30               	bsf	printf@flag^0,7,c
  6178                           
  6179                           ;doprnt.c: 749: break;
  6180  000A44  EFA1  F005         	goto	l3686
  6181  000A48                     l3656:
  6182                           
  6183                           ;doprnt.c: 783: if(((unsigned)width) > len)
  6184  000A48  5032               	movf	(printf@width+1)^0,w,c
  6185  000A4A  E109               	bnz	u2370
  6186  000A4C  0E02               	movlw	2
  6187  000A4E  5C31               	subwf	printf@width^0,w,c
  6188  000A50  A0D8               	btfss	status,0,c
  6189  000A52  EF2D  F005         	goto	u2371
  6190  000A56  EF2F  F005         	goto	u2370
  6191  000A5A                     u2371:
  6192  000A5A  EF34  F005         	goto	l3660
  6193  000A5E                     u2370:
  6194  000A5E                     
  6195                           ;doprnt.c: 784: width -= len;
  6196  000A5E  0631               	decf	printf@width^0,f,c
  6197  000A60  A0D8               	btfss	status,0,c
  6198  000A62  0632               	decf	(printf@width+1)^0,f,c
  6199  000A64  EF3D  F005         	goto	l3664
  6200  000A68                     l3660:
  6201                           
  6202                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  6203  000A68  0E00               	movlw	0
  6204  000A6A  6E32               	movwf	(printf@width+1)^0,c
  6205  000A6C  0E00               	movlw	0
  6206  000A6E  6E31               	movwf	printf@width^0,c
  6207  000A70  EF3D  F005         	goto	l3664
  6208  000A74                     l3662:
  6209                           
  6210                           ;doprnt.c: 791: (putch(' ') );
  6211  000A74  0E20               	movlw	32
  6212  000A76  ECC0  F00D         	call	_putch
  6213  000A7A                     l3664:
  6214  000A7A  0631               	decf	printf@width^0,f,c
  6215  000A7C  A0D8               	btfss	status,0,c
  6216  000A7E  0632               	decf	(printf@width+1)^0,f,c
  6217  000A80  2831               	incf	printf@width^0,w,c
  6218  000A82  E106               	bnz	u2381
  6219  000A84  2832               	incf	(printf@width+1)^0,w,c
  6220  000A86  A4D8               	btfss	status,2,c
  6221  000A88  EF48  F005         	goto	u2381
  6222  000A8C  EF4A  F005         	goto	u2380
  6223  000A90                     u2381:
  6224  000A90  EF3A  F005         	goto	l3662
  6225  000A94                     u2380:
  6226  000A94  EF55  F005         	goto	l3670
  6227  000A98                     l3666:
  6228                           
  6229                           ;doprnt.c: 794: (putch(*cp++) );
  6230  000A98  C027  FFD9         	movff	printf@cp,fsr2l
  6231  000A9C  C028  FFDA         	movff	printf@cp+1,fsr2h
  6232  000AA0  50DF               	movf	indf2,w,c
  6233  000AA2  ECC0  F00D         	call	_putch
  6234  000AA6  4A27               	infsnz	printf@cp^0,f,c
  6235  000AA8  2A28               	incf	(printf@cp+1)^0,f,c
  6236  000AAA                     l3670:
  6237  000AAA  0629               	decf	printf@len^0,f,c
  6238  000AAC  A0D8               	btfss	status,0,c
  6239  000AAE  062A               	decf	(printf@len+1)^0,f,c
  6240  000AB0  2829               	incf	printf@len^0,w,c
  6241  000AB2  E106               	bnz	u2391
  6242  000AB4  282A               	incf	(printf@len+1)^0,w,c
  6243  000AB6  A4D8               	btfss	status,2,c
  6244  000AB8  EF60  F005         	goto	u2391
  6245  000ABC  EF62  F005         	goto	u2390
  6246  000AC0                     u2391:
  6247  000AC0  EF4C  F005         	goto	l3666
  6248  000AC4                     u2390:
  6249  000AC4  EF2F  F007         	goto	l3784
  6250  000AC8                     l3672:
  6251                           
  6252                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  6253  000AC8  C02C  FFD9         	movff	printf@ap,fsr2l
  6254  000ACC  C02D  FFDA         	movff	printf@ap+1,fsr2h
  6255  000AD0  50DF               	movf	indf2,w,c
  6256  000AD2  6E33               	movwf	printf@c^0,c
  6257  000AD4  0E02               	movlw	2
  6258  000AD6  262C               	addwf	printf@ap^0,f,c
  6259  000AD8  0E00               	movlw	0
  6260  000ADA  222D               	addwfc	(printf@ap+1)^0,f,c
  6261  000ADC                     l3676:
  6262                           
  6263                           ;doprnt.c: 831: cp = (char *)&c;
  6264  000ADC  0E33               	movlw	low printf@c
  6265  000ADE  6E27               	movwf	printf@cp^0,c
  6266  000AE0  0E00               	movlw	high printf@c
  6267  000AE2  6E28               	movwf	(printf@cp+1)^0,c
  6268  000AE4                     
  6269                           ;doprnt.c: 832: len = 1;
  6270  000AE4  0E00               	movlw	0
  6271  000AE6  6E2A               	movwf	(printf@len+1)^0,c
  6272  000AE8  0E01               	movlw	1
  6273  000AEA  6E29               	movwf	printf@len^0,c
  6274                           
  6275                           ;doprnt.c: 833: goto dostring;
  6276  000AEC  EF24  F005         	goto	l3656
  6277  000AF0                     l3680:
  6278                           
  6279                           ;doprnt.c: 844: flag |= 0xC0;
  6280  000AF0  0EC0               	movlw	192
  6281  000AF2  1230               	iorwf	printf@flag^0,f,c
  6282                           
  6283                           ;doprnt.c: 845: break;
  6284  000AF4  EFA1  F005         	goto	l3686
  6285  000AF8                     l3684:
  6286  000AF8  C01C  FFF6         	movff	printf@f,tblptrl
  6287  000AFC  C01D  FFF7         	movff	printf@f+1,tblptrh
  6288  000B00  4A1C               	infsnz	printf@f^0,f,c
  6289  000B02  2A1D               	incf	(printf@f+1)^0,f,c
  6290  000B04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6291  000B04  6AF8               	clrf	tblptru,c
  6292  000B06                     	endif
  6293  000B06                     	if	0	;tblptru may be non-zero
  6294  000B06                     	endif
  6295  000B06  0008               	tblrd		*
  6296  000B08  CFF5 F033          	movff	tablat,printf@c
  6297  000B0C  5033               	movf	printf@c^0,w,c
  6298                           
  6299                           ; Switch size 1, requested type "simple"
  6300                           ; Number of cases is 6, Range of values is 0 to 120
  6301                           ; switch strategies available:
  6302                           ; Name         Instructions Cycles
  6303                           ; simple_byte           19    10 (average)
  6304                           ;	Chosen strategy is simple_byte
  6305  000B0E  0A00               	xorlw	0	; case 0
  6306  000B10  B4D8               	btfsc	status,2,c
  6307  000B12  EF41  F007         	goto	l739
  6308  000B16  0A63               	xorlw	99	; case 99
  6309  000B18  B4D8               	btfsc	status,2,c
  6310  000B1A  EF64  F005         	goto	l3672
  6311  000B1E  0A07               	xorlw	7	; case 100
  6312  000B20  B4D8               	btfsc	status,2,c
  6313  000B22  EFA1  F005         	goto	l3686
  6314  000B26  0A0D               	xorlw	13	; case 105
  6315  000B28  B4D8               	btfsc	status,2,c
  6316  000B2A  EFA1  F005         	goto	l3686
  6317  000B2E  0A1C               	xorlw	28	; case 117
  6318  000B30  B4D8               	btfsc	status,2,c
  6319  000B32  EF78  F005         	goto	l3680
  6320  000B36  0A0D               	xorlw	13	; case 120
  6321  000B38  B4D8               	btfsc	status,2,c
  6322  000B3A  EF21  F005         	goto	l3654
  6323  000B3E  EF6E  F005         	goto	l3676
  6324  000B42                     l3686:
  6325                           
  6326                           ;doprnt.c: 1277: if((flag & (0xC0)) == 0x00)
  6327  000B42  C030  F022         	movff	printf@flag,??_printf
  6328  000B46  0EC0               	movlw	192
  6329  000B48  1622               	andwf	??_printf^0,f,c
  6330  000B4A  A4D8               	btfss	status,2,c
  6331  000B4C  EFAA  F005         	goto	u2401
  6332  000B50  EFAC  F005         	goto	u2400
  6333  000B54                     u2401:
  6334  000B54  EFC7  F005         	goto	l3698
  6335  000B58                     u2400:
  6336  000B58                     
  6337                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  6338  000B58  C02C  FFD9         	movff	printf@ap,fsr2l
  6339  000B5C  C02D  FFDA         	movff	printf@ap+1,fsr2h
  6340  000B60  CFDE F02E          	movff	postinc2,printf@val
  6341  000B64  CFDD F02F          	movff	postdec2,printf@val+1
  6342  000B68  0E02               	movlw	2
  6343  000B6A  262C               	addwf	printf@ap^0,f,c
  6344  000B6C  0E00               	movlw	0
  6345  000B6E  222D               	addwfc	(printf@ap+1)^0,f,c
  6346  000B70                     
  6347                           ;doprnt.c: 1287: if((int)val < 0) {
  6348  000B70  BE2F               	btfsc	(printf@val+1)^0,7,c
  6349  000B72  EFBF  F005         	goto	u2410
  6350  000B76  EFBD  F005         	goto	u2411
  6351  000B7A                     u2411:
  6352  000B7A  EF29  F006         	goto	l3732
  6353  000B7E                     u2410:
  6354  000B7E                     
  6355                           ;doprnt.c: 1288: flag |= 0x03;
  6356  000B7E  0E03               	movlw	3
  6357  000B80  1230               	iorwf	printf@flag^0,f,c
  6358  000B82                     
  6359                           ;doprnt.c: 1289: val = -val;
  6360  000B82  6C2E               	negf	printf@val^0,c
  6361  000B84  1E2F               	comf	(printf@val+1)^0,f,c
  6362  000B86  B0D8               	btfsc	status,0,c
  6363  000B88  2A2F               	incf	(printf@val+1)^0,f,c
  6364  000B8A  EF29  F006         	goto	l3732
  6365  000B8E                     l3698:
  6366                           
  6367                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  6368  000B8E  C02C  FFD9         	movff	printf@ap,fsr2l
  6369  000B92  C02D  FFDA         	movff	printf@ap+1,fsr2h
  6370  000B96  CFDE F02E          	movff	postinc2,printf@val
  6371  000B9A  CFDD F02F          	movff	postdec2,printf@val+1
  6372  000B9E  0E02               	movlw	2
  6373  000BA0  262C               	addwf	printf@ap^0,f,c
  6374  000BA2  0E00               	movlw	0
  6375  000BA4  222D               	addwfc	(printf@ap+1)^0,f,c
  6376  000BA6  EF29  F006         	goto	l3732
  6377  000BAA                     l3702:
  6378                           
  6379                           ;doprnt.c: 1328: case 0xC0:;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  6380  000BAA  0E01               	movlw	1
  6381  000BAC  6E33               	movwf	printf@c^0,c
  6382  000BAE                     l3704:
  6383  000BAE  0E05               	movlw	5
  6384  000BB0  1833               	xorwf	printf@c^0,w,c
  6385  000BB2  A4D8               	btfss	status,2,c
  6386  000BB4  EFDE  F005         	goto	u2421
  6387  000BB8  EFE0  F005         	goto	u2420
  6388  000BBC                     u2421:
  6389  000BBC  EFE2  F005         	goto	l3708
  6390  000BC0                     u2420:
  6391  000BC0  EF39  F006         	goto	l3734
  6392  000BC4                     l3708:
  6393                           
  6394                           ;doprnt.c: 1332: if(val < dpowers[c])
  6395  000BC4  5033               	movf	printf@c^0,w,c
  6396  000BC6  0D02               	mullw	2
  6397  000BC8  0E05               	movlw	low _dpowers
  6398  000BCA  24F3               	addwf	243,w,c
  6399  000BCC  6EF6               	movwf	tblptrl,c
  6400  000BCE  0EF9               	movlw	high _dpowers
  6401  000BD0  20F4               	addwfc	244,w,c
  6402  000BD2  6EF7               	movwf	tblptrh,c
  6403  000BD4                     	if	1	;There are 3 active tblptr bytes
  6404  000BD4  6AF8               	clrf	tblptru,c
  6405  000BD6  0E00               	movlw	low (__mediumconst shr (0+16))
  6406  000BD8  22F8               	addwfc	tblptru,f,c
  6407  000BDA                     	endif
  6408  000BDA  0009               	tblrd		*+
  6409  000BDC  50F5               	movf	tablat,w,c
  6410  000BDE  5C2E               	subwf	printf@val^0,w,c
  6411  000BE0  0009               	tblrd		*+
  6412  000BE2  50F5               	movf	tablat,w,c
  6413  000BE4  582F               	subwfb	(printf@val+1)^0,w,c
  6414  000BE6  B0D8               	btfsc	status,0,c
  6415  000BE8  EFF8  F005         	goto	u2431
  6416  000BEC  EFFA  F005         	goto	u2430
  6417  000BF0                     u2431:
  6418  000BF0  EFFC  F005         	goto	l3712
  6419  000BF4                     u2430:
  6420  000BF4  EF39  F006         	goto	l3734
  6421  000BF8                     l3712:
  6422  000BF8  2A33               	incf	printf@c^0,f,c
  6423  000BFA  EFD7  F005         	goto	l3704
  6424  000BFE                     l3716:
  6425                           
  6426                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6427  000BFE  0E01               	movlw	1
  6428  000C00  6E33               	movwf	printf@c^0,c
  6429  000C02                     l3718:
  6430  000C02  0E04               	movlw	4
  6431  000C04  1833               	xorwf	printf@c^0,w,c
  6432  000C06  A4D8               	btfss	status,2,c
  6433  000C08  EF08  F006         	goto	u2441
  6434  000C0C  EF0A  F006         	goto	u2440
  6435  000C10                     u2441:
  6436  000C10  EF0C  F006         	goto	l3722
  6437  000C14                     u2440:
  6438  000C14  EF39  F006         	goto	l3734
  6439  000C18                     l3722:
  6440                           
  6441                           ;doprnt.c: 1343: if(val < hexpowers[c])
  6442  000C18  5033               	movf	printf@c^0,w,c
  6443  000C1A  0D02               	mullw	2
  6444  000C1C  0E0F               	movlw	low _hexpowers
  6445  000C1E  24F3               	addwf	243,w,c
  6446  000C20  6EF6               	movwf	tblptrl,c
  6447  000C22  0EF9               	movlw	high _hexpowers
  6448  000C24  20F4               	addwfc	244,w,c
  6449  000C26  6EF7               	movwf	tblptrh,c
  6450  000C28                     	if	1	;There are 3 active tblptr bytes
  6451  000C28  6AF8               	clrf	tblptru,c
  6452  000C2A  0E00               	movlw	low (__mediumconst shr (0+16))
  6453  000C2C  22F8               	addwfc	tblptru,f,c
  6454  000C2E                     	endif
  6455  000C2E  0009               	tblrd		*+
  6456  000C30  50F5               	movf	tablat,w,c
  6457  000C32  5C2E               	subwf	printf@val^0,w,c
  6458  000C34  0009               	tblrd		*+
  6459  000C36  50F5               	movf	tablat,w,c
  6460  000C38  582F               	subwfb	(printf@val+1)^0,w,c
  6461  000C3A  B0D8               	btfsc	status,0,c
  6462  000C3C  EF22  F006         	goto	u2451
  6463  000C40  EF24  F006         	goto	u2450
  6464  000C44                     u2451:
  6465  000C44  EF26  F006         	goto	l3726
  6466  000C48                     u2450:
  6467  000C48  EF39  F006         	goto	l3734
  6468  000C4C                     l3726:
  6469  000C4C  2A33               	incf	printf@c^0,f,c
  6470  000C4E  EF01  F006         	goto	l3718
  6471  000C52                     l3732:
  6472  000C52  5030               	movf	printf@flag^0,w,c
  6473  000C54  0BC0               	andlw	192
  6474                           
  6475                           ; Switch size 1, requested type "simple"
  6476                           ; Number of cases is 3, Range of values is 0 to 192
  6477                           ; switch strategies available:
  6478                           ; Name         Instructions Cycles
  6479                           ; simple_byte           10     6 (average)
  6480                           ;	Chosen strategy is simple_byte
  6481  000C56  0A00               	xorlw	0	; case 0
  6482  000C58  B4D8               	btfsc	status,2,c
  6483  000C5A  EFD5  F005         	goto	l3702
  6484  000C5E  0A80               	xorlw	128	; case 128
  6485  000C60  B4D8               	btfsc	status,2,c
  6486  000C62  EFFF  F005         	goto	l3716
  6487  000C66  0A40               	xorlw	64	; case 192
  6488  000C68  B4D8               	btfsc	status,2,c
  6489  000C6A  EFD5  F005         	goto	l3702
  6490  000C6E  EF39  F006         	goto	l3734
  6491  000C72                     l3734:
  6492                           
  6493                           ;doprnt.c: 1371: if(width && flag & 0x03)
  6494  000C72  5031               	movf	printf@width^0,w,c
  6495  000C74  1032               	iorwf	(printf@width+1)^0,w,c
  6496  000C76  B4D8               	btfsc	status,2,c
  6497  000C78  EF40  F006         	goto	u2461
  6498  000C7C  EF42  F006         	goto	u2460
  6499  000C80                     u2461:
  6500  000C80  EF50  F006         	goto	l3740
  6501  000C84                     u2460:
  6502  000C84  C030  F022         	movff	printf@flag,??_printf
  6503  000C88  0E03               	movlw	3
  6504  000C8A  1622               	andwf	??_printf^0,f,c
  6505  000C8C  B4D8               	btfsc	status,2,c
  6506  000C8E  EF4B  F006         	goto	u2471
  6507  000C92  EF4D  F006         	goto	u2470
  6508  000C96                     u2471:
  6509  000C96  EF50  F006         	goto	l3740
  6510  000C9A                     u2470:
  6511  000C9A                     
  6512                           ;doprnt.c: 1372: width--;
  6513  000C9A  0631               	decf	printf@width^0,f,c
  6514  000C9C  A0D8               	btfss	status,0,c
  6515  000C9E  0632               	decf	(printf@width+1)^0,f,c
  6516  000CA0                     l3740:
  6517                           
  6518                           ;doprnt.c: 1407: if(width > c)
  6519  000CA0  5033               	movf	printf@c^0,w,c
  6520  000CA2  6E22               	movwf	??_printf^0,c
  6521  000CA4  6A23               	clrf	(??_printf+1)^0,c
  6522  000CA6  5031               	movf	printf@width^0,w,c
  6523  000CA8  5C22               	subwf	??_printf^0,w,c
  6524  000CAA  5023               	movf	(??_printf+1)^0,w,c
  6525  000CAC  0A80               	xorlw	128
  6526  000CAE  6E24               	movwf	(??_printf+2)^0,c
  6527  000CB0  5032               	movf	(printf@width+1)^0,w,c
  6528  000CB2  0A80               	xorlw	128
  6529  000CB4  5824               	subwfb	(??_printf+2)^0,w,c
  6530  000CB6  B0D8               	btfsc	status,0,c
  6531  000CB8  EF60  F006         	goto	u2481
  6532  000CBC  EF62  F006         	goto	u2480
  6533  000CC0                     u2481:
  6534  000CC0  EF68  F006         	goto	l3744
  6535  000CC4                     u2480:
  6536  000CC4                     
  6537                           ;doprnt.c: 1408: width -= c;
  6538  000CC4  5033               	movf	printf@c^0,w,c
  6539  000CC6  5E31               	subwf	printf@width^0,f,c
  6540  000CC8  0E00               	movlw	0
  6541  000CCA  5A32               	subwfb	(printf@width+1)^0,f,c
  6542  000CCC  EF6C  F006         	goto	l3746
  6543  000CD0                     l3744:
  6544                           
  6545                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  6546  000CD0  0E00               	movlw	0
  6547  000CD2  6E32               	movwf	(printf@width+1)^0,c
  6548  000CD4  0E00               	movlw	0
  6549  000CD6  6E31               	movwf	printf@width^0,c
  6550  000CD8                     l3746:
  6551                           
  6552                           ;doprnt.c: 1413: if(flag & 0x04) {
  6553  000CD8  A430               	btfss	printf@flag^0,2,c
  6554  000CDA  EF71  F006         	goto	u2491
  6555  000CDE  EF73  F006         	goto	u2490
  6556  000CE2                     u2491:
  6557  000CE2  EF9B  F006         	goto	l3758
  6558  000CE6                     u2490:
  6559  000CE6                     
  6560                           ;doprnt.c: 1418: if(flag & 0x03)
  6561  000CE6  C030  F022         	movff	printf@flag,??_printf
  6562  000CEA  0E03               	movlw	3
  6563  000CEC  1622               	andwf	??_printf^0,f,c
  6564  000CEE  B4D8               	btfsc	status,2,c
  6565  000CF0  EF7C  F006         	goto	u2501
  6566  000CF4  EF7E  F006         	goto	u2500
  6567  000CF8                     u2501:
  6568  000CF8  EF81  F006         	goto	l3752
  6569  000CFC                     u2500:
  6570  000CFC                     
  6571                           ;doprnt.c: 1419: (putch('-') );
  6572  000CFC  0E2D               	movlw	45
  6573  000CFE  ECC0  F00D         	call	_putch
  6574  000D02                     l3752:
  6575                           
  6576                           ;doprnt.c: 1441: if(width)
  6577  000D02  5031               	movf	printf@width^0,w,c
  6578  000D04  1032               	iorwf	(printf@width+1)^0,w,c
  6579  000D06  B4D8               	btfsc	status,2,c
  6580  000D08  EF88  F006         	goto	u2511
  6581  000D0C  EF8A  F006         	goto	u2510
  6582  000D10                     u2511:
  6583  000D10  EFC1  F006         	goto	l3768
  6584  000D14                     u2510:
  6585  000D14                     l3754:
  6586                           
  6587                           ;doprnt.c: 1443: (putch('0') );
  6588  000D14  0E30               	movlw	48
  6589  000D16  ECC0  F00D         	call	_putch
  6590  000D1A                     
  6591                           ;doprnt.c: 1444: while(--width);
  6592  000D1A  0631               	decf	printf@width^0,f,c
  6593  000D1C  A0D8               	btfss	status,0,c
  6594  000D1E  0632               	decf	(printf@width+1)^0,f,c
  6595  000D20  5031               	movf	printf@width^0,w,c
  6596  000D22  1032               	iorwf	(printf@width+1)^0,w,c
  6597  000D24  A4D8               	btfss	status,2,c
  6598  000D26  EF97  F006         	goto	u2521
  6599  000D2A  EF99  F006         	goto	u2520
  6600  000D2E                     u2521:
  6601  000D2E  EF8A  F006         	goto	l3754
  6602  000D32                     u2520:
  6603  000D32  EFC1  F006         	goto	l3768
  6604  000D36                     l3758:
  6605                           
  6606                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  6607  000D36  5031               	movf	printf@width^0,w,c
  6608  000D38  1032               	iorwf	(printf@width+1)^0,w,c
  6609  000D3A  B4D8               	btfsc	status,2,c
  6610  000D3C  EFA2  F006         	goto	u2531
  6611  000D40  EFA4  F006         	goto	u2530
  6612  000D44                     u2531:
  6613  000D44  EFB3  F006         	goto	l3764
  6614  000D48                     u2530:
  6615  000D48                     l3760:
  6616                           
  6617                           ;doprnt.c: 1456: (putch(' ') );
  6618  000D48  0E20               	movlw	32
  6619  000D4A  ECC0  F00D         	call	_putch
  6620  000D4E                     
  6621                           ;doprnt.c: 1457: while(--width);
  6622  000D4E  0631               	decf	printf@width^0,f,c
  6623  000D50  A0D8               	btfss	status,0,c
  6624  000D52  0632               	decf	(printf@width+1)^0,f,c
  6625  000D54  5031               	movf	printf@width^0,w,c
  6626  000D56  1032               	iorwf	(printf@width+1)^0,w,c
  6627  000D58  A4D8               	btfss	status,2,c
  6628  000D5A  EFB1  F006         	goto	u2541
  6629  000D5E  EFB3  F006         	goto	u2540
  6630  000D62                     u2541:
  6631  000D62  EFA4  F006         	goto	l3760
  6632  000D66                     u2540:
  6633  000D66                     l3764:
  6634                           
  6635                           ;doprnt.c: 1464: if(flag & 0x03)
  6636  000D66  C030  F022         	movff	printf@flag,??_printf
  6637  000D6A  0E03               	movlw	3
  6638  000D6C  1622               	andwf	??_printf^0,f,c
  6639  000D6E  B4D8               	btfsc	status,2,c
  6640  000D70  EFBC  F006         	goto	u2551
  6641  000D74  EFBE  F006         	goto	u2550
  6642  000D78                     u2551:
  6643  000D78  EFC1  F006         	goto	l3768
  6644  000D7C                     u2550:
  6645  000D7C                     
  6646                           ;doprnt.c: 1465: (putch('-') );
  6647  000D7C  0E2D               	movlw	45
  6648  000D7E  ECC0  F00D         	call	_putch
  6649  000D82                     l3768:
  6650                           
  6651                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  6652  000D82  C033  F02B         	movff	printf@c,printf@prec
  6653                           
  6654                           ;doprnt.c: 1500: while(prec--) {
  6655  000D86  EF26  F007         	goto	l3782
  6656  000D8A                     l3770:
  6657                           
  6658                           ;doprnt.c: 1512: case 0xC0:;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 1
      +                          0 + '0';
  6659  000D8A  502B               	movf	printf@prec^0,w,c
  6660  000D8C  0D02               	mullw	2
  6661  000D8E  0E05               	movlw	low _dpowers
  6662  000D90  24F3               	addwf	243,w,c
  6663  000D92  6EF6               	movwf	tblptrl,c
  6664  000D94  0EF9               	movlw	high _dpowers
  6665  000D96  20F4               	addwfc	244,w,c
  6666  000D98  6EF7               	movwf	tblptrh,c
  6667  000D9A                     	if	1	;There are 3 active tblptr bytes
  6668  000D9A  6AF8               	clrf	tblptru,c
  6669  000D9C  0E00               	movlw	low (__mediumconst shr (0+16))
  6670  000D9E  22F8               	addwfc	tblptru,f,c
  6671  000DA0                     	endif
  6672  000DA0  0009               	tblrd		*+
  6673  000DA2  CFF5 F012          	movff	tablat,___lwdiv@divisor
  6674  000DA6  000A               	tblrd		*-
  6675  000DA8  CFF5 F013          	movff	tablat,___lwdiv@divisor+1
  6676  000DAC  C02E  F010         	movff	printf@val,___lwdiv@dividend
  6677  000DB0  C02F  F011         	movff	printf@val+1,___lwdiv@dividend+1
  6678  000DB4  EC3C  F00B         	call	___lwdiv	;wreg free
  6679  000DB8  C010  F017         	movff	?___lwdiv,___lwmod@dividend
  6680  000DBC  C011  F018         	movff	?___lwdiv+1,___lwmod@dividend+1
  6681  000DC0  0E00               	movlw	0
  6682  000DC2  6E1A               	movwf	(___lwmod@divisor+1)^0,c
  6683  000DC4  0E0A               	movlw	10
  6684  000DC6  6E19               	movwf	___lwmod@divisor^0,c
  6685  000DC8  ECA8  F00B         	call	___lwmod	;wreg free
  6686  000DCC  5017               	movf	?___lwmod^0,w,c
  6687  000DCE  0F30               	addlw	48
  6688  000DD0  6E33               	movwf	printf@c^0,c
  6689                           
  6690                           ;doprnt.c: 1517: break;
  6691  000DD2  EF23  F007         	goto	l3780
  6692  000DD6                     l3772:
  6693                           
  6694                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  6695  000DD6  C02E  F010         	movff	printf@val,___lwdiv@dividend
  6696  000DDA  C02F  F011         	movff	printf@val+1,___lwdiv@dividend+1
  6697  000DDE  502B               	movf	printf@prec^0,w,c
  6698  000DE0  0D02               	mullw	2
  6699  000DE2  0E0F               	movlw	low _hexpowers
  6700  000DE4  24F3               	addwf	243,w,c
  6701  000DE6  6EF6               	movwf	tblptrl,c
  6702  000DE8  0EF9               	movlw	high _hexpowers
  6703  000DEA  20F4               	addwfc	244,w,c
  6704  000DEC  6EF7               	movwf	tblptrh,c
  6705  000DEE                     	if	1	;There are 3 active tblptr bytes
  6706  000DEE  6AF8               	clrf	tblptru,c
  6707  000DF0  0E00               	movlw	low (__mediumconst shr (0+16))
  6708  000DF2  22F8               	addwfc	tblptru,f,c
  6709  000DF4                     	endif
  6710  000DF4  0009               	tblrd		*+
  6711  000DF6  CFF5 F012          	movff	tablat,___lwdiv@divisor
  6712  000DFA  000A               	tblrd		*-
  6713  000DFC  CFF5 F013          	movff	tablat,___lwdiv@divisor+1
  6714  000E00  EC3C  F00B         	call	___lwdiv	;wreg free
  6715  000E04  5010               	movf	?___lwdiv^0,w,c
  6716  000E06  0B0F               	andlw	15
  6717  000E08  6E26               	movwf	printf@idx^0,c
  6718  000E0A                     
  6719                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  6720  000E0A  0E5D               	movlw	low STR_94
  6721  000E0C  2426               	addwf	printf@idx^0,w,c
  6722  000E0E  6EF6               	movwf	tblptrl,c
  6723  000E10  6AF7               	clrf	tblptrh,c
  6724  000E12  0EFF               	movlw	high STR_94
  6725  000E14  22F7               	addwfc	tblptrh,f,c
  6726  000E16                     	if	1	;There are 3 active tblptr bytes
  6727  000E16  6AF8               	clrf	tblptru,c
  6728  000E18  0E00               	movlw	low (__mediumconst shr (0+16))
  6729  000E1A  22F8               	addwfc	tblptru,f,c
  6730  000E1C                     	endif
  6731  000E1C  0008               	tblrd		*
  6732  000E1E  CFF5 F033          	movff	tablat,printf@c
  6733                           
  6734                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  6735  000E22  EF23  F007         	goto	l3780
  6736  000E26                     l3778:
  6737  000E26  5030               	movf	printf@flag^0,w,c
  6738  000E28  0BC0               	andlw	192
  6739                           
  6740                           ; Switch size 1, requested type "simple"
  6741                           ; Number of cases is 3, Range of values is 0 to 192
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte           10     6 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746  000E2A  0A00               	xorlw	0	; case 0
  6747  000E2C  B4D8               	btfsc	status,2,c
  6748  000E2E  EFC5  F006         	goto	l3770
  6749  000E32  0A80               	xorlw	128	; case 128
  6750  000E34  B4D8               	btfsc	status,2,c
  6751  000E36  EFEB  F006         	goto	l3772
  6752  000E3A  0A40               	xorlw	64	; case 192
  6753  000E3C  B4D8               	btfsc	status,2,c
  6754  000E3E  EFC5  F006         	goto	l3770
  6755  000E42  EF23  F007         	goto	l3780
  6756  000E46                     l3780:
  6757                           
  6758                           ;doprnt.c: 1550: (putch(c) );
  6759  000E46  5033               	movf	printf@c^0,w,c
  6760  000E48  ECC0  F00D         	call	_putch
  6761  000E4C                     l3782:
  6762  000E4C  062B               	decf	printf@prec^0,f,c
  6763  000E4E  282B               	incf	printf@prec^0,w,c
  6764  000E50  A4D8               	btfss	status,2,c
  6765  000E52  EF2D  F007         	goto	u2561
  6766  000E56  EF2F  F007         	goto	u2560
  6767  000E5A                     u2561:
  6768  000E5A  EF13  F007         	goto	l3778
  6769  000E5E                     u2560:
  6770  000E5E                     l3784:
  6771  000E5E  C01C  FFF6         	movff	printf@f,tblptrl
  6772  000E62  C01D  FFF7         	movff	printf@f+1,tblptrh
  6773  000E66  4A1C               	infsnz	printf@f^0,f,c
  6774  000E68  2A1D               	incf	(printf@f+1)^0,f,c
  6775  000E6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6776  000E6A  6AF8               	clrf	tblptru,c
  6777  000E6C                     	endif
  6778  000E6C                     	if	0	;tblptru may be non-zero
  6779  000E6C                     	endif
  6780  000E6C  0008               	tblrd		*
  6781  000E6E  CFF5 F033          	movff	tablat,printf@c
  6782  000E72  5033               	movf	printf@c^0,w,c
  6783  000E74  A4D8               	btfss	status,2,c
  6784  000E76  EF3F  F007         	goto	u2571
  6785  000E7A  EF41  F007         	goto	u2570
  6786  000E7E                     u2571:
  6787  000E7E  EFB0  F004         	goto	l3630
  6788  000E82                     u2570:
  6789  000E82                     l739:
  6790  000E82  0012               	return		;funcret
  6791  000E84                     __end_of_printf:
  6792                           	opt callstack 0
  6793                           
  6794 ;; *************** function _putch *****************
  6795 ;; Defined at:
  6796 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  txData          1    wreg     unsigned char 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  txData          1   16[COMRAM] unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, status,2, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;Total ram usage:        1 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    5
  6817 ;; This function calls:
  6818 ;;		_EUSART1_Write
  6819 ;; This function is called by:
  6820 ;;		_printf
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text25
  6825  001B80                     __ptext25:
  6826                           	opt callstack 0
  6827  001B80                     _putch:
  6828                           	opt callstack 24
  6829                           
  6830                           ;incstack = 0
  6831                           ;putch@txData stored from wreg
  6832  001B80  6E11               	movwf	putch@txData^0,c
  6833  001B82                     
  6834                           ;eusart1.c: 148: EUSART1_Write(txData);
  6835  001B82  5011               	movf	putch@txData^0,w,c
  6836  001B84  EC81  F00D         	call	_EUSART1_Write
  6837  001B88  0012               	return		;funcret
  6838  001B8A                     __end_of_putch:
  6839                           	opt callstack 0
  6840                           
  6841 ;; *************** function _EUSART1_Write *****************
  6842 ;; Defined at:
  6843 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  txData          1    wreg     unsigned char 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;  txData          1   15[COMRAM] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;Total ram usage:        1 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    4
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_putch
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text26
  6872  001B02                     __ptext26:
  6873                           	opt callstack 0
  6874  001B02                     _EUSART1_Write:
  6875                           	opt callstack 24
  6876                           
  6877                           ;incstack = 0
  6878                           ;EUSART1_Write@txData stored from wreg
  6879  001B02  6E10               	movwf	EUSART1_Write@txData^0,c
  6880  001B04                     l214:
  6881  001B04  A89E               	btfss	158,4,c	;volatile
  6882  001B06  EF87  F00D         	goto	u2251
  6883  001B0A  EF89  F00D         	goto	u2250
  6884  001B0E                     u2251:
  6885  001B0E  EF82  F00D         	goto	l214
  6886  001B12                     u2250:
  6887  001B12                     
  6888                           ;eusart1.c: 136: };eusart1.c: 138: TXREG1 = txData;
  6889  001B12  C010  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6890  001B16  0012               	return		;funcret
  6891  001B18                     __end_of_EUSART1_Write:
  6892                           	opt callstack 0
  6893                           
  6894 ;; *************** function _isdigit *****************
  6895 ;; Defined at:
  6896 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  c               1    wreg     unsigned char 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  c               1   17[COMRAM] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;		None               void
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;Total ram usage:        3 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    4
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_printf
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text27
  6925  001976                     __ptext27:
  6926                           	opt callstack 0
  6927  001976                     _isdigit:
  6928                           	opt callstack 25
  6929                           
  6930                           ;incstack = 0
  6931                           ;isdigit@c stored from wreg
  6932  001976  6E12               	movwf	isdigit@c^0,c
  6933  001978  0E00               	movlw	0
  6934  00197A  6E11               	movwf	_isdigit$1846^0,c
  6935  00197C  0E3A               	movlw	58
  6936  00197E  6012               	cpfslt	isdigit@c^0,c
  6937  001980  EFC4  F00C         	goto	u2261
  6938  001984  EFC6  F00C         	goto	u2260
  6939  001988                     u2261:
  6940  001988  EFD0  F00C         	goto	l3580
  6941  00198C                     u2260:
  6942  00198C  0E2F               	movlw	47
  6943  00198E  6412               	cpfsgt	isdigit@c^0,c
  6944  001990  EFCC  F00C         	goto	u2271
  6945  001994  EFCE  F00C         	goto	u2270
  6946  001998                     u2271:
  6947  001998  EFD0  F00C         	goto	l3580
  6948  00199C                     u2270:
  6949  00199C  0E01               	movlw	1
  6950  00199E  6E11               	movwf	_isdigit$1846^0,c
  6951  0019A0                     l3580:
  6952  0019A0  C011  F010         	movff	_isdigit$1846,??_isdigit
  6953  0019A4  3010               	rrcf	??_isdigit^0,w,c
  6954  0019A6  0012               	return		;funcret
  6955  0019A8                     __end_of_isdigit:
  6956                           	opt callstack 0
  6957                           
  6958 ;; *************** function ___wmul *****************
  6959 ;; Defined at:
  6960 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  multiplier      2   15[COMRAM] unsigned int 
  6963 ;;  multiplicand    2   17[COMRAM] unsigned int 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  product         2   19[COMRAM] unsigned int 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  2   15[COMRAM] unsigned int 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0, prodl, prodh
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6979 ;;Total ram usage:        6 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:    4
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_printf
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text28
  6990  001A52                     __ptext28:
  6991                           	opt callstack 0
  6992  001A52                     ___wmul:
  6993                           	opt callstack 25
  6994  001A52  5010               	movf	___wmul@multiplier^0,w,c
  6995  001A54  0212               	mulwf	___wmul@multiplicand^0,c
  6996  001A56  CFF3 F014          	movff	prodl,___wmul@product
  6997  001A5A  CFF4 F015          	movff	prodh,___wmul@product+1
  6998  001A5E  5010               	movf	___wmul@multiplier^0,w,c
  6999  001A60  0213               	mulwf	(___wmul@multiplicand+1)^0,c
  7000  001A62  50F3               	movf	243,w,c
  7001  001A64  2615               	addwf	(___wmul@product+1)^0,f,c
  7002  001A66  5011               	movf	(___wmul@multiplier+1)^0,w,c
  7003  001A68  0212               	mulwf	___wmul@multiplicand^0,c
  7004  001A6A  50F3               	movf	243,w,c
  7005  001A6C  2615               	addwf	(___wmul@product+1)^0,f,c
  7006  001A6E  C014  F010         	movff	___wmul@product,?___wmul
  7007  001A72  C015  F011         	movff	___wmul@product+1,?___wmul+1
  7008  001A76  0012               	return		;funcret
  7009  001A78                     __end_of___wmul:
  7010                           	opt callstack 0
  7011                           
  7012 ;; *************** function ___lwmod *****************
  7013 ;; Defined at:
  7014 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  dividend        2   22[COMRAM] unsigned int 
  7017 ;;  divisor         2   24[COMRAM] unsigned int 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  counter         1   26[COMRAM] unsigned char 
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  2   22[COMRAM] unsigned int 
  7022 ;; Registers used:
  7023 ;;		wreg, status,2, status,0
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;Total ram usage:        5 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; Hardware stack levels required when called:    4
  7036 ;; This function calls:
  7037 ;;		Nothing
  7038 ;; This function is called by:
  7039 ;;		_printf
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           	psect	text29
  7044  001750                     __ptext29:
  7045                           	opt callstack 0
  7046  001750                     ___lwmod:
  7047                           	opt callstack 25
  7048  001750  5019               	movf	___lwmod@divisor^0,w,c
  7049  001752  101A               	iorwf	(___lwmod@divisor+1)^0,w,c
  7050  001754  B4D8               	btfsc	status,2,c
  7051  001756  EFAF  F00B         	goto	u2311
  7052  00175A  EFB1  F00B         	goto	u2310
  7053  00175E                     u2311:
  7054  00175E  EFD5  F00B         	goto	l1231
  7055  001762                     u2310:
  7056  001762  0E01               	movlw	1
  7057  001764  6E1B               	movwf	___lwmod@counter^0,c
  7058  001766  EFB9  F00B         	goto	l3618
  7059  00176A                     l3616:
  7060  00176A  90D8               	bcf	status,0,c
  7061  00176C  3619               	rlcf	___lwmod@divisor^0,f,c
  7062  00176E  361A               	rlcf	(___lwmod@divisor+1)^0,f,c
  7063  001770  2A1B               	incf	___lwmod@counter^0,f,c
  7064  001772                     l3618:
  7065  001772  AE1A               	btfss	(___lwmod@divisor+1)^0,7,c
  7066  001774  EFBE  F00B         	goto	u2321
  7067  001778  EFC0  F00B         	goto	u2320
  7068  00177C                     u2321:
  7069  00177C  EFB5  F00B         	goto	l3616
  7070  001780                     u2320:
  7071  001780                     l3620:
  7072  001780  5019               	movf	___lwmod@divisor^0,w,c
  7073  001782  5C17               	subwf	___lwmod@dividend^0,w,c
  7074  001784  501A               	movf	(___lwmod@divisor+1)^0,w,c
  7075  001786  5818               	subwfb	(___lwmod@dividend+1)^0,w,c
  7076  001788  A0D8               	btfss	status,0,c
  7077  00178A  EFC9  F00B         	goto	u2331
  7078  00178E  EFCB  F00B         	goto	u2330
  7079  001792                     u2331:
  7080  001792  EFCF  F00B         	goto	l3624
  7081  001796                     u2330:
  7082  001796  5019               	movf	___lwmod@divisor^0,w,c
  7083  001798  5E17               	subwf	___lwmod@dividend^0,f,c
  7084  00179A  501A               	movf	(___lwmod@divisor+1)^0,w,c
  7085  00179C  5A18               	subwfb	(___lwmod@dividend+1)^0,f,c
  7086  00179E                     l3624:
  7087  00179E  90D8               	bcf	status,0,c
  7088  0017A0  321A               	rrcf	(___lwmod@divisor+1)^0,f,c
  7089  0017A2  3219               	rrcf	___lwmod@divisor^0,f,c
  7090  0017A4  2E1B               	decfsz	___lwmod@counter^0,f,c
  7091  0017A6  EFC0  F00B         	goto	l3620
  7092  0017AA                     l1231:
  7093  0017AA  C017  F017         	movff	___lwmod@dividend,?___lwmod
  7094  0017AE  C018  F018         	movff	___lwmod@dividend+1,?___lwmod+1
  7095  0017B2  0012               	return		;funcret
  7096  0017B4                     __end_of___lwmod:
  7097                           	opt callstack 0
  7098                           
  7099 ;; *************** function ___lwdiv *****************
  7100 ;; Defined at:
  7101 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  dividend        2   15[COMRAM] unsigned int 
  7104 ;;  divisor         2   17[COMRAM] unsigned int 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  quotient        2   20[COMRAM] unsigned int 
  7107 ;;  counter         1   19[COMRAM] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  2   15[COMRAM] unsigned int 
  7110 ;; Registers used:
  7111 ;;		wreg, status,2, status,0
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;Total ram usage:        7 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; Hardware stack levels required when called:    4
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_printf
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text30
  7132  001678                     __ptext30:
  7133                           	opt callstack 0
  7134  001678                     ___lwdiv:
  7135                           	opt callstack 25
  7136  001678  0E00               	movlw	0
  7137  00167A  6E16               	movwf	(___lwdiv@quotient+1)^0,c
  7138  00167C  0E00               	movlw	0
  7139  00167E  6E15               	movwf	___lwdiv@quotient^0,c
  7140  001680  5012               	movf	___lwdiv@divisor^0,w,c
  7141  001682  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7142  001684  B4D8               	btfsc	status,2,c
  7143  001686  EF47  F00B         	goto	u2281
  7144  00168A  EF49  F00B         	goto	u2280
  7145  00168E                     u2281:
  7146  00168E  EF71  F00B         	goto	l1221
  7147  001692                     u2280:
  7148  001692  0E01               	movlw	1
  7149  001694  6E14               	movwf	___lwdiv@counter^0,c
  7150  001696  EF51  F00B         	goto	l3598
  7151  00169A                     l3596:
  7152  00169A  90D8               	bcf	status,0,c
  7153  00169C  3612               	rlcf	___lwdiv@divisor^0,f,c
  7154  00169E  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7155  0016A0  2A14               	incf	___lwdiv@counter^0,f,c
  7156  0016A2                     l3598:
  7157  0016A2  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
  7158  0016A4  EF56  F00B         	goto	u2291
  7159  0016A8  EF58  F00B         	goto	u2290
  7160  0016AC                     u2291:
  7161  0016AC  EF4D  F00B         	goto	l3596
  7162  0016B0                     u2290:
  7163  0016B0                     l3600:
  7164  0016B0  90D8               	bcf	status,0,c
  7165  0016B2  3615               	rlcf	___lwdiv@quotient^0,f,c
  7166  0016B4  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7167  0016B6  5012               	movf	___lwdiv@divisor^0,w,c
  7168  0016B8  5C10               	subwf	___lwdiv@dividend^0,w,c
  7169  0016BA  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  7170  0016BC  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7171  0016BE  A0D8               	btfss	status,0,c
  7172  0016C0  EF64  F00B         	goto	u2301
  7173  0016C4  EF66  F00B         	goto	u2300
  7174  0016C8                     u2301:
  7175  0016C8  EF6B  F00B         	goto	l3608
  7176  0016CC                     u2300:
  7177  0016CC  5012               	movf	___lwdiv@divisor^0,w,c
  7178  0016CE  5E10               	subwf	___lwdiv@dividend^0,f,c
  7179  0016D0  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  7180  0016D2  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7181  0016D4  8015               	bsf	___lwdiv@quotient^0,0,c
  7182  0016D6                     l3608:
  7183  0016D6  90D8               	bcf	status,0,c
  7184  0016D8  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7185  0016DA  3212               	rrcf	___lwdiv@divisor^0,f,c
  7186  0016DC  2E14               	decfsz	___lwdiv@counter^0,f,c
  7187  0016DE  EF58  F00B         	goto	l3600
  7188  0016E2                     l1221:
  7189  0016E2  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
  7190  0016E6  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7191  0016EA  0012               	return		;funcret
  7192  0016EC                     __end_of___lwdiv:
  7193                           	opt callstack 0
  7194                           
  7195 ;; *************** function _SDCARD_SetBlockLength *****************
  7196 ;; Defined at:
  7197 ;;		line 174 in file "sdCard.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;		None
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  response        1   16[COMRAM] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1    wreg      unsigned char 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0, cstack
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;Total ram usage:        1 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    5
  7218 ;; This function calls:
  7219 ;;		_SPI2_ExchangeByte
  7220 ;; This function is called by:
  7221 ;;		_SDCARD_Initialize
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text31
  7226  001804                     __ptext31:
  7227                           	opt callstack 0
  7228  001804                     _SDCARD_SetBlockLength:
  7229                           	opt callstack 23
  7230  001804                     l412:
  7231  001804  988A               	bcf	138,4,c	;volatile
  7232  001806                     
  7233                           ;sdCard.c: 180: SPI2_ExchangeByte(0xFF);
  7234  001806  0EFF               	movlw	255
  7235  001808  EC69  F00D         	call	_SPI2_ExchangeByte
  7236                           
  7237                           ;sdCard.c: 181: SPI2_ExchangeByte(0x50);
  7238  00180C  0E50               	movlw	80
  7239  00180E  EC69  F00D         	call	_SPI2_ExchangeByte
  7240                           
  7241                           ;sdCard.c: 182: SPI2_ExchangeByte(0x00);
  7242  001812  0E00               	movlw	0
  7243  001814  EC69  F00D         	call	_SPI2_ExchangeByte
  7244                           
  7245                           ;sdCard.c: 183: SPI2_ExchangeByte(0x00);
  7246  001818  0E00               	movlw	0
  7247  00181A  EC69  F00D         	call	_SPI2_ExchangeByte
  7248                           
  7249                           ;sdCard.c: 184: SPI2_ExchangeByte(0x02);
  7250  00181E  0E02               	movlw	2
  7251  001820  EC69  F00D         	call	_SPI2_ExchangeByte
  7252                           
  7253                           ;sdCard.c: 185: SPI2_ExchangeByte(0x00);
  7254  001824  0E00               	movlw	0
  7255  001826  EC69  F00D         	call	_SPI2_ExchangeByte
  7256                           
  7257                           ;sdCard.c: 186: SPI2_ExchangeByte(0xFF);
  7258  00182A  0EFF               	movlw	255
  7259  00182C  EC69  F00D         	call	_SPI2_ExchangeByte
  7260                           
  7261                           ;sdCard.c: 187: SPI2_ExchangeByte(0xFF);
  7262  001830  0EFF               	movlw	255
  7263  001832  EC69  F00D         	call	_SPI2_ExchangeByte
  7264                           
  7265                           ;sdCard.c: 188: response = SPI2_ExchangeByte(0xFF);
  7266  001836  0EFF               	movlw	255
  7267  001838  EC69  F00D         	call	_SPI2_ExchangeByte
  7268  00183C  6E11               	movwf	SDCARD_SetBlockLength@response^0,c
  7269  00183E  888A               	bsf	138,4,c	;volatile
  7270  001840                     
  7271                           ;sdCard.c: 190: } while(response == 0xFF);
  7272  001840  2811               	incf	SDCARD_SetBlockLength@response^0,w,c
  7273  001842  B4D8               	btfsc	status,2,c
  7274  001844  EF26  F00C         	goto	u1531
  7275  001848  EF28  F00C         	goto	u1530
  7276  00184C                     u1531:
  7277  00184C  EF02  F00C         	goto	l412
  7278  001850                     u1530:
  7279  001850                     
  7280                           ;sdCard.c: 192: return(response);
  7281  001850  5011               	movf	SDCARD_SetBlockLength@response^0,w,c
  7282  001852  0012               	return		;funcret
  7283  001854                     __end_of_SDCARD_SetBlockLength:
  7284                           	opt callstack 0
  7285                           
  7286 ;; *************** function _EUSART1_is_rx_ready *****************
  7287 ;; Defined at:
  7288 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;		None
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      unsigned char 
  7295 ;; Registers used:
  7296 ;;		wreg
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;Total ram usage:        0 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    4
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		_main
  7313 ;;		_doSDInit
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text32
  7318  001B18                     __ptext32:
  7319                           	opt callstack 0
  7320  001B18                     _EUSART1_is_rx_ready:
  7321                           	opt callstack 25
  7322  001B18                     
  7323                           ;eusart1.c: 101: return (bool)(PIR1bits.RC1IF);
  7324  001B18  BA9E               	btfsc	158,5,c	;volatile
  7325  001B1A  EF91  F00D         	goto	u1551
  7326  001B1E  EF94  F00D         	goto	u1550
  7327  001B22                     u1551:
  7328  001B22  0E01               	movlw	1
  7329  001B24  EF95  F00D         	goto	u1556
  7330  001B28                     u1550:
  7331  001B28  0E00               	movlw	0
  7332  001B2A                     u1556:
  7333  001B2A  0012               	return		;funcret
  7334  001B2C                     __end_of_EUSART1_is_rx_ready:
  7335                           	opt callstack 0
  7336                           
  7337 ;; *************** function _EUSART1_Read *****************
  7338 ;; Defined at:
  7339 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;		None
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;		None
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      unsigned char 
  7346 ;; Registers used:
  7347 ;;		wreg, status,2
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;Total ram usage:        0 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    4
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_main
  7364 ;;		_doSDInit
  7365 ;;		_getch
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text33
  7370  001A04                     __ptext33:
  7371                           	opt callstack 0
  7372  001A04                     _EUSART1_Read:
  7373                           	opt callstack 25
  7374  001A04                     l207:
  7375  001A04  AA9E               	btfss	158,5,c	;volatile
  7376  001A06  EF07  F00D         	goto	u1561
  7377  001A0A  EF09  F00D         	goto	u1560
  7378  001A0E                     u1561:
  7379  001A0E  EF02  F00D         	goto	l207
  7380  001A12                     u1560:
  7381  001A12                     
  7382                           ;eusart1.c: 117: };eusart1.c: 119: eusart1RxLastError.status = 0;
  7383  001A12  0E00               	movlw	0
  7384  001A14  6E4C               	movwf	_eusart1RxLastError^0,c	;volatile
  7385  001A16                     
  7386                           ;eusart1.c: 121: if(1 == RCSTA1bits.OERR)
  7387  001A16  A2AB               	btfss	171,1,c	;volatile
  7388  001A18  EF10  F00D         	goto	u1571
  7389  001A1C  EF12  F00D         	goto	u1570
  7390  001A20                     u1571:
  7391  001A20  EF14  F00D         	goto	l2924
  7392  001A24                     u1570:
  7393  001A24                     
  7394                           ;eusart1.c: 122: {;eusart1.c: 125: RCSTA1bits.CREN = 0;
  7395  001A24  98AB               	bcf	171,4,c	;volatile
  7396                           
  7397                           ;eusart1.c: 126: RCSTA1bits.CREN = 1;
  7398  001A26  88AB               	bsf	171,4,c	;volatile
  7399  001A28                     l2924:
  7400                           
  7401                           ;eusart1.c: 127: };eusart1.c: 129: return RCREG1;
  7402  001A28  50AE               	movf	174,w,c	;volatile
  7403  001A2A  0012               	return		;funcret
  7404  001A2C                     __end_of_EUSART1_Read:
  7405                           	opt callstack 0
  7406                           
  7407 ;; *************** function ___awmod *****************
  7408 ;; Defined at:
  7409 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  dividend        2   15[COMRAM] int 
  7412 ;;  divisor         2   17[COMRAM] int 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  sign            1   20[COMRAM] unsigned char 
  7415 ;;  counter         1   19[COMRAM] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  2   15[COMRAM] int 
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;Total ram usage:        6 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    4
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_main
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text34
  7440  0012C4                     __ptext34:
  7441                           	opt callstack 0
  7442  0012C4                     ___awmod:
  7443                           	opt callstack 26
  7444  0012C4  0E00               	movlw	0
  7445  0012C6  6E15               	movwf	___awmod@sign^0,c
  7446  0012C8  BE11               	btfsc	(___awmod@dividend+1)^0,7,c
  7447  0012CA  EF6B  F009         	goto	u1880
  7448  0012CE  EF69  F009         	goto	u1881
  7449  0012D2                     u1881:
  7450  0012D2  EF71  F009         	goto	l3224
  7451  0012D6                     u1880:
  7452  0012D6  6C10               	negf	___awmod@dividend^0,c
  7453  0012D8  1E11               	comf	(___awmod@dividend+1)^0,f,c
  7454  0012DA  B0D8               	btfsc	status,0,c
  7455  0012DC  2A11               	incf	(___awmod@dividend+1)^0,f,c
  7456  0012DE  0E01               	movlw	1
  7457  0012E0  6E15               	movwf	___awmod@sign^0,c
  7458  0012E2                     l3224:
  7459  0012E2  BE13               	btfsc	(___awmod@divisor+1)^0,7,c
  7460  0012E4  EF78  F009         	goto	u1890
  7461  0012E8  EF76  F009         	goto	u1891
  7462  0012EC                     u1891:
  7463  0012EC  EF7C  F009         	goto	l3228
  7464  0012F0                     u1890:
  7465  0012F0  6C12               	negf	___awmod@divisor^0,c
  7466  0012F2  1E13               	comf	(___awmod@divisor+1)^0,f,c
  7467  0012F4  B0D8               	btfsc	status,0,c
  7468  0012F6  2A13               	incf	(___awmod@divisor+1)^0,f,c
  7469  0012F8                     l3228:
  7470  0012F8  5012               	movf	___awmod@divisor^0,w,c
  7471  0012FA  1013               	iorwf	(___awmod@divisor+1)^0,w,c
  7472  0012FC  B4D8               	btfsc	status,2,c
  7473  0012FE  EF83  F009         	goto	u1901
  7474  001302  EF85  F009         	goto	u1900
  7475  001306                     u1901:
  7476  001306  EFA9  F009         	goto	l3244
  7477  00130A                     u1900:
  7478  00130A  0E01               	movlw	1
  7479  00130C  6E14               	movwf	___awmod@counter^0,c
  7480  00130E  EF8D  F009         	goto	l3234
  7481  001312                     l3232:
  7482  001312  90D8               	bcf	status,0,c
  7483  001314  3612               	rlcf	___awmod@divisor^0,f,c
  7484  001316  3613               	rlcf	(___awmod@divisor+1)^0,f,c
  7485  001318  2A14               	incf	___awmod@counter^0,f,c
  7486  00131A                     l3234:
  7487  00131A  AE13               	btfss	(___awmod@divisor+1)^0,7,c
  7488  00131C  EF92  F009         	goto	u1911
  7489  001320  EF94  F009         	goto	u1910
  7490  001324                     u1911:
  7491  001324  EF89  F009         	goto	l3232
  7492  001328                     u1910:
  7493  001328                     l3236:
  7494  001328  5012               	movf	___awmod@divisor^0,w,c
  7495  00132A  5C10               	subwf	___awmod@dividend^0,w,c
  7496  00132C  5013               	movf	(___awmod@divisor+1)^0,w,c
  7497  00132E  5811               	subwfb	(___awmod@dividend+1)^0,w,c
  7498  001330  A0D8               	btfss	status,0,c
  7499  001332  EF9D  F009         	goto	u1921
  7500  001336  EF9F  F009         	goto	u1920
  7501  00133A                     u1921:
  7502  00133A  EFA3  F009         	goto	l3240
  7503  00133E                     u1920:
  7504  00133E  5012               	movf	___awmod@divisor^0,w,c
  7505  001340  5E10               	subwf	___awmod@dividend^0,f,c
  7506  001342  5013               	movf	(___awmod@divisor+1)^0,w,c
  7507  001344  5A11               	subwfb	(___awmod@dividend+1)^0,f,c
  7508  001346                     l3240:
  7509  001346  90D8               	bcf	status,0,c
  7510  001348  3213               	rrcf	(___awmod@divisor+1)^0,f,c
  7511  00134A  3212               	rrcf	___awmod@divisor^0,f,c
  7512  00134C  2E14               	decfsz	___awmod@counter^0,f,c
  7513  00134E  EF94  F009         	goto	l3236
  7514  001352                     l3244:
  7515  001352  5015               	movf	___awmod@sign^0,w,c
  7516  001354  B4D8               	btfsc	status,2,c
  7517  001356  EFAF  F009         	goto	u1931
  7518  00135A  EFB1  F009         	goto	u1930
  7519  00135E                     u1931:
  7520  00135E  EFB5  F009         	goto	l3248
  7521  001362                     u1930:
  7522  001362  6C10               	negf	___awmod@dividend^0,c
  7523  001364  1E11               	comf	(___awmod@dividend+1)^0,f,c
  7524  001366  B0D8               	btfsc	status,0,c
  7525  001368  2A11               	incf	(___awmod@dividend+1)^0,f,c
  7526  00136A                     l3248:
  7527  00136A  C010  F010         	movff	___awmod@dividend,?___awmod
  7528  00136E  C011  F011         	movff	___awmod@dividend+1,?___awmod+1
  7529  001372  0012               	return		;funcret
  7530  001374                     __end_of___awmod:
  7531                           	opt callstack 0
  7532                           
  7533 ;; *************** function _SDCARD_WriteBlock *****************
  7534 ;; Defined at:
  7535 ;;		line 51 in file "sdCard.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  addr            4   16[COMRAM] unsigned long 
  7538 ;;  sdCardBuffer    2   20[COMRAM] PTR unsigned char 
  7539 ;;		 -> blueBuffer(512), redBuffer(512), sdCardBuffer(512), 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  i               2   22[COMRAM] unsigned int 
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7551 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;Total ram usage:        8 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:    5
  7558 ;; This function calls:
  7559 ;;		_SPI2_ExchangeByte
  7560 ;; This function is called by:
  7561 ;;		_main
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text35
  7566  0015EA                     __ptext35:
  7567                           	opt callstack 0
  7568  0015EA                     _SDCARD_WriteBlock:
  7569                           	opt callstack 25
  7570  0015EA  988A               	bcf	138,4,c	;volatile
  7571  0015EC                     
  7572                           ;sdCard.c: 57: SPI2_ExchangeByte(0xFF);
  7573  0015EC  0EFF               	movlw	255
  7574  0015EE  EC69  F00D         	call	_SPI2_ExchangeByte
  7575  0015F2                     
  7576                           ;sdCard.c: 58: SPI2_ExchangeByte(0x40 | 24);
  7577  0015F2  0E58               	movlw	88
  7578  0015F4  EC69  F00D         	call	_SPI2_ExchangeByte
  7579  0015F8                     
  7580                           ;sdCard.c: 59: SPI2_ExchangeByte((uint8_t)((addr >> 24) & 0xFF));
  7581  0015F8  5014               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  7582  0015FA  EC69  F00D         	call	_SPI2_ExchangeByte
  7583  0015FE                     
  7584                           ;sdCard.c: 60: SPI2_ExchangeByte((uint8_t)((addr >> 16) & 0xFF));
  7585  0015FE  5013               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  7586  001600  EC69  F00D         	call	_SPI2_ExchangeByte
  7587  001604                     
  7588                           ;sdCard.c: 61: SPI2_ExchangeByte((uint8_t)((addr >> 8) & 0xFF));
  7589  001604  5012               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  7590  001606  EC69  F00D         	call	_SPI2_ExchangeByte
  7591  00160A                     
  7592                           ;sdCard.c: 62: SPI2_ExchangeByte((uint8_t)(addr & 0xFF));
  7593  00160A  5011               	movf	SDCARD_WriteBlock@addr^0,w,c
  7594  00160C  EC69  F00D         	call	_SPI2_ExchangeByte
  7595  001610                     
  7596                           ;sdCard.c: 63: SPI2_ExchangeByte(0xFF);
  7597  001610  0EFF               	movlw	255
  7598  001612  EC69  F00D         	call	_SPI2_ExchangeByte
  7599  001616                     l3092:
  7600  001616  0EFF               	movlw	255
  7601  001618  EC69  F00D         	call	_SPI2_ExchangeByte
  7602  00161C  0AFF               	xorlw	255
  7603  00161E  B4D8               	btfsc	status,2,c
  7604  001620  EF14  F00B         	goto	u1741
  7605  001624  EF16  F00B         	goto	u1740
  7606  001628                     u1741:
  7607  001628  EF0B  F00B         	goto	l3092
  7608  00162C                     u1740:
  7609  00162C                     
  7610                           ;sdCard.c: 69: SPI2_ExchangeByte(0xFF);
  7611  00162C  0EFF               	movlw	255
  7612  00162E  EC69  F00D         	call	_SPI2_ExchangeByte
  7613                           
  7614                           ;sdCard.c: 70: SPI2_ExchangeByte(0xFF);
  7615  001632  0EFF               	movlw	255
  7616  001634  EC69  F00D         	call	_SPI2_ExchangeByte
  7617                           
  7618                           ;sdCard.c: 71: SPI2_ExchangeByte(0xFF);
  7619  001638  0EFF               	movlw	255
  7620  00163A  EC69  F00D         	call	_SPI2_ExchangeByte
  7621                           
  7622                           ;sdCard.c: 74: SPI2_ExchangeByte(0xFE);
  7623  00163E  0EFE               	movlw	254
  7624  001640  EC69  F00D         	call	_SPI2_ExchangeByte
  7625  001644                     
  7626                           ;sdCard.c: 77: for(i = 0; i < 512; i++)
  7627  001644  0E00               	movlw	0
  7628  001646  6E18               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  7629  001648  0E00               	movlw	0
  7630  00164A  6E17               	movwf	SDCARD_WriteBlock@i^0,c
  7631  00164C                     l3102:
  7632                           
  7633                           ;sdCard.c: 78: SPI2_ExchangeByte(sdCardBuffer[i]);
  7634  00164C  5017               	movf	SDCARD_WriteBlock@i^0,w,c
  7635  00164E  2415               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  7636  001650  6ED9               	movwf	fsr2l,c
  7637  001652  5018               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  7638  001654  2016               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  7639  001656  6EDA               	movwf	fsr2h,c
  7640  001658  50DF               	movf	indf2,w,c
  7641  00165A  EC69  F00D         	call	_SPI2_ExchangeByte
  7642  00165E  4A17               	infsnz	SDCARD_WriteBlock@i^0,f,c
  7643  001660  2A18               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  7644  001662  0E02               	movlw	2
  7645  001664  5C18               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  7646  001666  A0D8               	btfss	status,0,c
  7647  001668  EF38  F00B         	goto	u1751
  7648  00166C  EF3A  F00B         	goto	u1750
  7649  001670                     u1751:
  7650  001670  EF26  F00B         	goto	l3102
  7651  001674                     u1750:
  7652  001674  888A               	bsf	138,4,c	;volatile
  7653  001676  0012               	return		;funcret
  7654  001678                     __end_of_SDCARD_WriteBlock:
  7655                           	opt callstack 0
  7656                           
  7657 ;; *************** function _SDCARD_ReadBlock *****************
  7658 ;; Defined at:
  7659 ;;		line 17 in file "sdCard.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  addr            4   16[COMRAM] unsigned long 
  7662 ;;  sdCardBuffer    2   20[COMRAM] PTR unsigned char 
  7663 ;;		 -> blueBuffer(512), redBuffer(512), sdCardBuffer(512), 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  i               2   22[COMRAM] unsigned int 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7675 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7678 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7679 ;;Total ram usage:        8 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    5
  7682 ;; This function calls:
  7683 ;;		_SPI2_ExchangeByte
  7684 ;; This function is called by:
  7685 ;;		_main
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text36
  7690  0014C0                     __ptext36:
  7691                           	opt callstack 0
  7692  0014C0                     _SDCARD_ReadBlock:
  7693                           	opt callstack 25
  7694  0014C0  988A               	bcf	138,4,c	;volatile
  7695  0014C2                     
  7696                           ;sdCard.c: 22: SPI2_ExchangeByte(0xFF);
  7697  0014C2  0EFF               	movlw	255
  7698  0014C4  EC69  F00D         	call	_SPI2_ExchangeByte
  7699  0014C8                     
  7700                           ;sdCard.c: 23: SPI2_ExchangeByte(0x40 | 17);
  7701  0014C8  0E51               	movlw	81
  7702  0014CA  EC69  F00D         	call	_SPI2_ExchangeByte
  7703  0014CE                     
  7704                           ;sdCard.c: 24: SPI2_ExchangeByte((uint8_t)((addr >> 24) & 0xFF));
  7705  0014CE  5014               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  7706  0014D0  EC69  F00D         	call	_SPI2_ExchangeByte
  7707  0014D4                     
  7708                           ;sdCard.c: 25: SPI2_ExchangeByte((uint8_t)((addr >> 16) & 0xFF));
  7709  0014D4  5013               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  7710  0014D6  EC69  F00D         	call	_SPI2_ExchangeByte
  7711  0014DA                     
  7712                           ;sdCard.c: 26: SPI2_ExchangeByte((uint8_t)((addr >> 8) & 0xFF));
  7713  0014DA  5012               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  7714  0014DC  EC69  F00D         	call	_SPI2_ExchangeByte
  7715  0014E0                     
  7716                           ;sdCard.c: 27: SPI2_ExchangeByte((uint8_t)(addr & 0xFF));
  7717  0014E0  5011               	movf	SDCARD_ReadBlock@addr^0,w,c
  7718  0014E2  EC69  F00D         	call	_SPI2_ExchangeByte
  7719  0014E6                     
  7720                           ;sdCard.c: 28: SPI2_ExchangeByte(0xFF);
  7721  0014E6  0EFF               	movlw	255
  7722  0014E8  EC69  F00D         	call	_SPI2_ExchangeByte
  7723  0014EC                     l3054:
  7724  0014EC  0EFF               	movlw	255
  7725  0014EE  EC69  F00D         	call	_SPI2_ExchangeByte
  7726  0014F2  0AFF               	xorlw	255
  7727  0014F4  B4D8               	btfsc	status,2,c
  7728  0014F6  EF7F  F00A         	goto	u1711
  7729  0014FA  EF81  F00A         	goto	u1710
  7730  0014FE                     u1711:
  7731  0014FE  EF76  F00A         	goto	l3054
  7732  001502                     u1710:
  7733  001502                     l3056:
  7734  001502  0EFF               	movlw	255
  7735  001504  EC69  F00D         	call	_SPI2_ExchangeByte
  7736  001508  0AFF               	xorlw	255
  7737  00150A  B4D8               	btfsc	status,2,c
  7738  00150C  EF8A  F00A         	goto	u1721
  7739  001510  EF8C  F00A         	goto	u1720
  7740  001514                     u1721:
  7741  001514  EF81  F00A         	goto	l3056
  7742  001518                     u1720:
  7743  001518                     
  7744                           ;sdCard.c: 37: for(i = 0; i < 512; i++)
  7745  001518  0E00               	movlw	0
  7746  00151A  6E18               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  7747  00151C  0E00               	movlw	0
  7748  00151E  6E17               	movwf	SDCARD_ReadBlock@i^0,c
  7749  001520                     l3064:
  7750                           
  7751                           ;sdCard.c: 38: sdCardBuffer[i] = SPI2_ExchangeByte(0xFF);
  7752  001520  5017               	movf	SDCARD_ReadBlock@i^0,w,c
  7753  001522  2415               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  7754  001524  6ED9               	movwf	fsr2l,c
  7755  001526  5018               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  7756  001528  2016               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  7757  00152A  6EDA               	movwf	fsr2h,c
  7758  00152C  0EFF               	movlw	255
  7759  00152E  EC69  F00D         	call	_SPI2_ExchangeByte
  7760  001532  6EDF               	movwf	indf2,c
  7761  001534  4A17               	infsnz	SDCARD_ReadBlock@i^0,f,c
  7762  001536  2A18               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  7763  001538  0E02               	movlw	2
  7764  00153A  5C18               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  7765  00153C  A0D8               	btfss	status,0,c
  7766  00153E  EFA3  F00A         	goto	u1731
  7767  001542  EFA5  F00A         	goto	u1730
  7768  001546                     u1731:
  7769  001546  EF90  F00A         	goto	l3064
  7770  00154A                     u1730:
  7771  00154A                     
  7772                           ;sdCard.c: 41: SPI2_ExchangeByte(0xFF);
  7773  00154A  0EFF               	movlw	255
  7774  00154C  EC69  F00D         	call	_SPI2_ExchangeByte
  7775                           
  7776                           ;sdCard.c: 42: SPI2_ExchangeByte(0xFF);
  7777  001550  0EFF               	movlw	255
  7778  001552  EC69  F00D         	call	_SPI2_ExchangeByte
  7779  001556  888A               	bsf	138,4,c	;volatile
  7780  001558  0012               	return		;funcret
  7781  00155A                     __end_of_SDCARD_ReadBlock:
  7782                           	opt callstack 0
  7783                           
  7784 ;; *************** function _SDCARD_PollWriteComplete *****************
  7785 ;; Defined at:
  7786 ;;		line 88 in file "sdCard.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  status          1   16[COMRAM] unsigned char 
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      unsigned char 
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0, cstack
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;Total ram usage:        1 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    5
  7807 ;; This function calls:
  7808 ;;		_SPI2_ExchangeByte
  7809 ;; This function is called by:
  7810 ;;		_main
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text37
  7815  0018D4                     __ptext37:
  7816                           	opt callstack 0
  7817  0018D4                     _SDCARD_PollWriteComplete:
  7818                           	opt callstack 25
  7819  0018D4  988A               	bcf	138,4,c	;volatile
  7820  0018D6                     
  7821                           ;sdCard.c: 93: status = SPI2_ExchangeByte(13);
  7822  0018D6  0E0D               	movlw	13
  7823  0018D8  EC69  F00D         	call	_SPI2_ExchangeByte
  7824  0018DC  6E11               	movwf	SDCARD_PollWriteComplete@status^0,c
  7825  0018DE  888A               	bsf	138,4,c	;volatile
  7826  0018E0                     
  7827                           ;sdCard.c: 96: if (status == 0xFF) {
  7828  0018E0  2811               	incf	SDCARD_PollWriteComplete@status^0,w,c
  7829  0018E2  A4D8               	btfss	status,2,c
  7830  0018E4  EF76  F00C         	goto	u1761
  7831  0018E8  EF78  F00C         	goto	u1760
  7832  0018EC                     u1761:
  7833  0018EC  EF7B  F00C         	goto	l3120
  7834  0018F0                     u1760:
  7835  0018F0                     
  7836                           ;sdCard.c: 97: return (0xFF);
  7837  0018F0  0EFF               	movlw	255
  7838  0018F2  EF85  F00C         	goto	l387
  7839  0018F6                     l3120:
  7840                           
  7841                           ;sdCard.c: 100: (void) SPI2_ExchangeByte(0xFF);
  7842  0018F6  0EFF               	movlw	255
  7843  0018F8  EC69  F00D         	call	_SPI2_ExchangeByte
  7844                           
  7845                           ;sdCard.c: 101: (void) SPI2_ExchangeByte(0xFF);
  7846  0018FC  0EFF               	movlw	255
  7847  0018FE  EC69  F00D         	call	_SPI2_ExchangeByte
  7848                           
  7849                           ;sdCard.c: 102: (void) SPI2_ExchangeByte(0xFF);
  7850  001902  0EFF               	movlw	255
  7851  001904  EC69  F00D         	call	_SPI2_ExchangeByte
  7852  001908                     
  7853                           ;sdCard.c: 103: return(status);
  7854  001908  5011               	movf	SDCARD_PollWriteComplete@status^0,w,c
  7855  00190A                     l387:
  7856  00190A  0012               	return		;funcret
  7857  00190C                     __end_of_SDCARD_PollWriteComplete:
  7858                           	opt callstack 0
  7859                           
  7860 ;; *************** function _SPI2_ExchangeByte *****************
  7861 ;; Defined at:
  7862 ;;		line 92 in file "mcc_generated_files/spi2.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  data            1    wreg     unsigned char 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  data            1   15[COMRAM] unsigned char 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      unsigned char 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;Total ram usage:        1 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    4
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_SDCARD_ReadBlock
  7887 ;;		_SDCARD_WriteBlock
  7888 ;;		_SDCARD_PollWriteComplete
  7889 ;;		_SDCARD_Initialize
  7890 ;;		_SDCARD_SetIdle
  7891 ;;		_SDCARD_SetBlockLength
  7892 ;;		_SPI2_WriteBlock
  7893 ;;		_SPI2_ReadBlock
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text38
  7898  001AD2                     __ptext38:
  7899                           	opt callstack 0
  7900  001AD2                     _SPI2_ExchangeByte:
  7901                           	opt callstack 24
  7902                           
  7903                           ;incstack = 0
  7904                           ;SPI2_ExchangeByte@data stored from wreg
  7905  001AD2  6E10               	movwf	SPI2_ExchangeByte@data^0,c
  7906  001AD4                     
  7907                           ;spi2.c: 94: SSP2BUF = data;
  7908  001AD4  C010  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
  7909  001AD8                     l77:
  7910  001AD8  AEA4               	btfss	164,7,c	;volatile
  7911  001ADA  EF71  F00D         	goto	u1251
  7912  001ADE  EF73  F00D         	goto	u1250
  7913  001AE2                     u1251:
  7914  001AE2  EF6C  F00D         	goto	l77
  7915  001AE6                     u1250:
  7916  001AE6                     
  7917                           ;spi2.c: 96: PIR3bits.SSP2IF = 0;
  7918  001AE6  9EA4               	bcf	164,7,c	;volatile
  7919                           
  7920                           ;spi2.c: 97: return SSP2BUF;
  7921  001AE8  506F               	movf	111,w,c	;volatile
  7922  001AEA  0012               	return		;funcret
  7923  001AEC                     __end_of_SPI2_ExchangeByte:
  7924                           	opt callstack 0
  7925                           
  7926 ;; *************** function _INTERRUPT_InterruptManager *****************
  7927 ;; Defined at:
  7928 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;		None
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;		None
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  1    wreg      void 
  7935 ;; Registers used:
  7936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;Total ram usage:        4 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    3
  7949 ;; This function calls:
  7950 ;;		_TMR0_ISR
  7951 ;; This function is called by:
  7952 ;;		Interrupt level 2
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	intcode
  7957  000008                     __pintcode:
  7958                           	opt callstack 0
  7959  000008                     _INTERRUPT_InterruptManager:
  7960                           	opt callstack 21
  7961                           
  7962                           ;incstack = 0
  7963  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7964  00000A  CFFA F00C          	movff	pclath,??_INTERRUPT_InterruptManager
  7965  00000E  CFFB F00D          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7966  000012  CFD9 F00E          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  7967  000016  CFDA F00F          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  7968  00001A                     
  7969                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  7970  00001A  AAF2               	btfss	242,5,c	;volatile
  7971  00001C  EF12  F000         	goto	i2u196_41
  7972  000020  EF14  F000         	goto	i2u196_40
  7973  000024                     i2u196_41:
  7974  000024  EF1D  F000         	goto	i2l257
  7975  000028                     i2u196_40:
  7976  000028  A4F2               	btfss	242,2,c	;volatile
  7977  00002A  EF19  F000         	goto	i2u197_41
  7978  00002E  EF1B  F000         	goto	i2u197_40
  7979  000032                     i2u197_41:
  7980  000032  EF1D  F000         	goto	i2l257
  7981  000036                     i2u197_40:
  7982  000036                     
  7983                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  7984  000036  EC86  F00C         	call	_TMR0_ISR	;wreg free
  7985  00003A                     i2l257:
  7986  00003A  C00F  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  7987  00003E  C00E  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  7988  000042  C00D  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7989  000046  C00C  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7990  00004A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7991  00004C  0011               	retfie		f
  7992  00004E                     __end_of_INTERRUPT_InterruptManager:
  7993                           	opt callstack 0
  7994                           
  7995 ;; *************** function _TMR0_ISR *****************
  7996 ;; Defined at:
  7997 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;		None
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;		None
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  1    wreg      void 
  8004 ;; Registers used:
  8005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;Total ram usage:        0 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:    2
  8018 ;; This function calls:
  8019 ;;		Absolute function
  8020 ;;		_TMR0_DefaultInterruptHandler
  8021 ;;		_myTMR0ISR
  8022 ;; This function is called by:
  8023 ;;		_INTERRUPT_InterruptManager
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text40
  8028  00190C                     __ptext40:
  8029                           	opt callstack 0
  8030  00190C                     _TMR0_ISR:
  8031                           	opt callstack 21
  8032  00190C                     
  8033                           ;tmr0.c: 140: INTCONbits.TMR0IF = 0;
  8034  00190C  94F2               	bcf	242,2,c	;volatile
  8035  00190E                     
  8036                           ;tmr0.c: 144: TMR0H = timer0ReloadVal >> 8;
  8037  00190E  5045               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  8038  001910  6ED7               	movwf	215,c	;volatile
  8039  001912                     
  8040                           ;tmr0.c: 145: TMR0L = (uint8_t) timer0ReloadVal;
  8041  001912  C044  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  8042  001916                     
  8043                           ;tmr0.c: 147: if(TMR0_InterruptHandler)
  8044  001916  5046               	movf	_TMR0_InterruptHandler^0,w,c
  8045  001918  1047               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  8046  00191A  B4D8               	btfsc	status,2,c
  8047  00191C  EF92  F00C         	goto	i2u169_41
  8048  001920  EF94  F00C         	goto	i2u169_40
  8049  001924                     i2u169_41:
  8050  001924  EFA0  F00C         	goto	i2l40
  8051  001928                     i2u169_40:
  8052  001928                     
  8053                           ;tmr0.c: 148: {;tmr0.c: 149: TMR0_InterruptHandler();
  8054  001928  D802               	call	i2u170_48
  8055  00192A  EFA0  F00C         	goto	i2u170_49
  8056  00192E                     i2u170_48:
  8057  00192E  0005               	push	
  8058  001930  6EFA               	movwf	pclath,c
  8059  001932  5046               	movf	_TMR0_InterruptHandler^0,w,c
  8060  001934  6EFD               	movwf	tosl,c
  8061  001936  5047               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  8062  001938  6EFE               	movwf	tosh,c
  8063  00193A  6AFF               	clrf	tosu,c
  8064  00193C  50FA               	movf	pclath,w,c
  8065  00193E  0012               	return		;indir
  8066  001940                     i2u170_49:
  8067  001940                     i2l40:
  8068  001940  0012               	return		;funcret
  8069  001942                     __end_of_TMR0_ISR:
  8070                           	opt callstack 0
  8071                           
  8072 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8073 ;; Defined at:
  8074 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		None
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		_TMR0_Initialize
  8098 ;;		_TMR0_ISR
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           	psect	text41
  8103  001BA0                     __ptext41:
  8104                           	opt callstack 0
  8105  001BA0                     _TMR0_DefaultInterruptHandler:
  8106                           	opt callstack 22
  8107  001BA0  0012               	return		;funcret
  8108  001BA2                     __end_of_TMR0_DefaultInterruptHandler:
  8109                           	opt callstack 0
  8110                           
  8111 ;; *************** function _myTMR0ISR *****************
  8112 ;; Defined at:
  8113 ;;		line 371 in file "main.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;		None
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      void 
  8120 ;; Registers used:
  8121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;Total ram usage:        1 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:    1
  8134 ;; This function calls:
  8135 ;;		_EPWM1_LoadDutyValue
  8136 ;;		_TMR0_ReadTimer
  8137 ;;		i2_TMR0_WriteTimer
  8138 ;; This function is called by:
  8139 ;;		_initializeAll
  8140 ;;		_TMR0_ISR
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text42
  8145  00106E                     __ptext42:
  8146                           	opt callstack 0
  8147  00106E                     _myTMR0ISR:
  8148                           	opt callstack 21
  8149  00106E                     
  8150                           ;main.c: 372: static uint8_t currentColor = 0;;main.c: 373: static uint16_t i = 0;;main.
      +                          c: 374: static uint8_t adcResult;;main.c: 376: ADCON0bits.GO_NOT_DONE = 1;
  8151  00106E  82C2               	bsf	194,1,c	;volatile
  8152                           
  8153                           ;main.c: 377: adcResult = ADRESH;
  8154  001070  CFC4 F048          	movff	4036,myTMR0ISR@adcResult	;volatile
  8155  001074                     
  8156                           ;main.c: 379: if(recording) {
  8157  001074  504B               	movf	_recording^0,w,c
  8158  001076  B4D8               	btfsc	status,2,c
  8159  001078  EF40  F008         	goto	i2u161_41
  8160  00107C  EF42  F008         	goto	i2u161_40
  8161  001080                     i2u161_41:
  8162  001080  EF86  F008         	goto	i2l598
  8163  001084                     i2u161_40:
  8164  001084                     
  8165                           ;main.c: 380: if(currentColor == 0) {
  8166  001084  5049               	movf	myTMR0ISR@currentColor^0,w,c
  8167  001086  A4D8               	btfss	status,2,c
  8168  001088  EF48  F008         	goto	i2u162_41
  8169  00108C  EF4A  F008         	goto	i2u162_40
  8170  001090                     i2u162_41:
  8171  001090  EF69  F008         	goto	i2l2996
  8172  001094                     i2u162_40:
  8173  001094                     
  8174                           ;main.c: 381: redBuffer[i] = adcResult;
  8175  001094  0E9C               	movlw	low _redBuffer
  8176  001096  243A               	addwf	myTMR0ISR@i^0,w,c
  8177  001098  6ED9               	movwf	fsr2l,c
  8178  00109A  0E00               	movlw	high _redBuffer
  8179  00109C  203B               	addwfc	(myTMR0ISR@i+1)^0,w,c
  8180  00109E  6EDA               	movwf	fsr2h,c
  8181  0010A0  C048  FFDF         	movff	myTMR0ISR@adcResult,indf2
  8182  0010A4                     
  8183                           ;main.c: 382: i++;
  8184  0010A4  4A3A               	infsnz	myTMR0ISR@i^0,f,c
  8185  0010A6  2A3B               	incf	(myTMR0ISR@i+1)^0,f,c
  8186  0010A8                     
  8187                           ;main.c: 383: if(i == 512) {
  8188  0010A8  0E02               	movlw	2
  8189  0010AA  183B               	xorwf	(myTMR0ISR@i+1)^0,w,c
  8190  0010AC  103A               	iorwf	myTMR0ISR@i^0,w,c
  8191  0010AE  A4D8               	btfss	status,2,c
  8192  0010B0  EF5C  F008         	goto	i2u163_41
  8193  0010B4  EF5E  F008         	goto	i2u163_40
  8194  0010B8                     i2u163_41:
  8195  0010B8  EF86  F008         	goto	i2l598
  8196  0010BC                     i2u163_40:
  8197  0010BC                     
  8198                           ;main.c: 384: i = 0;
  8199  0010BC  0E00               	movlw	0
  8200  0010BE  6E3B               	movwf	(myTMR0ISR@i+1)^0,c
  8201  0010C0  0E00               	movlw	0
  8202  0010C2  6E3A               	movwf	myTMR0ISR@i^0,c
  8203                           
  8204                           ;main.c: 385: redBufferFull = 1;
  8205  0010C4  0E01               	movlw	1
  8206  0010C6  0100               	movlb	0	; () banked
  8207  0010C8  6F9B               	movwf	_redBufferFull& (0+255),b
  8208                           
  8209                           ;main.c: 386: currentColor = 1;
  8210  0010CA  0E01               	movlw	1
  8211  0010CC  6E49               	movwf	myTMR0ISR@currentColor^0,c
  8212  0010CE  EF86  F008         	goto	i2l598
  8213  0010D2                     i2l2996:
  8214                           
  8215                           ;main.c: 389: blueBuffer[i] = adcResult;
  8216  0010D2  0E9C               	movlw	low _blueBuffer
  8217  0010D4  243A               	addwf	myTMR0ISR@i^0,w,c
  8218  0010D6  6ED9               	movwf	fsr2l,c
  8219  0010D8  0E02               	movlw	high _blueBuffer
  8220  0010DA  203B               	addwfc	(myTMR0ISR@i+1)^0,w,c
  8221  0010DC  6EDA               	movwf	fsr2h,c
  8222  0010DE  C048  FFDF         	movff	myTMR0ISR@adcResult,indf2
  8223  0010E2                     
  8224                           ;main.c: 390: i++;
  8225  0010E2  4A3A               	infsnz	myTMR0ISR@i^0,f,c
  8226  0010E4  2A3B               	incf	(myTMR0ISR@i+1)^0,f,c
  8227  0010E6                     
  8228                           ;main.c: 391: if(i == 512) {
  8229  0010E6  0E02               	movlw	2
  8230  0010E8  183B               	xorwf	(myTMR0ISR@i+1)^0,w,c
  8231  0010EA  103A               	iorwf	myTMR0ISR@i^0,w,c
  8232  0010EC  A4D8               	btfss	status,2,c
  8233  0010EE  EF7B  F008         	goto	i2u164_41
  8234  0010F2  EF7D  F008         	goto	i2u164_40
  8235  0010F6                     i2u164_41:
  8236  0010F6  EF86  F008         	goto	i2l598
  8237  0010FA                     i2u164_40:
  8238  0010FA                     
  8239                           ;main.c: 392: i = 0;
  8240  0010FA  0E00               	movlw	0
  8241  0010FC  6E3B               	movwf	(myTMR0ISR@i+1)^0,c
  8242  0010FE  0E00               	movlw	0
  8243  001100  6E3A               	movwf	myTMR0ISR@i^0,c
  8244                           
  8245                           ;main.c: 393: blueBufferFull = 1;
  8246  001102  0E01               	movlw	1
  8247  001104  0100               	movlb	0	; () banked
  8248  001106  6F9A               	movwf	_blueBufferFull& (0+255),b
  8249                           
  8250                           ;main.c: 394: currentColor = 0;
  8251  001108  0E00               	movlw	0
  8252  00110A  6E49               	movwf	myTMR0ISR@currentColor^0,c
  8253  00110C                     i2l598:
  8254                           
  8255                           ;main.c: 395: };main.c: 396: };main.c: 397: };main.c: 399: if (playingSound){
  8256  00110C  504A               	movf	_playingSound^0,w,c
  8257  00110E  B4D8               	btfsc	status,2,c
  8258  001110  EF8C  F008         	goto	i2u165_41
  8259  001114  EF8E  F008         	goto	i2u165_40
  8260  001118                     i2u165_41:
  8261  001118  EFDC  F008         	goto	i2l3022
  8262  00111C                     i2u165_40:
  8263  00111C                     
  8264                           ;main.c: 400: if (currentColor == 0){
  8265  00111C  5049               	movf	myTMR0ISR@currentColor^0,w,c
  8266  00111E  A4D8               	btfss	status,2,c
  8267  001120  EF94  F008         	goto	i2u166_41
  8268  001124  EF96  F008         	goto	i2u166_40
  8269  001128                     i2u166_41:
  8270  001128  EFBA  F008         	goto	i2l3014
  8271  00112C                     i2u166_40:
  8272  00112C                     
  8273                           ;main.c: 401: EPWM1_LoadDutyValue(redBuffer[i]);
  8274  00112C  0E9C               	movlw	low _redBuffer
  8275  00112E  243A               	addwf	myTMR0ISR@i^0,w,c
  8276  001130  6ED9               	movwf	fsr2l,c
  8277  001132  0E00               	movlw	high _redBuffer
  8278  001134  203B               	addwfc	(myTMR0ISR@i+1)^0,w,c
  8279  001136  6EDA               	movwf	fsr2h,c
  8280  001138  50DF               	movf	indf2,w,c
  8281  00113A  6E0B               	movwf	??_myTMR0ISR^0,c
  8282  00113C  500B               	movf	??_myTMR0ISR^0,w,c
  8283  00113E  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  8284  001140  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  8285  001142  ECD4  F00C         	call	_EPWM1_LoadDutyValue	;wreg free
  8286  001146                     
  8287                           ;main.c: 402: i++;
  8288  001146  4A3A               	infsnz	myTMR0ISR@i^0,f,c
  8289  001148  2A3B               	incf	(myTMR0ISR@i+1)^0,f,c
  8290  00114A                     
  8291                           ;main.c: 403: if(i == 512){
  8292  00114A  0E02               	movlw	2
  8293  00114C  183B               	xorwf	(myTMR0ISR@i+1)^0,w,c
  8294  00114E  103A               	iorwf	myTMR0ISR@i^0,w,c
  8295  001150  A4D8               	btfss	status,2,c
  8296  001152  EFAD  F008         	goto	i2u167_41
  8297  001156  EFAF  F008         	goto	i2u167_40
  8298  00115A                     i2u167_41:
  8299  00115A  EFDC  F008         	goto	i2l3022
  8300  00115E                     i2u167_40:
  8301  00115E                     
  8302                           ;main.c: 404: i = 0;
  8303  00115E  0E00               	movlw	0
  8304  001160  6E3B               	movwf	(myTMR0ISR@i+1)^0,c
  8305  001162  0E00               	movlw	0
  8306  001164  6E3A               	movwf	myTMR0ISR@i^0,c
  8307                           
  8308                           ;main.c: 405: redBufferIsEmpty = 1;
  8309  001166  0E01               	movlw	1
  8310  001168  0100               	movlb	0	; () banked
  8311  00116A  6F99               	movwf	_redBufferIsEmpty& (0+255),b
  8312                           
  8313                           ;main.c: 406: currentColor = 1;
  8314  00116C  0E01               	movlw	1
  8315  00116E  6E49               	movwf	myTMR0ISR@currentColor^0,c
  8316  001170  EFDC  F008         	goto	i2l3022
  8317  001174                     i2l3014:
  8318                           
  8319                           ;main.c: 409: else {;main.c: 410: EPWM1_LoadDutyValue(blueBuffer[i]);
  8320  001174  0E9C               	movlw	low _blueBuffer
  8321  001176  243A               	addwf	myTMR0ISR@i^0,w,c
  8322  001178  6ED9               	movwf	fsr2l,c
  8323  00117A  0E02               	movlw	high _blueBuffer
  8324  00117C  203B               	addwfc	(myTMR0ISR@i+1)^0,w,c
  8325  00117E  6EDA               	movwf	fsr2h,c
  8326  001180  50DF               	movf	indf2,w,c
  8327  001182  6E0B               	movwf	??_myTMR0ISR^0,c
  8328  001184  500B               	movf	??_myTMR0ISR^0,w,c
  8329  001186  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  8330  001188  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  8331  00118A  ECD4  F00C         	call	_EPWM1_LoadDutyValue	;wreg free
  8332  00118E                     
  8333                           ;main.c: 411: i++;
  8334  00118E  4A3A               	infsnz	myTMR0ISR@i^0,f,c
  8335  001190  2A3B               	incf	(myTMR0ISR@i+1)^0,f,c
  8336  001192                     
  8337                           ;main.c: 412: if(i == 512){
  8338  001192  0E02               	movlw	2
  8339  001194  183B               	xorwf	(myTMR0ISR@i+1)^0,w,c
  8340  001196  103A               	iorwf	myTMR0ISR@i^0,w,c
  8341  001198  A4D8               	btfss	status,2,c
  8342  00119A  EFD1  F008         	goto	i2u168_41
  8343  00119E  EFD3  F008         	goto	i2u168_40
  8344  0011A2                     i2u168_41:
  8345  0011A2  EFDC  F008         	goto	i2l3022
  8346  0011A6                     i2u168_40:
  8347  0011A6                     
  8348                           ;main.c: 413: i = 0;
  8349  0011A6  0E00               	movlw	0
  8350  0011A8  6E3B               	movwf	(myTMR0ISR@i+1)^0,c
  8351  0011AA  0E00               	movlw	0
  8352  0011AC  6E3A               	movwf	myTMR0ISR@i^0,c
  8353                           
  8354                           ;main.c: 414: blueBufferIsEmpty = 1;
  8355  0011AE  0E01               	movlw	1
  8356  0011B0  0100               	movlb	0	; () banked
  8357  0011B2  6F98               	movwf	_blueBufferIsEmpty& (0+255),b
  8358                           
  8359                           ;main.c: 415: currentColor = 0;
  8360  0011B4  0E00               	movlw	0
  8361  0011B6  6E49               	movwf	myTMR0ISR@currentColor^0,c
  8362  0011B8                     i2l3022:
  8363                           
  8364                           ;main.c: 416: };main.c: 417: };main.c: 419: };main.c: 422: TMR0_WriteTimer(TMR0_ReadTime
      +                          r() + (0x10000 - sampleRate));
  8365  0011B8  EC4C  F00D         	call	_TMR0_ReadTimer	;wreg free
  8366  0011BC  0100               	movlb	0	; () banked
  8367  0011BE  5196               	movf	_sampleRate& (0+255),w,b
  8368  0011C0  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
  8369  0011C2  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  8370  0011C4  5197               	movf	(_sampleRate+1)& (0+255),w,b
  8371  0011C6  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
  8372  0011C8  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  8373  0011CA  ECC5  F00D         	call	i2_TMR0_WriteTimer	;wreg free
  8374  0011CE                     
  8375                           ;main.c: 424: INTCONbits.TMR0IF = 0;
  8376  0011CE  94F2               	bcf	242,2,c	;volatile
  8377  0011D0  0012               	return		;funcret
  8378  0011D2                     __end_of_myTMR0ISR:
  8379                           	opt callstack 0
  8380                           
  8381 ;; *************** function i2_TMR0_WriteTimer *****************
  8382 ;; Defined at:
  8383 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;  timerVal        2    8[COMRAM] unsigned int 
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;		None
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;Total ram usage:        2 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_myTMR0ISR
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text43
  8411  001B8A                     __ptext43:
  8412                           	opt callstack 0
  8413  001B8A                     i2_TMR0_WriteTimer:
  8414                           	opt callstack 21
  8415  001B8A                     
  8416                           ;tmr0.c: 125: TMR0H = timerVal >> 8;
  8417  001B8A  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  8418  001B8C  6ED7               	movwf	215,c	;volatile
  8419  001B8E                     
  8420                           ;tmr0.c: 126: TMR0L = (uint8_t) timerVal;
  8421  001B8E  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  8422  001B92  0012               	return		;funcret
  8423  001B94                     __end_ofi2_TMR0_WriteTimer:
  8424                           	opt callstack 0
  8425                           
  8426 ;; *************** function _TMR0_ReadTimer *****************
  8427 ;; Defined at:
  8428 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;		None
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;  readVal         2    4[COMRAM] unsigned int 
  8433 ;;  readValHigh     1    7[COMRAM] unsigned char 
  8434 ;;  readValLow      1    6[COMRAM] unsigned char 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  2    0[COMRAM] unsigned int 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;Total ram usage:        8 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; This function calls:
  8451 ;;		Nothing
  8452 ;; This function is called by:
  8453 ;;		_myTMR0ISR
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text44
  8458  001A98                     __ptext44:
  8459                           	opt callstack 0
  8460  001A98                     _TMR0_ReadTimer:
  8461                           	opt callstack 21
  8462  001A98                     
  8463                           ;tmr0.c: 111: uint16_t readVal;;tmr0.c: 112: uint8_t readValLow;;tmr0.c: 113: uint8_t re
      +                          adValHigh;;tmr0.c: 115: readValLow = TMR0L;
  8464  001A98  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  8465                           
  8466                           ;tmr0.c: 116: readValHigh = TMR0H;
  8467  001A9C  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  8468  001AA0                     
  8469                           ;tmr0.c: 117: readVal = ((uint16_t)readValHigh << 8) + readValLow;
  8470  001AA0  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  8471  001AA2  6E03               	movwf	??_TMR0_ReadTimer^0,c
  8472  001AA4  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  8473  001AA6  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  8474  001AA8  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  8475  001AAC                     
  8476                           ;tmr0.c: 119: return readVal;
  8477  001AAC  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  8478  001AB0  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  8479  001AB4  0012               	return		;funcret
  8480  001AB6                     __end_of_TMR0_ReadTimer:
  8481                           	opt callstack 0
  8482                           
  8483 ;; *************** function _EPWM1_LoadDutyValue *****************
  8484 ;; Defined at:
  8485 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  dutyValue       2    0[COMRAM] unsigned int 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8503 ;;Total ram usage:        4 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		_myTMR0ISR
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text45
  8513  0019A8                     __ptext45:
  8514                           	opt callstack 0
  8515  0019A8                     _EPWM1_LoadDutyValue:
  8516                           	opt callstack 21
  8517  0019A8                     
  8518                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  8519  0019A8  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  8520  0019AC  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  8521  0019B0  90D8               	bcf	status,0,c
  8522  0019B2  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  8523  0019B4  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  8524  0019B6  90D8               	bcf	status,0,c
  8525  0019B8  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  8526  0019BA  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  8527  0019BC  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
  8528  0019BE  6EBE               	movwf	190,c	;volatile
  8529                           
  8530                           ;epwm1.c: 96: CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  8531  0019C0  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  8532  0019C4  0E03               	movlw	3
  8533  0019C6  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  8534  0019C8  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  8535  0019CA  0EF0               	movlw	240
  8536  0019CC  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  8537  0019CE  50BD               	movf	189,w,c	;volatile
  8538  0019D0  0BCF               	andlw	207
  8539  0019D2  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  8540  0019D4  6EBD               	movwf	189,c	;volatile
  8541  0019D6  0012               	return		;funcret
  8542  0019D8                     __end_of_EPWM1_LoadDutyValue:
  8543                           	opt callstack 0
  8544                           
  8545                           	psect	text46
  8546  000000                     __ptext46:
  8547                           	opt callstack 0
  8548  000000                     
  8549                           	psect	rparam
  8550  0000                     
  8551                           	psect	temp
  8552  00004D                     btemp:
  8553                           	opt callstack 0
  8554  00004D                     	ds	1
  8555  0000                     int$flags	set	btemp
  8556  0000                     wtemp8	set	btemp+1
  8557  0000                     ttemp5	set	btemp+1
  8558  0000                     ttemp6	set	btemp+4
  8559  0000                     ttemp7	set	btemp+8
  8560                           tosu	equ	0xFFF
  8561                           tosh	equ	0xFFE
  8562                           tosl	equ	0xFFD
  8563                           stkptr	equ	0xFFC
  8564                           pclatu	equ	0xFFB
  8565                           pclath	equ	0xFFA
  8566                           pcl	equ	0xFF9
  8567                           tblptru	equ	0xFF8
  8568                           tblptrh	equ	0xFF7
  8569                           tblptrl	equ	0xFF6
  8570                           tablat	equ	0xFF5
  8571                           prodh	equ	0xFF4
  8572                           prodl	equ	0xFF3
  8573                           indf0	equ	0xFEF
  8574                           postinc0	equ	0xFEE
  8575                           postdec0	equ	0xFED
  8576                           preinc0	equ	0xFEC
  8577                           plusw0	equ	0xFEB
  8578                           fsr0h	equ	0xFEA
  8579                           fsr0l	equ	0xFE9
  8580                           wreg	equ	0xFE8
  8581                           indf1	equ	0xFE7
  8582                           postinc1	equ	0xFE6
  8583                           postdec1	equ	0xFE5
  8584                           preinc1	equ	0xFE4
  8585                           plusw1	equ	0xFE3
  8586                           fsr1h	equ	0xFE2
  8587                           fsr1l	equ	0xFE1
  8588                           bsr	equ	0xFE0
  8589                           indf2	equ	0xFDF
  8590                           postinc2	equ	0xFDE
  8591                           postdec2	equ	0xFDD
  8592                           preinc2	equ	0xFDC
  8593                           plusw2	equ	0xFDB
  8594                           fsr2h	equ	0xFDA
  8595                           fsr2l	equ	0xFD9
  8596                           status	equ	0xFD8


Data Sizes:
    Strings     1763
    Constant    48
    Data        4
    BSS         1557
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      76
    BANK0           160     54      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(COMRAM[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 78
		 -> STR_93(CODE[29]), STR_92(CODE[42]), STR_91(CODE[5]), STR_90(CODE[32]), 
		 -> STR_89(CODE[18]), STR_88(CODE[20]), STR_87(CODE[52]), STR_86(CODE[34]), 
		 -> STR_85(CODE[46]), STR_84(CODE[50]), STR_83(CODE[52]), STR_82(CODE[32]), 
		 -> STR_81(CODE[52]), STR_80(CODE[52]), STR_79(CODE[44]), STR_78(CODE[38]), 
		 -> STR_77(CODE[52]), STR_76(CODE[24]), STR_75(CODE[52]), STR_74(CODE[24]), 
		 -> STR_73(CODE[21]), STR_72(CODE[7]), STR_71(CODE[15]), STR_70(CODE[52]), 
		 -> STR_69(CODE[3]), STR_68(CODE[52]), STR_67(CODE[17]), STR_66(CODE[20]), 
		 -> STR_65(CODE[22]), STR_64(CODE[20]), STR_63(CODE[37]), STR_62(CODE[22]), 
		 -> STR_61(CODE[33]), STR_60(CODE[58]), STR_59(CODE[3]), STR_58(CODE[47]), 
		 -> STR_57(CODE[36]), STR_56(CODE[6]), STR_55(CODE[25]), STR_54(CODE[20]), 
		 -> STR_53(CODE[72]), STR_52(CODE[50]), STR_51(CODE[22]), STR_50(CODE[33]), 
		 -> STR_49(CODE[70]), STR_48(CODE[56]), STR_47(CODE[19]), STR_46(CODE[20]), 
		 -> STR_45(CODE[78]), STR_44(CODE[5]), STR_43(CODE[43]), STR_42(CODE[18]), 
		 -> STR_41(CODE[18]), STR_40(CODE[15]), STR_39(CODE[24]), STR_38(CODE[43]), 
		 -> STR_37(CODE[44]), STR_36(CODE[3]), STR_35(CODE[5]), STR_34(CODE[2]), 
		 -> STR_33(CODE[5]), STR_32(CODE[17]), STR_31(CODE[15]), STR_30(CODE[3]), 
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[5]), STR_26(CODE[19]), 
		 -> STR_25(CODE[11]), STR_24(CODE[11]), STR_23(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[8]), STR_20(CODE[19]), STR_19(CODE[3]), STR_18(CODE[5]), 
		 -> STR_17(CODE[2]), STR_16(CODE[21]), STR_15(CODE[29]), STR_14(CODE[3]), 
		 -> STR_13(CODE[3]), STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[6]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[2]), STR_6(CODE[3]), 
		 -> STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[27]), STR_2(CODE[28]), 
		 -> STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> blueBuffer(BIGRAM[512]), redBuffer(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> blueBuffer(BIGRAM[512]), redBuffer(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _printMenu->_printf
    _initializeAll->_printf
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _hexDumpBuffer->_printf
    _doSDInit->_SDCARD_Initialize
    _SDCARD_Initialize->_SDCARD_SetIdle
    _SDCARD_SetIdle->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _SDCARD_SetBlockLength->_SPI2_ExchangeByte
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   87154
                                              6 BANK0     48    48      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                            ___awmod
                           _doSDInit
                      _hexDumpBuffer
                      _initializeAll
                          _printMenu
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printMenu                                            0     0      0   11682
                             _printf
 ---------------------------------------------------------------------------------
 (1) _initializeAll                                        0     0      0   12494
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR0_WriteTimer                                      2     0      2     170
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      2     2      0     174
                                             17 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   12472
                                             51 COMRAM     4     2      2
                                              0 BANK0      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doSDInit                                             0     0      0   35570
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
                         _SPI2_Close
                          _SPI2_Open
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SPI2_Open                                            2     2      0      88
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SDCARD_Initialize                                    2     2      0   23800
                                             55 COMRAM     2     2      0
              _SDCARD_SetBlockLength
                     _SDCARD_SetIdle
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SDCARD_SetIdle                                       4     4      0   11837
                                             51 COMRAM     4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              28    22      6   11682
                                             27 COMRAM    24    18      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                             16 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             22 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     601
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _SDCARD_SetBlockLength                                1     1      0      67
                                             16 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6     657
                                             16 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     809
                                             16 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      67
                                             16 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI2_ExchangeByte                                    1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0     335
                                             11 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0     335
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (9) _myTMR0ISR                                            1     1      0     335
                                             10 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (10) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (10) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (10) _EPWM1_LoadDutyValue                                 4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   ___awmod
   _doSDInit
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _SDCARD_Initialize
       _SDCARD_SetBlockLength
         _SPI2_ExchangeByte
       _SDCARD_SetIdle
         _SPI2_ExchangeByte
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
           _putch
             _EUSART1_Write
       _SPI2_ExchangeByte
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
           _EUSART1_Write
     _SPI2_Close
     _SPI2_Open
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _EUSART1_Write
   _hexDumpBuffer
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _EUSART1_Write
   _initializeAll
     _SYSTEM_Initialize
       _ADC_Initialize
       _EPWM1_Initialize
       _EUSART1_Initialize
         _EUSART1_SetErrorHandler
         _EUSART1_SetFramingErrorHandler
         _EUSART1_SetOverrunErrorHandler
       _INTERRUPT_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _SPI2_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
     _TMR0_SetInterruptHandler
     _TMR0_WriteTimer
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _EUSART1_Write
   _printMenu
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _EUSART1_Write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _EPWM1_LoadDutyValue
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     600      37       39.4%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     36      3C       5       37.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      12        0.0%
DATA                 0      0     688       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 02 15:48:06 2020

                                            l21 1974                                              l33 1B56  
                                            l43 1B60                                              l71 141E  
                                            l80 1AEA                                              l74 1B9E  
                                            l67 1B3C                                              l77 1AD8  
                                            l79 1AE6                            SDCARD_ReadBlock@addr 0011  
                           ___wmul@multiplicand 0012                                 _timer0ReloadVal 0044  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                  hexDumpBuffer@i 0064  
                                hexDumpBuffer@j 0060                                             l211 1A2A  
                                           l214 1B04                                             l126 1B00  
                                           l207 1A04                                             l223 1B88  
                                           l217 1B16                                             l241 1B7E  
                                           l250 1B9A                                             l235 1B74  
                                           l412 1804                                             l404 158A  
                                           l413 1804                                             l238 1B6A  
                                           l190 18D2                                             l319 1A02  
                                           l424 0F9C                                             l409 15E8  
                                           l418 1852                                             l514 0184  
                                           l435 106C                                             l339 1A96  
                                           l611 12C2                                             l292 1AD0  
                                           l541 04E4                                             l382 18D4  
                                           l198 1B2A                                             l286 1A50  
                                           l367 1558                                             l616 1700  
                                           l377 1674                                             l625 1894  
                                           l289 1AC2                                             l387 190A  
                                           l379 1676                                             l619 174E  
                                           l742 1A76                                             l638 1B4C  
                                           l399 14BE                                             l577 080E  
                                           l739 0E82                                             l986 1372  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                    ___awmod@sign 0015  
                               _TMR2_Initialize 1B3E                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                   main@address 0090                                            l1221 16E2  
                                          l1231 17AA                                            l1228 16EA  
                                          l3110 18DE                                            l3102 164C  
                                          l1238 17B2                                            l1406 19A6  
                                          l3120 18F6                                            l3112 18E0  
                                          l3040 14C2                                            l3104 165E  
                                          l4000 02A2                                            l3122 1908  
                                          l3114 18F0                                            l3050 14E0  
                                          l3042 14C8                                            l3106 1662  
                                          l4010 0304                                            l4002 02AE  
                                          l3108 18D6                                            l3052 14E6  
                                          l3044 14CE                                            l3036 14C0  
                                          l3220 12D6                                            l4100 05BC  
                                          l4020 0354                                            l4012 0314  
                                          l4004 02C6                                            l3070 154A  
                                          l3054 14EC                                            l3046 14D4  
                                          l3038 14C0                                            l3230 130A  
                                          l3222 12DE                                            l4102 05D8  
                                          l4110 0608                                            l4030 0376  
                                          l4022 0360                                            l4014 0330  
                                          l4006 02D2                                            l3072 1556  
                                          l3064 1520                                            l3056 1502  
                                          l3048 14DA                                            l3080 15F2  
                                          l3240 1346                                            l3232 1312  
                                          l3224 12E2                                            l3216 12C4  
                                          l4200 0864                                            l4120 063C  
                                          l4112 061C                                            l4104 05F0  
                                          l4040 03DA                                            l4032 03A6  
                                          l4024 036E                                            l4016 033C  
                                          l4008 02F8                                            l3066 1534  
                                          l3058 1518                                            l3090 1610  
                                          l3082 15F8                                            l3074 15EA  
                                          l3242 134C                                            l3234 131A  
                                          l3226 12F0                                            l3218 12C8  
                                          l4202 0880                                            l4210 08B0  
                                          l4130 0678                                            l4122 0648  
                                          l4114 0620                                            l4106 05F4  
                                          l4050 041E                                            l4042 03F2  
                                          l4034 03A8                                            l4018 0350  
                                          l3068 1538                                            l3092 1616  
                                          l3084 15FE                                            l3076 15EA  
                                          l3236 1328                                            l3244 1352  
                                          l3228 12F8                                            l4212 08B4  
                                          l4204 0886                                            l4140 06B8  
                                          l4132 0684                                            l4124 0654  
                                          l4116 0624                                            l4108 0604  
                                          l4060 046E                                            l4052 0432  
                                          l4044 0402                                            l4036 03AC  
                                          l3094 162C                                            l3086 1604  
                                          l3078 15EC                                            l3246 1362  
                                          l3238 133E                                            l4214 08C4  
                                          l4206 0896                                            l4150 0700  
                                          l4142 06D4                                            l4134 0690  
                                          l4126 0660                                            l4118 0634  
                                          l4070 04D8                                            l4062 0476  
                                          l4054 0436                                            l4046 0406  
                                          l4038 03BE                                            l3096 1644  
                                          l3088 160A                                            l3248 136A  
                                          l3600 16B0                                            l2640 1B76  
                                          l2632 1B58                                            l2800 1942  
                                          l4208 089A                                            l4160 0740  
                                          l4152 0706                                            l4136 069C  
                                          l4128 066C                                            l4080 0530  
                                          l4072 04FC                                            l4064 048E  
                                          l4056 044E                                            l4048 040A  
                                          l2634 1AD4                                            l3610 16DC  
                                          l3602 16B6                                            l2810 1964  
                                          l2802 1946                                            l4170 0784  
                                          l4162 0754                                            l4154 0718  
                                          l4138 06B0                                            l4090 057C  
                                          l4082 0534                                            l4074 050C  
                                          l4066 04B8                                            l4058 045A  
                                          l4218 08DA                                            l3604 16CC  
                                          l3620 1780                                            l3612 1750  
                                          l3700 0B9E                                            l2900 13C4  
                                          l2636 1B6C                                            l2812 1970  
                                          l2804 194A                                            l4180 07C4  
                                          l4172 0790                                            l4164 0758  
                                          l4156 0728                                            l4148 06DE  
                                          l4092 0594                                            l4084 0540  
                                          l4076 0518                                            l4068 04C0  
                                          l3606 16D4                                            l3622 1796  
                                          l3614 1762                                            l3702 0BAA  
                                          l3630 0960                                            l2910 1B9C  
                                          l2902 13C8                                            l2638 1B62  
                                          l2830 1896                                            l2822 1B2C  
                                          l2806 1960                                            l4182 07D8  
                                          l4174 079C                                            l4166 076C  
                                          l4158 072C                                            l4094 0598  
                                          l4086 054E                                            l4078 052C  
                                          l2920 1A16                                            l2912 1B18  
                                          l3608 16D6                                            l3624 179E  
                                          l3616 176A                                            l3712 0BF8  
                                          l3704 0BAE                                            l3640 0992  
                                          l3632 0972                                            l3800 15C4  
                                          l2904 13EC                                            l2832 18AA  
                                          l2840 1B98                                            l2824 1B38  
                                          l2808 1962                                            l4192 081E  
                                          l4184 07E4                                            l4176 07A8  
                                          l4168 0778                                            l4096 05A8  
                                          l4088 0560                                            l2922 1A24  
                                          l3626 17A4                                            l3618 1772  
                                          l3570 1B82                                            l3722 0C18  
                                          l3650 0A1A                                            l3642 09AC  
                                          l3634 097C                                            l3802 15C6  
                                          l3810 142A                                            l2906 141C  
                                          l2850 1A78                                            l2834 18B6  
                                          l2842 19D8                                            l2826 1B3A  
                                          l2930 1A30                                            l4194 082E  
                                          l4186 07F2                                            l4178 07B4  
                                          l4098 05AC                                            l2924 1A28  
                                          l2916 1A04                                            l3580 19A0  
                                          l3572 1978                                            l3740 0CA0  
                                          l3716 0BFE                                            l3708 0BC4  
                                          l3732 0C52                                            l3660 0A68  
                                          l3652 0A1E                                            l3644 09CC  
                                          l3636 098C                                            l3628 0954  
                                          l3804 15D6                                            l3820 1448  
                                          l3812 1430                                            l2828 1AEC  
                                          l2836 18C2                                            l2844 19E4  
                                          l2852 1B3E                                            l2940 1A44  
                                          l2932 1A34                                            l3900 16F2  
                                          l4196 084A                                            l4188 0806  
                                          l2918 1A12                                            l3590 1678  
                                          l3574 197C                                            l3566 1B04  
                                          l3750 0CFC                                            l3742 0CC4  
                                          l3726 0C4C                                            l3718 0C02  
                                          l3734 0C72                                            l3670 0AAA  
                                          l3662 0A74                                            l3654 0A42  
                                          l3646 09D4                                            l3830 1464  
                                          l3822 144E                                            l3814 1436  
                                          l3806 1422                                            l2838 18CE  
                                          l2846 1A00                                            l2854 1B46  
                                          l2942 1A48                                            l2934 1A38  
                                          l3910 171E                                            l3902 16FE  
                                          l4198 0854                                            l2880 183E  
                                          l3592 1680                                            l3584 1A52  
                                          l3576 198C                                            l3568 1B12  
                                          l3760 0D48                                            l3752 0D02  
                                          l3744 0CD0                                            l3736 0C84  
                                          l3680 0AF0                                            l3672 0AC8  
                                          l3664 0A7A                                            l3656 0A48  
                                          l3648 09F0                                            l3840 14AC  
                                          l3832 1474                                            l3824 1454  
                                          l3816 143C                                            l3808 1428  
                                          l3920 1854                                            l2848 1AB6  
                                          l2944 1A4C                                            l2936 1A3C  
                                          l2928 1A2C                                            l3912 172A  
                                          l3904 170E                                            l2882 1840  
                                          l3594 1692                                            l3586 1A6E  
                                          l3578 199C                                            l3770 0D8A  
                                          l3762 0D4E                                            l3754 0D14  
                                          l3746 0CD8                                            l3738 0C9A  
                                          l3690 0B68                                            l3674 0AD4  
                                          l3666 0A98                                            l3658 0A5E  
                                          l3834 1484                                            l3826 145A  
                                          l3818 1442                                            l3930 188E  
                                          l3922 186C                                            l3850 0E9A  
                                          l3842 0E84                                            l2938 1A40  
                                          l3914 1736                                            l3906 171A  
                                          l2884 1850                                            l3596 169A  
                                          l3772 0DD6                                            l3780 0E46  
                                          l3764 0D66                                            l3756 0D1A  
                                          l3748 0CE6                                            l3692 0B70  
                                          l3676 0ADC                                            l3668 0AA6  
                                          l3684 0AF8                                            l3836 1496  
                                          l3828 1462                                            l3924 1870  
                                          l3860 0F08                                            l3852 0EAC  
                                          l3844 0E90                                            l2892 1B4E  
                                          l3916 1742                                            l3908 171C  
                                          l3940 009A                                            l3932 0052  
                                          l2878 1806                                            l3598 16A2  
                                          l3774 0E0A                                            l3782 0E4C  
                                          l3766 0D7C                                            l3758 0D36  
                                          l3694 0B7E                                            l3678 0AE4  
                                          l3686 0B42                                            l3838 149C  
                                          l3926 1876                                            l3870 0F74  
                                          l3862 0F14                                            l3854 0ECA  
                                          l2894 1B52                                            l3918 11D2  
                                          l3950 0154                                            l3942 009E  
                                          l3934 007C                                            l3768 0D82  
                                          l3696 0B82                                            l3688 0B58  
                                          l3784 0E5E                                            l3792 1564  
                                          l2896 1376                                            l3928 188A  
                                          l3880 0FD8                                            l3864 0F26  
                                          l3872 0F7A                                            l3856 0ED6  
                                          l3960 016E                                            l3944 00B2  
                                          l3936 0098                                            l3778 0E26  
                                          l3698 0B8E                                            l3794 156A  
                                          l3786 155C                                            l2898 1384  
                                          l3890 1044                                            l3882 0FE4  
                                          l3874 0F90                                            l3866 0F42  
                                          l3858 0EEA                                            l3970 019E  
                                          l3962 018A                                            l3946 00BE  
                                          l3938 009A                                            l3796 156E  
                                          l3884 0FF6                                            l3892 104A  
                                          l3876 0FC0                                            l3868 0F52  
                                          l3980 01E8                                            l3972 01A4  
                                          l3956 015C                                            l3948 0144  
                                          l3798 158C                                            l3894 1060  
                                          l3886 1012                                            l3878 0FC6  
                                          l3990 0238                                            l3982 01F8  
                                          l3974 01BE                                            l3958 0168  
                                          l3888 1022                                            l3896 16EC  
                                          l3992 0244                                            l3984 0208  
                                          l3976 01C6                                            l3968 0192  
                                          l3898 16F0                                            l3994 026A  
                                          l3986 0214                                            l3978 01D8  
                                          l3996 027A                                            l3988 0220  
                                          l3998 0296                                            STR_1 FDCD  
                                          STR_2 FD96                                            STR_3 FDB2  
                                          STR_4 FFF3                                            STR_5 FF8E  
                                          STR_6 FF8D                                            STR_7 FFFC  
                                          STR_8 FFF7                                            STR_9 F9F4  
                                          u3000 08B0                                            u3001 08AC  
                                          u1250 1AE6                                            u1251 1AE2  
                                          u2300 16CC                                            u1500 1AD0  
                                          u2301 16C8                                            u1501 1ACC  
                                          _LATA 000F89                                            u2310 1762  
                                          _LATB 000F8A                                            u2311 175E  
                                          _LATC 000F8B                                            u2320 1780  
                                          u2400 0B58                                            u2321 177C  
                                          u2401 0B54                                            u1530 1850  
                                          u2330 1796                                            u2250 1B12  
                                          u2410 0B7E                                            u1531 184C  
                                          u2331 1792                                            u2251 1B0E  
                                          u2411 0B7A                                            u2260 198C  
                                          u2500 0CFC                                            u2420 0BC0  
                                          u2340 0972                                            u1540 1384  
                                          u2261 1988                                            u2501 0CF8  
                                          u2421 0BBC                                            u2341 096E  
                                          u1541 1380                                            u1710 1502  
                                          u1550 1B28                                            u2270 199C  
                                          u2510 0D14                                            u2430 0BF4  
                                          u2350 09CC                                            u1711 14FE  
                                          u1551 1B22                                            u2271 1998  
                                          u2511 0D10                                            u2431 0BF0  
                                          u2351 09C8                                            u1720 1518  
                                          u1560 1A12                                            u2280 1692  
                                          u2520 0D32                                            u2440 0C14  
                                          u2360 0A3E                                            u2600 1474  
                                          u1721 1514                                            u1561 1A0E  
                                          u2281 168E                                            u2521 0D2E  
                                          u2441 0C10                                            u2361 0A3A  
                                          u2601 1470                                            u1730 154A  
                                          u1570 1A24                                            u2290 16B0  
                                          u2530 0D48                                            u2450 0C48  
                                          u2370 0A5E                                            u2610 1484  
                                          u1731 1546                                            u1571 1A20  
                                          u2291 16AC                                            u2531 0D44  
                                          u2451 0C44                                            u2371 0A5A  
                                          u2611 1480                                            u1740 162C  
                                          u1900 130A                                            u1556 1B2A  
                                          u2540 0D66                                            u2460 0C84  
                                          u2380 0A94                                            u2620 14AC  
                                          u2700 1012                                            u1741 1628  
                                          u1901 1306                                            u2541 0D62  
                                          u2461 0C80                                            u2381 0A90  
                                          u2621 14A8                                            u2701 100E  
                                          u1750 1674                                            u1910 1328  
                                          u2550 0D7C                                            u2470 0C9A  
                                          u2390 0AC4                                            u2710 1060  
                                          u2630 0EAC                                            u1751 1670  
                                          u1911 1324                                            u2551 0D78  
                                          u2471 0C96                                            u2391 0AC0  
                                          u2711 105C                                            u2631 0EA8  
                                          u1760 18F0                                            u1920 133E  
                                          u2560 0E5E                                            u2480 0CC4  
                                          u2640 0ECA                                            u2720 170E  
                                          u2800 03BE                                            u1761 18EC  
                                          u1921 133A                                            u2561 0E5A  
                                          u2481 0CC0                                            u2641 0EC6  
                                          u2721 170A                                            u2801 03BA  
                                          u1930 1362                                            u2570 0E82  
                                          u2490 0CE6                                            u2730 188A  
                                          u2650 0EEA                                            u2810 03F2  
                                          u1931 135E                                            u2571 0E7E  
                                          u2491 0CE2                                            u2731 1886  
                                          u2651 0EE6                                            u2811 03EE  
                                          u2580 158A                                            u2660 0F08  
                                          u2900 05F0                                            u2820 041E  
                                          u2740 008E                                            u2581 1586  
                                          u2661 0F04                                            u2901 05EC  
                                          u2821 041A                                            u2590 15D6  
                                          u2670 0F42                                            u2910 061C  
                                          u2830 0432                                            u2750 00B2  
                                          u2591 15D2                                            u2671 0F3E  
                                          u2911 0618                                            u2831 042E  
                                          u2751 00AE                                            u1880 12D6  
                                          u2680 0F90                                            u2920 06B0  
                                          u2840 046E                                            u2760 0184  
                                          u1881 12D2                                            u2681 0F8C  
                                          u2921 06AC                                            u2841 046A  
                                          u2761 0180                                            u1890 12F0  
                                          u2690 0FD8                                            u2930 0718  
                                          u2850 04B8                                            u2770 01BA  
                                          u1891 12EC                                            u2691 0FD4  
                                          u2931 0714                                            u2851 04B4  
                                          u2771 01B6                                            u2940 0740  
                                          u2860 052C                                            u2780 01D8  
                                          u2941 073C                                            u2861 0528  
                                          u2781 01D4                                            u2950 0754  
                                          u2870 0560                                            u2790 0350  
                                          u2951 0750                                            u2871 055C  
                                          u2791 034C                                            u2960 0806  
                                          u2880 0594                                            u2961 0802  
                                          u2881 0590                                            u2970 081E  
                                          u2890 05BC                                            u2971 081A  
                                          u2891 05B8                                            u2980 082E  
                                          u2981 082A                                            i2l30 1AB4  
                                          u2990 0864                                            u2991 0860  
                                          i2l40 1940                                            i2l33 1B92  
                                          i2l46 1BA0                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 1B02  
                                          _main 0052                                   ?_EUSART1_Read 0001  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 004D                                   __CFG_BORV$190 000000  
                                          prodh 000FF4                                            prodl 000FF3  
                               ??_hexDumpBuffer 0036                                            start 004E  
                                 __CFG_IESO$OFF 000000                           ??_EPWM1_LoadDutyValue 0003  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                       __end_of_TMR0_Initialize 1976                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 1AD2  
                                   ?_SPI2_Close 0001                                           ?_main 0001  
                                         STR_10 FFE8                                           STR_11 FF8C  
                                         STR_12 FFFC                                           STR_20 FF14  
                                         STR_13 FFF7                                           STR_21 FFD3  
                                         STR_22 FFF5                                           STR_30 F9F4  
                                         STR_14 F9F4                                           STR_23 FFF5  
                                         STR_31 FF90                                           STR_15 FD79  
                                         STR_24 FFBD                                           STR_40 FFAE  
                                         STR_32 FF7F                                           STR_16 FE89  
                                         STR_33 FE99                                           STR_17 FFFA  
                                         STR_25 FFC8                                           STR_41 FF4B  
                                         STR_34 FFFA                                           STR_18 FE99  
                                         STR_42 FF39                                           STR_26 FF01  
                                         STR_50 FCFB                                           STR_19 F9F4  
                                         STR_35 FE99                                           STR_27 FE99  
                                         STR_51 FE5E                                           STR_43 FC15  
                                         STR_36 F9F4                                           STR_44 FD91  
                                         STR_28 FFFA                                           STR_52 FB03  
                                         STR_60 F9F7                                 __end_of___awmod 1374  
                                         STR_61 FCFB                                           STR_29 FE99  
                                         STR_37 FBBE                                           STR_53 F969  
                                         STR_45 F91B                                           STR_70 FA69  
                                         STR_62 FE5E                                           STR_54 FEDA  
                                         STR_46 FEB2                                           STR_38 FBEA  
                                         STR_71 FF9F                                           STR_47 FEEE  
                                         STR_39 FE00                                           STR_55 FDE7  
                                         STR_63 FC90                                           STR_64 FEDA  
                                         STR_56 FFE2                                           STR_72 FFDB  
                                         STR_80 FA9D                                           STR_48 FA31  
                                         STR_81 FA69                                           STR_73 FE74  
                                         STR_65 FE48                                           STR_57 FCB5  
                                         STR_49 F9B1                                           STR_66 FE9E  
                                         STR_74 FE30                                           STR_82 FD3C  
                                         STR_90 FD1C                                           STR_58 FB35  
                                         STR_59 F9F4                                           STR_83 FA69  
                                         STR_75 FA69                                           STR_91 FFEE  
                                         STR_67 FF6E                                           STR_76 FE18  
                                         STR_92 FC40                                           STR_84 FAD1  
                                         STR_68 FA69                                           STR_69 F9F4  
                                         STR_77 FA69                                           STR_93 FD5C  
                                         STR_85 FB64                                           STR_94 FF5D  
                                         STR_86 FCD9                                           STR_78 FC6A  
                                         STR_87 FA69                                           STR_79 FB92  
                                         STR_88 FEC6                                           STR_89 FF27  
                     TMR0_ReadTimer@readValHigh 0008                                           _T0CON 000FD5  
                                         _T2CON 000FBA                                  __CFG_DEBUG$OFF 000000  
                               __end_of___lwdiv 16EC                                 __end_of___lwmod 17B4  
                               _TMR0_WriteTimer 1B4E                                           i2l342 19D6  
                                         i2l257 003A                                           i2l608 11D0  
                                         i2l598 110C                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                                   __CFG_WRT0$OFF 000000  
                            __size_of_SPI2_Open 00AC                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                       ?_TMR0_SetInterruptHandler 0010  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR0_ISR 1942                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                  main@sinIndex 0086                                  __CFG_EBTRB$OFF 000000  
                               __end_of_dpowers F90F                                 __end_of_isdigit 19A8  
                            __CFG_MCLRE$EXTMCLR 000000                                           _putch 1B80  
                                         main@i 0094                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0010                                           ttemp5 004E  
                                         ttemp6 0051                                           ttemp7 0055  
                                         status 000FD8                                           wtemp8 004E  
                        ?_SDCARD_SetBlockLength 0001                                  __CFG_HFOFST$ON 000000  
                       __size_of_SDCARD_SetIdle 0090              _EUSART1_DefaultFramingErrorHandler 000000  
                                __CFG_PBADEN$ON 000000                                 __initialization 17B4  
                  SDCARD_ReadBlock@sdCardBuffer 0015                      __end_of_EUSART1_Initialize 18D4  
                                  __end_of_main 0954                               _SPI2_ExchangeByte 1AD2  
             __size_of_SDCARD_PollWriteComplete 0038                       ?_SDCARD_PollWriteComplete 0001  
                       __end_of_TMR2_Initialize 1B4E                     ?_INTERRUPT_InterruptManager 0001  
                            ?_SPI2_ExchangeByte 0001                                          ??_main 0066  
                                 __activetblptr 000003                        __size_of_SPI2_Initialize 0012  
                           ??_SPI2_ExchangeByte 0010                           SDCARD_SetIdle@verbose 0034  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _CCPR1H 000FBF  
                                        _CCPR1L 000FBE                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                __end_of_doSDInit 1896  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l3000 10E6  
                                        i2l3010 114A                                          i2l3002 10FA  
                                        i2l3020 11A6                                          i2l3012 115E  
                                        i2l3004 111C                                          i2l3006 112C  
                                        i2l3014 1174                                          i2l3022 11B8  
                                        i2l3030 1912                                          i2l3024 11CE  
                                        i2l3016 118E                                          i2l3008 1146  
                                        i2l3032 1916                                          i2l3018 1192  
                                        i2l3034 1928                                          i2l3026 190C  
                                        i2l3028 190E                                  __CFG_WDTEN$OFF 000000  
                                        i2l3272 001A                                          i2l3274 0028  
                                        i2l3276 0036                                          i2l2814 1A98  
                                        i2l2816 1AA0                                          i2l2818 1AAC  
                                        i2l2856 19A8                                          i2l2890 1B8E  
                                        i2l2990 10A4                                          i2l2982 106E  
                                        i2l2888 1B8A                                          i2l2992 10A8  
                                        i2l2984 1074                                          i2l2994 10BC  
                                        i2l2986 1084                                          i2l2988 1094  
                                        i2l2996 10D2                                          i2l2998 10E2  
                                 _redBufferFull 009B                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                           __size_of_SPI2_Close 0004                                  __CFG_XINST$OFF 000000  
                             __end_of_SPI2_Open 1420                       __end_of_SPI2_ExchangeByte 1AEC  
                                  _CCPTMRS0bits 000F49                                          ___wmul 1A52  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0014  
                       __end_of_TMR0_WriteTimer 1B58                                       ??___lwdiv 0014  
                                     ??___lwmod 001B                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 0010                                ?_TMR0_Initialize 0001  
                                        clear_0 17DC                                          clear_1 17F4  
                               ___awmod@divisor 0012                                 ___awmod@counter 0014  
                                        _printf 0954                ??_EUSART1_SetOverrunErrorHandler 0012  
               ?_EUSART1_SetOverrunErrorHandler 0010                           myTMR0ISR@currentColor 0049  
                                     ??_isdigit 0010                                    __mediumconst F8EA  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                          __size_of_initializeAll 0064  
                               ??_EUSART1_Write 0010        TMR0_SetInterruptHandler@InterruptHandler 0010  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 1A2C  
                                    __accesstop 0060                         __end_of__initialization 17FA  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                              _SDCARD_ReadBlock 14C0                               ?_EPWM1_Initialize 0001  
                    __end_of_spi2_configuration F91B                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 1B94                             ??_SYSTEM_Initialize 0014  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 0010  
                                 __end_of_putch 1B8A                         __size_of_TMR0_ReadTimer 001E  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 1A2C  
                                main@blockIndex 008A                       __end_of_SYSTEM_Initialize 1A52  
                            __size_of_myTMR0ISR 0164                                         ??_putch 0011  
                            SDCARD_WriteBlock@i 0017                               ??_SPI2_Initialize 0010  
                                    __pbssBANK0 009A                                 __CFG_PLLCFG$OFF 000000  
                                _SDCARD_SetIdle 155A                          SDCARD_SetIdle@response 0035  
                    __size_of_SPI2_ExchangeByte 001A                 __end_of_EUSART1_SetErrorHandler 1B80  
                            __CFG_CCP2MX$PORTC1 000000                                   _initializeAll 16EC  
              __end_of_TMR0_SetInterruptHandler 1B62                                         ?___wmul 0010  
                                    ??_TMR0_ISR 000C                              __CFG_CCP3MX$PORTB5 000000  
                                    _blueBuffer 029C                                ?_TMR0_WriteTimer 0010  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                     ?_doSDInit 0001                                         ?_printf 001C  
                                  ??_SPI2_Close 0010                         __size_of_ADC_Initialize 0016  
        __end_of_EUSART1_SetFramingErrorHandler 1B76         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 1B6C                                 SDCARD_SetIdle@i 0036  
                            __size_of_printMenu 00F2                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                         ??_SDCARD_SetBlockLength 0011  
                             SDCARD_ReadBlock@i 0017                          __end_of_SDCARD_SetIdle 15EA  
                   __end_of_EPWM1_LoadDutyValue 19D8                __end_of_SDCARD_PollWriteComplete 190C  
                               __CFG_PWRTEN$OFF 000000                              __end_of_SPI2_Close 1BA0  
                          _ADC_InterruptHandler 0042                                         __Hparam 0000  
                                ?_initializeAll 0001                                         __Lparam 0000  
                         __end_of_hexDumpBuffer 106E                       SDCARD_Initialize@response 0039  
                                       ___awmod 12C4                                 __size_of___wmul 0026  
                                       ___lwdiv 1678                               __end_of_myTMR0ISR 11D2  
                                       ___lwmod 1750                             _EUSART1_is_rx_ready 1B18  
                                       __pcinit 17B4                                      ??_doSDInit 003A  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 11D2                                         __ptext2 16EC  
                                       __ptext3 1B4E                                         __ptext4 1A2C  
                                       __ptext5 1B3E                                         __ptext6 1942  
                                       __ptext7 1B58                                         __ptext8 1B2C  
                                       __ptext9 19D8                                 __size_of_printf 0530  
                                     _T0CONbits 000FD5                               __end_of_hexpowers F917  
                                       _dpowers F905                           _OSCILLATOR_Initialize 1AB6  
                                     _T2CONbits 000FBA                                         _isdigit 1976  
                              ___awmod@dividend 0010                              _EUSART1_Initialize 1896  
                      ??_PIN_MANAGER_Initialize 0010                                    _sdCardBuffer 049C  
                                       main@cmd 0089                      __size_of_SYSTEM_Initialize 0026  
                                       main@sin 006A                                _redBufferIsEmpty 0099  
                          end_of_initialization 17FA                            ?_EUSART1_is_rx_ready 0001  
                               ?_SDCARD_SetIdle 0001                             ?_EUSART1_Initialize 0001  
                                    _sampleRate 0096                              myTMR0ISR@adcResult 0048  
                   _EUSART1_OverrunErrorHandler 003E                               __end_ofmain@F5845 F905  
                             __end_of_printMenu 12C4                   SDCARD_WriteBlock@sdCardBuffer 0015  
                         TMR0_ReadTimer@readVal 0005                                  _blueBufferFull 009A  
                                       printf@c 0033                                         printf@f 001C  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                       _SPI2_Open 1374  
                                _TMR0_ReadTimer 1A98                            ??_EUSART1_Initialize 0012  
                         SDCARD_WriteBlock@addr 0011                        _TMR0_SetInterruptHandler 1B58  
                      __end_of_SDCARD_ReadBlock 155A                                       _TRISBbits 000F93  
              __size_of_EUSART1_SetErrorHandler 000A                  SDCARD_PollWriteComplete@status 0011  
                           EUSART1_Write@txData 0010                           ??_EUSART1_is_rx_ready 0010  
                             main@blocksWritten 0087                                     printf@width 0031  
                                  _EUSART1_Read 1A04                                 ??_initializeAll 0034  
                                    main@status 0085                        _SDCARD_PollWriteComplete 18D4  
                        __end_of_TMR0_ReadTimer 1AB6                    __end_of_INTERRUPT_Initialize 1B9C  
                                    myTMR0ISR@i 003A                               _SDCARD_Initialize 1420  
                                    ?_SPI2_Open 0001                                  __end_of___wmul 1A78  
                             __size_of_TMR0_ISR 0036                              ?_SDCARD_Initialize 0001  
                                _ADC_Initialize 1AEC                          ?_OSCILLATOR_Initialize 0001  
                               _SPI2_Initialize 1B2C                                  __end_of_printf 0E84  
                            _spi2_configuration F917                             start_initialization 17B4  
                     __size_of_EPWM1_Initialize 0020                             ??_SDCARD_Initialize 0038  
                      __size_of_TMR0_Initialize 0034                 __size_of_PIN_MANAGER_Initialize 002C  
                                   putch@txData 0011                    EPWM1_LoadDutyValue@dutyValue 0001  
                         __end_of_EUSART1_Write 1B18                       __end_of_SDCARD_Initialize 14C0  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0014  
                        __end_of_ADC_Initialize 1B02                                     __pdataBANK0 0096  
                                      ??_printf 0022                           SPI2_ExchangeByte@data 0010  
                                   __pbssBIGRAM 009C                               __size_of_doSDInit 0042  
                                   __pbssCOMRAM 003A                                   __pcstackBANK0 0060  
                           hexDumpBuffer@j_1051 0062                        __size_of_TMR2_Initialize 0010  
                                  _isdigit$1846 0011                ??_EUSART1_SetFramingErrorHandler 0012  
               ?_EUSART1_SetFramingErrorHandler 0010                  __size_of_SDCARD_SetBlockLength 0050  
                 __end_of_SDCARD_SetBlockLength 1854                           _TMR0_InterruptHandler 0046  
                              ___lwdiv@dividend 0010                          _PIN_MANAGER_Initialize 19D8  
                             _SDCARD_WriteBlock 15EA                                       __pintcode 0008  
                                 __pmediumconst F8EA                         __end_of_SPI2_Initialize 1B3E  
                                      ?___awmod 0010                              ?_SDCARD_WriteBlock 0011  
                                      ?___lwdiv 0010                                        ?___lwmod 0017  
                               ?_ADC_Initialize 0001                                     ??_SPI2_Open 0010  
              SPI2_Open@spi2UniqueConfiguration 0011                    ??_INTERRUPT_InterruptManager 000C  
                              __CFG_PRICLKEN$ON 000000                                       _myTMR0ISR 106E  
                           ??_SDCARD_WriteBlock 0017                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 0001  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 003C  
                              ??_SDCARD_SetIdle 0034                                       _redBuffer 009C  
                       _EUSART1_SetErrorHandler 1B76                                       _hexpowers F90F  
                              ___lwdiv@quotient 0015                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 1B98                               ??_TMR0_Initialize 0012  
                                ___wmul@product 0014         EUSART1_SetErrorHandler@interruptHandler 0010  
                                      _LATBbits 000F8A                                       _recording 004B  
                     __end_of_SDCARD_WriteBlock 1678             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u161_40 1084                                        i2u161_41 1080  
                                      i2u162_40 1094                                        i2u162_41 1090  
                                      i2u163_40 10BC                                        i2u170_48 192E  
                                      i2u163_41 10B8                                        i2u170_49 1940  
                                      i2u164_40 10FA                                        i2u164_41 10F6  
                                      i2u165_40 111C                      ??_TMR0_SetInterruptHandler 0012  
                                      i2u165_41 1118                                        i2u166_40 112C  
                                      i2u166_41 1128                                        i2u167_40 115E  
                                      i2u167_41 115A                                        i2u168_40 11A6  
                                      i2u168_41 11A2                                        i2u169_40 1928  
                                      i2u169_41 1924                                        _PIR1bits 000F9E  
                                      i2u196_40 0028                                        i2u196_41 0024  
                                      i2u197_40 0036                                        i2u197_41 0032  
                                      _PIR3bits 000FA4                                 main@readAddress 008C  
                  __size_of_EPWM1_LoadDutyValue 0030                      __size_of_SDCARD_Initialize 00A0  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                     main@F5845 F8EB                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 190C  
                                      _PSTR1CON 000FB9                                        _SSP2STAT 000F6D  
                                     _printMenu 11D2                        TMR0_ReadTimer@readValLow 0007  
                             _blueBufferIsEmpty 0098                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0010                                      ?_myTMR0ISR 0001  
                                    printf@flag 0030                                      printf@prec 002B  
                              _EPWM1_Initialize 1A78                               i2_TMR0_WriteTimer 1B8A  
                             ?_SDCARD_ReadBlock 0011                          __size_of_hexDumpBuffer 01EA  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                                     copy_data0 17C8                           ?_INTERRUPT_Initialize 0001  
                            ??_SDCARD_ReadBlock 0017                      ??_SDCARD_PollWriteComplete 0011  
                             ??_TMR2_Initialize 0010                             ??i2_TMR0_WriteTimer 000B  
                                      __Hrparam 0000                                        __Lrparam 0000  
                            __CFG_BOREN$SBORDIS 000000                               __CFG_P2BMX$PORTB5 000000  
                              ?_SPI2_Initialize 0001                         ??_OSCILLATOR_Initialize 0010  
                                    ?_printMenu 0001                                __size_of___awmod 00B0  
                   __size_of_EUSART1_Initialize 003E                                __size_of___lwdiv 0074  
                              __size_of___lwmod 0064                                        _doSDInit 1854  
                     __end_ofi2_TMR0_WriteTimer 1B94                       ??_EUSART1_SetErrorHandler 0012  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 1B2C  
                                  _playingSound 004A                   SDCARD_SetBlockLength@response 0011  
                              __size_of_isdigit 0032                                 ___lwdiv@divisor 0012  
                               ___lwdiv@counter 0014                                        __ptext10 1AB6  
                                      __ptext11 1B98                                        __ptext20 1374  
                                      __ptext12 1896                                        __ptext21 1B9C  
                                      __ptext13 1B62                                        __ptext30 1678  
                                      __ptext22 1420                                        __ptext14 1B6C  
                                      __ptext31 1804                                        __ptext23 155A  
                                      __ptext15 1B76                                        __ptext40 190C  
                                      __ptext32 1B18                                        __ptext24 0954  
                                      __ptext16 1A78                                        __ptext41 1BA0  
                                      __ptext33 1A04                                        __ptext25 1B80  
                                      __ptext17 1AEC                                        __ptext42 106E  
                                      __ptext34 12C4                                        __ptext26 1B02  
                                      __ptext18 0E84                                        __ptext43 1B8A  
                                      __ptext35 15EA                                        __ptext27 1976  
                                      __ptext19 1854                                        __ptext44 1A98  
                                      __ptext36 14C0                                        __ptext28 1A52  
                                      __ptext45 19A8                                        __ptext37 18D4  
                                      __ptext29 1750                                        __ptext46 0000  
                                      __ptext38 1AD2                                    _SSP2CON1bits 000F6C  
                       TMR0_WriteTimer@timerVal 0010                               ??_TMR0_WriteTimer 0012  
                                 __size_of_main 0902                                ??_TMR0_ReadTimer 0003  
                    __size_of_SDCARD_WriteBlock 008E            __end_of_TMR0_DefaultInterruptHandler 1BA2  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 1BA0  
                         __end_of_initializeAll 1750  EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 _hexDumpBuffer 0E84                                        int$flags 004D  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@idx 0026                                       printf@len 0029  
                                     printf@val 002E                     _EUSART1_FramingErrorHandler 0040  
                                   ??_myTMR0ISR 000B                                      _INTCONbits 000FF2  
                                      isdigit@c 0012                          ??_INTERRUPT_Initialize 0010  
                      SDCARD_Initialize@verbose 0038                                        intlevel2 0000  
                              ___lwmod@dividend 0017                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1B6C         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1B62                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 0010                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                  ?_hexDumpBuffer 0034  
                                      printf@ap 002C                                        printf@cp 0027  
EUSART1_SetFramingErrorHandler@interruptHandler 0010                                     ??_printMenu 0034  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 004C  
                                    _SPI2_Close 1B9C                      __size_ofi2_TMR0_WriteTimer 000A  
                               ___lwmod@divisor 0019                                 _TMR0_Initialize 1942  
                               ___lwmod@counter 001B                               __CFG_T3CMX$PORTC0 000000  
                           _EPWM1_LoadDutyValue 19A8                  __end_of_PIN_MANAGER_Initialize 1A04  
                             __CFG_FOSC$INTIO67 000000                       hexDumpBuffer@sdCardBuffer 0034  
                         _SDCARD_SetBlockLength 1804                                    fp__myTMR0ISR 0000  
                      __end_of_EPWM1_Initialize 1A98                            ?_EPWM1_LoadDutyValue 0001  
