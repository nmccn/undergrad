

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 08:29:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99  0000                     
   100                           ; Version 2.10
   101                           ; Generated 31/07/2019 GMT
   102                           ; 
   103                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F26K22 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134  0000                     
   135 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   136  0000                     
   137 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   138  0000                     
   139 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   140  0000                     
   141                           	psect	idataBANK1
   142  003656                     __pidataBANK1:
   143                           	opt callstack 0
   144                           
   145                           ;initializer for main@F6364
   146  003656  D055               	dw	53333
   147  003658  3415               	dw	13333
   148  00365A  1A0A               	dw	6666
   149  00365C  0682               	dw	1666
   150  00365E  0341               	dw	833
   151                           
   152                           ;initializer for stoa@F1136
   153  003660  28                 	db	40
   154  003661  6E                 	db	110
   155  003662  75                 	db	117
   156  003663  6C                 	db	108
   157  003664  6C                 	db	108
   158  003665  29                 	db	41
   159  003666  00                 	db	0
   160  0000                     _ANSELA	set	3896
   161  0000                     _ANSELB	set	3897
   162  0000                     _ANSELC	set	3898
   163  0000                     _CCPTMRS0bits	set	3913
   164  0000                     _TMR1	set	4046
   165  0000                     _INTCON2bits	set	4081
   166  0000                     _WPUB	set	3937
   167  0000                     _TRISC	set	3988
   168  0000                     _TRISB	set	3987
   169  0000                     _TRISA	set	3986
   170  0000                     _LATC	set	3979
   171  0000                     _LATB	set	3978
   172  0000                     _LATA	set	3977
   173  0000                     _OSCTUNE	set	3995
   174  0000                     _OSCCON2	set	4050
   175  0000                     _OSCCON	set	4051
   176  0000                     _PIR3bits	set	4004
   177  0000                     _INTCONbits	set	4082
   178  0000                     _RCONbits	set	4048
   179  0000                     _TXREG1	set	4013
   180  0000                     _RCREG1	set	4014
   181  0000                     _RCSTA1bits	set	4011
   182  0000                     _TXSTA1bits	set	4012
   183  0000                     _SPBRGH1	set	4016
   184  0000                     _SPBRG1	set	4015
   185  0000                     _TXSTA1	set	4012
   186  0000                     _RCSTA1	set	4011
   187  0000                     _BAUDCON1	set	4024
   188  0000                     _RCREG2	set	3956
   189  0000                     _RCSTA2bits	set	3953
   190  0000                     _TXREG2	set	3955
   191  0000                     _TXSTA2bits	set	3954
   192  0000                     _SPBRGH2	set	3958
   193  0000                     _SPBRG2	set	3957
   194  0000                     _TXSTA2	set	3954
   195  0000                     _RCSTA2	set	3953
   196  0000                     _BAUDCON2	set	3952
   197  0000                     _PIE3bits	set	4003
   198  0000                     _CCPR2L	set	3943
   199  0000                     _CCPR2H	set	3944
   200  0000                     _PSTR2CON	set	3939
   201  0000                     _PWM2CON	set	3941
   202  0000                     _ECCP2AS	set	3940
   203  0000                     _CCP2CON	set	3942
   204  0000                     _T2CONbits	set	4026
   205  0000                     _T2CON	set	4026
   206  0000                     _TMR2	set	4028
   207  0000                     _PR2	set	4027
   208  0000                     _T1GCONbits	set	4044
   209  0000                     _T1CONbits	set	4045
   210  0000                     _T1CON	set	4045
   211  0000                     _PIR1bits	set	3998
   212  0000                     _TMR1L	set	4046
   213  0000                     _TMR1H	set	4047
   214  0000                     _T1GCON	set	4044
   215  0000                     _PLLRDY	set	32407
   216                           
   217                           	psect	mediumconst
   218  00FC98                     __pmediumconst:
   219                           	opt callstack 0
   220  00FC98  00                 	db	0
   221  00FC99                     STR_3:
   222                           
   223                           ; BSR set to: 0
   224  00FC99  49                 	db	73	;'I'
   225  00FC9A  6E                 	db	110	;'n'
   226  00FC9B  73                 	db	115	;'s'
   227  00FC9C  74                 	db	116	;'t'
   228  00FC9D  61                 	db	97	;'a'
   229  00FC9E  6C                 	db	108	;'l'
   230  00FC9F  6C                 	db	108	;'l'
   231  00FCA0  20                 	db	32
   232  00FCA1  61                 	db	97	;'a'
   233  00FCA2  20                 	db	32
   234  00FCA3  6A                 	db	106	;'j'
   235  00FCA4  75                 	db	117	;'u'
   236  00FCA5  6D                 	db	109	;'m'
   237  00FCA6  70                 	db	112	;'p'
   238  00FCA7  65                 	db	101	;'e'
   239  00FCA8  72                 	db	114	;'r'
   240  00FCA9  20                 	db	32
   241  00FCAA  66                 	db	102	;'f'
   242  00FCAB  72                 	db	114	;'r'
   243  00FCAC  6F                 	db	111	;'o'
   244  00FCAD  6D                 	db	109	;'m'
   245  00FCAE  20                 	db	32
   246  00FCAF  52                 	db	82	;'R'
   247  00FCB0  43                 	db	67	;'C'
   248  00FCB1  34                 	db	52	;'4'
   249  00FCB2  20                 	db	32
   250  00FCB3  74                 	db	116	;'t'
   251  00FCB4  6F                 	db	111	;'o'
   252  00FCB5  20                 	db	32
   253  00FCB6  52                 	db	82	;'R'
   254  00FCB7  42                 	db	66	;'B'
   255  00FCB8  37                 	db	55	;'7'
   256  00FCB9  20                 	db	32
   257  00FCBA  6F                 	db	111	;'o'
   258  00FCBB  6E                 	db	110	;'n'
   259  00FCBC  6C                 	db	108	;'l'
   260  00FCBD  79                 	db	121	;'y'
   261  00FCBE  20                 	db	32
   262  00FCBF  61                 	db	97	;'a'
   263  00FCC0  66                 	db	102	;'f'
   264  00FCC1  74                 	db	116	;'t'
   265  00FCC2  65                 	db	101	;'e'
   266  00FCC3  72                 	db	114	;'r'
   267  00FCC4  20                 	db	32
   268  00FCC5  75                 	db	117	;'u'
   269  00FCC6  6E                 	db	110	;'n'
   270  00FCC7  70                 	db	112	;'p'
   271  00FCC8  6C                 	db	108	;'l'
   272  00FCC9  75                 	db	117	;'u'
   273  00FCCA  67                 	db	103	;'g'
   274  00FCCB  67                 	db	103	;'g'
   275  00FCCC  69                 	db	105	;'i'
   276  00FCCD  6E                 	db	110	;'n'
   277  00FCCE  67                 	db	103	;'g'
   278  00FCCF  20                 	db	32
   279  00FCD0  50                 	db	80	;'P'
   280  00FCD1  49                 	db	73	;'I'
   281  00FCD2  43                 	db	67	;'C'
   282  00FCD3  4B                 	db	75	;'K'
   283  00FCD4  69                 	db	105	;'i'
   284  00FCD5  74                 	db	116	;'t'
   285  00FCD6  34                 	db	52	;'4'
   286  00FCD7  0D                 	db	13
   287  00FCD8  0A                 	db	10
   288  00FCD9  00                 	db	0
   289  00FCDA                     STR_21:
   290                           
   291                           ; BSR set to: 0
   292  00FCDA  52                 	db	82	;'R'
   293  00FCDB  3A                 	db	58	;':'
   294  00FCDC  20                 	db	32
   295  00FCDD  52                 	db	82	;'R'
   296  00FCDE  65                 	db	101	;'e'
   297  00FCDF  63                 	db	99	;'c'
   298  00FCE0  65                 	db	101	;'e'
   299  00FCE1  69                 	db	105	;'i'
   300  00FCE2  76                 	db	118	;'v'
   301  00FCE3  65                 	db	101	;'e'
   302  00FCE4  20                 	db	32
   303  00FCE5  6D                 	db	109	;'m'
   304  00FCE6  65                 	db	101	;'e'
   305  00FCE7  73                 	db	115	;'s'
   306  00FCE8  73                 	db	115	;'s'
   307  00FCE9  61                 	db	97	;'a'
   308  00FCEA  67                 	db	103	;'g'
   309  00FCEB  65                 	db	101	;'e'
   310  00FCEC  20                 	db	32
   311  00FCED  75                 	db	117	;'u'
   312  00FCEE  73                 	db	115	;'s'
   313  00FCEF  69                 	db	105	;'i'
   314  00FCF0  6E                 	db	110	;'n'
   315  00FCF1  67                 	db	103	;'g'
   316  00FCF2  20                 	db	32
   317  00FCF3  45                 	db	69	;'E'
   318  00FCF4  55                 	db	85	;'U'
   319  00FCF5  53                 	db	83	;'S'
   320  00FCF6  41                 	db	65	;'A'
   321  00FCF7  52                 	db	82	;'R'
   322  00FCF8  54                 	db	84	;'T'
   323  00FCF9  32                 	db	50	;'2'
   324  00FCFA  20                 	db	32
   325  00FCFB  49                 	db	73	;'I'
   326  00FCFC  53                 	db	83	;'S'
   327  00FCFD  52                 	db	82	;'R'
   328  00FCFE  20                 	db	32
   329  00FCFF  76                 	db	118	;'v'
   330  00FD00  69                 	db	105	;'i'
   331  00FD01  61                 	db	97	;'a'
   332  00FD02  20                 	db	32
   333  00FD03  49                 	db	73	;'I'
   334  00FD04  52                 	db	82	;'R'
   335  00FD05  20                 	db	32
   336  00FD06  64                 	db	100	;'d'
   337  00FD07  65                 	db	101	;'e'
   338  00FD08  63                 	db	99	;'c'
   339  00FD09  6F                 	db	111	;'o'
   340  00FD0A  64                 	db	100	;'d'
   341  00FD0B  65                 	db	101	;'e'
   342  00FD0C  72                 	db	114	;'r'
   343  00FD0D  0D                 	db	13
   344  00FD0E  0A                 	db	10
   345  00FD0F  00                 	db	0
   346  00FD10                     STR_5:
   347                           
   348                           ; BSR set to: 0
   349  00FD10  2D                 	db	45
   350  00FD11  2D                 	db	45
   351  00FD12  2D                 	db	45
   352  00FD13  2D                 	db	45
   353  00FD14  2D                 	db	45
   354  00FD15  2D                 	db	45
   355  00FD16  2D                 	db	45
   356  00FD17  2D                 	db	45
   357  00FD18  2D                 	db	45
   358  00FD19  2D                 	db	45
   359  00FD1A  2D                 	db	45
   360  00FD1B  2D                 	db	45
   361  00FD1C  2D                 	db	45
   362  00FD1D  2D                 	db	45
   363  00FD1E  2D                 	db	45
   364  00FD1F  2D                 	db	45
   365  00FD20  2D                 	db	45
   366  00FD21  2D                 	db	45
   367  00FD22  2D                 	db	45
   368  00FD23  2D                 	db	45
   369  00FD24  2D                 	db	45
   370  00FD25  2D                 	db	45
   371  00FD26  2D                 	db	45
   372  00FD27  2D                 	db	45
   373  00FD28  2D                 	db	45
   374  00FD29  2D                 	db	45
   375  00FD2A  2D                 	db	45
   376  00FD2B  2D                 	db	45
   377  00FD2C  2D                 	db	45
   378  00FD2D  2D                 	db	45
   379  00FD2E  2D                 	db	45
   380  00FD2F  2D                 	db	45
   381  00FD30  2D                 	db	45
   382  00FD31  2D                 	db	45
   383  00FD32  2D                 	db	45
   384  00FD33  2D                 	db	45
   385  00FD34  2D                 	db	45
   386  00FD35  2D                 	db	45
   387  00FD36  2D                 	db	45
   388  00FD37  2D                 	db	45
   389  00FD38  2D                 	db	45
   390  00FD39  2D                 	db	45
   391  00FD3A  2D                 	db	45
   392  00FD3B  2D                 	db	45
   393  00FD3C  2D                 	db	45
   394  00FD3D  2D                 	db	45
   395  00FD3E  2D                 	db	45
   396  00FD3F  2D                 	db	45
   397  00FD40  2D                 	db	45
   398  00FD41  0D                 	db	13
   399  00FD42  0A                 	db	10
   400  00FD43  00                 	db	0
   401  00FD44                     STR_17:
   402                           
   403                           ; BSR set to: 0
   404  00FD44  62                 	db	98	;'b'
   405  00FD45  3A                 	db	58	;':'
   406  00FD46  20                 	db	32
   407  00FD47  73                 	db	115	;'s'
   408  00FD48  65                 	db	101	;'e'
   409  00FD49  74                 	db	116	;'t'
   410  00FD4A  20                 	db	32
   411  00FD4B  74                 	db	116	;'t'
   412  00FD4C  68                 	db	104	;'h'
   413  00FD4D  65                 	db	101	;'e'
   414  00FD4E  20                 	db	32
   415  00FD4F  42                 	db	66	;'B'
   416  00FD50  61                 	db	97	;'a'
   417  00FD51  75                 	db	117	;'u'
   418  00FD52  64                 	db	100	;'d'
   419  00FD53  20                 	db	32
   420  00FD54  72                 	db	114	;'r'
   421  00FD55  61                 	db	97	;'a'
   422  00FD56  74                 	db	116	;'t'
   423  00FD57  65                 	db	101	;'e'
   424  00FD58  20                 	db	32
   425  00FD59  6F                 	db	111	;'o'
   426  00FD5A  66                 	db	102	;'f'
   427  00FD5B  20                 	db	32
   428  00FD5C  74                 	db	116	;'t'
   429  00FD5D  68                 	db	104	;'h'
   430  00FD5E  65                 	db	101	;'e'
   431  00FD5F  20                 	db	32
   432  00FD60  73                 	db	115	;'s'
   433  00FD61  65                 	db	101	;'e'
   434  00FD62  6E                 	db	110	;'n'
   435  00FD63  74                 	db	116	;'t'
   436  00FD64  20                 	db	32
   437  00FD65  63                 	db	99	;'c'
   438  00FD66  68                 	db	104	;'h'
   439  00FD67  61                 	db	97	;'a'
   440  00FD68  72                 	db	114	;'r'
   441  00FD69  61                 	db	97	;'a'
   442  00FD6A  63                 	db	99	;'c'
   443  00FD6B  74                 	db	116	;'t'
   444  00FD6C  65                 	db	101	;'e'
   445  00FD6D  72                 	db	114	;'r'
   446  00FD6E  73                 	db	115	;'s'
   447  00FD6F  0D                 	db	13
   448  00FD70  0A                 	db	10
   449  00FD71  00                 	db	0
   450  00FD72                     STR_27:
   451                           
   452                           ; BSR set to: 0
   453  00FD72  43                 	db	67	;'C'
   454  00FD73  68                 	db	104	;'h'
   455  00FD74  6F                 	db	111	;'o'
   456  00FD75  6F                 	db	111	;'o'
   457  00FD76  73                 	db	115	;'s'
   458  00FD77  65                 	db	101	;'e'
   459  00FD78  20                 	db	32
   460  00FD79  74                 	db	116	;'t'
   461  00FD7A  68                 	db	104	;'h'
   462  00FD7B  65                 	db	101	;'e'
   463  00FD7C  20                 	db	32
   464  00FD7D  69                 	db	105	;'i'
   465  00FD7E  6E                 	db	110	;'n'
   466  00FD7F  64                 	db	100	;'d'
   467  00FD80  65                 	db	101	;'e'
   468  00FD81  78                 	db	120	;'x'
   469  00FD82  20                 	db	32
   470  00FD83  6F                 	db	111	;'o'
   471  00FD84  66                 	db	102	;'f'
   472  00FD85  20                 	db	32
   473  00FD86  74                 	db	116	;'t'
   474  00FD87  68                 	db	104	;'h'
   475  00FD88  65                 	db	101	;'e'
   476  00FD89  20                 	db	32
   477  00FD8A  74                 	db	116	;'t'
   478  00FD8B  61                 	db	97	;'a'
   479  00FD8C  72                 	db	114	;'r'
   480  00FD8D  67                 	db	103	;'g'
   481  00FD8E  65                 	db	101	;'e'
   482  00FD8F  74                 	db	116	;'t'
   483  00FD90  20                 	db	32
   484  00FD91  62                 	db	98	;'b'
   485  00FD92  61                 	db	97	;'a'
   486  00FD93  75                 	db	117	;'u'
   487  00FD94  64                 	db	100	;'d'
   488  00FD95  20                 	db	32
   489  00FD96  72                 	db	114	;'r'
   490  00FD97  61                 	db	97	;'a'
   491  00FD98  74                 	db	116	;'t'
   492  00FD99  65                 	db	101	;'e'
   493  00FD9A  0D                 	db	13
   494  00FD9B  0A                 	db	10
   495  00FD9C  00                 	db	0
   496  00FD9D                     STR_2:
   497                           
   498                           ; BSR set to: 0
   499  00FD9D  4C                 	db	76	;'L'
   500  00FD9E  61                 	db	97	;'a'
   501  00FD9F  62                 	db	98	;'b'
   502  00FDA0  20                 	db	32
   503  00FDA1  36                 	db	54	;'6'
   504  00FDA2  20                 	db	32
   505  00FDA3  2D                 	db	45
   506  00FDA4  20                 	db	32
   507  00FDA5  52                 	db	82	;'R'
   508  00FDA6  65                 	db	101	;'e'
   509  00FDA7  63                 	db	99	;'c'
   510  00FDA8  65                 	db	101	;'e'
   511  00FDA9  69                 	db	105	;'i'
   512  00FDAA  76                 	db	118	;'v'
   513  00FDAB  65                 	db	101	;'e'
   514  00FDAC  20                 	db	32
   515  00FDAD  61                 	db	97	;'a'
   516  00FDAE  6E                 	db	110	;'n'
   517  00FDAF  64                 	db	100	;'d'
   518  00FDB0  20                 	db	32
   519  00FDB1  64                 	db	100	;'d'
   520  00FDB2  65                 	db	101	;'e'
   521  00FDB3  63                 	db	99	;'c'
   522  00FDB4  6F                 	db	111	;'o'
   523  00FDB5  64                 	db	100	;'d'
   524  00FDB6  65                 	db	101	;'e'
   525  00FDB7  20                 	db	32
   526  00FDB8  61                 	db	97	;'a'
   527  00FDB9  6E                 	db	110	;'n'
   528  00FDBA  20                 	db	32
   529  00FDBB  49                 	db	73	;'I'
   530  00FDBC  52                 	db	82	;'R'
   531  00FDBD  20                 	db	32
   532  00FDBE  70                 	db	112	;'p'
   533  00FDBF  61                 	db	97	;'a'
   534  00FDC0  63                 	db	99	;'c'
   535  00FDC1  6B                 	db	107	;'k'
   536  00FDC2  65                 	db	101	;'e'
   537  00FDC3  74                 	db	116	;'t'
   538  00FDC4  0D                 	db	13
   539  00FDC5  0A                 	db	10
   540  00FDC6  00                 	db	0
   541  00FDC7                     STR_35:
   542                           
   543                           ; BSR set to: 0
   544  00FDC7  45                 	db	69	;'E'
   545  00FDC8  6E                 	db	110	;'n'
   546  00FDC9  74                 	db	116	;'t'
   547  00FDCA  65                 	db	101	;'e'
   548  00FDCB  72                 	db	114	;'r'
   549  00FDCC  20                 	db	32
   550  00FDCD  61                 	db	97	;'a'
   551  00FDCE  20                 	db	32
   552  00FDCF  6D                 	db	109	;'m'
   553  00FDD0  65                 	db	101	;'e'
   554  00FDD1  73                 	db	115	;'s'
   555  00FDD2  73                 	db	115	;'s'
   556  00FDD3  61                 	db	97	;'a'
   557  00FDD4  67                 	db	103	;'g'
   558  00FDD5  65                 	db	101	;'e'
   559  00FDD6  2C                 	db	44
   560  00FDD7  20                 	db	32
   561  00FDD8  68                 	db	104	;'h'
   562  00FDD9  69                 	db	105	;'i'
   563  00FDDA  74                 	db	116	;'t'
   564  00FDDB  20                 	db	32
   565  00FDDC  72                 	db	114	;'r'
   566  00FDDD  65                 	db	101	;'e'
   567  00FDDE  74                 	db	116	;'t'
   568  00FDDF  75                 	db	117	;'u'
   569  00FDE0  72                 	db	114	;'r'
   570  00FDE1  6E                 	db	110	;'n'
   571  00FDE2  20                 	db	32
   572  00FDE3  77                 	db	119	;'w'
   573  00FDE4  68                 	db	104	;'h'
   574  00FDE5  65                 	db	101	;'e'
   575  00FDE6  6E                 	db	110	;'n'
   576  00FDE7  20                 	db	32
   577  00FDE8  64                 	db	100	;'d'
   578  00FDE9  6F                 	db	111	;'o'
   579  00FDEA  6E                 	db	110	;'n'
   580  00FDEB  65                 	db	101	;'e'
   581  00FDEC  2E                 	db	46
   582  00FDED  0D                 	db	13
   583  00FDEE  0A                 	db	10
   584  00FDEF  00                 	db	0
   585  00FDF0                     STR_46:
   586                           
   587                           ; BSR set to: 0
   588  00FDF0  4E                 	db	78	;'N'
   589  00FDF1  6F                 	db	111	;'o'
   590  00FDF2  20                 	db	32
   591  00FDF3  6D                 	db	109	;'m'
   592  00FDF4  65                 	db	101	;'e'
   593  00FDF5  73                 	db	115	;'s'
   594  00FDF6  73                 	db	115	;'s'
   595  00FDF7  61                 	db	97	;'a'
   596  00FDF8  67                 	db	103	;'g'
   597  00FDF9  65                 	db	101	;'e'
   598  00FDFA  2C                 	db	44
   599  00FDFB  20                 	db	32
   600  00FDFC  72                 	db	114	;'r'
   601  00FDFD  65                 	db	101	;'e'
   602  00FDFE  63                 	db	99	;'c'
   603  00FDFF  65                 	db	101	;'e'
   604  00FE00  69                 	db	105	;'i'
   605  00FE01  76                 	db	118	;'v'
   606  00FE02  65                 	db	101	;'e'
   607  00FE03  4E                 	db	78	;'N'
   608  00FE04  65                 	db	101	;'e'
   609  00FE05  77                 	db	119	;'w'
   610  00FE06  4D                 	db	77	;'M'
   611  00FE07  65                 	db	101	;'e'
   612  00FE08  73                 	db	115	;'s'
   613  00FE09  73                 	db	115	;'s'
   614  00FE0A  61                 	db	97	;'a'
   615  00FE0B  67                 	db	103	;'g'
   616  00FE0C  65                 	db	101	;'e'
   617  00FE0D  20                 	db	32
   618  00FE0E  3D                 	db	61	;'='
   619  00FE0F  20                 	db	32
   620  00FE10  66                 	db	102	;'f'
   621  00FE11  61                 	db	97	;'a'
   622  00FE12  6C                 	db	108	;'l'
   623  00FE13  73                 	db	115	;'s'
   624  00FE14  65                 	db	101	;'e'
   625  00FE15  0D                 	db	13
   626  00FE16  0A                 	db	10
   627  00FE17  00                 	db	0
   628  00FE18                     STR_20:
   629                           
   630                           ; BSR set to: 0
   631  00FE18  53                 	db	83	;'S'
   632  00FE19  3A                 	db	58	;':'
   633  00FE1A  20                 	db	32
   634  00FE1B  53                 	db	83	;'S'
   635  00FE1C  65                 	db	101	;'e'
   636  00FE1D  6E                 	db	110	;'n'
   637  00FE1E  64                 	db	100	;'d'
   638  00FE1F  20                 	db	32
   639  00FE20  6D                 	db	109	;'m'
   640  00FE21  65                 	db	101	;'e'
   641  00FE22  73                 	db	115	;'s'
   642  00FE23  73                 	db	115	;'s'
   643  00FE24  61                 	db	97	;'a'
   644  00FE25  67                 	db	103	;'g'
   645  00FE26  65                 	db	101	;'e'
   646  00FE27  20                 	db	32
   647  00FE28  69                 	db	105	;'i'
   648  00FE29  6E                 	db	110	;'n'
   649  00FE2A  20                 	db	32
   650  00FE2B  66                 	db	102	;'f'
   651  00FE2C  6F                 	db	111	;'o'
   652  00FE2D  72                 	db	114	;'r'
   653  00FE2E  65                 	db	101	;'e'
   654  00FE2F  67                 	db	103	;'g'
   655  00FE30  72                 	db	114	;'r'
   656  00FE31  6F                 	db	111	;'o'
   657  00FE32  75                 	db	117	;'u'
   658  00FE33  6E                 	db	110	;'n'
   659  00FE34  64                 	db	100	;'d'
   660  00FE35  0D                 	db	13
   661  00FE36  0A                 	db	10
   662  00FE37  00                 	db	0
   663  00FE38                     STR_19:
   664                           
   665                           ; BSR set to: 0
   666  00FE38  6D                 	db	109	;'m'
   667  00FE39  3A                 	db	58	;':'
   668  00FE3A  20                 	db	32
   669  00FE3B  45                 	db	69	;'E'
   670  00FE3C  6E                 	db	110	;'n'
   671  00FE3D  74                 	db	116	;'t'
   672  00FE3E  65                 	db	101	;'e'
   673  00FE3F  72                 	db	114	;'r'
   674  00FE40  20                 	db	32
   675  00FE41  69                 	db	105	;'i'
   676  00FE42  6E                 	db	110	;'n'
   677  00FE43  20                 	db	32
   678  00FE44  74                 	db	116	;'t'
   679  00FE45  72                 	db	114	;'r'
   680  00FE46  61                 	db	97	;'a'
   681  00FE47  6E                 	db	110	;'n'
   682  00FE48  73                 	db	115	;'s'
   683  00FE49  6D                 	db	109	;'m'
   684  00FE4A  69                 	db	105	;'i'
   685  00FE4B  74                 	db	116	;'t'
   686  00FE4C  20                 	db	32
   687  00FE4D  4D                 	db	77	;'M'
   688  00FE4E  65                 	db	101	;'e'
   689  00FE4F  73                 	db	115	;'s'
   690  00FE50  73                 	db	115	;'s'
   691  00FE51  61                 	db	97	;'a'
   692  00FE52  67                 	db	103	;'g'
   693  00FE53  65                 	db	101	;'e'
   694  00FE54  0D                 	db	13
   695  00FE55  0A                 	db	10
   696  00FE56  00                 	db	0
   697  00FE57                     STR_33:
   698                           
   699                           ; BSR set to: 0
   700  00FE57  42                 	db	66	;'B'
   701  00FE58  61                 	db	97	;'a'
   702  00FE59  75                 	db	117	;'u'
   703  00FE5A  64                 	db	100	;'d'
   704  00FE5B  20                 	db	32
   705  00FE5C  72                 	db	114	;'r'
   706  00FE5D  61                 	db	97	;'a'
   707  00FE5E  74                 	db	116	;'t'
   708  00FE5F  65                 	db	101	;'e'
   709  00FE60  20                 	db	32
   710  00FE61  61                 	db	97	;'a'
   711  00FE62  73                 	db	115	;'s'
   712  00FE63  73                 	db	115	;'s'
   713  00FE64  69                 	db	105	;'i'
   714  00FE65  67                 	db	103	;'g'
   715  00FE66  6E                 	db	110	;'n'
   716  00FE67  65                 	db	101	;'e'
   717  00FE68  64                 	db	100	;'d'
   718  00FE69  20                 	db	32
   719  00FE6A  25                 	db	37
   720  00FE6B  30                 	db	48	;'0'
   721  00FE6C  32                 	db	50	;'2'
   722  00FE6D  78                 	db	120	;'x'
   723  00FE6E  3A                 	db	58	;':'
   724  00FE6F  25                 	db	37
   725  00FE70  30                 	db	48	;'0'
   726  00FE71  32                 	db	50	;'2'
   727  00FE72  78                 	db	120	;'x'
   728  00FE73  0D                 	db	13
   729  00FE74  0A                 	db	10
   730  00FE75  00                 	db	0
   731  00FE76                     STR_16:
   732                           
   733                           ; BSR set to: 0
   734  00FE76  7A                 	db	122	;'z'
   735  00FE77  3A                 	db	58	;':'
   736  00FE78  20                 	db	32
   737  00FE79  43                 	db	67	;'C'
   738  00FE7A  6C                 	db	108	;'l'
   739  00FE7B  65                 	db	101	;'e'
   740  00FE7C  61                 	db	97	;'a'
   741  00FE7D  72                 	db	114	;'r'
   742  00FE7E  20                 	db	32
   743  00FE7F  74                 	db	116	;'t'
   744  00FE80  68                 	db	104	;'h'
   745  00FE81  65                 	db	101	;'e'
   746  00FE82  20                 	db	32
   747  00FE83  74                 	db	116	;'t'
   748  00FE84  65                 	db	101	;'e'
   749  00FE85  72                 	db	114	;'r'
   750  00FE86  6D                 	db	109	;'m'
   751  00FE87  69                 	db	105	;'i'
   752  00FE88  6E                 	db	110	;'n'
   753  00FE89  61                 	db	97	;'a'
   754  00FE8A  6C                 	db	108	;'l'
   755  00FE8B  0D                 	db	13
   756  00FE8C  0A                 	db	10
   757  00FE8D  00                 	db	0
   758  00FE8E                     STR_34:
   759                           
   760                           ; BSR set to: 0
   761  00FE8E  4A                 	db	74	;'J'
   762  00FE8F  75                 	db	117	;'u'
   763  00FE90  73                 	db	115	;'s'
   764  00FE91  74                 	db	116	;'t'
   765  00FE92  20                 	db	32
   766  00FE93  72                 	db	114	;'r'
   767  00FE94  65                 	db	101	;'e'
   768  00FE95  73                 	db	115	;'s'
   769  00FE96  65                 	db	101	;'e'
   770  00FE97  74                 	db	116	;'t'
   771  00FE98  20                 	db	32
   772  00FE99  45                 	db	69	;'E'
   773  00FE9A  55                 	db	85	;'U'
   774  00FE9B  53                 	db	83	;'S'
   775  00FE9C  41                 	db	65	;'A'
   776  00FE9D  52                 	db	82	;'R'
   777  00FE9E  54                 	db	84	;'T'
   778  00FE9F  32                 	db	50	;'2'
   779  00FEA0  0D                 	db	13
   780  00FEA1  0A                 	db	10
   781  00FEA2  00                 	db	0
   782  00FEA3                     STR_15:
   783                           
   784                           ; BSR set to: 0
   785  00FEA3  5A                 	db	90	;'Z'
   786  00FEA4  3A                 	db	58	;':'
   787  00FEA5  20                 	db	32
   788  00FEA6  52                 	db	82	;'R'
   789  00FEA7  65                 	db	101	;'e'
   790  00FEA8  73                 	db	115	;'s'
   791  00FEA9  65                 	db	101	;'e'
   792  00FEAA  74                 	db	116	;'t'
   793  00FEAB  20                 	db	32
   794  00FEAC  70                 	db	112	;'p'
   795  00FEAD  72                 	db	114	;'r'
   796  00FEAE  6F                 	db	111	;'o'
   797  00FEAF  63                 	db	99	;'c'
   798  00FEB0  65                 	db	101	;'e'
   799  00FEB1  73                 	db	115	;'s'
   800  00FEB2  73                 	db	115	;'s'
   801  00FEB3  6F                 	db	111	;'o'
   802  00FEB4  72                 	db	114	;'r'
   803  00FEB5  0D                 	db	13
   804  00FEB6  0A                 	db	10
   805  00FEB7  00                 	db	0
   806  00FEB8                     STR_18:
   807                           
   808                           ; BSR set to: 0
   809  00FEB8  72                 	db	114	;'r'
   810  00FEB9  3A                 	db	58	;':'
   811  00FEBA  20                 	db	32
   812  00FEBB  72                 	db	114	;'r'
   813  00FEBC  65                 	db	101	;'e'
   814  00FEBD  73                 	db	115	;'s'
   815  00FEBE  65                 	db	101	;'e'
   816  00FEBF  74                 	db	116	;'t'
   817  00FEC0  20                 	db	32
   818  00FEC1  45                 	db	69	;'E'
   819  00FEC2  55                 	db	85	;'U'
   820  00FEC3  53                 	db	83	;'S'
   821  00FEC4  41                 	db	65	;'A'
   822  00FEC5  52                 	db	82	;'R'
   823  00FEC6  54                 	db	84	;'T'
   824  00FEC7  32                 	db	50	;'2'
   825  00FEC8  0D                 	db	13
   826  00FEC9  0A                 	db	10
   827  00FECA  00                 	db	0
   828  00FECB                     STR_47:
   829                           
   830                           ; BSR set to: 0
   831  00FECB  55                 	db	85	;'U'
   832  00FECC  6E                 	db	110	;'n'
   833  00FECD  6B                 	db	107	;'k'
   834  00FECE  6E                 	db	110	;'n'
   835  00FECF  6F                 	db	111	;'o'
   836  00FED0  77                 	db	119	;'w'
   837  00FED1  6E                 	db	110	;'n'
   838  00FED2  20                 	db	32
   839  00FED3  6B                 	db	107	;'k'
   840  00FED4  65                 	db	101	;'e'
   841  00FED5  79                 	db	121	;'y'
   842  00FED6  20                 	db	32
   843  00FED7  25                 	db	37
   844  00FED8  63                 	db	99	;'c'
   845  00FED9  0D                 	db	13
   846  00FEDA  0A                 	db	10
   847  00FEDB  00                 	db	0
   848  00FEDC                     STR_32:
   849                           
   850                           ; BSR set to: 0
   851  00FEDC  34                 	db	52	;'4'
   852  00FEDD  3A                 	db	58	;':'
   853  00FEDE  20                 	db	32
   854  00FEDF  31                 	db	49	;'1'
   855  00FEE0  39                 	db	57	;'9'
   856  00FEE1  32                 	db	50	;'2'
   857  00FEE2  30                 	db	48	;'0'
   858  00FEE3  30                 	db	48	;'0'
   859  00FEE4  20                 	db	32
   860  00FEE5  62                 	db	98	;'b'
   861  00FEE6  61                 	db	97	;'a'
   862  00FEE7  75                 	db	117	;'u'
   863  00FEE8  64                 	db	100	;'d'
   864  00FEE9  0D                 	db	13
   865  00FEEA  0A                 	db	10
   866  00FEEB  00                 	db	0
   867  00FEEC                     STR_39:
   868                           
   869                           ; BSR set to: 0
   870  00FEEC  09                 	db	9
   871  00FEED  63                 	db	99	;'c'
   872  00FEEE  68                 	db	104	;'h'
   873  00FEEF  65                 	db	101	;'e'
   874  00FEF0  63                 	db	99	;'c'
   875  00FEF1  6B                 	db	107	;'k'
   876  00FEF2  53                 	db	83	;'S'
   877  00FEF3  75                 	db	117	;'u'
   878  00FEF4  6D                 	db	109	;'m'
   879  00FEF5  3A                 	db	58	;':'
   880  00FEF6  20                 	db	32
   881  00FEF7  25                 	db	37
   882  00FEF8  75                 	db	117	;'u'
   883  00FEF9  0D                 	db	13
   884  00FEFA  0A                 	db	10
   885  00FEFB  00                 	db	0
   886  00FEFC                     STR_1:
   887                           
   888                           ; BSR set to: 0
   889  00FEFC  44                 	db	68	;'D'
   890  00FEFD  65                 	db	101	;'e'
   891  00FEFE  76                 	db	118	;'v'
   892  00FEFF  27                 	db	39
   893  00FF00  32                 	db	50	;'2'
   894  00FF01  30                 	db	48	;'0'
   895  00FF02  20                 	db	32
   896  00FF03  42                 	db	66	;'B'
   897  00FF04  6F                 	db	111	;'o'
   898  00FF05  61                 	db	97	;'a'
   899  00FF06  72                 	db	114	;'r'
   900  00FF07  64                 	db	100	;'d'
   901  00FF08  0D                 	db	13
   902  00FF09  0A                 	db	10
   903  00FF0A  00                 	db	0
   904  00FF0B                     STR_29:
   905                           
   906                           ; BSR set to: 0
   907  00FF0B  31                 	db	49	;'1'
   908  00FF0C  3A                 	db	58	;':'
   909  00FF0D  20                 	db	32
   910  00FF0E  31                 	db	49	;'1'
   911  00FF0F  32                 	db	50	;'2'
   912  00FF10  30                 	db	48	;'0'
   913  00FF11  30                 	db	48	;'0'
   914  00FF12  20                 	db	32
   915  00FF13  62                 	db	98	;'b'
   916  00FF14  61                 	db	97	;'a'
   917  00FF15  75                 	db	117	;'u'
   918  00FF16  64                 	db	100	;'d'
   919  00FF17  0D                 	db	13
   920  00FF18  0A                 	db	10
   921  00FF19  00                 	db	0
   922  00FF1A                     STR_30:
   923                           
   924                           ; BSR set to: 0
   925  00FF1A  32                 	db	50	;'2'
   926  00FF1B  3A                 	db	58	;':'
   927  00FF1C  20                 	db	32
   928  00FF1D  32                 	db	50	;'2'
   929  00FF1E  34                 	db	52	;'4'
   930  00FF1F  30                 	db	48	;'0'
   931  00FF20  30                 	db	48	;'0'
   932  00FF21  20                 	db	32
   933  00FF22  62                 	db	98	;'b'
   934  00FF23  61                 	db	97	;'a'
   935  00FF24  75                 	db	117	;'u'
   936  00FF25  64                 	db	100	;'d'
   937  00FF26  0D                 	db	13
   938  00FF27  0A                 	db	10
   939  00FF28  00                 	db	0
   940  00FF29                     STR_31:
   941                           
   942                           ; BSR set to: 0
   943  00FF29  33                 	db	51	;'3'
   944  00FF2A  3A                 	db	58	;':'
   945  00FF2B  20                 	db	32
   946  00FF2C  39                 	db	57	;'9'
   947  00FF2D  36                 	db	54	;'6'
   948  00FF2E  30                 	db	48	;'0'
   949  00FF2F  30                 	db	48	;'0'
   950  00FF30  20                 	db	32
   951  00FF31  62                 	db	98	;'b'
   952  00FF32  61                 	db	97	;'a'
   953  00FF33  75                 	db	117	;'u'
   954  00FF34  64                 	db	100	;'d'
   955  00FF35  0D                 	db	13
   956  00FF36  0A                 	db	10
   957  00FF37  00                 	db	0
   958  00FF38                     STR_38:
   959                           
   960                           ; BSR set to: 0
   961  00FF38  09                 	db	9
   962  00FF39  4D                 	db	77	;'M'
   963  00FF3A  65                 	db	101	;'e'
   964  00FF3B  73                 	db	115	;'s'
   965  00FF3C  73                 	db	115	;'s'
   966  00FF3D  61                 	db	97	;'a'
   967  00FF3E  67                 	db	103	;'g'
   968  00FF3F  65                 	db	101	;'e'
   969  00FF40  3A                 	db	58	;':'
   970  00FF41  20                 	db	32
   971  00FF42  25                 	db	37
   972  00FF43  73                 	db	115	;'s'
   973  00FF44  0D                 	db	13
   974  00FF45  0A                 	db	10
   975  00FF46  00                 	db	0
   976  00FF47                     STR_13:
   977                           
   978                           ; BSR set to: 0
   979  00FF47  3F                 	db	63	;'?'
   980  00FF48  3A                 	db	58	;':'
   981  00FF49  20                 	db	32
   982  00FF4A  68                 	db	104	;'h'
   983  00FF4B  65                 	db	101	;'e'
   984  00FF4C  6C                 	db	108	;'l'
   985  00FF4D  70                 	db	112	;'p'
   986  00FF4E  20                 	db	32
   987  00FF4F  6D                 	db	109	;'m'
   988  00FF50  65                 	db	101	;'e'
   989  00FF51  6E                 	db	110	;'n'
   990  00FF52  75                 	db	117	;'u'
   991  00FF53  0D                 	db	13
   992  00FF54  0A                 	db	10
   993  00FF55  00                 	db	0
   994  00FF56                     STR_40:
   995                           
   996                           ; BSR set to: 0
   997  00FF56  54                 	db	84	;'T'
   998  00FF57  72                 	db	114	;'r'
   999  00FF58  61                 	db	97	;'a'
  1000  00FF59  6E                 	db	110	;'n'
  1001  00FF5A  73                 	db	115	;'s'
  1002  00FF5B  6D                 	db	109	;'m'
  1003  00FF5C  69                 	db	105	;'i'
  1004  00FF5D  74                 	db	116	;'t'
  1005  00FF5E  74                 	db	116	;'t'
  1006  00FF5F  65                 	db	101	;'e'
  1007  00FF60  64                 	db	100	;'d'
  1008  00FF61  0D                 	db	13
  1009  00FF62  0A                 	db	10
  1010  00FF63  00                 	db	0
  1011  00FF64                     STR_28:
  1012                           
  1013                           ; BSR set to: 0
  1014  00FF64  30                 	db	48	;'0'
  1015  00FF65  3A                 	db	58	;':'
  1016  00FF66  20                 	db	32
  1017  00FF67  33                 	db	51	;'3'
  1018  00FF68  30                 	db	48	;'0'
  1019  00FF69  30                 	db	48	;'0'
  1020  00FF6A  20                 	db	32
  1021  00FF6B  62                 	db	98	;'b'
  1022  00FF6C  61                 	db	97	;'a'
  1023  00FF6D  75                 	db	117	;'u'
  1024  00FF6E  64                 	db	100	;'d'
  1025  00FF6F  0D                 	db	13
  1026  00FF70  0A                 	db	10
  1027  00FF71  00                 	db	0
  1028  00FF72                     STR_45:
  1029                           
  1030                           ; BSR set to: 0
  1031  00FF72  09                 	db	9
  1032  00FF73  63                 	db	99	;'c'
  1033  00FF74  68                 	db	104	;'h'
  1034  00FF75  65                 	db	101	;'e'
  1035  00FF76  63                 	db	99	;'c'
  1036  00FF77  6B                 	db	107	;'k'
  1037  00FF78  53                 	db	83	;'S'
  1038  00FF79  75                 	db	117	;'u'
  1039  00FF7A  6D                 	db	109	;'m'
  1040  00FF7B  3A                 	db	58	;':'
  1041  00FF7C  20                 	db	32
  1042  00FF7D  25                 	db	37
  1043  00FF7E  75                 	db	117	;'u'
  1044  00FF7F  00                 	db	0
  1045  00FF80                     STR_10:
  1046                           
  1047                           ; BSR set to: 0
  1048  00FF80  31                 	db	49	;'1'
  1049  00FF81  39                 	db	57	;'9'
  1050  00FF82  32                 	db	50	;'2'
  1051  00FF83  30                 	db	48	;'0'
  1052  00FF84  30                 	db	48	;'0'
  1053  00FF85  20                 	db	32
  1054  00FF86  42                 	db	66	;'B'
  1055  00FF87  61                 	db	97	;'a'
  1056  00FF88  75                 	db	117	;'u'
  1057  00FF89  64                 	db	100	;'d'
  1058  00FF8A  0D                 	db	13
  1059  00FF8B  0A                 	db	10
  1060  00FF8C  00                 	db	0
  1061  00FF8D                     STR_44:
  1062                           
  1063                           ; BSR set to: 0
  1064  00FF8D  09                 	db	9
  1065  00FF8E  4D                 	db	77	;'M'
  1066  00FF8F  65                 	db	101	;'e'
  1067  00FF90  73                 	db	115	;'s'
  1068  00FF91  73                 	db	115	;'s'
  1069  00FF92  61                 	db	97	;'a'
  1070  00FF93  67                 	db	103	;'g'
  1071  00FF94  65                 	db	101	;'e'
  1072  00FF95  3A                 	db	58	;':'
  1073  00FF96  20                 	db	32
  1074  00FF97  25                 	db	37
  1075  00FF98  73                 	db	115	;'s'
  1076  00FF99  00                 	db	0
  1077  00FF9A                     STR_37:
  1078                           
  1079                           ; BSR set to: 0
  1080  00FF9A  0D                 	db	13
  1081  00FF9B  0A                 	db	10
  1082  00FF9C  43                 	db	67	;'C'
  1083  00FF9D  72                 	db	114	;'r'
  1084  00FF9E  65                 	db	101	;'e'
  1085  00FF9F  61                 	db	97	;'a'
  1086  00FFA0  74                 	db	116	;'t'
  1087  00FFA1  65                 	db	101	;'e'
  1088  00FFA2  64                 	db	100	;'d'
  1089  00FFA3  0D                 	db	13
  1090  00FFA4  0A                 	db	10
  1091  00FFA5  00                 	db	0
  1092  00FFA6                     STR_7:
  1093                           
  1094                           ; BSR set to: 0
  1095  00FFA6  31                 	db	49	;'1'
  1096  00FFA7  32                 	db	50	;'2'
  1097  00FFA8  30                 	db	48	;'0'
  1098  00FFA9  30                 	db	48	;'0'
  1099  00FFAA  20                 	db	32
  1100  00FFAB  42                 	db	66	;'B'
  1101  00FFAC  61                 	db	97	;'a'
  1102  00FFAD  75                 	db	117	;'u'
  1103  00FFAE  64                 	db	100	;'d'
  1104  00FFAF  0D                 	db	13
  1105  00FFB0  0A                 	db	10
  1106  00FFB1  00                 	db	0
  1107  00FFB2                     STR_8:
  1108                           
  1109                           ; BSR set to: 0
  1110  00FFB2  32                 	db	50	;'2'
  1111  00FFB3  34                 	db	52	;'4'
  1112  00FFB4  30                 	db	48	;'0'
  1113  00FFB5  30                 	db	48	;'0'
  1114  00FFB6  20                 	db	32
  1115  00FFB7  42                 	db	66	;'B'
  1116  00FFB8  61                 	db	97	;'a'
  1117  00FFB9  75                 	db	117	;'u'
  1118  00FFBA  64                 	db	100	;'d'
  1119  00FFBB  0D                 	db	13
  1120  00FFBC  0A                 	db	10
  1121  00FFBD  00                 	db	0
  1122  00FFBE                     STR_9:
  1123                           
  1124                           ; BSR set to: 0
  1125  00FFBE  39                 	db	57	;'9'
  1126  00FFBF  36                 	db	54	;'6'
  1127  00FFC0  30                 	db	48	;'0'
  1128  00FFC1  30                 	db	48	;'0'
  1129  00FFC2  20                 	db	32
  1130  00FFC3  42                 	db	66	;'B'
  1131  00FFC4  61                 	db	97	;'a'
  1132  00FFC5  75                 	db	117	;'u'
  1133  00FFC6  64                 	db	100	;'d'
  1134  00FFC7  0D                 	db	13
  1135  00FFC8  0A                 	db	10
  1136  00FFC9  00                 	db	0
  1137  00FFCA                     STR_43:
  1138                           
  1139                           ; BSR set to: 0
  1140  00FFCA  52                 	db	82	;'R'
  1141  00FFCB  65                 	db	101	;'e'
  1142  00FFCC  63                 	db	99	;'c'
  1143  00FFCD  65                 	db	101	;'e'
  1144  00FFCE  69                 	db	105	;'i'
  1145  00FFCF  76                 	db	118	;'v'
  1146  00FFD0  65                 	db	101	;'e'
  1147  00FFD1  64                 	db	100	;'d'
  1148  00FFD2  0D                 	db	13
  1149  00FFD3  0A                 	db	10
  1150  00FFD4  00                 	db	0
  1151  00FFD5                     STR_6:
  1152                           
  1153                           ; BSR set to: 0
  1154  00FFD5  33                 	db	51	;'3'
  1155  00FFD6  30                 	db	48	;'0'
  1156  00FFD7  30                 	db	48	;'0'
  1157  00FFD8  20                 	db	32
  1158  00FFD9  42                 	db	66	;'B'
  1159  00FFDA  61                 	db	97	;'a'
  1160  00FFDB  75                 	db	117	;'u'
  1161  00FFDC  64                 	db	100	;'d'
  1162  00FFDD  0D                 	db	13
  1163  00FFDE  0A                 	db	10
  1164  00FFDF  00                 	db	0
  1165  00FFE0                     STR_24:
  1166                           
  1167                           ; BSR set to: 0
  1168  00FFE0  6F                 	db	111	;'o'
  1169  00FFE1  3A                 	db	58	;':'
  1170  00FFE2  09                 	db	9
  1171  00FFE3  6F                 	db	111	;'o'
  1172  00FFE4  6B                 	db	107	;'k'
  1173  00FFE5  0D                 	db	13
  1174  00FFE6  0A                 	db	10
  1175  00FFE7  00                 	db	0
  1176  00FFE8                     STR_48:
  1177                           
  1178                           ; BSR set to: 0
  1179  00FFE8  4F                 	db	79	;'O'
  1180  00FFE9  4F                 	db	79	;'O'
  1181  00FFEA  50                 	db	80	;'P'
  1182  00FFEB  53                 	db	83	;'S'
  1183  00FFEC  0D                 	db	13
  1184  00FFED  0A                 	db	10
  1185  00FFEE  00                 	db	0
  1186  00FFEF                     STR_14:
  1187                           
  1188                           ; BSR set to: 0
  1189  00FFEF  6F                 	db	111	;'o'
  1190  00FFF0  3A                 	db	58	;':'
  1191  00FFF1  20                 	db	32
  1192  00FFF2  6B                 	db	107	;'k'
  1193  00FFF3  0D                 	db	13
  1194  00FFF4  0A                 	db	10
  1195  00FFF5  00                 	db	0
  1196  00FFF6                     STR_4:
  1197                           
  1198                           ; BSR set to: 0
  1199  00FFF6  0D                 	db	13
  1200  00FFF7  0A                 	db	10
  1201  00FFF8  3E                 	db	62	;'>'
  1202  00FFF9  20                 	db	32
  1203  00FFFA  00                 	db	0
  1204  00FFFB                     STR_36:
  1205                           
  1206                           ; BSR set to: 0
  1207  00FFFB  25                 	db	37
  1208  00FFFC  63                 	db	99	;'c'
  1209  00FFFD  00                 	db	0
  1210  0000                     
  1211                           ; #config settings
  1212  00FFFE  00                 	db	0	; dummy byte at the end
  1213  0000                     
  1214                           	psect	cinit
  1215  00312C                     __pcinit:
  1216                           	opt callstack 0
  1217  00312C                     start_initialization:
  1218                           	opt callstack 0
  1219  00312C                     __initialization:
  1220                           	opt callstack 0
  1221                           
  1222                           ; Initialize objects allocated to BANK1 (17 bytes)
  1223                           ; load TBLPTR registers with __pidataBANK1
  1224  00312C  0E56               	movlw	low __pidataBANK1
  1225  00312E  6EF6               	movwf	tblptrl,c
  1226  003130  0E36               	movlw	high __pidataBANK1
  1227  003132  6EF7               	movwf	tblptrh,c
  1228  003134  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1229  003136  6EF8               	movwf	tblptru,c
  1230  003138  EE01  F0B6         	lfsr	0,__pdataBANK1
  1231  00313C  EE10 F011          	lfsr	1,17
  1232  003140                     copy_data0:
  1233  003140  0009               	tblrd		*+
  1234  003142  CFF5 FFEE          	movff	tablat,postinc0
  1235  003146  50E5               	movf	postdec1,w,c
  1236  003148  50E1               	movf	fsr1l,w,c
  1237  00314A  E1FA               	bnz	copy_data0
  1238                           
  1239                           ; Clear objects allocated to BANK1 (109 bytes)
  1240  00314C  EE01  F000         	lfsr	0,__pbssBANK1
  1241  003150  0E6D               	movlw	109
  1242  003152                     clear_0:
  1243  003152  6AEE               	clrf	postinc0,c
  1244  003154  06E8               	decf	wreg,f,c
  1245  003156  E1FD               	bnz	clear_0
  1246                           
  1247                           ; Clear objects allocated to BANK0 (28 bytes)
  1248  003158  EE00  F0C8         	lfsr	0,__pbssBANK0
  1249  00315C  0E1C               	movlw	28
  1250  00315E                     clear_1:
  1251  00315E  6AEE               	clrf	postinc0,c
  1252  003160  06E8               	decf	wreg,f,c
  1253  003162  E1FD               	bnz	clear_1
  1254  003164                     end_of_initialization:
  1255                           	opt callstack 0
  1256  003164                     __end_of__initialization:
  1257                           	opt callstack 0
  1258  003164  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1259  003166  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1260  003168  0100               	movlb	0
  1261  00316A  EF7A  F000         	goto	_main	;jump to C main() function
  1262                           
  1263                           	psect	bssBANK0
  1264  0000C8                     __pbssBANK0:
  1265                           	opt callstack 0
  1266  0000C8                     _nout:
  1267                           	opt callstack 0
  1268  0000C8                     	ds	2
  1269  0000CA                     _width:
  1270                           	opt callstack 0
  1271  0000CA                     	ds	2
  1272  0000CC                     _prec:
  1273                           	opt callstack 0
  1274  0000CC                     	ds	2
  1275  0000CE                     _flags:
  1276                           	opt callstack 0
  1277  0000CE                     	ds	2
  1278  0000D0                     _EUSART2_FramingErrorHandler:
  1279                           	opt callstack 0
  1280  0000D0                     	ds	2
  1281  0000D2                     _EUSART2_RxDefaultInterruptHandler:
  1282                           	opt callstack 0
  1283  0000D2                     	ds	2
  1284  0000D4                     _EUSART2_TxDefaultInterruptHandler:
  1285                           	opt callstack 0
  1286  0000D4                     	ds	2
  1287  0000D6                     _timer1ReloadVal:
  1288                           	opt callstack 0
  1289  0000D6                     	ds	2
  1290  0000D8                     myEUSART2ISR@index:
  1291                           	opt callstack 0
  1292  0000D8                     	ds	1
  1293  0000D9                     myEUSART2ISR@state:
  1294                           	opt callstack 0
  1295  0000D9                     	ds	1
  1296  0000DA                     _mask:
  1297                           	opt callstack 0
  1298  0000DA                     	ds	1
  1299  0000DB                     _receiveBusy:
  1300                           	opt callstack 0
  1301  0000DB                     	ds	1
  1302  0000DC                     _eusart1RxLastError:
  1303                           	opt callstack 0
  1304  0000DC                     	ds	1
  1305  0000DD                     _eusart2RxLastError:
  1306                           	opt callstack 0
  1307  0000DD                     	ds	1
  1308  0000DE                     _eusart2RxCount:
  1309                           	opt callstack 0
  1310  0000DE                     	ds	1
  1311  0000DF                     _eusart2RxTail:
  1312                           	opt callstack 0
  1313  0000DF                     	ds	1
  1314  0000E0                     _eusart2RxHead:
  1315                           	opt callstack 0
  1316  0000E0                     	ds	1
  1317  0000E1                     _eusart2TxBufferRemaining:
  1318                           	opt callstack 0
  1319  0000E1                     	ds	1
  1320  0000E2                     _eusart2TxTail:
  1321                           	opt callstack 0
  1322  0000E2                     	ds	1
  1323  0000E3                     _eusart2TxHead:
  1324                           	opt callstack 0
  1325  0000E3                     	ds	1
  1326                           
  1327                           	psect	bssBANK1
  1328  000100                     __pbssBANK1:
  1329                           	opt callstack 0
  1330  000100                     _eusart2RxStatusBuffer:
  1331                           	opt callstack 0
  1332  000100                     	ds	8
  1333  000108                     _eusart2RxBuffer:
  1334                           	opt callstack 0
  1335  000108                     	ds	8
  1336  000110                     _eusart2TxBuffer:
  1337                           	opt callstack 0
  1338  000110                     	ds	8
  1339  000118                     _EUSART1_ErrorHandler:
  1340                           	opt callstack 0
  1341  000118                     	ds	2
  1342  00011A                     _EUSART1_OverrunErrorHandler:
  1343                           	opt callstack 0
  1344  00011A                     	ds	2
  1345  00011C                     _EUSART1_FramingErrorHandler:
  1346                           	opt callstack 0
  1347  00011C                     	ds	2
  1348  00011E                     _EUSART2_ErrorHandler:
  1349                           	opt callstack 0
  1350  00011E                     	ds	2
  1351  000120                     _EUSART2_OverrunErrorHandler:
  1352                           	opt callstack 0
  1353  000120                     	ds	2
  1354  000122                     _checkSumRx:
  1355                           	opt callstack 0
  1356  000122                     	ds	1
  1357  000123                     _checkSumTx:
  1358                           	opt callstack 0
  1359  000123                     	ds	1
  1360  000124                     _receiveNewMessage:
  1361                           	opt callstack 0
  1362  000124                     	ds	1
  1363  000125                     _dbuf:
  1364                           	opt callstack 0
  1365  000125                     	ds	32
  1366  000145                     _IRtransmitBuffer:
  1367                           	opt callstack 0
  1368  000145                     	ds	20
  1369  000159                     _IRreceiveBuffer:
  1370                           	opt callstack 0
  1371  000159                     	ds	20
  1372                           
  1373                           	psect	dataBANK1
  1374  0001B6                     __pdataBANK1:
  1375                           	opt callstack 0
  1376  0001B6                     main@F6364:
  1377                           	opt callstack 0
  1378  0001B6                     	ds	10
  1379  0001C0                     stoa@F1136:
  1380                           	opt callstack 0
  1381  0001C0                     	ds	7
  1382                           
  1383                           	psect	cstackBANK1
  1384  00016D                     __pcstackBANK1:
  1385                           	opt callstack 0
  1386  00016D                     ??_vfpfcnvrt:
  1387                           
  1388                           ; 1 bytes @ 0x0
  1389  00016D                     	ds	4
  1390  000171                     vfpfcnvrt@cp:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 2 bytes @ 0x4
  1394  000171                     	ds	2
  1395  000173                     vfpfcnvrt@done:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x6
  1399  000173                     	ds	2
  1400  000175                     _vfpfcnvrt$1518:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x8
  1404  000175                     	ds	2
  1405  000177                     vfpfcnvrt@llu:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 8 bytes @ 0xA
  1409  000177                     	ds	8
  1410  00017F                     vfpfcnvrt@c:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x12
  1414  00017F                     	ds	1
  1415  000180                     ?_vfprintf:
  1416                           	opt callstack 0
  1417  000180                     vfprintf@fp:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x13
  1421  000180                     	ds	2
  1422  000182                     vfprintf@fmt:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x15
  1426  000182                     	ds	2
  1427  000184                     vfprintf@ap:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x17
  1431  000184                     	ds	2
  1432  000186                     ?_printf:
  1433                           	opt callstack 0
  1434  000186                     printf@fmt:
  1435                           	opt callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x19
  1438  000186                     	ds	8
  1439  00018E                     printf@ap:
  1440                           	opt callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x21
  1443  00018E                     	ds	2
  1444  000190                     ??_main:
  1445                           
  1446                           ; 1 bytes @ 0x23
  1447  000190                     	ds	2
  1448  000192                     main@message:
  1449                           	opt callstack 0
  1450                           
  1451                           ; 20 bytes @ 0x25
  1452  000192                     	ds	21
  1453  0001A7                     main@letter:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 1 bytes @ 0x3A
  1457  0001A7                     	ds	1
  1458  0001A8                     main@bitPeriod:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 10 bytes @ 0x3B
  1462  0001A8                     	ds	10
  1463  0001B2                     main@cmd:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 1 bytes @ 0x45
  1467  0001B2                     	ds	1
  1468  0001B3                     main@baudRateSelected:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x46
  1472  0001B3                     	ds	1
  1473  0001B4                     main@index:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x47
  1477  0001B4                     	ds	1
  1478  0001B5                     main@i:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x48
  1482  0001B5                     	ds	1
  1483                           
  1484                           	psect	cstackBANK0
  1485  000060                     __pcstackBANK0:
  1486                           	opt callstack 0
  1487  000060                     ?i2_vfprintf:
  1488                           	opt callstack 0
  1489  000060                     i2vfprintf@fp:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x0
  1493  000060                     	ds	2
  1494  000062                     i2vfprintf@fmt:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x2
  1498  000062                     	ds	2
  1499  000064                     i2vfprintf@ap:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x4
  1503  000064                     	ds	2
  1504  000066                     i2vfprintf@cfmt:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x6
  1508  000066                     	ds	2
  1509  000068                     ?i2_printf:
  1510                           	opt callstack 0
  1511  000068                     i2printf@fmt:
  1512                           	opt callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x8
  1515  000068                     	ds	4
  1516  00006C                     i2printf@ap:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 2 bytes @ 0xC
  1520  00006C                     	ds	2
  1521  00006E                     ??_myEUSART2ISR:
  1522                           
  1523                           ; 1 bytes @ 0xE
  1524  00006E                     	ds	2
  1525  000070                     ??_INTERRUPT_InterruptManager:
  1526                           
  1527                           ; 1 bytes @ 0x10
  1528  000070                     	ds	12
  1529  00007C                     ?_strlen:
  1530                           	opt callstack 0
  1531  00007C                     ?_isupper:
  1532                           	opt callstack 0
  1533  00007C                     ?_isalpha:
  1534                           	opt callstack 0
  1535  00007C                     ?_isdigit:
  1536                           	opt callstack 0
  1537  00007C                     ?_isspace:
  1538                           	opt callstack 0
  1539  00007C                     ?_islower:
  1540                           	opt callstack 0
  1541  00007C                     ?___wmul:
  1542                           	opt callstack 0
  1543  00007C                     ?___lodiv:
  1544                           	opt callstack 0
  1545  00007C                     ?___lomod:
  1546                           	opt callstack 0
  1547  00007C                     EUSART1_Write@txData:
  1548                           	opt callstack 0
  1549  00007C                     TMR1_WriteTimer@timerVal:
  1550                           	opt callstack 0
  1551  00007C                     EPWM2_LoadDutyValue@dutyValue:
  1552                           	opt callstack 0
  1553  00007C                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1554                           	opt callstack 0
  1555  00007C                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1556                           	opt callstack 0
  1557  00007C                     EUSART2_SetErrorHandler@interruptHandler:
  1558                           	opt callstack 0
  1559  00007C                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1560                           	opt callstack 0
  1561  00007C                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1562                           	opt callstack 0
  1563  00007C                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1564                           	opt callstack 0
  1565  00007C                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1566                           	opt callstack 0
  1567  00007C                     EUSART1_SetErrorHandler@interruptHandler:
  1568                           	opt callstack 0
  1569  00007C                     ___wmul@multiplier:
  1570                           	opt callstack 0
  1571  00007C                     isalpha@c:
  1572                           	opt callstack 0
  1573  00007C                     isdigit@c:
  1574                           	opt callstack 0
  1575  00007C                     isspace@c:
  1576                           	opt callstack 0
  1577  00007C                     isupper@c:
  1578                           	opt callstack 0
  1579  00007C                     memset@dest:
  1580                           	opt callstack 0
  1581  00007C                     strlen@s:
  1582                           	opt callstack 0
  1583  00007C                     islower@c:
  1584                           	opt callstack 0
  1585  00007C                     ___lodiv@dividend:
  1586                           	opt callstack 0
  1587  00007C                     ___lomod@dividend:
  1588                           	opt callstack 0
  1589                           
  1590                           ; 8 bytes @ 0x1C
  1591  00007C                     	ds	1
  1592  00007D                     putch@txData:
  1593                           	opt callstack 0
  1594                           
  1595                           ; 1 bytes @ 0x1D
  1596  00007D                     	ds	1
  1597  00007E                     ??_isupper:
  1598  00007E                     ??_isalpha:
  1599  00007E                     ??_isdigit:
  1600  00007E                     ??_isspace:
  1601  00007E                     ??_islower:
  1602  00007E                     ??_EPWM2_LoadDutyValue:
  1603  00007E                     ___wmul@multiplicand:
  1604                           	opt callstack 0
  1605  00007E                     memset@c:
  1606                           	opt callstack 0
  1607  00007E                     fputc@c:
  1608                           	opt callstack 0
  1609  00007E                     strlen@a:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x1E
  1613  00007E                     	ds	2
  1614  000080                     transmitCharacterOverIR@baudRate:
  1615                           	opt callstack 0
  1616  000080                     ___wmul@product:
  1617                           	opt callstack 0
  1618  000080                     memset@n:
  1619                           	opt callstack 0
  1620  000080                     fputc@fp:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x20
  1624  000080                     	ds	2
  1625  000082                     ??_memset:
  1626  000082                     ??_fputc:
  1627  000082                     ?_toupper:
  1628                           	opt callstack 0
  1629  000082                     transmitCharacterOverIR@letter:
  1630                           	opt callstack 0
  1631  000082                     _isspace$2003:
  1632                           	opt callstack 0
  1633  000082                     toupper@c:
  1634                           	opt callstack 0
  1635                           
  1636                           ; 2 bytes @ 0x22
  1637  000082                     	ds	1
  1638  000083                     ?_atoi:
  1639                           	opt callstack 0
  1640  000083                     atoi@s:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x23
  1644  000083                     	ds	1
  1645  000084                     ??_toupper:
  1646  000084                     memset@k:
  1647                           	opt callstack 0
  1648  000084                     ___lodiv@divisor:
  1649                           	opt callstack 0
  1650  000084                     ___lomod@divisor:
  1651                           	opt callstack 0
  1652                           
  1653                           ; 8 bytes @ 0x24
  1654  000084                     	ds	1
  1655  000085                     ??_atoi:
  1656                           
  1657                           ; 1 bytes @ 0x25
  1658  000085                     	ds	1
  1659  000086                     memset@s:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x26
  1663  000086                     	ds	1
  1664  000087                     ?_stoa:
  1665                           	opt callstack 0
  1666  000087                     stoa@fp:
  1667                           	opt callstack 0
  1668  000087                     fputs@s:
  1669                           	opt callstack 0
  1670                           
  1671                           ; 2 bytes @ 0x27
  1672  000087                     	ds	1
  1673  000088                     _toupper$2074:
  1674                           	opt callstack 0
  1675                           
  1676                           ; 2 bytes @ 0x28
  1677  000088                     	ds	1
  1678  000089                     stoa@s:
  1679                           	opt callstack 0
  1680  000089                     atoi@neg:
  1681                           	opt callstack 0
  1682  000089                     fputs@fp:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x29
  1686  000089                     	ds	2
  1687  00008B                     ??_stoa:
  1688  00008B                     fputs@c:
  1689                           	opt callstack 0
  1690  00008B                     _atoi$1976:
  1691                           	opt callstack 0
  1692                           
  1693                           ; 2 bytes @ 0x2B
  1694  00008B                     	ds	1
  1695  00008C                     ___lomod@counter:
  1696                           	opt callstack 0
  1697  00008C                     fputs@i:
  1698                           	opt callstack 0
  1699  00008C                     stoa@nuls:
  1700                           	opt callstack 0
  1701  00008C                     ___lodiv@quotient:
  1702                           	opt callstack 0
  1703                           
  1704                           ; 8 bytes @ 0x2C
  1705  00008C                     	ds	1
  1706  00008D                     _atoi$1978:
  1707                           	opt callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x2D
  1710  00008D                     	ds	1
  1711  00008E                     ?_pad:
  1712                           	opt callstack 0
  1713  00008E                     pad@fp:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x2E
  1717  00008E                     	ds	1
  1718  00008F                     _atoi$1977:
  1719                           	opt callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x2F
  1722  00008F                     	ds	1
  1723  000090                     pad@buf:
  1724                           	opt callstack 0
  1725  000090                     atoi@n:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x30
  1729  000090                     	ds	2
  1730  000092                     pad@p:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x32
  1734  000092                     	ds	1
  1735  000093                     stoa@i:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x33
  1739  000093                     	ds	1
  1740  000094                     ??_pad:
  1741  000094                     ___lodiv@counter:
  1742                           	opt callstack 0
  1743                           
  1744                           ; 1 bytes @ 0x34
  1745  000094                     	ds	1
  1746  000095                     pad@i:
  1747                           	opt callstack 0
  1748  000095                     stoa@w:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x35
  1752  000095                     	ds	2
  1753  000097                     pad@w:
  1754                           	opt callstack 0
  1755  000097                     stoa@cp:
  1756                           	opt callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x37
  1759  000097                     	ds	2
  1760  000099                     ?_ctoa:
  1761                           	opt callstack 0
  1762  000099                     ?_utoa:
  1763                           	opt callstack 0
  1764  000099                     ?_xtoa:
  1765                           	opt callstack 0
  1766  000099                     ctoa@fp:
  1767                           	opt callstack 0
  1768  000099                     stoa@p:
  1769                           	opt callstack 0
  1770  000099                     utoa@fp:
  1771                           	opt callstack 0
  1772  000099                     xtoa@fp:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 2 bytes @ 0x39
  1776  000099                     	ds	2
  1777  00009B                     ctoa@c:
  1778                           	opt callstack 0
  1779  00009B                     stoa@l:
  1780                           	opt callstack 0
  1781  00009B                     utoa@d:
  1782                           	opt callstack 0
  1783  00009B                     xtoa@d:
  1784                           	opt callstack 0
  1785                           
  1786                           ; 8 bytes @ 0x3B
  1787  00009B                     	ds	1
  1788  00009C                     ctoa@w:
  1789                           	opt callstack 0
  1790                           
  1791                           ; 2 bytes @ 0x3C
  1792  00009C                     	ds	7
  1793  0000A3                     ??_utoa:
  1794  0000A3                     xtoa@x:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x43
  1798  0000A3                     	ds	1
  1799  0000A4                     ??_xtoa:
  1800                           
  1801                           ; 1 bytes @ 0x44
  1802  0000A4                     	ds	7
  1803  0000AB                     utoa@p:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 2 bytes @ 0x4B
  1807  0000AB                     	ds	1
  1808  0000AC                     _xtoa$1503:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 2 bytes @ 0x4C
  1812  0000AC                     	ds	1
  1813  0000AD                     utoa@w:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x4D
  1817  0000AD                     	ds	1
  1818  0000AE                     _xtoa$1504:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 2 bytes @ 0x4E
  1822  0000AE                     	ds	1
  1823  0000AF                     utoa@n:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 8 bytes @ 0x4F
  1827  0000AF                     	ds	1
  1828  0000B0                     xtoa@p:
  1829                           	opt callstack 0
  1830                           
  1831                           ; 2 bytes @ 0x50
  1832  0000B0                     	ds	2
  1833  0000B2                     xtoa@w:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 2 bytes @ 0x52
  1837  0000B2                     	ds	2
  1838  0000B4                     xtoa@n:
  1839                           	opt callstack 0
  1840                           
  1841                           ; 8 bytes @ 0x54
  1842  0000B4                     	ds	3
  1843  0000B7                     utoa@i:
  1844                           	opt callstack 0
  1845                           
  1846                           ; 2 bytes @ 0x57
  1847  0000B7                     	ds	5
  1848  0000BC                     xtoa@i:
  1849                           	opt callstack 0
  1850                           
  1851                           ; 2 bytes @ 0x5C
  1852  0000BC                     	ds	2
  1853  0000BE                     xtoa@c:
  1854                           	opt callstack 0
  1855                           
  1856                           ; 2 bytes @ 0x5E
  1857  0000BE                     	ds	2
  1858  0000C0                     ?_vfpfcnvrt:
  1859                           	opt callstack 0
  1860  0000C0                     vfpfcnvrt@fp:
  1861                           	opt callstack 0
  1862                           
  1863                           ; 2 bytes @ 0x60
  1864  0000C0                     	ds	2
  1865  0000C2                     vfpfcnvrt@fmt:
  1866                           	opt callstack 0
  1867                           
  1868                           ; 2 bytes @ 0x62
  1869  0000C2                     	ds	2
  1870  0000C4                     vfpfcnvrt@ap:
  1871                           	opt callstack 0
  1872                           
  1873                           ; 2 bytes @ 0x64
  1874  0000C4                     	ds	2
  1875  0000C6                     vfprintf@cfmt:
  1876                           	opt callstack 0
  1877                           
  1878                           ; 2 bytes @ 0x66
  1879  0000C6                     	ds	2
  1880  0000C8                     
  1881                           ; 1 bytes @ 0x68
  1882                           
  1883                           	psect	cstackCOMRAM
  1884  000001                     __pcstackCOMRAM:
  1885                           	opt callstack 0
  1886  000001                     ?i2___wmul:
  1887                           	opt callstack 0
  1888  000001                     ?i2_isalpha:
  1889                           	opt callstack 0
  1890  000001                     ?i2_isdigit:
  1891                           	opt callstack 0
  1892  000001                     ?i2_isspace:
  1893                           	opt callstack 0
  1894  000001                     ?i2_isupper:
  1895                           	opt callstack 0
  1896  000001                     ?i2_strlen:
  1897                           	opt callstack 0
  1898  000001                     ?i2_islower:
  1899                           	opt callstack 0
  1900  000001                     ?i2___lodiv:
  1901                           	opt callstack 0
  1902  000001                     ?i2___lomod:
  1903                           	opt callstack 0
  1904  000001                     i2EUSART1_Write@txData:
  1905                           	opt callstack 0
  1906  000001                     i2___wmul@multiplier:
  1907                           	opt callstack 0
  1908  000001                     i2isalpha@c:
  1909                           	opt callstack 0
  1910  000001                     i2isdigit@c:
  1911                           	opt callstack 0
  1912  000001                     i2isspace@c:
  1913                           	opt callstack 0
  1914  000001                     i2isupper@c:
  1915                           	opt callstack 0
  1916  000001                     i2strlen@s:
  1917                           	opt callstack 0
  1918  000001                     i2islower@c:
  1919                           	opt callstack 0
  1920  000001                     i2___lodiv@dividend:
  1921                           	opt callstack 0
  1922  000001                     i2___lomod@dividend:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 8 bytes @ 0x0
  1926  000001                     	ds	1
  1927  000002                     i2putch@txData:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 1 bytes @ 0x1
  1931  000002                     	ds	1
  1932  000003                     ??i2_isalpha:
  1933  000003                     ??i2_isdigit:
  1934  000003                     ??i2_isspace:
  1935  000003                     ??i2_isupper:
  1936  000003                     ??i2_islower:
  1937  000003                     i2___wmul@multiplicand:
  1938                           	opt callstack 0
  1939  000003                     i2fputc@c:
  1940                           	opt callstack 0
  1941  000003                     i2strlen@a:
  1942                           	opt callstack 0
  1943                           
  1944                           ; 2 bytes @ 0x2
  1945  000003                     	ds	2
  1946  000005                     i2___wmul@product:
  1947                           	opt callstack 0
  1948  000005                     i2fputc@fp:
  1949                           	opt callstack 0
  1950                           
  1951                           ; 2 bytes @ 0x4
  1952  000005                     	ds	2
  1953  000007                     ??i2_fputc:
  1954  000007                     ?i2_toupper:
  1955                           	opt callstack 0
  1956  000007                     i2_isspace$2003:
  1957                           	opt callstack 0
  1958  000007                     i2toupper@c:
  1959                           	opt callstack 0
  1960                           
  1961                           ; 2 bytes @ 0x6
  1962  000007                     	ds	1
  1963  000008                     ?i2_atoi:
  1964                           	opt callstack 0
  1965  000008                     i2atoi@s:
  1966                           	opt callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x7
  1969  000008                     	ds	1
  1970  000009                     ??i2_toupper:
  1971  000009                     i2___lodiv@divisor:
  1972                           	opt callstack 0
  1973  000009                     i2___lomod@divisor:
  1974                           	opt callstack 0
  1975                           
  1976                           ; 8 bytes @ 0x8
  1977  000009                     	ds	1
  1978  00000A                     ??i2_atoi:
  1979                           
  1980                           ; 1 bytes @ 0x9
  1981  00000A                     	ds	2
  1982  00000C                     ?i2_stoa:
  1983                           	opt callstack 0
  1984  00000C                     i2stoa@fp:
  1985                           	opt callstack 0
  1986  00000C                     i2fputs@s:
  1987                           	opt callstack 0
  1988                           
  1989                           ; 2 bytes @ 0xB
  1990  00000C                     	ds	1
  1991  00000D                     i2_toupper$2074:
  1992                           	opt callstack 0
  1993                           
  1994                           ; 2 bytes @ 0xC
  1995  00000D                     	ds	1
  1996  00000E                     i2stoa@s:
  1997                           	opt callstack 0
  1998  00000E                     i2atoi@neg:
  1999                           	opt callstack 0
  2000  00000E                     i2fputs@fp:
  2001                           	opt callstack 0
  2002                           
  2003                           ; 2 bytes @ 0xD
  2004  00000E                     	ds	2
  2005  000010                     ??i2_stoa:
  2006  000010                     i2fputs@c:
  2007                           	opt callstack 0
  2008  000010                     i2_atoi$1976:
  2009                           	opt callstack 0
  2010                           
  2011                           ; 2 bytes @ 0xF
  2012  000010                     	ds	1
  2013  000011                     i2___lomod@counter:
  2014                           	opt callstack 0
  2015  000011                     i2fputs@i:
  2016                           	opt callstack 0
  2017  000011                     i2stoa@nuls:
  2018                           	opt callstack 0
  2019  000011                     i2___lodiv@quotient:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 8 bytes @ 0x10
  2023  000011                     	ds	1
  2024  000012                     i2_atoi$1978:
  2025                           	opt callstack 0
  2026                           
  2027                           ; 2 bytes @ 0x11
  2028  000012                     	ds	1
  2029  000013                     ?i2_pad:
  2030                           	opt callstack 0
  2031  000013                     i2pad@fp:
  2032                           	opt callstack 0
  2033                           
  2034                           ; 2 bytes @ 0x12
  2035  000013                     	ds	1
  2036  000014                     i2_atoi$1977:
  2037                           	opt callstack 0
  2038                           
  2039                           ; 1 bytes @ 0x13
  2040  000014                     	ds	1
  2041  000015                     i2pad@buf:
  2042                           	opt callstack 0
  2043  000015                     i2atoi@n:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 2 bytes @ 0x14
  2047  000015                     	ds	2
  2048  000017                     i2pad@p:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 2 bytes @ 0x16
  2052  000017                     	ds	1
  2053  000018                     i2stoa@i:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 2 bytes @ 0x17
  2057  000018                     	ds	1
  2058  000019                     ??i2_pad:
  2059  000019                     i2___lodiv@counter:
  2060                           	opt callstack 0
  2061                           
  2062                           ; 1 bytes @ 0x18
  2063  000019                     	ds	1
  2064  00001A                     i2pad@i:
  2065                           	opt callstack 0
  2066  00001A                     i2stoa@w:
  2067                           	opt callstack 0
  2068                           
  2069                           ; 2 bytes @ 0x19
  2070  00001A                     	ds	2
  2071  00001C                     i2pad@w:
  2072                           	opt callstack 0
  2073  00001C                     i2stoa@cp:
  2074                           	opt callstack 0
  2075                           
  2076                           ; 2 bytes @ 0x1B
  2077  00001C                     	ds	2
  2078  00001E                     ?i2_ctoa:
  2079                           	opt callstack 0
  2080  00001E                     ?i2_utoa:
  2081                           	opt callstack 0
  2082  00001E                     ?i2_xtoa:
  2083                           	opt callstack 0
  2084  00001E                     i2ctoa@fp:
  2085                           	opt callstack 0
  2086  00001E                     i2stoa@p:
  2087                           	opt callstack 0
  2088  00001E                     i2utoa@fp:
  2089                           	opt callstack 0
  2090  00001E                     i2xtoa@fp:
  2091                           	opt callstack 0
  2092                           
  2093                           ; 2 bytes @ 0x1D
  2094  00001E                     	ds	2
  2095  000020                     i2ctoa@c:
  2096                           	opt callstack 0
  2097  000020                     i2stoa@l:
  2098                           	opt callstack 0
  2099  000020                     i2utoa@d:
  2100                           	opt callstack 0
  2101  000020                     i2xtoa@d:
  2102                           	opt callstack 0
  2103                           
  2104                           ; 8 bytes @ 0x1F
  2105  000020                     	ds	1
  2106  000021                     i2ctoa@w:
  2107                           	opt callstack 0
  2108                           
  2109                           ; 2 bytes @ 0x20
  2110  000021                     	ds	7
  2111  000028                     ??i2_utoa:
  2112  000028                     i2xtoa@x:
  2113                           	opt callstack 0
  2114                           
  2115                           ; 1 bytes @ 0x27
  2116  000028                     	ds	1
  2117  000029                     ??i2_xtoa:
  2118                           
  2119                           ; 1 bytes @ 0x28
  2120  000029                     	ds	7
  2121  000030                     i2utoa@p:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 2 bytes @ 0x2F
  2125  000030                     	ds	1
  2126  000031                     i2_xtoa$1503:
  2127                           	opt callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x30
  2130  000031                     	ds	1
  2131  000032                     i2utoa@w:
  2132                           	opt callstack 0
  2133                           
  2134                           ; 2 bytes @ 0x31
  2135  000032                     	ds	1
  2136  000033                     i2_xtoa$1504:
  2137                           	opt callstack 0
  2138                           
  2139                           ; 2 bytes @ 0x32
  2140  000033                     	ds	1
  2141  000034                     i2utoa@n:
  2142                           	opt callstack 0
  2143                           
  2144                           ; 8 bytes @ 0x33
  2145  000034                     	ds	1
  2146  000035                     i2xtoa@p:
  2147                           	opt callstack 0
  2148                           
  2149                           ; 2 bytes @ 0x34
  2150  000035                     	ds	2
  2151  000037                     i2xtoa@w:
  2152                           	opt callstack 0
  2153                           
  2154                           ; 2 bytes @ 0x36
  2155  000037                     	ds	2
  2156  000039                     i2xtoa@n:
  2157                           	opt callstack 0
  2158                           
  2159                           ; 8 bytes @ 0x38
  2160  000039                     	ds	3
  2161  00003C                     i2utoa@i:
  2162                           	opt callstack 0
  2163                           
  2164                           ; 2 bytes @ 0x3B
  2165  00003C                     	ds	5
  2166  000041                     i2xtoa@i:
  2167                           	opt callstack 0
  2168                           
  2169                           ; 2 bytes @ 0x40
  2170  000041                     	ds	2
  2171  000043                     i2xtoa@c:
  2172                           	opt callstack 0
  2173                           
  2174                           ; 2 bytes @ 0x42
  2175  000043                     	ds	2
  2176  000045                     ?i2_vfpfcnvrt:
  2177                           	opt callstack 0
  2178  000045                     i2vfpfcnvrt@fp:
  2179                           	opt callstack 0
  2180                           
  2181                           ; 2 bytes @ 0x44
  2182  000045                     	ds	2
  2183  000047                     i2vfpfcnvrt@fmt:
  2184                           	opt callstack 0
  2185                           
  2186                           ; 2 bytes @ 0x46
  2187  000047                     	ds	2
  2188  000049                     i2vfpfcnvrt@ap:
  2189                           	opt callstack 0
  2190                           
  2191                           ; 2 bytes @ 0x48
  2192  000049                     	ds	2
  2193  00004B                     ??i2_vfpfcnvrt:
  2194                           
  2195                           ; 1 bytes @ 0x4A
  2196  00004B                     	ds	4
  2197  00004F                     i2vfpfcnvrt@cp:
  2198                           	opt callstack 0
  2199                           
  2200                           ; 2 bytes @ 0x4E
  2201  00004F                     	ds	2
  2202  000051                     i2vfpfcnvrt@done:
  2203                           	opt callstack 0
  2204                           
  2205                           ; 2 bytes @ 0x50
  2206  000051                     	ds	2
  2207  000053                     i2_vfpfcnvrt$1518:
  2208                           	opt callstack 0
  2209                           
  2210                           ; 2 bytes @ 0x52
  2211  000053                     	ds	2
  2212  000055                     i2vfpfcnvrt@llu:
  2213                           	opt callstack 0
  2214                           
  2215                           ; 8 bytes @ 0x54
  2216  000055                     	ds	8
  2217  00005D                     i2vfpfcnvrt@c:
  2218                           	opt callstack 0
  2219                           
  2220                           ; 1 bytes @ 0x5C
  2221  00005D                     	ds	1
  2222  00005E                     myEUSART2ISR@input:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 1 bytes @ 0x5D
  2226  00005E                     	ds	1
  2227                           
  2228 ;;
  2229 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2230 ;;
  2231 ;; *************** function _main *****************
  2232 ;; Defined at:
  2233 ;;		line 46 in file "main.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  index           1   71[BANK1 ] unsigned char 
  2238 ;;  letter          1   58[BANK1 ] unsigned char 
  2239 ;;  message        20   37[BANK1 ] unsigned char [20]
  2240 ;;  bitPeriod      10   59[BANK1 ] unsigned short [5]
  2241 ;;  i               1   72[BANK1 ] unsigned char 
  2242 ;;  baudRateSele    1   70[BANK1 ] unsigned char 
  2243 ;;  cmd             1   69[BANK1 ] unsigned char 
  2244 ;;  leadingBit      1    0        unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Totals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;Total ram usage:       38 bytes
  2259 ;; Hardware stack levels required when called:   20
  2260 ;; This function calls:
  2261 ;;		_EPWM2_LoadDutyValue
  2262 ;;		_EUSART1_Read
  2263 ;;		_EUSART1_is_rx_ready
  2264 ;;		_EUSART2_Read
  2265 ;;		_EUSART2_SetRxInterruptHandler
  2266 ;;		_EUSART2_is_rx_ready
  2267 ;;		_SYSTEM_Initialize
  2268 ;;		_TMR1_HasOverflowOccured
  2269 ;;		_TMR1_WriteTimer
  2270 ;;		_memset
  2271 ;;		_printf
  2272 ;;		_transmitCharacterOverIR
  2273 ;; This function is called by:
  2274 ;;		Startup code after reset
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text0
  2279  0000F4                     __ptext0:
  2280                           	opt callstack 0
  2281  0000F4                     _main:
  2282                           	opt callstack 11
  2283  0000F4                     
  2284                           ;main.c: 47:  printf("Dev'20 Board\r\n");
  2285  0000F4  ECB7  F01A         	call	_SYSTEM_Initialize	;wreg free
  2286                           
  2287                           ;main.c: 48:     printf("Lab 6 - Receive and decode an IR packet\r\n");
  2288  0000F8  0E26               	movlw	low _myEUSART2ISR
  2289  0000FA  0100               	movlb	0	; () banked
  2290  0000FC  6F7C               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
  2291  0000FE  0E29               	movlw	high _myEUSART2ISR
  2292  000100  6F7D               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  2293  000102  EC48  F01B         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2294  000106                     
  2295                           ;main.c: 49:     printf("Install a jumper from RC4 to RB7 only after unplugging PICKit4\
      +                          r\n");
  2296  000106  8CF2               	bsf	242,6,c	;volatile
  2297  000108                     
  2298                           ;main.c: 50:  printf("\r\n> ");
  2299  000108  8EF2               	bsf	242,7,c	;volatile
  2300  00010A                     
  2301                           ;main.c: 52: ;main.c: 54: ;main.c: 55:   if ((EUSART1_is_rx_ready())) {
  2302  00010A  0E01               	movlw	1
  2303  00010C  0101               	movlb	1	; () banked
  2304  00010E  6FB3               	movwf	main@baudRateSelected& (0+255),b
  2305  000110                     
  2306                           ; BSR set to: 1
  2307                           ;main.c: 58: 
  2308  000110  EE21  F0B6         	lfsr	2,main@F6364
  2309  000114  EE11  F0A8         	lfsr	1,main@bitPeriod
  2310  000118  0E09               	movlw	9
  2311  00011A                     u5481:
  2312  00011A  CFDB FFE3          	movff	plusw2,plusw1
  2313  00011E  06E8               	decf	wreg,f,c
  2314  000120  E2FC               	bc	u5481
  2315  000122                     
  2316                           ; BSR set to: 1
  2317                           ;main.c: 60: 
  2318  000122  0E00               	movlw	0
  2319  000124  0100               	movlb	0	; () banked
  2320  000126  6F7D               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  2321  000128  0E00               	movlw	0
  2322  00012A  6F7C               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  2323  00012C  ECF8  F019         	call	_EPWM2_LoadDutyValue	;wreg free
  2324  000130                     
  2325                           ;main.c: 66:                     case 1: printf("1200 Baud\r\n"); break;
  2326  000130  EC00  F01B         	call	_EUSART2_is_rx_ready	;wreg free
  2327  000134  0900               	iorlw	0
  2328  000136  B4D8               	btfsc	status,2,c
  2329  000138  EFA0  F000         	goto	u5491
  2330  00013C  EFA2  F000         	goto	u5490
  2331  000140                     u5491:
  2332  000140  EFA4  F000         	goto	l5462
  2333  000144                     u5490:
  2334  000144  EC07  F018         	call	_EUSART2_Read	;wreg free
  2335  000148                     l5462:
  2336                           
  2337                           ;main.c: 67:                     case 2: printf("2400 Baud\r\n"); break;
  2338  000148  EC00  F01B         	call	_EUSART2_is_rx_ready	;wreg free
  2339  00014C  0900               	iorlw	0
  2340  00014E  B4D8               	btfsc	status,2,c
  2341  000150  EFAC  F000         	goto	u5501
  2342  000154  EFAE  F000         	goto	u5500
  2343  000158                     u5501:
  2344  000158  EFB0  F000         	goto	l5466
  2345  00015C                     u5500:
  2346  00015C  EC07  F018         	call	_EUSART2_Read	;wreg free
  2347  000160                     l5466:
  2348                           
  2349                           ;main.c: 70:                     default: printf("1200 Baud\r\n"); break;
  2350  000160  0E00               	movlw	0
  2351  000162  0100               	movlb	0	; () banked
  2352  000164  6F7D               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  2353  000166  0E00               	movlw	0
  2354  000168  6F7C               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  2355  00016A  EC11  F01A         	call	_TMR1_WriteTimer	;wreg free
  2356  00016E                     
  2357                           ;main.c: 71:                 }
  2358  00016E  909E               	bcf	158,0,c	;volatile
  2359  000170                     l5470:
  2360  000170  EC17  F01B         	call	_TMR1_HasOverflowOccured	;wreg free
  2361  000174  0900               	iorlw	0
  2362  000176  B4D8               	btfsc	status,2,c
  2363  000178  EFC0  F000         	goto	u5511
  2364  00017C  EFC2  F000         	goto	u5510
  2365  000180                     u5511:
  2366  000180  EFB8  F000         	goto	l5470
  2367  000184                     u5510:
  2368  000184                     
  2369                           ;main.c: 74:     printf("o: k\r\n");
  2370  000184  0EFC               	movlw	low STR_1
  2371  000186  0101               	movlb	1	; () banked
  2372  000188  6F86               	movwf	printf@fmt& (0+255),b
  2373  00018A  0EFE               	movlw	high STR_1
  2374  00018C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2375  00018E  EC68  F01A         	call	_printf	;wreg free
  2376                           
  2377                           ;main.c: 75:                 printf("Z: Reset processor\r\n");
  2378  000192  0E9D               	movlw	low STR_2
  2379  000194  0101               	movlb	1	; () banked
  2380  000196  6F86               	movwf	printf@fmt& (0+255),b
  2381  000198  0EFD               	movlw	high STR_2
  2382  00019A  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2383  00019C  EC68  F01A         	call	_printf	;wreg free
  2384                           
  2385                           ;main.c: 76:                 printf("z: Clear the terminal\r\n");
  2386  0001A0  0E99               	movlw	low STR_3
  2387  0001A2  0101               	movlb	1	; () banked
  2388  0001A4  6F86               	movwf	printf@fmt& (0+255),b
  2389  0001A6  0EFC               	movlw	high STR_3
  2390  0001A8  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2391  0001AA  EC68  F01A         	call	_printf	;wreg free
  2392                           
  2393                           ;main.c: 77:                 printf("b: set the Baud rate of the sent characters\r\n");
  2394  0001AE  0EF6               	movlw	low STR_4
  2395  0001B0  0101               	movlb	1	; () banked
  2396  0001B2  6F86               	movwf	printf@fmt& (0+255),b
  2397  0001B4  0EFF               	movlw	high STR_4
  2398  0001B6  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2399  0001B8  EC68  F01A         	call	_printf	;wreg free
  2400  0001BC                     l5474:
  2401                           
  2402                           ;main.c: 82:                 printf("r: reset EUSART2\r\n");
  2403  0001BC  EC21  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  2404  0001C0  0900               	iorlw	0
  2405  0001C2  B4D8               	btfsc	status,2,c
  2406  0001C4  EFE6  F000         	goto	u5521
  2407  0001C8  EFE8  F000         	goto	u5520
  2408  0001CC                     u5521:
  2409  0001CC  EFDE  F000         	goto	l5474
  2410  0001D0                     u5520:
  2411  0001D0                     
  2412                           ;main.c: 83:                 printf("-------------------------------------------------\r
      +                          \n");
  2413  0001D0  EC53  F01A         	call	_EUSART1_Read	;wreg free
  2414  0001D4  0101               	movlb	1	; () banked
  2415  0001D6  6FB2               	movwf	main@cmd& (0+255),b
  2416                           
  2417                           ;main.c: 84:     break;
  2418  0001D8  EFB6  F003         	goto	l5608
  2419  0001DC                     l5478:
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;main.c: 90:     printf("o:	ok\r\n");
  2423  0001DC  0E10               	movlw	low STR_5
  2424  0001DE  6F86               	movwf	printf@fmt& (0+255),b
  2425  0001E0  0EFD               	movlw	high STR_5
  2426  0001E2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2427  0001E4  EC68  F01A         	call	_printf	;wreg free
  2428                           
  2429                           ;main.c: 91:     break;
  2430  0001E8  EF26  F001         	goto	l5494
  2431  0001EC                     l5480:
  2432                           
  2433                           ; BSR set to: 1
  2434  0001EC  0ED5               	movlw	low STR_6
  2435  0001EE  6F86               	movwf	printf@fmt& (0+255),b
  2436  0001F0  0EFF               	movlw	high STR_6
  2437  0001F2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2438  0001F4  EC68  F01A         	call	_printf	;wreg free
  2439  0001F8  EF48  F001         	goto	l5496
  2440  0001FC                     l5482:
  2441                           
  2442                           ; BSR set to: 1
  2443  0001FC  0EA6               	movlw	low STR_7
  2444  0001FE  6F86               	movwf	printf@fmt& (0+255),b
  2445  000200  0EFF               	movlw	high STR_7
  2446  000202  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2447  000204  EC68  F01A         	call	_printf	;wreg free
  2448  000208  EF48  F001         	goto	l5496
  2449  00020C                     l5484:
  2450                           
  2451                           ; BSR set to: 1
  2452  00020C  0EB2               	movlw	low STR_8
  2453  00020E  6F86               	movwf	printf@fmt& (0+255),b
  2454  000210  0EFF               	movlw	high STR_8
  2455  000212  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2456  000214  EC68  F01A         	call	_printf	;wreg free
  2457  000218  EF48  F001         	goto	l5496
  2458  00021C                     l5486:
  2459                           
  2460                           ; BSR set to: 1
  2461  00021C  0EBE               	movlw	low STR_9
  2462  00021E  6F86               	movwf	printf@fmt& (0+255),b
  2463  000220  0EFF               	movlw	high STR_9
  2464  000222  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2465  000224  EC68  F01A         	call	_printf	;wreg free
  2466  000228  EF48  F001         	goto	l5496
  2467  00022C                     l5488:
  2468                           
  2469                           ; BSR set to: 1
  2470  00022C  0E80               	movlw	low STR_10
  2471  00022E  6F86               	movwf	printf@fmt& (0+255),b
  2472  000230  0EFF               	movlw	high STR_10
  2473  000232  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2474  000234  EC68  F01A         	call	_printf	;wreg free
  2475  000238  EF48  F001         	goto	l5496
  2476  00023C                     l5490:
  2477                           
  2478                           ; BSR set to: 1
  2479  00023C  0EA6               	movlw	low STR_7
  2480  00023E  6F86               	movwf	printf@fmt& (0+255),b
  2481  000240  0EFF               	movlw	high STR_7
  2482  000242  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2483  000244  EC68  F01A         	call	_printf	;wreg free
  2484  000248  EF48  F001         	goto	l5496
  2485  00024C                     l5494:
  2486  00024C  0101               	movlb	1	; () banked
  2487  00024E  51B3               	movf	main@baudRateSelected& (0+255),w,b
  2488  000250  6F90               	movwf	??_main& (0+255),b
  2489  000252  6B91               	clrf	(??_main+1)& (0+255),b
  2490                           
  2491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2492                           ; Switch size 1, requested type "simple"
  2493                           ; Number of cases is 1, Range of values is 0 to 0
  2494                           ; switch strategies available:
  2495                           ; Name         Instructions Cycles
  2496                           ; simple_byte            4     3 (average)
  2497                           ;	Chosen strategy is simple_byte
  2498  000254  5191               	movf	(??_main+1)& (0+255),w,b
  2499  000256  0A00               	xorlw	0	; case 0
  2500  000258  B4D8               	btfsc	status,2,c
  2501  00025A  EF31  F001         	goto	l5838
  2502  00025E  EF1E  F001         	goto	l5490
  2503  000262                     l5838:
  2504                           
  2505                           ; BSR set to: 1
  2506                           ; Switch size 1, requested type "simple"
  2507                           ; Number of cases is 5, Range of values is 0 to 4
  2508                           ; switch strategies available:
  2509                           ; Name         Instructions Cycles
  2510                           ; simple_byte           16     9 (average)
  2511                           ;	Chosen strategy is simple_byte
  2512  000262  5190               	movf	??_main& (0+255),w,b
  2513  000264  0A00               	xorlw	0	; case 0
  2514  000266  B4D8               	btfsc	status,2,c
  2515  000268  EFF6  F000         	goto	l5480
  2516  00026C  0A01               	xorlw	1	; case 1
  2517  00026E  B4D8               	btfsc	status,2,c
  2518  000270  EFFE  F000         	goto	l5482
  2519  000274  0A03               	xorlw	3	; case 2
  2520  000276  B4D8               	btfsc	status,2,c
  2521  000278  EF06  F001         	goto	l5484
  2522  00027C  0A01               	xorlw	1	; case 3
  2523  00027E  B4D8               	btfsc	status,2,c
  2524  000280  EF0E  F001         	goto	l5486
  2525  000284  0A07               	xorlw	7	; case 4
  2526  000286  B4D8               	btfsc	status,2,c
  2527  000288  EF16  F001         	goto	l5488
  2528  00028C  EF1E  F001         	goto	l5490
  2529  000290                     l5496:
  2530                           
  2531                           ;main.c: 99:                 break;
  2532  000290  0E10               	movlw	low STR_5
  2533  000292  0101               	movlb	1	; () banked
  2534  000294  6F86               	movwf	printf@fmt& (0+255),b
  2535  000296  0EFD               	movlw	high STR_5
  2536  000298  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2537  00029A  EC68  F01A         	call	_printf	;wreg free
  2538                           
  2539                           ;main.c: 100: 
  2540  00029E  0E47               	movlw	low STR_13
  2541  0002A0  0101               	movlb	1	; () banked
  2542  0002A2  6F86               	movwf	printf@fmt& (0+255),b
  2543  0002A4  0EFF               	movlw	high STR_13
  2544  0002A6  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2545  0002A8  EC68  F01A         	call	_printf	;wreg free
  2546                           
  2547                           ;main.c: 101: 
  2548  0002AC  0EEF               	movlw	low STR_14
  2549  0002AE  0101               	movlb	1	; () banked
  2550  0002B0  6F86               	movwf	printf@fmt& (0+255),b
  2551  0002B2  0EFF               	movlw	high STR_14
  2552  0002B4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2553  0002B6  EC68  F01A         	call	_printf	;wreg free
  2554                           
  2555                           ;main.c: 102: 
  2556  0002BA  0EA3               	movlw	low STR_15
  2557  0002BC  0101               	movlb	1	; () banked
  2558  0002BE  6F86               	movwf	printf@fmt& (0+255),b
  2559  0002C0  0EFE               	movlw	high STR_15
  2560  0002C2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2561  0002C4  EC68  F01A         	call	_printf	;wreg free
  2562                           
  2563                           ;main.c: 103: 
  2564  0002C8  0E76               	movlw	low STR_16
  2565  0002CA  0101               	movlb	1	; () banked
  2566  0002CC  6F86               	movwf	printf@fmt& (0+255),b
  2567  0002CE  0EFE               	movlw	high STR_16
  2568  0002D0  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2569  0002D2  EC68  F01A         	call	_printf	;wreg free
  2570                           
  2571                           ;main.c: 104:             case 'z':
  2572  0002D6  0E44               	movlw	low STR_17
  2573  0002D8  0101               	movlb	1	; () banked
  2574  0002DA  6F86               	movwf	printf@fmt& (0+255),b
  2575  0002DC  0EFD               	movlw	high STR_17
  2576  0002DE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2577  0002E0  EC68  F01A         	call	_printf	;wreg free
  2578                           
  2579                           ;main.c: 105:                 for (i=0; i<40; i++) printf("\n");
  2580  0002E4  0EB8               	movlw	low STR_18
  2581  0002E6  0101               	movlb	1	; () banked
  2582  0002E8  6F86               	movwf	printf@fmt& (0+255),b
  2583  0002EA  0EFE               	movlw	high STR_18
  2584  0002EC  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2585  0002EE  EC68  F01A         	call	_printf	;wreg free
  2586                           
  2587                           ;main.c: 106:                 break;
  2588  0002F2  0E38               	movlw	low STR_19
  2589  0002F4  0101               	movlb	1	; () banked
  2590  0002F6  6F86               	movwf	printf@fmt& (0+255),b
  2591  0002F8  0EFE               	movlw	high STR_19
  2592  0002FA  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2593  0002FC  EC68  F01A         	call	_printf	;wreg free
  2594                           
  2595                           ;main.c: 107: 
  2596  000300  0E18               	movlw	low STR_20
  2597  000302  0101               	movlb	1	; () banked
  2598  000304  6F86               	movwf	printf@fmt& (0+255),b
  2599  000306  0EFE               	movlw	high STR_20
  2600  000308  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2601  00030A  EC68  F01A         	call	_printf	;wreg free
  2602                           
  2603                           ;main.c: 108: 
  2604  00030E  0EDA               	movlw	low STR_21
  2605  000310  0101               	movlb	1	; () banked
  2606  000312  6F86               	movwf	printf@fmt& (0+255),b
  2607  000314  0EFC               	movlw	high STR_21
  2608  000316  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2609  000318  EC68  F01A         	call	_printf	;wreg free
  2610                           
  2611                           ;main.c: 109: 
  2612  00031C  0EB8               	movlw	low STR_18
  2613  00031E  0101               	movlb	1	; () banked
  2614  000320  6F86               	movwf	printf@fmt& (0+255),b
  2615  000322  0EFE               	movlw	high STR_18
  2616  000324  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2617  000326  EC68  F01A         	call	_printf	;wreg free
  2618                           
  2619                           ;main.c: 110: 
  2620  00032A  0E10               	movlw	low STR_5
  2621  00032C  0101               	movlb	1	; () banked
  2622  00032E  6F86               	movwf	printf@fmt& (0+255),b
  2623  000330  0EFD               	movlw	high STR_5
  2624  000332  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2625  000334  EC68  F01A         	call	_printf	;wreg free
  2626                           
  2627                           ;main.c: 111:             case 'b':
  2628  000338  EFDE  F000         	goto	l5474
  2629  00033C                     l5498:
  2630                           
  2631                           ; BSR set to: 1
  2632                           ;main.c: 117:                 printf("4: 19200 baud\r\n");
  2633  00033C  0EE0               	movlw	low STR_24
  2634  00033E  6F86               	movwf	printf@fmt& (0+255),b
  2635  000340  0EFF               	movlw	high STR_24
  2636  000342  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2637  000344  EC68  F01A         	call	_printf	;wreg free
  2638                           
  2639                           ;main.c: 118:                 while((EUSART1_is_rx_ready()));
  2640  000348  EFDE  F000         	goto	l5474
  2641  00034C                     l5500:
  2642                           
  2643                           ; BSR set to: 1
  2644                           ;main.c: 124:                     case 3: SPBRGH2 = 0x06; SPBRG2 = 0x81; break;
  2645  00034C  0E00               	movlw	0
  2646  00034E  6FB5               	movwf	main@i& (0+255),b
  2647  000350                     l5506:
  2648                           
  2649                           ; BSR set to: 1
  2650  000350  0E42               	movlw	low (STR_5+50)
  2651  000352  6F86               	movwf	printf@fmt& (0+255),b
  2652  000354  0EFD               	movlw	high (STR_5+50)
  2653  000356  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2654  000358  EC68  F01A         	call	_printf	;wreg free
  2655  00035C  0101               	movlb	1	; () banked
  2656  00035E  2BB5               	incf	main@i& (0+255),f,b
  2657  000360                     
  2658                           ; BSR set to: 1
  2659  000360  0E27               	movlw	39
  2660  000362  65B5               	cpfsgt	main@i& (0+255),b
  2661  000364  EFB6  F001         	goto	u5531
  2662  000368  EFB8  F001         	goto	u5530
  2663  00036C                     u5531:
  2664  00036C  EFA8  F001         	goto	l5506
  2665  000370                     u5530:
  2666  000370                     
  2667                           ; BSR set to: 1
  2668  000370  00FF               	reset		;# 
  2669                           
  2670                           ;main.c: 126:                     default: SPBRGH2 = 0x34; SPBRG2 = 0x14; break;
  2671  000372  EFDE  F000         	goto	l5474
  2672  000376                     l5512:
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;main.c: 132: 
  2676  000376  0E00               	movlw	0
  2677  000378  6FB5               	movwf	main@i& (0+255),b
  2678  00037A                     l5518:
  2679                           
  2680                           ; BSR set to: 1
  2681  00037A  0E42               	movlw	low (STR_5+50)
  2682  00037C  6F86               	movwf	printf@fmt& (0+255),b
  2683  00037E  0EFD               	movlw	high (STR_5+50)
  2684  000380  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2685  000382  EC68  F01A         	call	_printf	;wreg free
  2686  000386  0101               	movlb	1	; () banked
  2687  000388  2BB5               	incf	main@i& (0+255),f,b
  2688  00038A                     
  2689                           ; BSR set to: 1
  2690  00038A  0E27               	movlw	39
  2691  00038C  65B5               	cpfsgt	main@i& (0+255),b
  2692  00038E  EFCB  F001         	goto	u5541
  2693  000392  EFCD  F001         	goto	u5540
  2694  000396                     u5541:
  2695  000396  EFBD  F001         	goto	l5518
  2696  00039A                     u5540:
  2697  00039A  EFDE  F000         	goto	l5474
  2698  00039E                     l5524:
  2699                           
  2700                           ; BSR set to: 1
  2701                           ;main.c: 139: 
  2702  00039E  0E72               	movlw	low STR_27
  2703  0003A0  6F86               	movwf	printf@fmt& (0+255),b
  2704  0003A2  0EFD               	movlw	high STR_27
  2705  0003A4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2706  0003A6  EC68  F01A         	call	_printf	;wreg free
  2707                           
  2708                           ;main.c: 140: 
  2709  0003AA  0E64               	movlw	low STR_28
  2710  0003AC  0101               	movlb	1	; () banked
  2711  0003AE  6F86               	movwf	printf@fmt& (0+255),b
  2712  0003B0  0EFF               	movlw	high STR_28
  2713  0003B2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2714  0003B4  EC68  F01A         	call	_printf	;wreg free
  2715                           
  2716                           ;main.c: 141: 
  2717  0003B8  0E0B               	movlw	low STR_29
  2718  0003BA  0101               	movlb	1	; () banked
  2719  0003BC  6F86               	movwf	printf@fmt& (0+255),b
  2720  0003BE  0EFF               	movlw	high STR_29
  2721  0003C0  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2722  0003C2  EC68  F01A         	call	_printf	;wreg free
  2723                           
  2724                           ;main.c: 142: 
  2725  0003C6  0E1A               	movlw	low STR_30
  2726  0003C8  0101               	movlb	1	; () banked
  2727  0003CA  6F86               	movwf	printf@fmt& (0+255),b
  2728  0003CC  0EFF               	movlw	high STR_30
  2729  0003CE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2730  0003D0  EC68  F01A         	call	_printf	;wreg free
  2731                           
  2732                           ;main.c: 143:             case 'm':
  2733  0003D4  0E29               	movlw	low STR_31
  2734  0003D6  0101               	movlb	1	; () banked
  2735  0003D8  6F86               	movwf	printf@fmt& (0+255),b
  2736  0003DA  0EFF               	movlw	high STR_31
  2737  0003DC  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2738  0003DE  EC68  F01A         	call	_printf	;wreg free
  2739                           
  2740                           ;main.c: 144:                 printf("Enter a message, hit return when done.\r\n");
  2741  0003E2  0EDC               	movlw	low STR_32
  2742  0003E4  0101               	movlb	1	; () banked
  2743  0003E6  6F86               	movwf	printf@fmt& (0+255),b
  2744  0003E8  0EFE               	movlw	high STR_32
  2745  0003EA  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2746  0003EC  EC68  F01A         	call	_printf	;wreg free
  2747  0003F0                     l5526:
  2748  0003F0  EC21  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  2749  0003F4  0900               	iorlw	0
  2750  0003F6  A4D8               	btfss	status,2,c
  2751  0003F8  EF00  F002         	goto	u5551
  2752  0003FC  EF02  F002         	goto	u5550
  2753  000400                     u5551:
  2754  000400  EFF8  F001         	goto	l5526
  2755  000404                     u5550:
  2756  000404                     
  2757                           ;main.c: 146:                 checkSumTx = 0;
  2758  000404  EC53  F01A         	call	_EUSART1_Read	;wreg free
  2759  000408  0FD0               	addlw	208
  2760  00040A  0101               	movlb	1	; () banked
  2761  00040C  6FB3               	movwf	main@baudRateSelected& (0+255),b
  2762                           
  2763                           ;main.c: 147:                 while((EUSART1_is_rx_ready()) == 1);
  2764  00040E  EF27  F002         	goto	l5544
  2765  000412                     l5530:
  2766                           
  2767                           ; BSR set to: 1
  2768  000412  0ED0               	movlw	208
  2769  000414  6E76               	movwf	118,c	;volatile
  2770  000416  0E54               	movlw	84
  2771  000418  6E75               	movwf	117,c	;volatile
  2772  00041A  EF48  F002         	goto	l5546
  2773  00041E                     l5532:
  2774                           
  2775                           ; BSR set to: 1
  2776  00041E  0E34               	movlw	52
  2777  000420  6E76               	movwf	118,c	;volatile
  2778  000422  0E14               	movlw	20
  2779  000424  6E75               	movwf	117,c	;volatile
  2780  000426  EF48  F002         	goto	l5546
  2781  00042A                     l5534:
  2782                           
  2783                           ; BSR set to: 1
  2784  00042A  0E1A               	movlw	26
  2785  00042C  6E76               	movwf	118,c	;volatile
  2786  00042E  0E09               	movlw	9
  2787  000430  6E75               	movwf	117,c	;volatile
  2788  000432  EF48  F002         	goto	l5546
  2789  000436                     l5536:
  2790                           
  2791                           ; BSR set to: 1
  2792  000436  0E06               	movlw	6
  2793  000438  6E76               	movwf	118,c	;volatile
  2794  00043A  0E81               	movlw	129
  2795  00043C  6E75               	movwf	117,c	;volatile
  2796  00043E  EF48  F002         	goto	l5546
  2797  000442                     l5538:
  2798                           
  2799                           ; BSR set to: 1
  2800  000442  0E03               	movlw	3
  2801  000444  6E76               	movwf	118,c	;volatile
  2802  000446  0E40               	movlw	64
  2803  000448  6E75               	movwf	117,c	;volatile
  2804  00044A  EF48  F002         	goto	l5546
  2805  00044E                     l5544:
  2806                           
  2807                           ; BSR set to: 1
  2808  00044E  51B3               	movf	main@baudRateSelected& (0+255),w,b
  2809  000450  6F90               	movwf	??_main& (0+255),b
  2810  000452  6B91               	clrf	(??_main+1)& (0+255),b
  2811                           
  2812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2813                           ; Switch size 1, requested type "simple"
  2814                           ; Number of cases is 1, Range of values is 0 to 0
  2815                           ; switch strategies available:
  2816                           ; Name         Instructions Cycles
  2817                           ; simple_byte            4     3 (average)
  2818                           ;	Chosen strategy is simple_byte
  2819  000454  5191               	movf	(??_main+1)& (0+255),w,b
  2820  000456  0A00               	xorlw	0	; case 0
  2821  000458  B4D8               	btfsc	status,2,c
  2822  00045A  EF31  F002         	goto	l5840
  2823  00045E  EF0F  F002         	goto	l5532
  2824  000462                     l5840:
  2825                           
  2826                           ; BSR set to: 1
  2827                           ; Switch size 1, requested type "simple"
  2828                           ; Number of cases is 5, Range of values is 0 to 4
  2829                           ; switch strategies available:
  2830                           ; Name         Instructions Cycles
  2831                           ; simple_byte           16     9 (average)
  2832                           ;	Chosen strategy is simple_byte
  2833  000462  5190               	movf	??_main& (0+255),w,b
  2834  000464  0A00               	xorlw	0	; case 0
  2835  000466  B4D8               	btfsc	status,2,c
  2836  000468  EF09  F002         	goto	l5530
  2837  00046C  0A01               	xorlw	1	; case 1
  2838  00046E  B4D8               	btfsc	status,2,c
  2839  000470  EF0F  F002         	goto	l5532
  2840  000474  0A03               	xorlw	3	; case 2
  2841  000476  B4D8               	btfsc	status,2,c
  2842  000478  EF15  F002         	goto	l5534
  2843  00047C  0A01               	xorlw	1	; case 3
  2844  00047E  B4D8               	btfsc	status,2,c
  2845  000480  EF1B  F002         	goto	l5536
  2846  000484  0A07               	xorlw	7	; case 4
  2847  000486  B4D8               	btfsc	status,2,c
  2848  000488  EF21  F002         	goto	l5538
  2849  00048C  EF0F  F002         	goto	l5532
  2850  000490                     l5546:
  2851                           
  2852                           ; BSR set to: 1
  2853                           ;main.c: 155:                 printf("\tMessage: %s\r\n", IRtransmitBuffer);
  2854  000490  0E57               	movlw	low STR_33
  2855  000492  6F86               	movwf	printf@fmt& (0+255),b
  2856  000494  0EFE               	movlw	high STR_33
  2857  000496  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2858  000498  CF76 F188          	movff	3958,?_printf+2	;volatile
  2859  00049C  6B89               	clrf	(?_printf+3)& (0+255),b
  2860  00049E  CF75 F18A          	movff	3957,?_printf+4	;volatile
  2861  0004A2  6B8B               	clrf	(?_printf+5)& (0+255),b
  2862  0004A4  EC68  F01A         	call	_printf	;wreg free
  2863                           
  2864                           ;main.c: 156:                 printf("\tcheckSum: %u\r\n", checkSumTx);
  2865  0004A8  EFDE  F000         	goto	l5474
  2866  0004AC                     l524:
  2867                           
  2868                           ; BSR set to: 1
  2869                           ;main.c: 162: 
  2870  0004AC  9871               	bcf	113,4,c	;volatile
  2871                           
  2872                           ;main.c: 163:                 break;
  2873  0004AE  8871               	bsf	113,4,c	;volatile
  2874  0004B0                     
  2875                           ; BSR set to: 1
  2876                           ;main.c: 164: 
  2877  0004B0  0E8E               	movlw	low STR_34
  2878  0004B2  6F86               	movwf	printf@fmt& (0+255),b
  2879  0004B4  0EFE               	movlw	high STR_34
  2880  0004B6  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2881  0004B8  EC68  F01A         	call	_printf	;wreg free
  2882                           
  2883                           ;main.c: 165: 
  2884  0004BC  EFDE  F000         	goto	l5474
  2885  0004C0                     l5550:
  2886                           
  2887                           ; BSR set to: 1
  2888                           ;main.c: 171: 
  2889  0004C0  0EC7               	movlw	low STR_35
  2890  0004C2  6F86               	movwf	printf@fmt& (0+255),b
  2891  0004C4  0EFD               	movlw	high STR_35
  2892  0004C6  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2893  0004C8  EC68  F01A         	call	_printf	;wreg free
  2894  0004CC                     
  2895                           ;main.c: 172: 
  2896  0004CC  0E00               	movlw	0
  2897  0004CE  0101               	movlb	1	; () banked
  2898  0004D0  6FB4               	movwf	main@index& (0+255),b
  2899  0004D2                     
  2900                           ; BSR set to: 1
  2901                           ;main.c: 173: 
  2902  0004D2  0E00               	movlw	0
  2903  0004D4  6F23               	movwf	_checkSumTx& (0+255),b
  2904  0004D6                     l5556:
  2905  0004D6  EC21  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  2906  0004DA  06E8               	decf	wreg,f,c
  2907  0004DC  B4D8               	btfsc	status,2,c
  2908  0004DE  EF73  F002         	goto	u5561
  2909  0004E2  EF75  F002         	goto	u5560
  2910  0004E6                     u5561:
  2911  0004E6  EF6B  F002         	goto	l5556
  2912  0004EA                     u5560:
  2913  0004EA  EF9C  F002         	goto	l5566
  2914  0004EE                     l5558:
  2915                           
  2916                           ; BSR set to: 1
  2917                           ;main.c: 176:                 char letter;
  2918  0004EE  0EFB               	movlw	low STR_36
  2919  0004F0  6F86               	movwf	printf@fmt& (0+255),b
  2920  0004F2  0EFF               	movlw	high STR_36
  2921  0004F4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2922  0004F6  0E45               	movlw	low _IRtransmitBuffer
  2923  0004F8  25B4               	addwf	main@index& (0+255),w,b
  2924  0004FA  6ED9               	movwf	fsr2l,c
  2925  0004FC  6ADA               	clrf	fsr2h,c
  2926  0004FE  0E01               	movlw	high _IRtransmitBuffer
  2927  000500  22DA               	addwfc	fsr2h,f,c
  2928  000502  50DF               	movf	indf2,w,c
  2929  000504  6F90               	movwf	??_main& (0+255),b
  2930  000506  5190               	movf	??_main& (0+255),w,b
  2931  000508  6F88               	movwf	(?_printf+2)& (0+255),b
  2932  00050A  6B89               	clrf	(?_printf+3)& (0+255),b
  2933  00050C  EC68  F01A         	call	_printf	;wreg free
  2934  000510                     
  2935                           ;main.c: 177:                 while((letter = message[i]) != '\0') {
  2936  000510  0E92               	movlw	low main@message
  2937  000512  0101               	movlb	1	; () banked
  2938  000514  25B4               	addwf	main@index& (0+255),w,b
  2939  000516  6ED9               	movwf	fsr2l,c
  2940  000518  6ADA               	clrf	fsr2h,c
  2941  00051A  0E01               	movlw	high main@message
  2942  00051C  22DA               	addwfc	fsr2h,f,c
  2943  00051E  EC53  F01A         	call	_EUSART1_Read	;wreg free
  2944  000522  6EDF               	movwf	indf2,c
  2945  000524                     
  2946                           ;main.c: 178:                     transmitCharacterOverIR(message[i], bitPeriod[baudRate
      +                          Selected]);
  2947  000524  0E45               	movlw	low _IRtransmitBuffer
  2948  000526  0101               	movlb	1	; () banked
  2949  000528  25B4               	addwf	main@index& (0+255),w,b
  2950  00052A  6ED9               	movwf	fsr2l,c
  2951  00052C  6ADA               	clrf	fsr2h,c
  2952  00052E  0E01               	movlw	high _IRtransmitBuffer
  2953  000530  22DA               	addwfc	fsr2h,f,c
  2954  000532  50DF               	movf	indf2,w,c
  2955  000534  2723               	addwf	_checkSumTx& (0+255),f,b
  2956  000536                     
  2957                           ; BSR set to: 1
  2958                           ;main.c: 179:                     i++;
  2959  000536  2BB4               	incf	main@index& (0+255),f,b
  2960  000538                     l5566:
  2961                           
  2962                           ;main.c: 175:                 i = 0;
  2963  000538  0E45               	movlw	low _IRtransmitBuffer
  2964  00053A  0101               	movlb	1	; () banked
  2965  00053C  25B4               	addwf	main@index& (0+255),w,b
  2966  00053E  6ED9               	movwf	fsr2l,c
  2967  000540  6ADA               	clrf	fsr2h,c
  2968  000542  0E01               	movlw	high _IRtransmitBuffer
  2969  000544  22DA               	addwfc	fsr2h,f,c
  2970  000546  EC53  F01A         	call	_EUSART1_Read	;wreg free
  2971  00054A  6EDF               	movwf	indf2,c
  2972  00054C  0E0D               	movlw	13
  2973  00054E  18DE               	xorwf	postinc2,w,c
  2974  000550  B4D8               	btfsc	status,2,c
  2975  000552  EFAD  F002         	goto	u5571
  2976  000556  EFAF  F002         	goto	u5570
  2977  00055A                     u5571:
  2978  00055A  EFB8  F002         	goto	l5570
  2979  00055E                     u5570:
  2980  00055E  0E11               	movlw	17
  2981  000560  0101               	movlb	1	; () banked
  2982  000562  65B4               	cpfsgt	main@index& (0+255),b
  2983  000564  EFB6  F002         	goto	u5581
  2984  000568  EFB8  F002         	goto	u5580
  2985  00056C                     u5581:
  2986  00056C  EF77  F002         	goto	l5558
  2987  000570                     u5580:
  2988  000570                     l5570:
  2989                           
  2990                           ;main.c: 181: 
  2991  000570  0E9A               	movlw	low STR_37
  2992  000572  0101               	movlb	1	; () banked
  2993  000574  6F86               	movwf	printf@fmt& (0+255),b
  2994  000576  0EFF               	movlw	high STR_37
  2995  000578  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2996  00057A  EC68  F01A         	call	_printf	;wreg free
  2997                           
  2998                           ;main.c: 182:                 transmitCharacterOverIR(message[i], bitPeriod[baudRateSele
      +                          cted]);
  2999  00057E  0E38               	movlw	low STR_38
  3000  000580  0101               	movlb	1	; () banked
  3001  000582  6F86               	movwf	printf@fmt& (0+255),b
  3002  000584  0EFF               	movlw	high STR_38
  3003  000586  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3004  000588  0E45               	movlw	low _IRtransmitBuffer
  3005  00058A  6F88               	movwf	(?_printf+2)& (0+255),b
  3006  00058C  0E01               	movlw	high _IRtransmitBuffer
  3007  00058E  6F89               	movwf	(?_printf+3)& (0+255),b
  3008  000590  EC68  F01A         	call	_printf	;wreg free
  3009                           
  3010                           ;main.c: 183:                 transmitCharacterOverIR(message[i+1], bitPeriod[baudRateSe
      +                          lected]);
  3011  000594  0EEC               	movlw	low STR_39
  3012  000596  0101               	movlb	1	; () banked
  3013  000598  6F86               	movwf	printf@fmt& (0+255),b
  3014  00059A  0EFE               	movlw	high STR_39
  3015  00059C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3016  00059E  C123  F188         	movff	_checkSumTx,?_printf+2
  3017  0005A2  6B89               	clrf	(?_printf+3)& (0+255),b
  3018  0005A4  EC68  F01A         	call	_printf	;wreg free
  3019  0005A8                     
  3020                           ;main.c: 186:                 printf("\tMessage: %s\r\n", IRtransmitBuffer);
  3021  0005A8  0E92               	movlw	low main@message
  3022  0005AA  0101               	movlb	1	; () banked
  3023  0005AC  25B4               	addwf	main@index& (0+255),w,b
  3024  0005AE  6ED9               	movwf	fsr2l,c
  3025  0005B0  6ADA               	clrf	fsr2h,c
  3026  0005B2  0E01               	movlw	high main@message
  3027  0005B4  22DA               	addwfc	fsr2h,f,c
  3028  0005B6  0E00               	movlw	0
  3029  0005B8  6EDF               	movwf	indf2,c
  3030  0005BA                     
  3031                           ; BSR set to: 1
  3032                           ;main.c: 187:                 printf("\tcheckSum: %u\r\n", checkSumTx);
  3033  0005BA  51B4               	movf	main@index& (0+255),w,b
  3034  0005BC  6F90               	movwf	??_main& (0+255),b
  3035  0005BE  6B91               	clrf	(??_main+1)& (0+255),b
  3036  0005C0  0E01               	movlw	1
  3037  0005C2  2790               	addwf	??_main& (0+255),f,b
  3038  0005C4  0E00               	movlw	0
  3039  0005C6  2391               	addwfc	(??_main+1)& (0+255),f,b
  3040  0005C8  0E92               	movlw	low main@message
  3041  0005CA  2590               	addwf	??_main& (0+255),w,b
  3042  0005CC  6ED9               	movwf	fsr2l,c
  3043  0005CE  0E01               	movlw	high main@message
  3044  0005D0  2191               	addwfc	(??_main+1)& (0+255),w,b
  3045  0005D2  6EDA               	movwf	fsr2h,c
  3046  0005D4  C123  FFDF         	movff	_checkSumTx,indf2
  3047                           
  3048                           ;main.c: 190:                 break;
  3049  0005D8  EFDE  F000         	goto	l5474
  3050  0005DC                     l5576:
  3051                           
  3052                           ; BSR set to: 1
  3053                           ;main.c: 202:                     checkSumRx = 0;
  3054  0005DC  0E00               	movlw	0
  3055  0005DE  6FB5               	movwf	main@i& (0+255),b
  3056                           
  3057                           ;main.c: 203:                     memset(IRreceiveBuffer, 0, 20);;main.c: 204:          
      +                                 }
  3058  0005E0  EF09  F003         	goto	l5582
  3059  0005E4                     l5578:
  3060                           
  3061                           ; BSR set to: 1
  3062                           ;main.c: 205:                 else {
  3063  0005E4  51B3               	movf	main@baudRateSelected& (0+255),w,b
  3064  0005E6  0D02               	mullw	2
  3065  0005E8  0EA8               	movlw	low main@bitPeriod
  3066  0005EA  24F3               	addwf	243,w,c
  3067  0005EC  6ED9               	movwf	fsr2l,c
  3068  0005EE  0E01               	movlw	high main@bitPeriod
  3069  0005F0  20F4               	addwfc	prodh,w,c
  3070  0005F2  6EDA               	movwf	fsr2h,c
  3071  0005F4  CFDE F080          	movff	postinc2,transmitCharacterOverIR@baudRate
  3072  0005F8  CFDD F081          	movff	postdec2,transmitCharacterOverIR@baudRate+1
  3073  0005FC  0E92               	movlw	low main@message
  3074  0005FE  25B5               	addwf	main@i& (0+255),w,b
  3075  000600  6ED9               	movwf	fsr2l,c
  3076  000602  6ADA               	clrf	fsr2h,c
  3077  000604  0E01               	movlw	high main@message
  3078  000606  22DA               	addwfc	fsr2h,f,c
  3079  000608  50DF               	movf	indf2,w,c
  3080  00060A  ECEF  F011         	call	_transmitCharacterOverIR
  3081  00060E                     
  3082                           ;main.c: 206:                     printf("No message, receiveNewMessage = false\r\n");
  3083  00060E  0101               	movlb	1	; () banked
  3084  000610  2BB5               	incf	main@i& (0+255),f,b
  3085  000612                     l5582:
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;main.c: 204:                 }
  3089  000612  0E92               	movlw	low main@message
  3090  000614  25B5               	addwf	main@i& (0+255),w,b
  3091  000616  6ED9               	movwf	fsr2l,c
  3092  000618  6ADA               	clrf	fsr2h,c
  3093  00061A  0E01               	movlw	high main@message
  3094  00061C  22DA               	addwfc	fsr2h,f,c
  3095  00061E  50DF               	movf	indf2,w,c
  3096  000620  6FA7               	movwf	main@letter& (0+255),b
  3097  000622  51A7               	movf	main@letter& (0+255),w,b
  3098  000624  A4D8               	btfss	status,2,c
  3099  000626  EF17  F003         	goto	u5591
  3100  00062A  EF19  F003         	goto	u5590
  3101  00062E                     u5591:
  3102  00062E  EFF2  F002         	goto	l5578
  3103  000632                     u5590:
  3104  000632                     
  3105                           ; BSR set to: 1
  3106                           ;main.c: 209:     break;
  3107  000632  51B3               	movf	main@baudRateSelected& (0+255),w,b
  3108  000634  0D02               	mullw	2
  3109  000636  0EA8               	movlw	low main@bitPeriod
  3110  000638  24F3               	addwf	243,w,c
  3111  00063A  6ED9               	movwf	fsr2l,c
  3112  00063C  0E01               	movlw	high main@bitPeriod
  3113  00063E  20F4               	addwfc	prodh,w,c
  3114  000640  6EDA               	movwf	fsr2h,c
  3115  000642  CFDE F080          	movff	postinc2,transmitCharacterOverIR@baudRate
  3116  000646  CFDD F081          	movff	postdec2,transmitCharacterOverIR@baudRate+1
  3117  00064A  0E92               	movlw	low main@message
  3118  00064C  25B5               	addwf	main@i& (0+255),w,b
  3119  00064E  6ED9               	movwf	fsr2l,c
  3120  000650  6ADA               	clrf	fsr2h,c
  3121  000652  0E01               	movlw	high main@message
  3122  000654  22DA               	addwfc	fsr2h,f,c
  3123  000656  50DF               	movf	indf2,w,c
  3124  000658  ECEF  F011         	call	_transmitCharacterOverIR
  3125                           
  3126                           ;main.c: 210: 
  3127  00065C  0101               	movlb	1	; () banked
  3128  00065E  51B3               	movf	main@baudRateSelected& (0+255),w,b
  3129  000660  0D02               	mullw	2
  3130  000662  0EA8               	movlw	low main@bitPeriod
  3131  000664  24F3               	addwf	243,w,c
  3132  000666  6ED9               	movwf	fsr2l,c
  3133  000668  0E01               	movlw	high main@bitPeriod
  3134  00066A  20F4               	addwfc	prodh,w,c
  3135  00066C  6EDA               	movwf	fsr2h,c
  3136  00066E  CFDE F080          	movff	postinc2,transmitCharacterOverIR@baudRate
  3137  000672  CFDD F081          	movff	postdec2,transmitCharacterOverIR@baudRate+1
  3138  000676  51B5               	movf	main@i& (0+255),w,b
  3139  000678  6F90               	movwf	??_main& (0+255),b
  3140  00067A  6B91               	clrf	(??_main+1)& (0+255),b
  3141  00067C  0E01               	movlw	1
  3142  00067E  2790               	addwf	??_main& (0+255),f,b
  3143  000680  0E00               	movlw	0
  3144  000682  2391               	addwfc	(??_main+1)& (0+255),f,b
  3145  000684  0E92               	movlw	low main@message
  3146  000686  2590               	addwf	??_main& (0+255),w,b
  3147  000688  6ED9               	movwf	fsr2l,c
  3148  00068A  0E01               	movlw	high main@message
  3149  00068C  2191               	addwfc	(??_main+1)& (0+255),w,b
  3150  00068E  6EDA               	movwf	fsr2h,c
  3151  000690  50DF               	movf	indf2,w,c
  3152  000692  ECEF  F011         	call	_transmitCharacterOverIR
  3153  000696                     
  3154                           ;main.c: 212: 
  3155  000696  0E56               	movlw	low STR_40
  3156  000698  0101               	movlb	1	; () banked
  3157  00069A  6F86               	movwf	printf@fmt& (0+255),b
  3158  00069C  0EFF               	movlw	high STR_40
  3159  00069E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3160  0006A0  EC68  F01A         	call	_printf	;wreg free
  3161  0006A4                     
  3162                           ;main.c: 213:    default:
  3163  0006A4  0E38               	movlw	low STR_38
  3164  0006A6  0101               	movlb	1	; () banked
  3165  0006A8  6F86               	movwf	printf@fmt& (0+255),b
  3166  0006AA  0EFF               	movlw	high STR_38
  3167  0006AC  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3168  0006AE  0E45               	movlw	low _IRtransmitBuffer
  3169  0006B0  6F88               	movwf	(?_printf+2)& (0+255),b
  3170  0006B2  0E01               	movlw	high _IRtransmitBuffer
  3171  0006B4  6F89               	movwf	(?_printf+3)& (0+255),b
  3172  0006B6  EC68  F01A         	call	_printf	;wreg free
  3173  0006BA                     
  3174                           ;main.c: 214:     printf("Unknown key %c\r\n",cmd);
  3175  0006BA  0EEC               	movlw	low STR_39
  3176  0006BC  0101               	movlb	1	; () banked
  3177  0006BE  6F86               	movwf	printf@fmt& (0+255),b
  3178  0006C0  0EFE               	movlw	high STR_39
  3179  0006C2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3180  0006C4  C123  F188         	movff	_checkSumTx,?_printf+2
  3181  0006C8  6B89               	clrf	(?_printf+3)& (0+255),b
  3182  0006CA  EC68  F01A         	call	_printf	;wreg free
  3183                           
  3184                           ;main.c: 217:   }
  3185  0006CE  EFDE  F000         	goto	l5474
  3186  0006D2                     l5592:
  3187                           
  3188                           ; BSR set to: 1
  3189                           ;main.c: 225:     if(receiveNewMessage == 0) {
  3190  0006D2  0524               	decf	_receiveNewMessage& (0+255),w,b
  3191  0006D4  A4D8               	btfss	status,2,c
  3192  0006D6  EF6F  F003         	goto	u5601
  3193  0006DA  EF71  F003         	goto	u5600
  3194  0006DE                     u5601:
  3195  0006DE  EFA0  F003         	goto	l5600
  3196  0006E2                     u5600:
  3197  0006E2                     
  3198                           ; BSR set to: 1
  3199                           ;main.c: 226:         char input = RCREG2;
  3200  0006E2  0ECA               	movlw	low STR_43
  3201  0006E4  6F86               	movwf	printf@fmt& (0+255),b
  3202  0006E6  0EFF               	movlw	high STR_43
  3203  0006E8  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3204  0006EA  EC68  F01A         	call	_printf	;wreg free
  3205                           
  3206                           ;main.c: 227:         checkSumRx += input;
  3207  0006EE  0E8D               	movlw	low STR_44
  3208  0006F0  0101               	movlb	1	; () banked
  3209  0006F2  6F86               	movwf	printf@fmt& (0+255),b
  3210  0006F4  0EFF               	movlw	high STR_44
  3211  0006F6  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3212  0006F8  0E59               	movlw	low _IRreceiveBuffer
  3213  0006FA  6F88               	movwf	(?_printf+2)& (0+255),b
  3214  0006FC  0E01               	movlw	high _IRreceiveBuffer
  3215  0006FE  6F89               	movwf	(?_printf+3)& (0+255),b
  3216  000700  EC68  F01A         	call	_printf	;wreg free
  3217                           
  3218                           ;main.c: 228:         switch(state) {
  3219  000704  0E72               	movlw	low STR_45
  3220  000706  0101               	movlb	1	; () banked
  3221  000708  6F86               	movwf	printf@fmt& (0+255),b
  3222  00070A  0EFF               	movlw	high STR_45
  3223  00070C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3224  00070E  C122  F188         	movff	_checkSumRx,?_printf+2
  3225  000712  6B89               	clrf	(?_printf+3)& (0+255),b
  3226  000714  EC68  F01A         	call	_printf	;wreg free
  3227  000718                     
  3228                           ;main.c: 229:             case 0:
  3229  000718  0E00               	movlw	0
  3230  00071A  0101               	movlb	1	; () banked
  3231  00071C  6F22               	movwf	_checkSumRx& (0+255),b
  3232  00071E                     
  3233                           ; BSR set to: 1
  3234                           ;main.c: 230:                 IRreceiveBuffer[index] = input;
  3235  00071E  0E59               	movlw	low _IRreceiveBuffer
  3236  000720  0100               	movlb	0	; () banked
  3237  000722  6F7C               	movwf	memset@dest& (0+255),b
  3238  000724  0E01               	movlw	high _IRreceiveBuffer
  3239  000726  6F7D               	movwf	(memset@dest+1)& (0+255),b
  3240  000728  0E00               	movlw	0
  3241  00072A  6F7F               	movwf	(memset@c+1)& (0+255),b
  3242  00072C  0E00               	movlw	0
  3243  00072E  6F7E               	movwf	memset@c& (0+255),b
  3244  000730  0E00               	movlw	0
  3245  000732  6F81               	movwf	(memset@n+1)& (0+255),b
  3246  000734  0E14               	movlw	20
  3247  000736  6F80               	movwf	memset@n& (0+255),b
  3248  000738  EC33  F011         	call	_memset	;wreg free
  3249                           
  3250                           ;main.c: 231:                 state = 1;
  3251  00073C  EFA6  F003         	goto	l5602
  3252  000740                     l5600:
  3253                           
  3254                           ; BSR set to: 1
  3255                           ;main.c: 233:                 break;
  3256  000740  0EF0               	movlw	low STR_46
  3257  000742  6F86               	movwf	printf@fmt& (0+255),b
  3258  000744  0EFD               	movlw	high STR_46
  3259  000746  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3260  000748  EC68  F01A         	call	_printf	;wreg free
  3261  00074C                     l5602:
  3262                           
  3263                           ;main.c: 235:                 IRreceiveBuffer[index] = input;
  3264  00074C  0E00               	movlw	0
  3265  00074E  0101               	movlb	1	; () banked
  3266  000750  6F24               	movwf	_receiveNewMessage& (0+255),b
  3267                           
  3268                           ;main.c: 236:                 if(input == '\0')
  3269  000752  EFDE  F000         	goto	l5474
  3270  000756                     l5604:
  3271                           
  3272                           ; BSR set to: 1
  3273                           ;main.c: 241:                 IRreceiveBuffer[index] = input;
  3274  000756  0ECB               	movlw	low STR_47
  3275  000758  6F86               	movwf	printf@fmt& (0+255),b
  3276  00075A  0EFE               	movlw	high STR_47
  3277  00075C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3278  00075E  C1B2  F188         	movff	main@cmd,?_printf+2
  3279  000762  6B89               	clrf	(?_printf+3)& (0+255),b
  3280  000764  EC68  F01A         	call	_printf	;wreg free
  3281                           
  3282                           ;main.c: 242:                 state = 0;
  3283  000768  EFDE  F000         	goto	l5474
  3284  00076C                     l5608:
  3285                           
  3286                           ; BSR set to: 1
  3287  00076C  51B2               	movf	main@cmd& (0+255),w,b
  3288  00076E  6F90               	movwf	??_main& (0+255),b
  3289  000770  6B91               	clrf	(??_main+1)& (0+255),b
  3290                           
  3291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3292                           ; Switch size 1, requested type "simple"
  3293                           ; Number of cases is 1, Range of values is 0 to 0
  3294                           ; switch strategies available:
  3295                           ; Name         Instructions Cycles
  3296                           ; simple_byte            4     3 (average)
  3297                           ;	Chosen strategy is simple_byte
  3298  000772  5191               	movf	(??_main+1)& (0+255),w,b
  3299  000774  0A00               	xorlw	0	; case 0
  3300  000776  B4D8               	btfsc	status,2,c
  3301  000778  EFC0  F003         	goto	l5842
  3302  00077C  EFAB  F003         	goto	l5604
  3303  000780                     l5842:
  3304                           
  3305                           ; BSR set to: 1
  3306                           ; Switch size 1, requested type "simple"
  3307                           ; Number of cases is 9, Range of values is 63 to 122
  3308                           ; switch strategies available:
  3309                           ; Name         Instructions Cycles
  3310                           ; simple_byte           28    15 (average)
  3311                           ;	Chosen strategy is simple_byte
  3312  000780  5190               	movf	??_main& (0+255),w,b
  3313  000782  0A3F               	xorlw	63	; case 63
  3314  000784  B4D8               	btfsc	status,2,c
  3315  000786  EFEE  F000         	goto	l5478
  3316  00078A  0A6D               	xorlw	109	; case 82
  3317  00078C  B4D8               	btfsc	status,2,c
  3318  00078E  EF69  F003         	goto	l5592
  3319  000792  0A01               	xorlw	1	; case 83
  3320  000794  B4D8               	btfsc	status,2,c
  3321  000796  EFEE  F002         	goto	l5576
  3322  00079A  0A09               	xorlw	9	; case 90
  3323  00079C  B4D8               	btfsc	status,2,c
  3324  00079E  EFA6  F001         	goto	l5500
  3325  0007A2  0A38               	xorlw	56	; case 98
  3326  0007A4  B4D8               	btfsc	status,2,c
  3327  0007A6  EFCF  F001         	goto	l5524
  3328  0007AA  0A0F               	xorlw	15	; case 109
  3329  0007AC  B4D8               	btfsc	status,2,c
  3330  0007AE  EF60  F002         	goto	l5550
  3331  0007B2  0A02               	xorlw	2	; case 111
  3332  0007B4  B4D8               	btfsc	status,2,c
  3333  0007B6  EF9E  F001         	goto	l5498
  3334  0007BA  0A1D               	xorlw	29	; case 114
  3335  0007BC  B4D8               	btfsc	status,2,c
  3336  0007BE  EF56  F002         	goto	l524
  3337  0007C2  0A08               	xorlw	8	; case 122
  3338  0007C4  B4D8               	btfsc	status,2,c
  3339  0007C6  EFBB  F001         	goto	l5512
  3340  0007CA  EFAB  F003         	goto	l5604
  3341  0007CE  EF78  F000         	goto	start
  3342  0007D2                     __end_of_main:
  3343                           	opt callstack 0
  3344                           
  3345 ;; *************** function _transmitCharacterOverIR *****************
  3346 ;; Defined at:
  3347 ;;		line 281 in file "main.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  letter          1    wreg     unsigned char 
  3350 ;;  baudRate        2   32[BANK0 ] unsigned short 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  letter          1   34[BANK0 ] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;Total ram usage:        3 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:   12
  3369 ;; This function calls:
  3370 ;;		_EPWM2_LoadDutyValue
  3371 ;;		_TMR1_HasOverflowOccured
  3372 ;;		_TMR1_WriteTimer
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text1
  3379  0023DE                     __ptext1:
  3380                           	opt callstack 0
  3381  0023DE                     _transmitCharacterOverIR:
  3382                           	opt callstack 18
  3383                           
  3384                           ; BSR set to: 1
  3385                           ;incstack = 0
  3386                           ;transmitCharacterOverIR@letter stored from wreg
  3387  0023DE  0100               	movlb	0	; () banked
  3388  0023E0  6F82               	movwf	transmitCharacterOverIR@letter& (0+255),b
  3389  0023E2  0E00               	movlw	0
  3390  0023E4  0100               	movlb	0	; () banked
  3391  0023E6  6F7D               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3392  0023E8  0E19               	movlw	25
  3393  0023EA  6F7C               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  3394  0023EC  ECF8  F019         	call	_EPWM2_LoadDutyValue	;wreg free
  3395  0023F0  0100               	movlb	0	; () banked
  3396  0023F2  5180               	movf	transmitCharacterOverIR@baudRate& (0+255),w,b
  3397  0023F4  0800               	sublw	0
  3398  0023F6  6F7C               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  3399  0023F8  5181               	movf	(transmitCharacterOverIR@baudRate+1)& (0+255),w,b
  3400  0023FA  A0D8               	btfss	status,0,c
  3401  0023FC  2AE8               	incf	wreg,f,c
  3402  0023FE  0800               	sublw	0
  3403  002400  6F7D               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  3404  002402  EC11  F01A         	call	_TMR1_WriteTimer	;wreg free
  3405  002406  909E               	bcf	158,0,c	;volatile
  3406  002408                     l4432:
  3407  002408  EC17  F01B         	call	_TMR1_HasOverflowOccured	;wreg free
  3408  00240C  0900               	iorlw	0
  3409  00240E  B4D8               	btfsc	status,2,c
  3410  002410  EF0C  F012         	goto	u4261
  3411  002414  EF0E  F012         	goto	u4260
  3412  002418                     u4261:
  3413  002418  EF04  F012         	goto	l4432
  3414  00241C                     u4260:
  3415  00241C  0E01               	movlw	1
  3416  00241E  0100               	movlb	0	; () banked
  3417  002420  6FDA               	movwf	_mask& (0+255),b
  3418  002422  EF44  F012         	goto	l4450
  3419  002426                     l4436:
  3420                           
  3421                           ; BSR set to: 0
  3422  002426  5182               	movf	transmitCharacterOverIR@letter& (0+255),w,b
  3423  002428  15DA               	andwf	_mask& (0+255),w,b
  3424  00242A  0900               	iorlw	0
  3425  00242C  B4D8               	btfsc	status,2,c
  3426  00242E  EF1B  F012         	goto	u4271
  3427  002432  EF1D  F012         	goto	u4270
  3428  002436                     u4271:
  3429  002436  EF25  F012         	goto	l4440
  3430  00243A                     u4270:
  3431  00243A                     
  3432                           ; BSR set to: 0
  3433  00243A  0E00               	movlw	0
  3434  00243C  6F7D               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3435  00243E  0E00               	movlw	0
  3436  002440  6F7C               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  3437  002442  ECF8  F019         	call	_EPWM2_LoadDutyValue	;wreg free
  3438  002446  EF2B  F012         	goto	l4442
  3439  00244A                     l4440:
  3440                           
  3441                           ; BSR set to: 0
  3442  00244A  0E00               	movlw	0
  3443  00244C  6F7D               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3444  00244E  0E19               	movlw	25
  3445  002450  6F7C               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  3446  002452  ECF8  F019         	call	_EPWM2_LoadDutyValue	;wreg free
  3447  002456                     l4442:
  3448  002456  0100               	movlb	0	; () banked
  3449  002458  51DA               	movf	_mask& (0+255),w,b
  3450  00245A  25DA               	addwf	_mask& (0+255),w,b
  3451  00245C  6FDA               	movwf	_mask& (0+255),b
  3452  00245E                     
  3453                           ; BSR set to: 0
  3454  00245E  5180               	movf	transmitCharacterOverIR@baudRate& (0+255),w,b
  3455  002460  0800               	sublw	0
  3456  002462  6F7C               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  3457  002464  5181               	movf	(transmitCharacterOverIR@baudRate+1)& (0+255),w,b
  3458  002466  A0D8               	btfss	status,0,c
  3459  002468  2AE8               	incf	wreg,f,c
  3460  00246A  0800               	sublw	0
  3461  00246C  6F7D               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  3462  00246E  EC11  F01A         	call	_TMR1_WriteTimer	;wreg free
  3463  002472  909E               	bcf	158,0,c	;volatile
  3464  002474                     l4448:
  3465  002474  EC17  F01B         	call	_TMR1_HasOverflowOccured	;wreg free
  3466  002478  0900               	iorlw	0
  3467  00247A  B4D8               	btfsc	status,2,c
  3468  00247C  EF42  F012         	goto	u4281
  3469  002480  EF44  F012         	goto	u4280
  3470  002484                     u4281:
  3471  002484  EF3A  F012         	goto	l4448
  3472  002488                     u4280:
  3473  002488                     l4450:
  3474  002488  0100               	movlb	0	; () banked
  3475  00248A  51DA               	movf	_mask& (0+255),w,b
  3476  00248C  A4D8               	btfss	status,2,c
  3477  00248E  EF4B  F012         	goto	u4291
  3478  002492  EF4D  F012         	goto	u4290
  3479  002496                     u4291:
  3480  002496  EF13  F012         	goto	l4436
  3481  00249A                     u4290:
  3482  00249A                     
  3483                           ; BSR set to: 0
  3484  00249A  0E00               	movlw	0
  3485  00249C  6F7D               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3486  00249E  0E00               	movlw	0
  3487  0024A0  6F7C               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  3488  0024A2  ECF8  F019         	call	_EPWM2_LoadDutyValue	;wreg free
  3489  0024A6  0100               	movlb	0	; () banked
  3490  0024A8  5180               	movf	transmitCharacterOverIR@baudRate& (0+255),w,b
  3491  0024AA  0800               	sublw	0
  3492  0024AC  6F7C               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  3493  0024AE  5181               	movf	(transmitCharacterOverIR@baudRate+1)& (0+255),w,b
  3494  0024B0  A0D8               	btfss	status,0,c
  3495  0024B2  2AE8               	incf	wreg,f,c
  3496  0024B4  0800               	sublw	0
  3497  0024B6  6F7D               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  3498  0024B8  EC11  F01A         	call	_TMR1_WriteTimer	;wreg free
  3499  0024BC  909E               	bcf	158,0,c	;volatile
  3500  0024BE                     l4456:
  3501  0024BE  EC17  F01B         	call	_TMR1_HasOverflowOccured	;wreg free
  3502  0024C2  0900               	iorlw	0
  3503  0024C4  B4D8               	btfsc	status,2,c
  3504  0024C6  EF67  F012         	goto	u4301
  3505  0024CA  EF69  F012         	goto	u4300
  3506  0024CE                     u4301:
  3507  0024CE  EF5F  F012         	goto	l4456
  3508  0024D2                     u4300:
  3509  0024D2  0100               	movlb	0	; () banked
  3510  0024D4  2B82               	incf	transmitCharacterOverIR@letter& (0+255),f,b
  3511  0024D6                     
  3512                           ; BSR set to: 0
  3513  0024D6  0012               	return		;funcret
  3514  0024D8                     __end_of_transmitCharacterOverIR:
  3515                           	opt callstack 0
  3516                           
  3517 ;; *************** function _TMR1_WriteTimer *****************
  3518 ;; Defined at:
  3519 ;;		line 114 in file "mcc_generated_files/tmr1.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  timerVal        2   28[BANK0 ] unsigned short 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;Total ram usage:        2 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:   11
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_main
  3544 ;;		_transmitCharacterOverIR
  3545 ;;		_TMR1_Reload
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text2
  3550  003422                     __ptext2:
  3551                           	opt callstack 0
  3552  003422                     _TMR1_WriteTimer:
  3553                           	opt callstack 18
  3554  003422                     
  3555                           ;mcc_generated_files/tmr1.c: 114: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 115: {;mcc_generated_files/tmr1.c: 116:     if (T1CONbits.T1SYNC == 1)
  3556  003422  A4CD               	btfss	205,2,c	;volatile
  3557  003424  EF16  F01A         	goto	u4071
  3558  003428  EF18  F01A         	goto	u4070
  3559  00342C                     u4071:
  3560  00342C  EF21  F01A         	goto	l4256
  3561  003430                     u4070:
  3562  003430                     
  3563                           ;mcc_generated_files/tmr1.c: 117:     {;mcc_generated_files/tmr1.c: 119:         T1CONbi
      +                          ts.TMR1ON = 0;
  3564  003430  90CD               	bcf	205,0,c	;volatile
  3565  003432                     
  3566                           ;mcc_generated_files/tmr1.c: 122:         TMR1H = (timerVal >> 8);
  3567  003432  0100               	movlb	0	; () banked
  3568  003434  517D               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  3569  003436  6ECF               	movwf	207,c	;volatile
  3570  003438                     
  3571                           ; BSR set to: 0
  3572                           ;mcc_generated_files/tmr1.c: 123:         TMR1L = (uint8_t) timerVal;
  3573  003438  C07C  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3574  00343C                     
  3575                           ; BSR set to: 0
  3576                           ;mcc_generated_files/tmr1.c: 126:         T1CONbits.TMR1ON =1;
  3577  00343C  80CD               	bsf	205,0,c	;volatile
  3578                           
  3579                           ;mcc_generated_files/tmr1.c: 127:     }
  3580  00343E  EF26  F01A         	goto	l35
  3581  003442                     l4256:
  3582                           
  3583                           ;mcc_generated_files/tmr1.c: 129:     {;mcc_generated_files/tmr1.c: 131:         TMR1H =
      +                           (timerVal >> 8);
  3584  003442  0100               	movlb	0	; () banked
  3585  003444  517D               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  3586  003446  6ECF               	movwf	207,c	;volatile
  3587  003448                     
  3588                           ; BSR set to: 0
  3589                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t) timerVal;
  3590  003448  C07C  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3591  00344C                     l35:
  3592                           
  3593                           ; BSR set to: 0
  3594  00344C  0012               	return		;funcret
  3595  00344E                     __end_of_TMR1_WriteTimer:
  3596                           	opt callstack 0
  3597                           
  3598 ;; *************** function _TMR1_HasOverflowOccured *****************
  3599 ;; Defined at:
  3600 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      _Bool 
  3607 ;; Registers used:
  3608 ;;		wreg
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:   11
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_main
  3625 ;;		_transmitCharacterOverIR
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text3
  3630  00362E                     __ptext3:
  3631                           	opt callstack 0
  3632  00362E                     _TMR1_HasOverflowOccured:
  3633                           	opt callstack 18
  3634  00362E                     
  3635                           ;mcc_generated_files/tmr1.c: 154:     return(PIR1bits.TMR1IF);
  3636  00362E  B09E               	btfsc	158,0,c	;volatile
  3637  003630  EF1C  F01B         	goto	u4081
  3638  003634  EF1F  F01B         	goto	u4080
  3639  003638                     u4081:
  3640  003638  0E01               	movlw	1
  3641  00363A  EF20  F01B         	goto	u4086
  3642  00363E                     u4080:
  3643  00363E  0E00               	movlw	0
  3644  003640                     u4086:
  3645  003640  0012               	return		;funcret
  3646  003642                     __end_of_TMR1_HasOverflowOccured:
  3647                           	opt callstack 0
  3648                           
  3649 ;; *************** function _EPWM2_LoadDutyValue *****************
  3650 ;; Defined at:
  3651 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  dutyValue       2   28[BANK0 ] unsigned short 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3665 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;Total ram usage:        4 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:   11
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;;		_transmitCharacterOverIR
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text4
  3681  0033F0                     __ptext4:
  3682                           	opt callstack 0
  3683  0033F0                     _EPWM2_LoadDutyValue:
  3684                           	opt callstack 18
  3685  0033F0                     
  3686                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  3687  0033F0  C07C  F07E         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3688  0033F4  C07D  F07F         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3689  0033F8  0100               	movlb	0	; () banked
  3690  0033FA  90D8               	bcf	status,0,c
  3691  0033FC  337F               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
  3692  0033FE  337E               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3693  003400  90D8               	bcf	status,0,c
  3694  003402  337F               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
  3695  003404  337E               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3696  003406  517E               	movf	??_EPWM2_LoadDutyValue& (0+255),w,b
  3697  003408  6E67               	movwf	103,c	;volatile
  3698                           
  3699                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  3700  00340A  C07C  F07E         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3701  00340E  0E03               	movlw	3
  3702  003410  177E               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3703  003412  3B7E               	swapf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3704  003414  0EF0               	movlw	240
  3705  003416  177E               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3706  003418  5066               	movf	102,w,c	;volatile
  3707  00341A  0BCF               	andlw	207
  3708  00341C  117E               	iorwf	??_EPWM2_LoadDutyValue& (0+255),w,b
  3709  00341E  6E66               	movwf	102,c	;volatile
  3710  003420                     
  3711                           ; BSR set to: 0
  3712  003420  0012               	return		;funcret
  3713  003422                     __end_of_EPWM2_LoadDutyValue:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _printf *****************
  3717 ;; Defined at:
  3718 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  fmt             2   25[BANK1 ] PTR const unsigned char 
  3721 ;;		 -> STR_48(7), STR_47(17), STR_46(40), STR_45(14), 
  3722 ;;		 -> STR_44(13), STR_43(11), STR_42(16), STR_41(15), 
  3723 ;;		 -> STR_40(14), STR_39(16), STR_38(15), STR_37(12), 
  3724 ;;		 -> STR_36(3), STR_35(41), STR_34(21), STR_33(31), 
  3725 ;;		 -> STR_32(16), STR_31(15), STR_30(15), STR_29(15), 
  3726 ;;		 -> STR_28(14), STR_27(43), STR_26(2), STR_25(2), 
  3727 ;;		 -> STR_24(8), STR_23(52), STR_22(19), STR_21(54), 
  3728 ;;		 -> STR_20(32), STR_19(31), STR_18(19), STR_17(46), 
  3729 ;;		 -> STR_16(24), STR_15(21), STR_14(7), STR_13(15), 
  3730 ;;		 -> STR_12(52), STR_11(12), STR_10(13), STR_9(12), 
  3731 ;;		 -> STR_8(12), STR_7(12), STR_6(11), STR_5(52), 
  3732 ;;		 -> STR_4(5), STR_3(65), STR_2(42), STR_1(15), 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  ap              2   33[BANK1 ] PTR void [1]
  3735 ;;		 -> ?_printf(2), 
  3736 ;;  ret             2    0        int 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  2   25[BANK1 ] int 
  3739 ;; Registers used:
  3740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3746 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;Total ram usage:       10 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:   19
  3753 ;; This function calls:
  3754 ;;		_vfprintf
  3755 ;; This function is called by:
  3756 ;;		_main
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text5
  3761  0034D0                     __ptext5:
  3762                           	opt callstack 0
  3763  0034D0                     _printf:
  3764                           	opt callstack 11
  3765  0034D0  0E88               	movlw	low (?_printf+2)
  3766  0034D2  0101               	movlb	1	; () banked
  3767  0034D4  6F8E               	movwf	printf@ap& (0+255),b
  3768  0034D6  0E01               	movlw	high (?_printf+2)
  3769  0034D8  6F8F               	movwf	(printf@ap+1)& (0+255),b
  3770  0034DA                     
  3771                           ; BSR set to: 1
  3772  0034DA  0E00               	movlw	0
  3773  0034DC  6F80               	movwf	vfprintf@fp& (0+255),b
  3774  0034DE  0E00               	movlw	0
  3775  0034E0  6F81               	movwf	(vfprintf@fp+1)& (0+255),b
  3776  0034E2  C186  F182         	movff	printf@fmt,vfprintf@fmt
  3777  0034E6  C187  F183         	movff	printf@fmt+1,vfprintf@fmt+1
  3778  0034EA  0E8E               	movlw	low printf@ap
  3779  0034EC  6F84               	movwf	vfprintf@ap& (0+255),b
  3780  0034EE  0E01               	movlw	high printf@ap
  3781  0034F0  6F85               	movwf	(vfprintf@ap+1)& (0+255),b
  3782  0034F2  EC94  F016         	call	_vfprintf	;wreg free
  3783  0034F6  0012               	return		;funcret
  3784  0034F8                     __end_of_printf:
  3785                           	opt callstack 0
  3786                           
  3787 ;; *************** function _vfprintf *****************
  3788 ;; Defined at:
  3789 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  fp              2   19[BANK1 ] PTR struct _IO_FILE
  3792 ;;		 -> NULL(0), 
  3793 ;;  fmt             2   21[BANK1 ] PTR const unsigned char 
  3794 ;;		 -> STR_48(7), STR_47(17), STR_46(40), STR_45(14), 
  3795 ;;		 -> STR_44(13), STR_43(11), STR_42(16), STR_41(15), 
  3796 ;;		 -> STR_40(14), STR_39(16), STR_38(15), STR_37(12), 
  3797 ;;		 -> STR_36(3), STR_35(41), STR_34(21), STR_33(31), 
  3798 ;;		 -> STR_32(16), STR_31(15), STR_30(15), STR_29(15), 
  3799 ;;		 -> STR_28(14), STR_27(43), STR_26(2), STR_25(2), 
  3800 ;;		 -> STR_24(8), STR_23(52), STR_22(19), STR_21(54), 
  3801 ;;		 -> STR_20(32), STR_19(31), STR_18(19), STR_17(46), 
  3802 ;;		 -> STR_16(24), STR_15(21), STR_14(7), STR_13(15), 
  3803 ;;		 -> STR_12(52), STR_11(12), STR_10(13), STR_9(12), 
  3804 ;;		 -> STR_8(12), STR_7(12), STR_6(11), STR_5(52), 
  3805 ;;		 -> STR_4(5), STR_3(65), STR_2(42), STR_1(15), 
  3806 ;;  ap              2   23[BANK1 ] PTR PTR void 
  3807 ;;		 -> printf@ap(2), 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  cfmt            2  102[BANK0 ] PTR unsigned char 
  3810 ;;		 -> STR_48(7), STR_47(17), STR_46(40), STR_45(14), 
  3811 ;;		 -> STR_44(13), STR_43(11), STR_42(16), STR_41(15), 
  3812 ;;		 -> STR_40(14), STR_39(16), STR_38(15), STR_37(12), 
  3813 ;;		 -> STR_36(3), STR_35(41), STR_34(21), STR_33(31), 
  3814 ;;		 -> STR_32(16), STR_31(15), STR_30(15), STR_29(15), 
  3815 ;;		 -> STR_28(14), STR_27(43), STR_26(2), STR_25(2), 
  3816 ;;		 -> STR_24(8), STR_23(52), STR_22(19), STR_21(54), 
  3817 ;;		 -> STR_20(32), STR_19(31), STR_18(19), STR_17(46), 
  3818 ;;		 -> STR_16(24), STR_15(21), STR_14(7), STR_13(15), 
  3819 ;;		 -> STR_12(52), STR_11(12), STR_10(13), STR_9(12), 
  3820 ;;		 -> STR_8(12), STR_7(12), STR_6(11), STR_5(52), 
  3821 ;;		 -> STR_4(5), STR_3(65), STR_2(42), STR_1(15), 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  2   19[BANK1 ] int 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3831 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;Total ram usage:        8 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:   18
  3838 ;; This function calls:
  3839 ;;		_vfpfcnvrt
  3840 ;; This function is called by:
  3841 ;;		_printf
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text6
  3846  002D28                     __ptext6:
  3847                           	opt callstack 0
  3848  002D28                     _vfprintf:
  3849                           	opt callstack 11
  3850  002D28                     
  3851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3852  002D28  C182  F0C6         	movff	vfprintf@fmt,vfprintf@cfmt
  3853  002D2C  C183  F0C7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3854  002D30                     
  3855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3856  002D30  0E00               	movlw	0
  3857  002D32  0100               	movlb	0	; () banked
  3858  002D34  6FC9               	movwf	(_nout+1)& (0+255),b
  3859  002D36  0E00               	movlw	0
  3860  002D38  6FC8               	movwf	_nout& (0+255),b
  3861                           
  3862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3863  002D3A  EFB2  F016         	goto	l5436
  3864  002D3E                     l5434:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3868  002D3E  C180  F0C0         	movff	vfprintf@fp,vfpfcnvrt@fp
  3869  002D42  C181  F0C1         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3870  002D46  0EC6               	movlw	low vfprintf@cfmt
  3871  002D48  6FC2               	movwf	vfpfcnvrt@fmt& (0+255),b
  3872  002D4A  0E00               	movlw	high vfprintf@cfmt
  3873  002D4C  6FC3               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3874  002D4E  C184  F0C4         	movff	vfprintf@ap,vfpfcnvrt@ap
  3875  002D52  C185  F0C5         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3876  002D56  ECE9  F003         	call	_vfpfcnvrt	;wreg free
  3877  002D5A  0100               	movlb	0	; () banked
  3878  002D5C  51C0               	movf	?_vfpfcnvrt& (0+255),w,b
  3879  002D5E  27C8               	addwf	_nout& (0+255),f,b
  3880  002D60  51C1               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3881  002D62  23C9               	addwfc	(_nout+1)& (0+255),f,b
  3882  002D64                     l5436:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3886  002D64  C0C6  FFF6         	movff	vfprintf@cfmt,tblptrl
  3887  002D68  C0C7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3888  002D6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3889  002D6C  6AF8               	clrf	tblptru,c
  3890  002D6E                     	endif
  3891  002D6E                     	if	0	;tblptru may be non-zero
  3892  002D6E                     	endif
  3893  002D6E  0008               	tblrd		*
  3894  002D70  50F5               	movf	tablat,w,c
  3895  002D72  0900               	iorlw	0
  3896  002D74  A4D8               	btfss	status,2,c
  3897  002D76  EFBF  F016         	goto	u5471
  3898  002D7A  EFC1  F016         	goto	u5470
  3899  002D7E                     u5471:
  3900  002D7E  EF9F  F016         	goto	l5434
  3901  002D82                     u5470:
  3902  002D82                     
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3905  002D82  C0C8  F180         	movff	_nout,?_vfprintf
  3906  002D86  C0C9  F181         	movff	_nout+1,?_vfprintf+1
  3907  002D8A                     
  3908                           ; BSR set to: 0
  3909  002D8A  0012               	return		;funcret
  3910  002D8C                     __end_of_vfprintf:
  3911                           	opt callstack 0
  3912                           
  3913 ;; *************** function _vfpfcnvrt *****************
  3914 ;; Defined at:
  3915 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  fp              2   96[BANK0 ] PTR struct _IO_FILE
  3918 ;;		 -> NULL(0), 
  3919 ;;  fmt             2   98[BANK0 ] PTR PTR unsigned char 
  3920 ;;		 -> vfprintf@cfmt(2), 
  3921 ;;  ap              2  100[BANK0 ] PTR PTR void 
  3922 ;;		 -> printf@ap(2), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  llu             8   10[BANK1 ] unsigned long long 
  3925 ;;  ll              8    0        long long 
  3926 ;;  f               4    0        long long 
  3927 ;;  vp              3    0        PTR void 
  3928 ;;  ct              3    0        unsigned char [3]
  3929 ;;  done            2    6[BANK1 ] int 
  3930 ;;  cp              2    4[BANK1 ] PTR unsigned char 
  3931 ;;		 -> ?_printf(2), IRreceiveBuffer(20), IRtransmitBuffer(20), 
  3932 ;;  i               2    0        int 
  3933 ;;  c               1   18[BANK1 ] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  2   96[BANK0 ] int 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3943 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Totals:         0       6      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;Total ram usage:       25 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:   17
  3950 ;; This function calls:
  3951 ;;		_atoi
  3952 ;;		_ctoa
  3953 ;;		_fputc
  3954 ;;		_isdigit
  3955 ;;		_stoa
  3956 ;;		_utoa
  3957 ;;		_xtoa
  3958 ;; This function is called by:
  3959 ;;		_vfprintf
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text7
  3964  0007D2                     __ptext7:
  3965                           	opt callstack 0
  3966  0007D2                     _vfpfcnvrt:
  3967                           	opt callstack 11
  3968  0007D2                     
  3969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3970  0007D2  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3971  0007D6  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3972  0007DA  CFDE FFF6          	movff	postinc2,tblptrl
  3973  0007DE  CFDD FFF7          	movff	postdec2,tblptrh
  3974  0007E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3975  0007E2  6AF8               	clrf	tblptru,c
  3976  0007E4                     	endif
  3977  0007E4                     	if	0	;tblptru may be non-zero
  3978  0007E4                     	endif
  3979  0007E4  0008               	tblrd		*
  3980  0007E6  50F5               	movf	tablat,w,c
  3981  0007E8  0A25               	xorlw	37
  3982  0007EA  A4D8               	btfss	status,2,c
  3983  0007EC  EFFA  F003         	goto	u5331
  3984  0007F0  EFFC  F003         	goto	u5330
  3985  0007F4                     u5331:
  3986  0007F4  EF73  F006         	goto	l5416
  3987  0007F8                     u5330:
  3988  0007F8                     
  3989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3990  0007F8  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3991  0007FC  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3992  000800  2ADE               	incf	postinc2,f,c
  3993  000802  0E00               	movlw	0
  3994  000804  22DD               	addwfc	postdec2,f,c
  3995  000806                     
  3996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3997  000806  0E00               	movlw	0
  3998  000808  0100               	movlb	0	; () banked
  3999  00080A  6FCB               	movwf	(_width+1)& (0+255),b
  4000  00080C  0E00               	movlw	0
  4001  00080E  6FCA               	movwf	_width& (0+255),b
  4002  000810  C0CA  F0CE         	movff	_width,_flags
  4003  000814  C0CB  F0CF         	movff	_width+1,_flags+1
  4004  000818                     
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4007  000818  69CC               	setf	_prec& (0+255),b
  4008  00081A  69CD               	setf	(_prec+1)& (0+255),b
  4009  00081C                     
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4012  00081C  0E00               	movlw	0
  4013  00081E  0101               	movlb	1	; () banked
  4014  000820  6F74               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4015  000822  0E00               	movlw	0
  4016  000824  6F73               	movwf	vfpfcnvrt@done& (0+255),b
  4017                           
  4018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4019  000826  EF61  F004         	goto	l5340
  4020  00082A                     l5314:
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4024  00082A  0100               	movlb	0	; () banked
  4025  00082C  81CE               	bsf	_flags& (0+255),0,b
  4026  00082E                     l5316:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4030  00082E  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4031  000832  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4032  000836  2ADE               	incf	postinc2,f,c
  4033  000838  0E00               	movlw	0
  4034  00083A  22DD               	addwfc	postdec2,f,c
  4035                           
  4036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4037  00083C  EF61  F004         	goto	l5340
  4038  000840                     l5318:
  4039                           
  4040                           ; BSR set to: 1
  4041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4042  000840  0100               	movlb	0	; () banked
  4043  000842  83CE               	bsf	_flags& (0+255),1,b
  4044  000844  EF17  F004         	goto	l5316
  4045  000848                     l5322:
  4046                           
  4047                           ; BSR set to: 1
  4048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4049  000848  0100               	movlb	0	; () banked
  4050  00084A  85CE               	bsf	_flags& (0+255),2,b
  4051  00084C  EF17  F004         	goto	l5316
  4052  000850                     l5326:
  4053                           
  4054                           ; BSR set to: 1
  4055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4056  000850  0100               	movlb	0	; () banked
  4057  000852  87CE               	bsf	_flags& (0+255),3,b
  4058  000854  EF17  F004         	goto	l5316
  4059  000858                     l5330:
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4063  000858  0100               	movlb	0	; () banked
  4064  00085A  89CE               	bsf	_flags& (0+255),4,b
  4065  00085C  EF17  F004         	goto	l5316
  4066  000860                     l5334:
  4067                           
  4068                           ; BSR set to: 1
  4069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4070  000860  0E00               	movlw	0
  4071  000862  6F74               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4072  000864  0E01               	movlw	1
  4073  000866  6F73               	movwf	vfpfcnvrt@done& (0+255),b
  4074                           
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4076  000868  EF61  F004         	goto	l5340
  4077  00086C                     l5338:
  4078                           
  4079                           ; BSR set to: 1
  4080  00086C  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4081  000870  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4082  000874  CFDE FFF6          	movff	postinc2,tblptrl
  4083  000878  CFDD FFF7          	movff	postdec2,tblptrh
  4084  00087C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4085  00087C  6AF8               	clrf	tblptru,c
  4086  00087E                     	endif
  4087  00087E                     	if	0	;tblptru may be non-zero
  4088  00087E                     	endif
  4089  00087E  0008               	tblrd		*
  4090  000880  50F5               	movf	tablat,w,c
  4091  000882  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  4092  000884  6B6E               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4093                           
  4094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4095                           ; Switch size 1, requested type "simple"
  4096                           ; Number of cases is 1, Range of values is 0 to 0
  4097                           ; switch strategies available:
  4098                           ; Name         Instructions Cycles
  4099                           ; simple_byte            4     3 (average)
  4100                           ;	Chosen strategy is simple_byte
  4101  000886  516E               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4102  000888  0A00               	xorlw	0	; case 0
  4103  00088A  B4D8               	btfsc	status,2,c
  4104  00088C  EF4A  F004         	goto	l5844
  4105  000890  EF30  F004         	goto	l5334
  4106  000894                     l5844:
  4107                           
  4108                           ; BSR set to: 1
  4109                           ; Switch size 1, requested type "simple"
  4110                           ; Number of cases is 5, Range of values is 32 to 48
  4111                           ; switch strategies available:
  4112                           ; Name         Instructions Cycles
  4113                           ; simple_byte           16     9 (average)
  4114                           ;	Chosen strategy is simple_byte
  4115  000894  516D               	movf	??_vfpfcnvrt& (0+255),w,b
  4116  000896  0A20               	xorlw	32	; case 32
  4117  000898  B4D8               	btfsc	status,2,c
  4118  00089A  EF28  F004         	goto	l5326
  4119  00089E  0A03               	xorlw	3	; case 35
  4120  0008A0  B4D8               	btfsc	status,2,c
  4121  0008A2  EF2C  F004         	goto	l5330
  4122  0008A6  0A08               	xorlw	8	; case 43
  4123  0008A8  B4D8               	btfsc	status,2,c
  4124  0008AA  EF24  F004         	goto	l5322
  4125  0008AE  0A06               	xorlw	6	; case 45
  4126  0008B0  B4D8               	btfsc	status,2,c
  4127  0008B2  EF15  F004         	goto	l5314
  4128  0008B6  0A1D               	xorlw	29	; case 48
  4129  0008B8  B4D8               	btfsc	status,2,c
  4130  0008BA  EF20  F004         	goto	l5318
  4131  0008BE  EF30  F004         	goto	l5334
  4132  0008C2                     l5340:
  4133                           
  4134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4135  0008C2  0101               	movlb	1	; () banked
  4136  0008C4  5173               	movf	vfpfcnvrt@done& (0+255),w,b
  4137  0008C6  1174               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4138  0008C8  B4D8               	btfsc	status,2,c
  4139  0008CA  EF69  F004         	goto	u5341
  4140  0008CE  EF6B  F004         	goto	u5340
  4141  0008D2                     u5341:
  4142  0008D2  EF36  F004         	goto	l5338
  4143  0008D6                     u5340:
  4144  0008D6                     
  4145                           ; BSR set to: 1
  4146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4147  0008D6  0100               	movlb	0	; () banked
  4148  0008D8  A1CE               	btfss	_flags& (0+255),0,b
  4149  0008DA  EF71  F004         	goto	u5351
  4150  0008DE  EF73  F004         	goto	u5350
  4151  0008E2                     u5351:
  4152  0008E2  EF74  F004         	goto	l5344
  4153  0008E6                     u5350:
  4154  0008E6                     
  4155                           ; BSR set to: 0
  4156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4157  0008E6  93CE               	bcf	_flags& (0+255),1,b
  4158  0008E8                     l5344:
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4162  0008E8  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4163  0008EC  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4164  0008F0  CFDE FFF6          	movff	postinc2,tblptrl
  4165  0008F4  CFDD FFF7          	movff	postdec2,tblptrh
  4166  0008F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4167  0008F8  6AF8               	clrf	tblptru,c
  4168  0008FA                     	endif
  4169  0008FA                     	if	0	;tblptru may be non-zero
  4170  0008FA                     	endif
  4171  0008FA  0008               	tblrd		*
  4172  0008FC  50F5               	movf	tablat,w,c
  4173  0008FE  0A2A               	xorlw	42
  4174  000900  A4D8               	btfss	status,2,c
  4175  000902  EF85  F004         	goto	u5361
  4176  000906  EF87  F004         	goto	u5360
  4177  00090A                     u5361:
  4178  00090A  EFB0  F004         	goto	l5352
  4179  00090E                     u5360:
  4180  00090E                     
  4181                           ; BSR set to: 0
  4182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4183  00090E  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4184  000912  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4185  000916  2ADE               	incf	postinc2,f,c
  4186  000918  0E00               	movlw	0
  4187  00091A  22DD               	addwfc	postdec2,f,c
  4188                           
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4190  00091C  C0C4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4191  000920  C0C5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4192  000924  CFDF F16D          	movff	indf2,??_vfpfcnvrt
  4193  000928  0E02               	movlw	2
  4194  00092A  26DE               	addwf	postinc2,f,c
  4195  00092C  CFDF F16E          	movff	indf2,??_vfpfcnvrt+1
  4196  000930  0E00               	movlw	0
  4197  000932  22DD               	addwfc	postdec2,f,c
  4198  000934  C16D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4199  000938  C16E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4200  00093C  CFDE F0CA          	movff	postinc2,_width
  4201  000940  CFDD F0CB          	movff	postdec2,_width+1
  4202  000944                     
  4203                           ; BSR set to: 0
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4205  000944  BFCB               	btfsc	(_width+1)& (0+255),7,b
  4206  000946  EFA9  F004         	goto	u5370
  4207  00094A  EFA7  F004         	goto	u5371
  4208  00094E                     u5371:
  4209  00094E  EFF5  F004         	goto	l5362
  4210  000952                     u5370:
  4211  000952                     
  4212                           ; BSR set to: 0
  4213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4214  000952  81CE               	bsf	_flags& (0+255),0,b
  4215                           
  4216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4217  000954  6DCA               	negf	_width& (0+255),b
  4218  000956  1FCB               	comf	(_width+1)& (0+255),f,b
  4219  000958  B0D8               	btfsc	status,0,c
  4220  00095A  2BCB               	incf	(_width+1)& (0+255),f,b
  4221  00095C  EFF5  F004         	goto	l5362
  4222  000960                     l5352:
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4226  000960  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4227  000964  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4228  000968  CFDE F083          	movff	postinc2,atoi@s
  4229  00096C  CFDD F084          	movff	postdec2,atoi@s+1
  4230  000970  EC0E  F00E         	call	_atoi	;wreg free
  4231  000974  C083  F0CA         	movff	?_atoi,_width
  4232  000978  C084  F0CB         	movff	?_atoi+1,_width+1
  4233                           
  4234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4235  00097C  EFC7  F004         	goto	l5356
  4236  000980                     l5354:
  4237                           
  4238                           ; BSR set to: 1
  4239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4240  000980  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4241  000984  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4242  000988  2ADE               	incf	postinc2,f,c
  4243  00098A  0E00               	movlw	0
  4244  00098C  22DD               	addwfc	postdec2,f,c
  4245  00098E                     l5356:
  4246  00098E  0ED0               	movlw	208
  4247  000990  0101               	movlb	1	; () banked
  4248  000992  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  4249  000994  0EFF               	movlw	255
  4250  000996  6F6E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4251  000998  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4252  00099C  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4253  0009A0  CFDE FFF6          	movff	postinc2,tblptrl
  4254  0009A4  CFDD FFF7          	movff	postdec2,tblptrh
  4255  0009A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4256  0009A8  6AF8               	clrf	tblptru,c
  4257  0009AA                     	endif
  4258  0009AA                     	if	0	;tblptru may be non-zero
  4259  0009AA                     	endif
  4260  0009AA  0008               	tblrd		*
  4261  0009AC  50F5               	movf	tablat,w,c
  4262  0009AE  6F6F               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4263  0009B0  6B70               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4264  0009B2  516D               	movf	??_vfpfcnvrt& (0+255),w,b
  4265  0009B4  276F               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4266  0009B6  516E               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4267  0009B8  2370               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4268  0009BA  5170               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4269  0009BC  E10A               	bnz	u5380
  4270  0009BE  0E0A               	movlw	10
  4271  0009C0  5D6F               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4272  0009C2  A0D8               	btfss	status,0,c
  4273  0009C4  EFE6  F004         	goto	u5381
  4274  0009C8  EFE9  F004         	goto	u5380
  4275  0009CC                     u5381:
  4276  0009CC  0E01               	movlw	1
  4277  0009CE  EFEA  F004         	goto	u5390
  4278  0009D2                     u5380:
  4279  0009D2  0E00               	movlw	0
  4280  0009D4                     u5390:
  4281  0009D4  6F75               	movwf	_vfpfcnvrt$1518& (0+255),b
  4282  0009D6  6B76               	clrf	(_vfpfcnvrt$1518+1)& (0+255),b
  4283  0009D8                     
  4284                           ; BSR set to: 1
  4285  0009D8  5175               	movf	_vfpfcnvrt$1518& (0+255),w,b
  4286  0009DA  1176               	iorwf	(_vfpfcnvrt$1518+1)& (0+255),w,b
  4287  0009DC  A4D8               	btfss	status,2,c
  4288  0009DE  EFF3  F004         	goto	u5401
  4289  0009E2  EFF5  F004         	goto	u5400
  4290  0009E6                     u5401:
  4291  0009E6  EFC0  F004         	goto	l5354
  4292  0009EA                     u5400:
  4293  0009EA                     l5362:
  4294                           
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4296  0009EA  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4297  0009EE  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4298  0009F2  CFDE FFF6          	movff	postinc2,tblptrl
  4299  0009F6  CFDD FFF7          	movff	postdec2,tblptrh
  4300  0009FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4301  0009FA  6AF8               	clrf	tblptru,c
  4302  0009FC                     	endif
  4303  0009FC                     	if	0	;tblptru may be non-zero
  4304  0009FC                     	endif
  4305  0009FC  0008               	tblrd		*
  4306  0009FE  50F5               	movf	tablat,w,c
  4307  000A00  0A63               	xorlw	99
  4308  000A02  A4D8               	btfss	status,2,c
  4309  000A04  EF06  F005         	goto	u5411
  4310  000A08  EF08  F005         	goto	u5410
  4311  000A0C                     u5411:
  4312  000A0C  EF30  F005         	goto	l5370
  4313  000A10                     u5410:
  4314  000A10                     
  4315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4316  000A10  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4317  000A14  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4318  000A18  2ADE               	incf	postinc2,f,c
  4319  000A1A  0E00               	movlw	0
  4320  000A1C  22DD               	addwfc	postdec2,f,c
  4321                           
  4322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4323  000A1E  C0C4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4324  000A22  C0C5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4325  000A26  CFDF F16D          	movff	indf2,??_vfpfcnvrt
  4326  000A2A  0E02               	movlw	2
  4327  000A2C  26DE               	addwf	postinc2,f,c
  4328  000A2E  CFDF F16E          	movff	indf2,??_vfpfcnvrt+1
  4329  000A32  0E00               	movlw	0
  4330  000A34  22DD               	addwfc	postdec2,f,c
  4331  000A36  C16D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4332  000A3A  C16E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4333  000A3E  50DF               	movf	indf2,w,c
  4334  000A40  0101               	movlb	1	; () banked
  4335  000A42  6F7F               	movwf	vfpfcnvrt@c& (0+255),b
  4336  000A44                     
  4337                           ; BSR set to: 1
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4339  000A44  C0C0  F099         	movff	vfpfcnvrt@fp,ctoa@fp
  4340  000A48  C0C1  F09A         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4341  000A4C  C17F  F09B         	movff	vfpfcnvrt@c,ctoa@c
  4342  000A50  EC28  F017         	call	_ctoa	;wreg free
  4343  000A54  C099  F0C0         	movff	?_ctoa,?_vfpfcnvrt
  4344  000A58  C09A  F0C1         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4345  000A5C  EF90  F006         	goto	l717
  4346  000A60                     l5370:
  4347                           
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4349  000A60  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4350  000A64  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4351  000A68  CFDE FFF6          	movff	postinc2,tblptrl
  4352  000A6C  CFDD FFF7          	movff	postdec2,tblptrh
  4353  000A70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4354  000A70  6AF8               	clrf	tblptru,c
  4355  000A72                     	endif
  4356  000A72                     	if	0	;tblptru may be non-zero
  4357  000A72                     	endif
  4358  000A72  0008               	tblrd		*
  4359  000A74  50F5               	movf	tablat,w,c
  4360  000A76  0A73               	xorlw	115
  4361  000A78  A4D8               	btfss	status,2,c
  4362  000A7A  EF41  F005         	goto	u5421
  4363  000A7E  EF43  F005         	goto	u5420
  4364  000A82                     u5421:
  4365  000A82  EF6E  F005         	goto	l5378
  4366  000A86                     u5420:
  4367  000A86                     
  4368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4369  000A86  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4370  000A8A  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4371  000A8E  2ADE               	incf	postinc2,f,c
  4372  000A90  0E00               	movlw	0
  4373  000A92  22DD               	addwfc	postdec2,f,c
  4374                           
  4375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4376  000A94  C0C4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4377  000A98  C0C5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4378  000A9C  CFDF F16D          	movff	indf2,??_vfpfcnvrt
  4379  000AA0  0E02               	movlw	2
  4380  000AA2  26DE               	addwf	postinc2,f,c
  4381  000AA4  CFDF F16E          	movff	indf2,??_vfpfcnvrt+1
  4382  000AA8  0E00               	movlw	0
  4383  000AAA  22DD               	addwfc	postdec2,f,c
  4384  000AAC  C16D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4385  000AB0  C16E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4386  000AB4  CFDE F171          	movff	postinc2,vfpfcnvrt@cp
  4387  000AB8  CFDD F172          	movff	postdec2,vfpfcnvrt@cp+1
  4388  000ABC                     
  4389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  4390  000ABC  C0C0  F087         	movff	vfpfcnvrt@fp,stoa@fp
  4391  000AC0  C0C1  F088         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4392  000AC4  C171  F089         	movff	vfpfcnvrt@cp,stoa@s
  4393  000AC8  C172  F08A         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4394  000ACC  ECAA  F00F         	call	_stoa	;wreg free
  4395  000AD0  C087  F0C0         	movff	?_stoa,?_vfpfcnvrt
  4396  000AD4  C088  F0C1         	movff	?_stoa+1,?_vfpfcnvrt+1
  4397  000AD8  EF90  F006         	goto	l717
  4398  000ADC                     l5378:
  4399                           
  4400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4401  000ADC  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4402  000AE0  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4403  000AE4  CFDE FFF6          	movff	postinc2,tblptrl
  4404  000AE8  CFDD FFF7          	movff	postdec2,tblptrh
  4405  000AEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4406  000AEC  6AF8               	clrf	tblptru,c
  4407  000AEE                     	endif
  4408  000AEE                     	if	0	;tblptru may be non-zero
  4409  000AEE                     	endif
  4410  000AEE  0008               	tblrd		*
  4411  000AF0  50F5               	movf	tablat,w,c
  4412  000AF2  0A75               	xorlw	117
  4413  000AF4  A4D8               	btfss	status,2,c
  4414  000AF6  EF7F  F005         	goto	u5431
  4415  000AFA  EF81  F005         	goto	u5430
  4416  000AFE                     u5431:
  4417  000AFE  EFC3  F005         	goto	l5386
  4418  000B02                     u5430:
  4419  000B02                     
  4420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4421  000B02  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4422  000B06  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4423  000B0A  2ADE               	incf	postinc2,f,c
  4424  000B0C  0E00               	movlw	0
  4425  000B0E  22DD               	addwfc	postdec2,f,c
  4426                           
  4427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4428  000B10  C0C4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4429  000B14  C0C5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4430  000B18  CFDF F16D          	movff	indf2,??_vfpfcnvrt
  4431  000B1C  0E02               	movlw	2
  4432  000B1E  26DE               	addwf	postinc2,f,c
  4433  000B20  CFDF F16E          	movff	indf2,??_vfpfcnvrt+1
  4434  000B24  0E00               	movlw	0
  4435  000B26  22DD               	addwfc	postdec2,f,c
  4436  000B28  C16D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4437  000B2C  C16E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4438  000B30  CFDE F16F          	movff	postinc2,??_vfpfcnvrt+2
  4439  000B34  CFDD F170          	movff	postdec2,??_vfpfcnvrt+3
  4440  000B38  C16F  F177         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4441  000B3C  C170  F178         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4442  000B40  0101               	movlb	1	; () banked
  4443  000B42  6B79               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4444  000B44  6B7A               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4445  000B46  6B7B               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4446  000B48  6B7C               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4447  000B4A  6B7D               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4448  000B4C  6B7E               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4449  000B4E                     
  4450                           ; BSR set to: 1
  4451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4452  000B4E  C0C0  F099         	movff	vfpfcnvrt@fp,utoa@fp
  4453  000B52  C0C1  F09A         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4454  000B56  C177  F09B         	movff	vfpfcnvrt@llu,utoa@d
  4455  000B5A  C178  F09C         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4456  000B5E  C179  F09D         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4457  000B62  C17A  F09E         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4458  000B66  C17B  F09F         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4459  000B6A  C17C  F0A0         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4460  000B6E  C17D  F0A1         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4461  000B72  C17E  F0A2         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4462  000B76  EC09  F00C         	call	_utoa	;wreg free
  4463  000B7A  C099  F0C0         	movff	?_utoa,?_vfpfcnvrt
  4464  000B7E  C09A  F0C1         	movff	?_utoa+1,?_vfpfcnvrt+1
  4465  000B82  EF90  F006         	goto	l717
  4466  000B86                     l5386:
  4467                           
  4468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4469  000B86  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4470  000B8A  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4471  000B8E  CFDE FFF6          	movff	postinc2,tblptrl
  4472  000B92  CFDD FFF7          	movff	postdec2,tblptrh
  4473  000B96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4474  000B96  6AF8               	clrf	tblptru,c
  4475  000B98                     	endif
  4476  000B98                     	if	0	;tblptru may be non-zero
  4477  000B98                     	endif
  4478  000B98  0008               	tblrd		*
  4479  000B9A  50F5               	movf	tablat,w,c
  4480  000B9C  0A78               	xorlw	120
  4481  000B9E  B4D8               	btfsc	status,2,c
  4482  000BA0  EFD4  F005         	goto	u5441
  4483  000BA4  EFD6  F005         	goto	u5440
  4484  000BA8                     u5441:
  4485  000BA8  EFE9  F005         	goto	l5390
  4486  000BAC                     u5440:
  4487  000BAC  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4488  000BB0  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4489  000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  4490  000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  4491  000BBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4492  000BBC  6AF8               	clrf	tblptru,c
  4493  000BBE                     	endif
  4494  000BBE                     	if	0	;tblptru may be non-zero
  4495  000BBE                     	endif
  4496  000BBE  0008               	tblrd		*
  4497  000BC0  50F5               	movf	tablat,w,c
  4498  000BC2  0A58               	xorlw	88
  4499  000BC4  A4D8               	btfss	status,2,c
  4500  000BC6  EFE7  F005         	goto	u5451
  4501  000BCA  EFE9  F005         	goto	u5450
  4502  000BCE                     u5451:
  4503  000BCE  EF39  F006         	goto	l5400
  4504  000BD2                     u5450:
  4505  000BD2                     l5390:
  4506                           
  4507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  4508  000BD2  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4509  000BD6  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4510  000BDA  CFDE FFF6          	movff	postinc2,tblptrl
  4511  000BDE  CFDD FFF7          	movff	postdec2,tblptrh
  4512  000BE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4513  000BE2  6AF8               	clrf	tblptru,c
  4514  000BE4                     	endif
  4515  000BE4                     	if	0	;tblptru may be non-zero
  4516  000BE4                     	endif
  4517  000BE4  0008               	tblrd		*
  4518  000BE6  CFF5 F17F          	movff	tablat,vfpfcnvrt@c
  4519  000BEA                     
  4520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  4521  000BEA  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4522  000BEE  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4523  000BF2  2ADE               	incf	postinc2,f,c
  4524  000BF4  0E00               	movlw	0
  4525  000BF6  22DD               	addwfc	postdec2,f,c
  4526  000BF8                     
  4527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4528  000BF8  C0C4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4529  000BFC  C0C5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4530  000C00  CFDF F16D          	movff	indf2,??_vfpfcnvrt
  4531  000C04  0E02               	movlw	2
  4532  000C06  26DE               	addwf	postinc2,f,c
  4533  000C08  CFDF F16E          	movff	indf2,??_vfpfcnvrt+1
  4534  000C0C  0E00               	movlw	0
  4535  000C0E  22DD               	addwfc	postdec2,f,c
  4536  000C10  C16D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4537  000C14  C16E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4538  000C18  CFDE F16F          	movff	postinc2,??_vfpfcnvrt+2
  4539  000C1C  CFDD F170          	movff	postdec2,??_vfpfcnvrt+3
  4540  000C20  C16F  F177         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4541  000C24  C170  F178         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4542  000C28  0101               	movlb	1	; () banked
  4543  000C2A  6B79               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4544  000C2C  6B7A               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4545  000C2E  6B7B               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4546  000C30  6B7C               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4547  000C32  6B7D               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4548  000C34  6B7E               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4549  000C36                     
  4550                           ; BSR set to: 1
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  4552  000C36  C0C0  F099         	movff	vfpfcnvrt@fp,xtoa@fp
  4553  000C3A  C0C1  F09A         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4554  000C3E  C177  F09B         	movff	vfpfcnvrt@llu,xtoa@d
  4555  000C42  C178  F09C         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4556  000C46  C179  F09D         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4557  000C4A  C17A  F09E         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4558  000C4E  C17B  F09F         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4559  000C52  C17C  F0A0         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4560  000C56  C17D  F0A1         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4561  000C5A  C17E  F0A2         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4562  000C5E  C17F  F0A3         	movff	vfpfcnvrt@c,xtoa@x
  4563  000C62  EC2F  F009         	call	_xtoa	;wreg free
  4564  000C66  C099  F0C0         	movff	?_xtoa,?_vfpfcnvrt
  4565  000C6A  C09A  F0C1         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4566  000C6E  EF90  F006         	goto	l717
  4567  000C72                     l5400:
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4570  000C72  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4571  000C76  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4572  000C7A  CFDE FFF6          	movff	postinc2,tblptrl
  4573  000C7E  CFDD FFF7          	movff	postdec2,tblptrh
  4574  000C82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4575  000C82  6AF8               	clrf	tblptru,c
  4576  000C84                     	endif
  4577  000C84                     	if	0	;tblptru may be non-zero
  4578  000C84                     	endif
  4579  000C84  0008               	tblrd		*
  4580  000C86  50F5               	movf	tablat,w,c
  4581  000C88  0A25               	xorlw	37
  4582  000C8A  A4D8               	btfss	status,2,c
  4583  000C8C  EF4A  F006         	goto	u5461
  4584  000C90  EF4C  F006         	goto	u5460
  4585  000C94                     u5461:
  4586  000C94  EF65  F006         	goto	l5410
  4587  000C98                     u5460:
  4588  000C98                     
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4590  000C98  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4591  000C9C  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4592  000CA0  2ADE               	incf	postinc2,f,c
  4593  000CA2  0E00               	movlw	0
  4594  000CA4  22DD               	addwfc	postdec2,f,c
  4595  000CA6                     
  4596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4597  000CA6  0E00               	movlw	0
  4598  000CA8  0100               	movlb	0	; () banked
  4599  000CAA  6F7F               	movwf	(fputc@c+1)& (0+255),b
  4600  000CAC  0E25               	movlw	37
  4601  000CAE  6F7E               	movwf	fputc@c& (0+255),b
  4602  000CB0  C0C0  F080         	movff	vfpfcnvrt@fp,fputc@fp
  4603  000CB4  C0C1  F081         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4604  000CB8  ECBD  F015         	call	_fputc	;wreg free
  4605  000CBC                     l5406:
  4606                           
  4607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4608  000CBC  0E00               	movlw	0
  4609  000CBE  0100               	movlb	0	; () banked
  4610  000CC0  6FC1               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4611  000CC2  0E01               	movlw	1
  4612  000CC4  6FC0               	movwf	?_vfpfcnvrt& (0+255),b
  4613  000CC6  EF90  F006         	goto	l717
  4614  000CCA                     l5410:
  4615                           
  4616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4617  000CCA  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4618  000CCE  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4619  000CD2  2ADE               	incf	postinc2,f,c
  4620  000CD4  0E00               	movlw	0
  4621  000CD6  22DD               	addwfc	postdec2,f,c
  4622  000CD8                     
  4623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4624  000CD8  0E00               	movlw	0
  4625  000CDA  0100               	movlb	0	; () banked
  4626  000CDC  6FC1               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4627  000CDE  0E00               	movlw	0
  4628  000CE0  6FC0               	movwf	?_vfpfcnvrt& (0+255),b
  4629  000CE2  EF90  F006         	goto	l717
  4630  000CE6                     l5416:
  4631                           
  4632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4633  000CE6  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4634  000CEA  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4635  000CEE  CFDE FFF6          	movff	postinc2,tblptrl
  4636  000CF2  CFDD FFF7          	movff	postdec2,tblptrh
  4637  000CF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4638  000CF6  6AF8               	clrf	tblptru,c
  4639  000CF8                     	endif
  4640  000CF8                     	if	0	;tblptru may be non-zero
  4641  000CF8                     	endif
  4642  000CF8  0008               	tblrd		*
  4643  000CFA  50F5               	movf	tablat,w,c
  4644  000CFC  0100               	movlb	0	; () banked
  4645  000CFE  6F7E               	movwf	fputc@c& (0+255),b
  4646  000D00  6B7F               	clrf	(fputc@c+1)& (0+255),b
  4647  000D02  C0C0  F080         	movff	vfpfcnvrt@fp,fputc@fp
  4648  000D06  C0C1  F081         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4649  000D0A  ECBD  F015         	call	_fputc	;wreg free
  4650  000D0E                     
  4651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4652  000D0E  C0C2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4653  000D12  C0C3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4654  000D16  2ADE               	incf	postinc2,f,c
  4655  000D18  0E00               	movlw	0
  4656  000D1A  22DD               	addwfc	postdec2,f,c
  4657  000D1C  EF5E  F006         	goto	l5406
  4658  000D20                     l717:
  4659  000D20  0012               	return		;funcret
  4660  000D22                     __end_of_vfpfcnvrt:
  4661                           	opt callstack 0
  4662                           
  4663 ;; *************** function _xtoa *****************
  4664 ;; Defined at:
  4665 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  fp              2   57[BANK0 ] PTR struct _IO_FILE
  4668 ;;		 -> NULL(0), 
  4669 ;;  d               8   59[BANK0 ] unsigned long long 
  4670 ;;  x               1   67[BANK0 ] unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  n               8   84[BANK0 ] unsigned long long 
  4673 ;;  c               2   94[BANK0 ] int 
  4674 ;;  i               2   92[BANK0 ] int 
  4675 ;;  w               2   82[BANK0 ] int 
  4676 ;;  p               2   80[BANK0 ] int 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  2   57[BANK0 ] int 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4686 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;Total ram usage:       39 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:   16
  4693 ;; This function calls:
  4694 ;;		_isalpha
  4695 ;;		_isupper
  4696 ;;		_pad
  4697 ;;		_toupper
  4698 ;; This function is called by:
  4699 ;;		_vfpfcnvrt
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text8
  4704  00125E                     __ptext8:
  4705                           	opt callstack 0
  4706  00125E                     _xtoa:
  4707                           	opt callstack 11
  4708  00125E                     
  4709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  4710  00125E  0100               	movlb	0	; () banked
  4711  001260  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  4712  001262  EF35  F009         	goto	u5091
  4713  001266  EF37  F009         	goto	u5090
  4714  00126A                     u5091:
  4715  00126A  EF38  F009         	goto	l5200
  4716  00126E                     u5090:
  4717  00126E                     
  4718                           ; BSR set to: 0
  4719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  4720  00126E  93CE               	bcf	_flags& (0+255),1,b
  4721  001270                     l5200:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  4725  001270  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  4726  001272  EF45  F009         	goto	u5100
  4727  001276  51CD               	movf	(_prec+1)& (0+255),w,b
  4728  001278  E106               	bnz	u5101
  4729  00127A  05CC               	decf	_prec& (0+255),w,b
  4730  00127C  B0D8               	btfsc	status,0,c
  4731  00127E  EF43  F009         	goto	u5101
  4732  001282  EF45  F009         	goto	u5100
  4733  001286                     u5101:
  4734  001286  EF4B  F009         	goto	l665
  4735  00128A                     u5100:
  4736  00128A                     
  4737                           ; BSR set to: 0
  4738  00128A  0E00               	movlw	0
  4739  00128C  6FB1               	movwf	(xtoa@p+1)& (0+255),b
  4740  00128E  0E01               	movlw	1
  4741  001290  6FB0               	movwf	xtoa@p& (0+255),b
  4742  001292  EF4F  F009         	goto	l667
  4743  001296                     l665:
  4744                           
  4745                           ; BSR set to: 0
  4746  001296  C0CC  F0B0         	movff	_prec,xtoa@p
  4747  00129A  C0CD  F0B1         	movff	_prec+1,xtoa@p+1
  4748  00129E                     l667:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  4752  00129E  C0CA  F0B2         	movff	_width,xtoa@w
  4753  0012A2  C0CB  F0B3         	movff	_width+1,xtoa@w+1
  4754                           
  4755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  4756  0012A6  A9CE               	btfss	_flags& (0+255),4,b
  4757  0012A8  EF58  F009         	goto	u5111
  4758  0012AC  EF5A  F009         	goto	u5110
  4759  0012B0                     u5111:
  4760  0012B0  EF5E  F009         	goto	l5206
  4761  0012B4                     u5110:
  4762  0012B4                     
  4763                           ; BSR set to: 0
  4764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  4765  0012B4  0EFE               	movlw	254
  4766  0012B6  27B2               	addwf	xtoa@w& (0+255),f,b
  4767  0012B8  0EFF               	movlw	255
  4768  0012BA  23B3               	addwfc	(xtoa@w+1)& (0+255),f,b
  4769  0012BC                     l5206:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  4773  0012BC  C09B  F0B4         	movff	xtoa@d,xtoa@n
  4774  0012C0  C09C  F0B5         	movff	xtoa@d+1,xtoa@n+1
  4775  0012C4  C09D  F0B6         	movff	xtoa@d+2,xtoa@n+2
  4776  0012C8  C09E  F0B7         	movff	xtoa@d+3,xtoa@n+3
  4777  0012CC  C09F  F0B8         	movff	xtoa@d+4,xtoa@n+4
  4778  0012D0  C0A0  F0B9         	movff	xtoa@d+5,xtoa@n+5
  4779  0012D4  C0A1  F0BA         	movff	xtoa@d+6,xtoa@n+6
  4780  0012D8  C0A2  F0BB         	movff	xtoa@d+7,xtoa@n+7
  4781  0012DC                     
  4782                           ; BSR set to: 0
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4784  0012DC  0E00               	movlw	0
  4785  0012DE  6FBD               	movwf	(xtoa@i+1)& (0+255),b
  4786  0012E0  0E1F               	movlw	31
  4787  0012E2  6FBC               	movwf	xtoa@i& (0+255),b
  4788  0012E4                     
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4791  0012E4  0E00               	movlw	0
  4792  0012E6  0101               	movlb	1	; () banked
  4793  0012E8  6F44               	movwf	(_dbuf+31)& (0+255),b
  4794                           
  4795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4796  0012EA  EF2B  F00A         	goto	l5242
  4797  0012EE                     l5212:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  4801  0012EE  07BC               	decf	xtoa@i& (0+255),f,b
  4802  0012F0  A0D8               	btfss	status,0,c
  4803  0012F2  07BD               	decf	(xtoa@i+1)& (0+255),f,b
  4804  0012F4                     
  4805                           ; BSR set to: 0
  4806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  4807  0012F4  0E0F               	movlw	15
  4808  0012F6  15B4               	andwf	xtoa@n& (0+255),w,b
  4809  0012F8  6FBE               	movwf	xtoa@c& (0+255),b
  4810  0012FA  6BBF               	clrf	(xtoa@c+1)& (0+255),b
  4811  0012FC                     
  4812                           ; BSR set to: 0
  4813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  4814  0012FC  BFBF               	btfsc	(xtoa@c+1)& (0+255),7,b
  4815  0012FE  EF8A  F009         	goto	u5121
  4816  001302  51BF               	movf	(xtoa@c+1)& (0+255),w,b
  4817  001304  E109               	bnz	u5120
  4818  001306  0E0A               	movlw	10
  4819  001308  5DBE               	subwf	xtoa@c& (0+255),w,b
  4820  00130A  A0D8               	btfss	status,0,c
  4821  00130C  EF8A  F009         	goto	u5121
  4822  001310  EF8C  F009         	goto	u5120
  4823  001314                     u5121:
  4824  001314  EF94  F009         	goto	l5220
  4825  001318                     u5120:
  4826  001318                     
  4827                           ; BSR set to: 0
  4828  001318  0E57               	movlw	87
  4829  00131A  25BE               	addwf	xtoa@c& (0+255),w,b
  4830  00131C  6FBE               	movwf	xtoa@c& (0+255),b
  4831  00131E  0E00               	movlw	0
  4832  001320  21BF               	addwfc	(xtoa@c+1)& (0+255),w,b
  4833  001322  6FBF               	movwf	(xtoa@c+1)& (0+255),b
  4834  001324  EF9A  F009         	goto	l674
  4835  001328                     l5220:
  4836                           
  4837                           ; BSR set to: 0
  4838  001328  0E30               	movlw	48
  4839  00132A  25BE               	addwf	xtoa@c& (0+255),w,b
  4840  00132C  6FBE               	movwf	xtoa@c& (0+255),b
  4841  00132E  0E00               	movlw	0
  4842  001330  21BF               	addwfc	(xtoa@c+1)& (0+255),w,b
  4843  001332  6FBF               	movwf	(xtoa@c+1)& (0+255),b
  4844  001334                     l674:
  4845                           
  4846                           ; BSR set to: 0
  4847  001334  0EBF               	movlw	191
  4848  001336  6FA4               	movwf	??_xtoa& (0+255),b
  4849  001338  0EFF               	movlw	255
  4850  00133A  6FA5               	movwf	(??_xtoa+1)& (0+255),b
  4851  00133C  51A3               	movf	xtoa@x& (0+255),w,b
  4852  00133E  6FA6               	movwf	(??_xtoa+2)& (0+255),b
  4853  001340  6BA7               	clrf	(??_xtoa+3)& (0+255),b
  4854  001342  51A4               	movf	??_xtoa& (0+255),w,b
  4855  001344  27A6               	addwf	(??_xtoa+2)& (0+255),f,b
  4856  001346  51A5               	movf	(??_xtoa+1)& (0+255),w,b
  4857  001348  23A7               	addwfc	(??_xtoa+3)& (0+255),f,b
  4858  00134A  51A7               	movf	(??_xtoa+3)& (0+255),w,b
  4859  00134C  E10A               	bnz	u5130
  4860  00134E  0E1A               	movlw	26
  4861  001350  5DA6               	subwf	(??_xtoa+2)& (0+255),w,b
  4862  001352  A0D8               	btfss	status,0,c
  4863  001354  EFAE  F009         	goto	u5131
  4864  001358  EFB1  F009         	goto	u5130
  4865  00135C                     u5131:
  4866  00135C  0E01               	movlw	1
  4867  00135E  EFB2  F009         	goto	u5140
  4868  001362                     u5130:
  4869  001362  0E00               	movlw	0
  4870  001364                     u5140:
  4871  001364  6FAC               	movwf	_xtoa$1503& (0+255),b
  4872  001366  6BAD               	clrf	(_xtoa$1503+1)& (0+255),b
  4873  001368                     
  4874                           ; BSR set to: 0
  4875  001368  51AC               	movf	_xtoa$1503& (0+255),w,b
  4876  00136A  11AD               	iorwf	(_xtoa$1503+1)& (0+255),w,b
  4877  00136C  B4D8               	btfsc	status,2,c
  4878  00136E  EFBB  F009         	goto	u5151
  4879  001372  EFBD  F009         	goto	u5150
  4880  001376                     u5151:
  4881  001376  EFED  F009         	goto	l5234
  4882  00137A                     u5150:
  4883  00137A                     
  4884                           ; BSR set to: 0
  4885  00137A  0E9F               	movlw	159
  4886  00137C  6FA4               	movwf	??_xtoa& (0+255),b
  4887  00137E  0EFF               	movlw	255
  4888  001380  6FA5               	movwf	(??_xtoa+1)& (0+255),b
  4889  001382  0E20               	movlw	32
  4890  001384  11BE               	iorwf	xtoa@c& (0+255),w,b
  4891  001386  6FA6               	movwf	(??_xtoa+2)& (0+255),b
  4892  001388  0E00               	movlw	0
  4893  00138A  11BF               	iorwf	(xtoa@c+1)& (0+255),w,b
  4894  00138C  6FA7               	movwf	(??_xtoa+3)& (0+255),b
  4895  00138E  51A4               	movf	??_xtoa& (0+255),w,b
  4896  001390  27A6               	addwf	(??_xtoa+2)& (0+255),f,b
  4897  001392  51A5               	movf	(??_xtoa+1)& (0+255),w,b
  4898  001394  23A7               	addwfc	(??_xtoa+3)& (0+255),f,b
  4899  001396  51A7               	movf	(??_xtoa+3)& (0+255),w,b
  4900  001398  E10A               	bnz	u5160
  4901  00139A  0E1A               	movlw	26
  4902  00139C  5DA6               	subwf	(??_xtoa+2)& (0+255),w,b
  4903  00139E  A0D8               	btfss	status,0,c
  4904  0013A0  EFD4  F009         	goto	u5161
  4905  0013A4  EFD7  F009         	goto	u5160
  4906  0013A8                     u5161:
  4907  0013A8  0E01               	movlw	1
  4908  0013AA  EFD8  F009         	goto	u5170
  4909  0013AE                     u5160:
  4910  0013AE  0E00               	movlw	0
  4911  0013B0                     u5170:
  4912  0013B0  6FAE               	movwf	_xtoa$1504& (0+255),b
  4913  0013B2  6BAF               	clrf	(_xtoa$1504+1)& (0+255),b
  4914  0013B4                     
  4915                           ; BSR set to: 0
  4916  0013B4  51AE               	movf	_xtoa$1504& (0+255),w,b
  4917  0013B6  11AF               	iorwf	(_xtoa$1504+1)& (0+255),w,b
  4918  0013B8  B4D8               	btfsc	status,2,c
  4919  0013BA  EFE1  F009         	goto	u5181
  4920  0013BE  EFE3  F009         	goto	u5180
  4921  0013C2                     u5181:
  4922  0013C2  EFED  F009         	goto	l5234
  4923  0013C6                     u5180:
  4924  0013C6                     
  4925                           ; BSR set to: 0
  4926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  4927  0013C6  C0BE  F082         	movff	xtoa@c,toupper@c
  4928  0013CA  C0BF  F083         	movff	xtoa@c+1,toupper@c+1
  4929  0013CE  ECF8  F016         	call	_toupper	;wreg free
  4930  0013D2  C082  F0BE         	movff	?_toupper,xtoa@c
  4931  0013D6  C083  F0BF         	movff	?_toupper+1,xtoa@c+1
  4932  0013DA                     l5234:
  4933                           
  4934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  4935  0013DA  0E25               	movlw	low _dbuf
  4936  0013DC  0100               	movlb	0	; () banked
  4937  0013DE  25BC               	addwf	xtoa@i& (0+255),w,b
  4938  0013E0  6ED9               	movwf	fsr2l,c
  4939  0013E2  0E01               	movlw	high _dbuf
  4940  0013E4  21BD               	addwfc	(xtoa@i+1)& (0+255),w,b
  4941  0013E6  6EDA               	movwf	fsr2h,c
  4942  0013E8  C0BE  FFDF         	movff	xtoa@c,indf2
  4943  0013EC                     
  4944                           ; BSR set to: 0
  4945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  4946  0013EC  07B0               	decf	xtoa@p& (0+255),f,b
  4947  0013EE  A0D8               	btfss	status,0,c
  4948  0013F0  07B1               	decf	(xtoa@p+1)& (0+255),f,b
  4949  0013F2                     
  4950                           ; BSR set to: 0
  4951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  4952  0013F2  07B2               	decf	xtoa@w& (0+255),f,b
  4953  0013F4  A0D8               	btfss	status,0,c
  4954  0013F6  07B3               	decf	(xtoa@w+1)& (0+255),f,b
  4955  0013F8                     
  4956                           ; BSR set to: 0
  4957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  4958  0013F8  C0B4  F0A4         	movff	xtoa@n,??_xtoa
  4959  0013FC  C0B5  F0A5         	movff	xtoa@n+1,??_xtoa+1
  4960  001400  C0B6  F0A6         	movff	xtoa@n+2,??_xtoa+2
  4961  001404  C0B7  F0A7         	movff	xtoa@n+3,??_xtoa+3
  4962  001408  C0B8  F0A8         	movff	xtoa@n+4,??_xtoa+4
  4963  00140C  C0B9  F0A9         	movff	xtoa@n+5,??_xtoa+5
  4964  001410  C0BA  F0AA         	movff	xtoa@n+6,??_xtoa+6
  4965  001414  C0BB  F0AB         	movff	xtoa@n+7,??_xtoa+7
  4966  001418  0E05               	movlw	5
  4967  00141A  EF18  F00A         	goto	u5190
  4968  00141E                     u5195:
  4969  00141E  90D8               	bcf	status,0,c
  4970  001420  33AB               	rrcf	(??_xtoa+7)& (0+255),f,b
  4971  001422  33AA               	rrcf	(??_xtoa+6)& (0+255),f,b
  4972  001424  33A9               	rrcf	(??_xtoa+5)& (0+255),f,b
  4973  001426  33A8               	rrcf	(??_xtoa+4)& (0+255),f,b
  4974  001428  33A7               	rrcf	(??_xtoa+3)& (0+255),f,b
  4975  00142A  33A6               	rrcf	(??_xtoa+2)& (0+255),f,b
  4976  00142C  33A5               	rrcf	(??_xtoa+1)& (0+255),f,b
  4977  00142E  33A4               	rrcf	??_xtoa& (0+255),f,b
  4978  001430                     u5190:
  4979  001430  2EE8               	decfsz	wreg,f,c
  4980  001432  EF0F  F00A         	goto	u5195
  4981  001436  C0A4  F0B4         	movff	??_xtoa,xtoa@n
  4982  00143A  C0A5  F0B5         	movff	??_xtoa+1,xtoa@n+1
  4983  00143E  C0A6  F0B6         	movff	??_xtoa+2,xtoa@n+2
  4984  001442  C0A7  F0B7         	movff	??_xtoa+3,xtoa@n+3
  4985  001446  C0A8  F0B8         	movff	??_xtoa+4,xtoa@n+4
  4986  00144A  C0A9  F0B9         	movff	??_xtoa+5,xtoa@n+5
  4987  00144E  C0AA  F0BA         	movff	??_xtoa+6,xtoa@n+6
  4988  001452  C0AB  F0BB         	movff	??_xtoa+7,xtoa@n+7
  4989  001456                     l5242:
  4990                           
  4991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4992  001456  0100               	movlb	0	; () banked
  4993  001458  BFBD               	btfsc	(xtoa@i+1)& (0+255),7,b
  4994  00145A  EF38  F00A         	goto	u5201
  4995  00145E  51BD               	movf	(xtoa@i+1)& (0+255),w,b
  4996  001460  E109               	bnz	u5200
  4997  001462  0E02               	movlw	2
  4998  001464  5DBC               	subwf	xtoa@i& (0+255),w,b
  4999  001466  A0D8               	btfss	status,0,c
  5000  001468  EF38  F00A         	goto	u5201
  5001  00146C  EF3A  F00A         	goto	u5200
  5002  001470                     u5201:
  5003  001470  EF6A  F00A         	goto	l688
  5004  001474                     u5200:
  5005  001474                     
  5006                           ; BSR set to: 0
  5007  001474  51B4               	movf	xtoa@n& (0+255),w,b
  5008  001476  11B5               	iorwf	(xtoa@n+1)& (0+255),w,b
  5009  001478  11B6               	iorwf	(xtoa@n+2)& (0+255),w,b
  5010  00147A  11B7               	iorwf	(xtoa@n+3)& (0+255),w,b
  5011  00147C  11B8               	iorwf	(xtoa@n+4)& (0+255),w,b
  5012  00147E  11B9               	iorwf	(xtoa@n+5)& (0+255),w,b
  5013  001480  11BA               	iorwf	(xtoa@n+6)& (0+255),w,b
  5014  001482  11BB               	iorwf	(xtoa@n+7)& (0+255),w,b
  5015  001484  A4D8               	btfss	status,2,c
  5016  001486  EF47  F00A         	goto	u5211
  5017  00148A  EF49  F00A         	goto	u5210
  5018  00148E                     u5211:
  5019  00148E  EF77  F009         	goto	l5212
  5020  001492                     u5210:
  5021  001492                     
  5022                           ; BSR set to: 0
  5023  001492  BFB1               	btfsc	(xtoa@p+1)& (0+255),7,b
  5024  001494  EF56  F00A         	goto	u5220
  5025  001498  51B1               	movf	(xtoa@p+1)& (0+255),w,b
  5026  00149A  E106               	bnz	u5221
  5027  00149C  05B0               	decf	xtoa@p& (0+255),w,b
  5028  00149E  B0D8               	btfsc	status,0,c
  5029  0014A0  EF54  F00A         	goto	u5221
  5030  0014A4  EF56  F00A         	goto	u5220
  5031  0014A8                     u5221:
  5032  0014A8  EF77  F009         	goto	l5212
  5033  0014AC                     u5220:
  5034  0014AC                     
  5035                           ; BSR set to: 0
  5036  0014AC  BFB3               	btfsc	(xtoa@w+1)& (0+255),7,b
  5037  0014AE  EF61  F00A         	goto	u5231
  5038  0014B2  51B3               	movf	(xtoa@w+1)& (0+255),w,b
  5039  0014B4  E108               	bnz	u5230
  5040  0014B6  05B2               	decf	xtoa@w& (0+255),w,b
  5041  0014B8  A0D8               	btfss	status,0,c
  5042  0014BA  EF61  F00A         	goto	u5231
  5043  0014BE  EF63  F00A         	goto	u5230
  5044  0014C2                     u5231:
  5045  0014C2  EF6A  F00A         	goto	l688
  5046  0014C6                     u5230:
  5047  0014C6                     
  5048                           ; BSR set to: 0
  5049  0014C6  B3CE               	btfsc	_flags& (0+255),1,b
  5050  0014C8  EF68  F00A         	goto	u5241
  5051  0014CC  EF6A  F00A         	goto	u5240
  5052  0014D0                     u5241:
  5053  0014D0  EF77  F009         	goto	l5212
  5054  0014D4                     u5240:
  5055  0014D4                     l688:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  5059  0014D4  A9CE               	btfss	_flags& (0+255),4,b
  5060  0014D6  EF6F  F00A         	goto	u5251
  5061  0014DA  EF71  F00A         	goto	u5250
  5062  0014DE                     u5251:
  5063  0014DE  EF87  F00A         	goto	l5258
  5064  0014E2                     u5250:
  5065  0014E2                     
  5066                           ; BSR set to: 0
  5067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  5068  0014E2  07BC               	decf	xtoa@i& (0+255),f,b
  5069  0014E4  A0D8               	btfss	status,0,c
  5070  0014E6  07BD               	decf	(xtoa@i+1)& (0+255),f,b
  5071  0014E8                     
  5072                           ; BSR set to: 0
  5073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  5074  0014E8  0E25               	movlw	low _dbuf
  5075  0014EA  25BC               	addwf	xtoa@i& (0+255),w,b
  5076  0014EC  6ED9               	movwf	fsr2l,c
  5077  0014EE  0E01               	movlw	high _dbuf
  5078  0014F0  21BD               	addwfc	(xtoa@i+1)& (0+255),w,b
  5079  0014F2  6EDA               	movwf	fsr2h,c
  5080  0014F4  C0A3  FFDF         	movff	xtoa@x,indf2
  5081  0014F8                     
  5082                           ; BSR set to: 0
  5083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  5084  0014F8  07BC               	decf	xtoa@i& (0+255),f,b
  5085  0014FA  A0D8               	btfss	status,0,c
  5086  0014FC  07BD               	decf	(xtoa@i+1)& (0+255),f,b
  5087                           
  5088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  5089  0014FE  0E25               	movlw	low _dbuf
  5090  001500  25BC               	addwf	xtoa@i& (0+255),w,b
  5091  001502  6ED9               	movwf	fsr2l,c
  5092  001504  0E01               	movlw	high _dbuf
  5093  001506  21BD               	addwfc	(xtoa@i+1)& (0+255),w,b
  5094  001508  6EDA               	movwf	fsr2h,c
  5095  00150A  0E30               	movlw	48
  5096  00150C  6EDF               	movwf	indf2,c
  5097  00150E                     l5258:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  5101  00150E  C099  F08E         	movff	xtoa@fp,pad@fp
  5102  001512  C09A  F08F         	movff	xtoa@fp+1,pad@fp+1
  5103  001516  0E25               	movlw	low _dbuf
  5104  001518  25BC               	addwf	xtoa@i& (0+255),w,b
  5105  00151A  6F90               	movwf	pad@buf& (0+255),b
  5106  00151C  0E01               	movlw	high _dbuf
  5107  00151E  21BD               	addwfc	(xtoa@i+1)& (0+255),w,b
  5108  001520  6F91               	movwf	(pad@buf+1)& (0+255),b
  5109  001522  C0B2  F092         	movff	xtoa@w,pad@p
  5110  001526  C0B3  F093         	movff	xtoa@w+1,pad@p+1
  5111  00152A  EC2E  F014         	call	_pad	;wreg free
  5112  00152E  C08E  F099         	movff	?_pad,?_xtoa
  5113  001532  C08F  F09A         	movff	?_pad+1,?_xtoa+1
  5114  001536  0012               	return		;funcret
  5115  001538                     __end_of_xtoa:
  5116                           	opt callstack 0
  5117                           
  5118 ;; *************** function _toupper *****************
  5119 ;; Defined at:
  5120 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  c               2   34[BANK0 ] int 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2   34[BANK0 ] int 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;Total ram usage:        8 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:   12
  5141 ;; This function calls:
  5142 ;;		_islower
  5143 ;; This function is called by:
  5144 ;;		_xtoa
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text9
  5149  002DF0                     __ptext9:
  5150                           	opt callstack 0
  5151  002DF0                     _toupper:
  5152                           	opt callstack 14
  5153  002DF0  0E9F               	movlw	159
  5154  002DF2  0100               	movlb	0	; () banked
  5155  002DF4  6F84               	movwf	??_toupper& (0+255),b
  5156  002DF6  0EFF               	movlw	255
  5157  002DF8  6F85               	movwf	(??_toupper+1)& (0+255),b
  5158  002DFA  C082  F086         	movff	toupper@c,??_toupper+2
  5159  002DFE  C083  F087         	movff	toupper@c+1,??_toupper+3
  5160  002E02  5184               	movf	??_toupper& (0+255),w,b
  5161  002E04  2786               	addwf	(??_toupper+2)& (0+255),f,b
  5162  002E06  5185               	movf	(??_toupper+1)& (0+255),w,b
  5163  002E08  2387               	addwfc	(??_toupper+3)& (0+255),f,b
  5164  002E0A  5187               	movf	(??_toupper+3)& (0+255),w,b
  5165  002E0C  E10A               	bnz	u4780
  5166  002E0E  0E1A               	movlw	26
  5167  002E10  5D86               	subwf	(??_toupper+2)& (0+255),w,b
  5168  002E12  A0D8               	btfss	status,0,c
  5169  002E14  EF0E  F017         	goto	u4781
  5170  002E18  EF11  F017         	goto	u4780
  5171  002E1C                     u4781:
  5172  002E1C  0E01               	movlw	1
  5173  002E1E  EF12  F017         	goto	u4790
  5174  002E22                     u4780:
  5175  002E22  0E00               	movlw	0
  5176  002E24                     u4790:
  5177  002E24  6F88               	movwf	_toupper$2074& (0+255),b
  5178  002E26  6B89               	clrf	(_toupper$2074+1)& (0+255),b
  5179  002E28                     
  5180                           ; BSR set to: 0
  5181  002E28  5188               	movf	_toupper$2074& (0+255),w,b
  5182  002E2A  1189               	iorwf	(_toupper$2074+1)& (0+255),w,b
  5183  002E2C  B4D8               	btfsc	status,2,c
  5184  002E2E  EF1B  F017         	goto	u4801
  5185  002E32  EF1D  F017         	goto	u4800
  5186  002E36                     u4801:
  5187  002E36  EF23  F017         	goto	l1508
  5188  002E3A                     u4800:
  5189  002E3A                     
  5190                           ; BSR set to: 0
  5191  002E3A  0E5F               	movlw	95
  5192  002E3C  1582               	andwf	toupper@c& (0+255),w,b
  5193  002E3E  6F82               	movwf	?_toupper& (0+255),b
  5194  002E40  6B83               	clrf	(?_toupper+1)& (0+255),b
  5195  002E42  EF27  F017         	goto	l1513
  5196  002E46                     l1508:
  5197                           
  5198                           ; BSR set to: 0
  5199  002E46  C082  F082         	movff	toupper@c,?_toupper
  5200  002E4A  C083  F083         	movff	toupper@c+1,?_toupper+1
  5201  002E4E                     l1513:
  5202                           
  5203                           ; BSR set to: 0
  5204  002E4E  0012               	return		;funcret
  5205  002E50                     __end_of_toupper:
  5206                           	opt callstack 0
  5207                           
  5208 ;; *************** function _islower *****************
  5209 ;; Defined at:
  5210 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  c               2   28[BANK0 ] int 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;		None
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  2   28[BANK0 ] int 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;Total ram usage:        6 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:   11
  5231 ;; This function calls:
  5232 ;;		Nothing
  5233 ;; This function is called by:
  5234 ;;		_toupper
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           	psect	text10
  5239  00322A                     __ptext10:
  5240                           	opt callstack 0
  5241  00322A                     _islower:
  5242                           	opt callstack 14
  5243  00322A  0E9F               	movlw	159
  5244  00322C  0100               	movlb	0	; () banked
  5245  00322E  6F7E               	movwf	??_islower& (0+255),b
  5246  003230  0EFF               	movlw	255
  5247  003232  6F7F               	movwf	(??_islower+1)& (0+255),b
  5248  003234  C07C  F080         	movff	islower@c,??_islower+2
  5249  003238  C07D  F081         	movff	islower@c+1,??_islower+3
  5250  00323C  517E               	movf	??_islower& (0+255),w,b
  5251  00323E  2780               	addwf	(??_islower+2)& (0+255),f,b
  5252  003240  517F               	movf	(??_islower+1)& (0+255),w,b
  5253  003242  2381               	addwfc	(??_islower+3)& (0+255),f,b
  5254  003244  5181               	movf	(??_islower+3)& (0+255),w,b
  5255  003246  E10A               	bnz	u4680
  5256  003248  0E1A               	movlw	26
  5257  00324A  5D80               	subwf	(??_islower+2)& (0+255),w,b
  5258  00324C  A0D8               	btfss	status,0,c
  5259  00324E  EF2B  F019         	goto	u4681
  5260  003252  EF2E  F019         	goto	u4680
  5261  003256                     u4681:
  5262  003256  0E01               	movlw	1
  5263  003258  EF2F  F019         	goto	u4690
  5264  00325C                     u4680:
  5265  00325C  0E00               	movlw	0
  5266  00325E                     u4690:
  5267  00325E  6F7C               	movwf	?_islower& (0+255),b
  5268  003260  6B7D               	clrf	(?_islower+1)& (0+255),b
  5269  003262                     
  5270                           ; BSR set to: 0
  5271  003262  0012               	return		;funcret
  5272  003264                     __end_of_islower:
  5273                           	opt callstack 0
  5274                           
  5275 ;; *************** function _isupper *****************
  5276 ;; Defined at:
  5277 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  c               2   28[BANK0 ] int 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  2   28[BANK0 ] int 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;Total ram usage:        6 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:   11
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_xtoa
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text11
  5306  003264                     __ptext11:
  5307                           	opt callstack 0
  5308  003264                     _isupper:
  5309                           	opt callstack 15
  5310  003264  0EBF               	movlw	191
  5311  003266  0100               	movlb	0	; () banked
  5312  003268  6F7E               	movwf	??_isupper& (0+255),b
  5313  00326A  0EFF               	movlw	255
  5314  00326C  6F7F               	movwf	(??_isupper+1)& (0+255),b
  5315  00326E  C07C  F080         	movff	isupper@c,??_isupper+2
  5316  003272  C07D  F081         	movff	isupper@c+1,??_isupper+3
  5317  003276  517E               	movf	??_isupper& (0+255),w,b
  5318  003278  2780               	addwf	(??_isupper+2)& (0+255),f,b
  5319  00327A  517F               	movf	(??_isupper+1)& (0+255),w,b
  5320  00327C  2381               	addwfc	(??_isupper+3)& (0+255),f,b
  5321  00327E  5181               	movf	(??_isupper+3)& (0+255),w,b
  5322  003280  E10A               	bnz	u4740
  5323  003282  0E1A               	movlw	26
  5324  003284  5D80               	subwf	(??_isupper+2)& (0+255),w,b
  5325  003286  A0D8               	btfss	status,0,c
  5326  003288  EF48  F019         	goto	u4741
  5327  00328C  EF4B  F019         	goto	u4740
  5328  003290                     u4741:
  5329  003290  0E01               	movlw	1
  5330  003292  EF4C  F019         	goto	u4750
  5331  003296                     u4740:
  5332  003296  0E00               	movlw	0
  5333  003298                     u4750:
  5334  003298  6F7C               	movwf	?_isupper& (0+255),b
  5335  00329A  6B7D               	clrf	(?_isupper+1)& (0+255),b
  5336  00329C                     
  5337                           ; BSR set to: 0
  5338  00329C  0012               	return		;funcret
  5339  00329E                     __end_of_isupper:
  5340                           	opt callstack 0
  5341                           
  5342 ;; *************** function _isalpha *****************
  5343 ;; Defined at:
  5344 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  c               2   28[BANK0 ] int 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  2   28[BANK0 ] int 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2, status,0
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;Total ram usage:        6 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:   11
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_xtoa
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text12
  5373  0031B0                     __ptext12:
  5374                           	opt callstack 0
  5375  0031B0                     _isalpha:
  5376                           	opt callstack 15
  5377  0031B0  0E9F               	movlw	159
  5378  0031B2  0100               	movlb	0	; () banked
  5379  0031B4  6F7E               	movwf	??_isalpha& (0+255),b
  5380  0031B6  0EFF               	movlw	255
  5381  0031B8  6F7F               	movwf	(??_isalpha+1)& (0+255),b
  5382  0031BA  0E20               	movlw	32
  5383  0031BC  117C               	iorwf	isalpha@c& (0+255),w,b
  5384  0031BE  6F80               	movwf	(??_isalpha+2)& (0+255),b
  5385  0031C0  0E00               	movlw	0
  5386  0031C2  117D               	iorwf	(isalpha@c+1)& (0+255),w,b
  5387  0031C4  6F81               	movwf	(??_isalpha+3)& (0+255),b
  5388  0031C6  517E               	movf	??_isalpha& (0+255),w,b
  5389  0031C8  2780               	addwf	(??_isalpha+2)& (0+255),f,b
  5390  0031CA  517F               	movf	(??_isalpha+1)& (0+255),w,b
  5391  0031CC  2381               	addwfc	(??_isalpha+3)& (0+255),f,b
  5392  0031CE  5181               	movf	(??_isalpha+3)& (0+255),w,b
  5393  0031D0  E10A               	bnz	u4760
  5394  0031D2  0E1A               	movlw	26
  5395  0031D4  5D80               	subwf	(??_isalpha+2)& (0+255),w,b
  5396  0031D6  A0D8               	btfss	status,0,c
  5397  0031D8  EFF0  F018         	goto	u4761
  5398  0031DC  EFF3  F018         	goto	u4760
  5399  0031E0                     u4761:
  5400  0031E0  0E01               	movlw	1
  5401  0031E2  EFF4  F018         	goto	u4770
  5402  0031E6                     u4760:
  5403  0031E6  0E00               	movlw	0
  5404  0031E8                     u4770:
  5405  0031E8  6F7C               	movwf	?_isalpha& (0+255),b
  5406  0031EA  6B7D               	clrf	(?_isalpha+1)& (0+255),b
  5407  0031EC                     
  5408                           ; BSR set to: 0
  5409  0031EC  0012               	return		;funcret
  5410  0031EE                     __end_of_isalpha:
  5411                           	opt callstack 0
  5412                           
  5413 ;; *************** function _utoa *****************
  5414 ;; Defined at:
  5415 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  fp              2   57[BANK0 ] PTR struct _IO_FILE
  5418 ;;		 -> NULL(0), 
  5419 ;;  d               8   59[BANK0 ] unsigned long long 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  n               8   79[BANK0 ] unsigned long long 
  5422 ;;  i               2   87[BANK0 ] int 
  5423 ;;  w               2   77[BANK0 ] int 
  5424 ;;  p               2   75[BANK0 ] int 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  2   57[BANK0 ] int 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5434 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;Total ram usage:       32 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:   16
  5441 ;; This function calls:
  5442 ;;		___lodiv
  5443 ;;		___lomod
  5444 ;;		_pad
  5445 ;; This function is called by:
  5446 ;;		_vfpfcnvrt
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text13
  5451  001812                     __ptext13:
  5452                           	opt callstack 0
  5453  001812                     _utoa:
  5454                           	opt callstack 11
  5455  001812                     
  5456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5457  001812  0100               	movlb	0	; () banked
  5458  001814  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  5459  001816  EF0F  F00C         	goto	u5021
  5460  00181A  EF11  F00C         	goto	u5020
  5461  00181E                     u5021:
  5462  00181E  EF12  F00C         	goto	l5164
  5463  001822                     u5020:
  5464  001822                     
  5465                           ; BSR set to: 0
  5466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  5467  001822  93CE               	bcf	_flags& (0+255),1,b
  5468  001824                     l5164:
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  5472  001824  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  5473  001826  EF1F  F00C         	goto	u5030
  5474  00182A  51CD               	movf	(_prec+1)& (0+255),w,b
  5475  00182C  E106               	bnz	u5031
  5476  00182E  05CC               	decf	_prec& (0+255),w,b
  5477  001830  B0D8               	btfsc	status,0,c
  5478  001832  EF1D  F00C         	goto	u5031
  5479  001836  EF1F  F00C         	goto	u5030
  5480  00183A                     u5031:
  5481  00183A  EF25  F00C         	goto	l650
  5482  00183E                     u5030:
  5483  00183E                     
  5484                           ; BSR set to: 0
  5485  00183E  0E00               	movlw	0
  5486  001840  6FAC               	movwf	(utoa@p+1)& (0+255),b
  5487  001842  0E01               	movlw	1
  5488  001844  6FAB               	movwf	utoa@p& (0+255),b
  5489  001846  EF29  F00C         	goto	l652
  5490  00184A                     l650:
  5491                           
  5492                           ; BSR set to: 0
  5493  00184A  C0CC  F0AB         	movff	_prec,utoa@p
  5494  00184E  C0CD  F0AC         	movff	_prec+1,utoa@p+1
  5495  001852                     l652:
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  5499  001852  C0CA  F0AD         	movff	_width,utoa@w
  5500  001856  C0CB  F0AE         	movff	_width+1,utoa@w+1
  5501                           
  5502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  5503  00185A  C09B  F0AF         	movff	utoa@d,utoa@n
  5504  00185E  C09C  F0B0         	movff	utoa@d+1,utoa@n+1
  5505  001862  C09D  F0B1         	movff	utoa@d+2,utoa@n+2
  5506  001866  C09E  F0B2         	movff	utoa@d+3,utoa@n+3
  5507  00186A  C09F  F0B3         	movff	utoa@d+4,utoa@n+4
  5508  00186E  C0A0  F0B4         	movff	utoa@d+5,utoa@n+5
  5509  001872  C0A1  F0B5         	movff	utoa@d+6,utoa@n+6
  5510  001876  C0A2  F0B6         	movff	utoa@d+7,utoa@n+7
  5511  00187A                     
  5512                           ; BSR set to: 0
  5513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  5514  00187A  0E00               	movlw	0
  5515  00187C  6FB8               	movwf	(utoa@i+1)& (0+255),b
  5516  00187E  0E1F               	movlw	31
  5517  001880  6FB7               	movwf	utoa@i& (0+255),b
  5518  001882                     
  5519                           ; BSR set to: 0
  5520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  5521  001882  0E00               	movlw	0
  5522  001884  0101               	movlb	1	; () banked
  5523  001886  6F44               	movwf	(_dbuf+31)& (0+255),b
  5524                           
  5525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5526  001888  EFBD  F00C         	goto	l5182
  5527  00188C                     l5172:
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  5531  00188C  07B7               	decf	utoa@i& (0+255),f,b
  5532  00188E  A0D8               	btfss	status,0,c
  5533  001890  07B8               	decf	(utoa@i+1)& (0+255),f,b
  5534  001892                     
  5535                           ; BSR set to: 0
  5536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  5537  001892  0E25               	movlw	low _dbuf
  5538  001894  25B7               	addwf	utoa@i& (0+255),w,b
  5539  001896  6ED9               	movwf	fsr2l,c
  5540  001898  0E01               	movlw	high _dbuf
  5541  00189A  21B8               	addwfc	(utoa@i+1)& (0+255),w,b
  5542  00189C  6EDA               	movwf	fsr2h,c
  5543  00189E  C0AF  F07C         	movff	utoa@n,___lomod@dividend
  5544  0018A2  C0B0  F07D         	movff	utoa@n+1,___lomod@dividend+1
  5545  0018A6  C0B1  F07E         	movff	utoa@n+2,___lomod@dividend+2
  5546  0018AA  C0B2  F07F         	movff	utoa@n+3,___lomod@dividend+3
  5547  0018AE  C0B3  F080         	movff	utoa@n+4,___lomod@dividend+4
  5548  0018B2  C0B4  F081         	movff	utoa@n+5,___lomod@dividend+5
  5549  0018B6  C0B5  F082         	movff	utoa@n+6,___lomod@dividend+6
  5550  0018BA  C0B6  F083         	movff	utoa@n+7,___lomod@dividend+7
  5551  0018BE  0E0A               	movlw	10
  5552  0018C0  6F84               	movwf	___lomod@divisor& (0+255),b
  5553  0018C2  0E00               	movlw	0
  5554  0018C4  6F85               	movwf	(___lomod@divisor+1)& (0+255),b
  5555  0018C6  0E00               	movlw	0
  5556  0018C8  6F86               	movwf	(___lomod@divisor+2)& (0+255),b
  5557  0018CA  0E00               	movlw	0
  5558  0018CC  6F87               	movwf	(___lomod@divisor+3)& (0+255),b
  5559  0018CE  0E00               	movlw	0
  5560  0018D0  6F88               	movwf	(___lomod@divisor+4)& (0+255),b
  5561  0018D2  0E00               	movlw	0
  5562  0018D4  6F89               	movwf	(___lomod@divisor+5)& (0+255),b
  5563  0018D6  0E00               	movlw	0
  5564  0018D8  6F8A               	movwf	(___lomod@divisor+6)& (0+255),b
  5565  0018DA  0E00               	movlw	0
  5566  0018DC  6F8B               	movwf	(___lomod@divisor+7)& (0+255),b
  5567  0018DE  EC5D  F013         	call	___lomod	;wreg free
  5568  0018E2  C07C  F0A3         	movff	?___lomod,??_utoa
  5569  0018E6  C07D  F0A4         	movff	?___lomod+1,??_utoa+1
  5570  0018EA  C07E  F0A5         	movff	?___lomod+2,??_utoa+2
  5571  0018EE  C07F  F0A6         	movff	?___lomod+3,??_utoa+3
  5572  0018F2  C080  F0A7         	movff	?___lomod+4,??_utoa+4
  5573  0018F6  C081  F0A8         	movff	?___lomod+5,??_utoa+5
  5574  0018FA  C082  F0A9         	movff	?___lomod+6,??_utoa+6
  5575  0018FE  C083  F0AA         	movff	?___lomod+7,??_utoa+7
  5576  001902  0100               	movlb	0	; () banked
  5577  001904  51A3               	movf	??_utoa& (0+255),w,b
  5578  001906  0F30               	addlw	48
  5579  001908  6EDF               	movwf	indf2,c
  5580  00190A                     
  5581                           ; BSR set to: 0
  5582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  5583  00190A  07AB               	decf	utoa@p& (0+255),f,b
  5584  00190C  A0D8               	btfss	status,0,c
  5585  00190E  07AC               	decf	(utoa@p+1)& (0+255),f,b
  5586  001910                     
  5587                           ; BSR set to: 0
  5588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  5589  001910  07AD               	decf	utoa@w& (0+255),f,b
  5590  001912  A0D8               	btfss	status,0,c
  5591  001914  07AE               	decf	(utoa@w+1)& (0+255),f,b
  5592  001916                     
  5593                           ; BSR set to: 0
  5594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  5595  001916  C0AF  F07C         	movff	utoa@n,___lodiv@dividend
  5596  00191A  C0B0  F07D         	movff	utoa@n+1,___lodiv@dividend+1
  5597  00191E  C0B1  F07E         	movff	utoa@n+2,___lodiv@dividend+2
  5598  001922  C0B2  F07F         	movff	utoa@n+3,___lodiv@dividend+3
  5599  001926  C0B3  F080         	movff	utoa@n+4,___lodiv@dividend+4
  5600  00192A  C0B4  F081         	movff	utoa@n+5,___lodiv@dividend+5
  5601  00192E  C0B5  F082         	movff	utoa@n+6,___lodiv@dividend+6
  5602  001932  C0B6  F083         	movff	utoa@n+7,___lodiv@dividend+7
  5603  001936  0E0A               	movlw	10
  5604  001938  6F84               	movwf	___lodiv@divisor& (0+255),b
  5605  00193A  0E00               	movlw	0
  5606  00193C  6F85               	movwf	(___lodiv@divisor+1)& (0+255),b
  5607  00193E  0E00               	movlw	0
  5608  001940  6F86               	movwf	(___lodiv@divisor+2)& (0+255),b
  5609  001942  0E00               	movlw	0
  5610  001944  6F87               	movwf	(___lodiv@divisor+3)& (0+255),b
  5611  001946  0E00               	movlw	0
  5612  001948  6F88               	movwf	(___lodiv@divisor+4)& (0+255),b
  5613  00194A  0E00               	movlw	0
  5614  00194C  6F89               	movwf	(___lodiv@divisor+5)& (0+255),b
  5615  00194E  0E00               	movlw	0
  5616  001950  6F8A               	movwf	(___lodiv@divisor+6)& (0+255),b
  5617  001952  0E00               	movlw	0
  5618  001954  6F8B               	movwf	(___lodiv@divisor+7)& (0+255),b
  5619  001956  EC6C  F012         	call	___lodiv	;wreg free
  5620  00195A  C07C  F0AF         	movff	?___lodiv,utoa@n
  5621  00195E  C07D  F0B0         	movff	?___lodiv+1,utoa@n+1
  5622  001962  C07E  F0B1         	movff	?___lodiv+2,utoa@n+2
  5623  001966  C07F  F0B2         	movff	?___lodiv+3,utoa@n+3
  5624  00196A  C080  F0B3         	movff	?___lodiv+4,utoa@n+4
  5625  00196E  C081  F0B4         	movff	?___lodiv+5,utoa@n+5
  5626  001972  C082  F0B5         	movff	?___lodiv+6,utoa@n+6
  5627  001976  C083  F0B6         	movff	?___lodiv+7,utoa@n+7
  5628  00197A                     l5182:
  5629                           
  5630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5631  00197A  0100               	movlb	0	; () banked
  5632  00197C  51B7               	movf	utoa@i& (0+255),w,b
  5633  00197E  11B8               	iorwf	(utoa@i+1)& (0+255),w,b
  5634  001980  B4D8               	btfsc	status,2,c
  5635  001982  EFC5  F00C         	goto	u5041
  5636  001986  EFC7  F00C         	goto	u5040
  5637  00198A                     u5041:
  5638  00198A  EFF7  F00C         	goto	l5192
  5639  00198E                     u5040:
  5640  00198E                     
  5641                           ; BSR set to: 0
  5642  00198E  51AF               	movf	utoa@n& (0+255),w,b
  5643  001990  11B0               	iorwf	(utoa@n+1)& (0+255),w,b
  5644  001992  11B1               	iorwf	(utoa@n+2)& (0+255),w,b
  5645  001994  11B2               	iorwf	(utoa@n+3)& (0+255),w,b
  5646  001996  11B3               	iorwf	(utoa@n+4)& (0+255),w,b
  5647  001998  11B4               	iorwf	(utoa@n+5)& (0+255),w,b
  5648  00199A  11B5               	iorwf	(utoa@n+6)& (0+255),w,b
  5649  00199C  11B6               	iorwf	(utoa@n+7)& (0+255),w,b
  5650  00199E  A4D8               	btfss	status,2,c
  5651  0019A0  EFD4  F00C         	goto	u5051
  5652  0019A4  EFD6  F00C         	goto	u5050
  5653  0019A8                     u5051:
  5654  0019A8  EF46  F00C         	goto	l5172
  5655  0019AC                     u5050:
  5656  0019AC                     
  5657                           ; BSR set to: 0
  5658  0019AC  BFAC               	btfsc	(utoa@p+1)& (0+255),7,b
  5659  0019AE  EFE3  F00C         	goto	u5060
  5660  0019B2  51AC               	movf	(utoa@p+1)& (0+255),w,b
  5661  0019B4  E106               	bnz	u5061
  5662  0019B6  05AB               	decf	utoa@p& (0+255),w,b
  5663  0019B8  B0D8               	btfsc	status,0,c
  5664  0019BA  EFE1  F00C         	goto	u5061
  5665  0019BE  EFE3  F00C         	goto	u5060
  5666  0019C2                     u5061:
  5667  0019C2  EF46  F00C         	goto	l5172
  5668  0019C6                     u5060:
  5669  0019C6                     
  5670                           ; BSR set to: 0
  5671  0019C6  BFAE               	btfsc	(utoa@w+1)& (0+255),7,b
  5672  0019C8  EFEE  F00C         	goto	u5071
  5673  0019CC  51AE               	movf	(utoa@w+1)& (0+255),w,b
  5674  0019CE  E108               	bnz	u5070
  5675  0019D0  05AD               	decf	utoa@w& (0+255),w,b
  5676  0019D2  A0D8               	btfss	status,0,c
  5677  0019D4  EFEE  F00C         	goto	u5071
  5678  0019D8  EFF0  F00C         	goto	u5070
  5679  0019DC                     u5071:
  5680  0019DC  EFF7  F00C         	goto	l5192
  5681  0019E0                     u5070:
  5682  0019E0                     
  5683                           ; BSR set to: 0
  5684  0019E0  B3CE               	btfsc	_flags& (0+255),1,b
  5685  0019E2  EFF5  F00C         	goto	u5081
  5686  0019E6  EFF7  F00C         	goto	u5080
  5687  0019EA                     u5081:
  5688  0019EA  EF46  F00C         	goto	l5172
  5689  0019EE                     u5080:
  5690  0019EE                     l5192:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  5694  0019EE  C099  F08E         	movff	utoa@fp,pad@fp
  5695  0019F2  C09A  F08F         	movff	utoa@fp+1,pad@fp+1
  5696  0019F6  0E25               	movlw	low _dbuf
  5697  0019F8  25B7               	addwf	utoa@i& (0+255),w,b
  5698  0019FA  6F90               	movwf	pad@buf& (0+255),b
  5699  0019FC  0E01               	movlw	high _dbuf
  5700  0019FE  21B8               	addwfc	(utoa@i+1)& (0+255),w,b
  5701  001A00  6F91               	movwf	(pad@buf+1)& (0+255),b
  5702  001A02  C0AD  F092         	movff	utoa@w,pad@p
  5703  001A06  C0AE  F093         	movff	utoa@w+1,pad@p+1
  5704  001A0A  EC2E  F014         	call	_pad	;wreg free
  5705  001A0E  C08E  F099         	movff	?_pad,?_utoa
  5706  001A12  C08F  F09A         	movff	?_pad+1,?_utoa+1
  5707  001A16  0012               	return		;funcret
  5708  001A18                     __end_of_utoa:
  5709                           	opt callstack 0
  5710                           
  5711 ;; *************** function ___lomod *****************
  5712 ;; Defined at:
  5713 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  dividend        8   28[BANK0 ] unsigned long long 
  5716 ;;  divisor         8   36[BANK0 ] unsigned long long 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  counter         1   44[BANK0 ] unsigned char 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  8   28[BANK0 ] unsigned long long 
  5721 ;; Registers used:
  5722 ;;		wreg, status,2, status,0
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5728 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;Total ram usage:       17 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:   11
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_utoa
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text14
  5743  0026BA                     __ptext14:
  5744                           	opt callstack 0
  5745  0026BA                     ___lomod:
  5746                           	opt callstack 15
  5747  0026BA  0100               	movlb	0	; () banked
  5748  0026BC  5184               	movf	___lomod@divisor& (0+255),w,b
  5749  0026BE  1185               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  5750  0026C0  1186               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  5751  0026C2  1187               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  5752  0026C4  1188               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  5753  0026C6  1189               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  5754  0026C8  118A               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  5755  0026CA  118B               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  5756  0026CC  B4D8               	btfsc	status,2,c
  5757  0026CE  EF6B  F013         	goto	u4871
  5758  0026D2  EF6D  F013         	goto	u4870
  5759  0026D6                     u4871:
  5760  0026D6  EFB5  F013         	goto	l1180
  5761  0026DA                     u4870:
  5762  0026DA                     
  5763                           ; BSR set to: 0
  5764  0026DA  0E01               	movlw	1
  5765  0026DC  6F8C               	movwf	___lomod@counter& (0+255),b
  5766  0026DE  EF7B  F013         	goto	l5082
  5767  0026E2                     l5080:
  5768                           
  5769                           ; BSR set to: 0
  5770  0026E2  90D8               	bcf	status,0,c
  5771  0026E4  3784               	rlcf	___lomod@divisor& (0+255),f,b
  5772  0026E6  3785               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  5773  0026E8  3786               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  5774  0026EA  3787               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  5775  0026EC  3788               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  5776  0026EE  3789               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  5777  0026F0  378A               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  5778  0026F2  378B               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  5779  0026F4  2B8C               	incf	___lomod@counter& (0+255),f,b
  5780  0026F6                     l5082:
  5781                           
  5782                           ; BSR set to: 0
  5783  0026F6  AF8B               	btfss	(___lomod@divisor+7)& (0+255),7,b
  5784  0026F8  EF80  F013         	goto	u4881
  5785  0026FC  EF82  F013         	goto	u4880
  5786  002700                     u4881:
  5787  002700  EF71  F013         	goto	l5080
  5788  002704                     u4880:
  5789  002704                     l5084:
  5790                           
  5791                           ; BSR set to: 0
  5792  002704  5184               	movf	___lomod@divisor& (0+255),w,b
  5793  002706  5D7C               	subwf	___lomod@dividend& (0+255),w,b
  5794  002708  5185               	movf	(___lomod@divisor+1)& (0+255),w,b
  5795  00270A  597D               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  5796  00270C  5186               	movf	(___lomod@divisor+2)& (0+255),w,b
  5797  00270E  597E               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  5798  002710  5187               	movf	(___lomod@divisor+3)& (0+255),w,b
  5799  002712  597F               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  5800  002714  5188               	movf	(___lomod@divisor+4)& (0+255),w,b
  5801  002716  5980               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  5802  002718  5189               	movf	(___lomod@divisor+5)& (0+255),w,b
  5803  00271A  5981               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  5804  00271C  518A               	movf	(___lomod@divisor+6)& (0+255),w,b
  5805  00271E  5982               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  5806  002720  518B               	movf	(___lomod@divisor+7)& (0+255),w,b
  5807  002722  5983               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  5808  002724  A0D8               	btfss	status,0,c
  5809  002726  EF97  F013         	goto	u4891
  5810  00272A  EF99  F013         	goto	u4890
  5811  00272E                     u4891:
  5812  00272E  EFA9  F013         	goto	l5088
  5813  002732                     u4890:
  5814  002732                     
  5815                           ; BSR set to: 0
  5816  002732  5184               	movf	___lomod@divisor& (0+255),w,b
  5817  002734  5F7C               	subwf	___lomod@dividend& (0+255),f,b
  5818  002736  5185               	movf	(___lomod@divisor+1)& (0+255),w,b
  5819  002738  5B7D               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  5820  00273A  5186               	movf	(___lomod@divisor+2)& (0+255),w,b
  5821  00273C  5B7E               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  5822  00273E  5187               	movf	(___lomod@divisor+3)& (0+255),w,b
  5823  002740  5B7F               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  5824  002742  5188               	movf	(___lomod@divisor+4)& (0+255),w,b
  5825  002744  5B80               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  5826  002746  5189               	movf	(___lomod@divisor+5)& (0+255),w,b
  5827  002748  5B81               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  5828  00274A  518A               	movf	(___lomod@divisor+6)& (0+255),w,b
  5829  00274C  5B82               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  5830  00274E  518B               	movf	(___lomod@divisor+7)& (0+255),w,b
  5831  002750  5B83               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  5832  002752                     l5088:
  5833                           
  5834                           ; BSR set to: 0
  5835  002752  90D8               	bcf	status,0,c
  5836  002754  338B               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  5837  002756  338A               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  5838  002758  3389               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  5839  00275A  3388               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  5840  00275C  3387               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  5841  00275E  3386               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  5842  002760  3385               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  5843  002762  3384               	rrcf	___lomod@divisor& (0+255),f,b
  5844  002764                     
  5845                           ; BSR set to: 0
  5846  002764  2F8C               	decfsz	___lomod@counter& (0+255),f,b
  5847  002766  EF82  F013         	goto	l5084
  5848  00276A                     l1180:
  5849                           
  5850                           ; BSR set to: 0
  5851  00276A  C07C  F07C         	movff	___lomod@dividend,?___lomod
  5852  00276E  C07D  F07D         	movff	___lomod@dividend+1,?___lomod+1
  5853  002772  C07E  F07E         	movff	___lomod@dividend+2,?___lomod+2
  5854  002776  C07F  F07F         	movff	___lomod@dividend+3,?___lomod+3
  5855  00277A  C080  F080         	movff	___lomod@dividend+4,?___lomod+4
  5856  00277E  C081  F081         	movff	___lomod@dividend+5,?___lomod+5
  5857  002782  C082  F082         	movff	___lomod@dividend+6,?___lomod+6
  5858  002786  C083  F083         	movff	___lomod@dividend+7,?___lomod+7
  5859  00278A                     
  5860                           ; BSR set to: 0
  5861  00278A  0012               	return		;funcret
  5862  00278C                     __end_of___lomod:
  5863                           	opt callstack 0
  5864                           
  5865 ;; *************** function ___lodiv *****************
  5866 ;; Defined at:
  5867 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  dividend        8   28[BANK0 ] unsigned long long 
  5870 ;;  divisor         8   36[BANK0 ] unsigned long long 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  quotient        8   44[BANK0 ] unsigned long long 
  5873 ;;  counter         1   52[BANK0 ] unsigned char 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  8   28[BANK0 ] unsigned long long 
  5876 ;; Registers used:
  5877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5883 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;Total ram usage:       25 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:   11
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		_utoa
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text15
  5898  0024D8                     __ptext15:
  5899                           	opt callstack 0
  5900  0024D8                     ___lodiv:
  5901                           	opt callstack 15
  5902  0024D8  EE20  F08C         	lfsr	2,___lodiv@quotient
  5903  0024DC  0E07               	movlw	7
  5904  0024DE                     u4831:
  5905  0024DE  6ADE               	clrf	postinc2,c
  5906  0024E0  06E8               	decf	wreg,f,c
  5907  0024E2  E2FD               	bc	u4831
  5908  0024E4  0100               	movlb	0	; () banked
  5909  0024E6  5184               	movf	___lodiv@divisor& (0+255),w,b
  5910  0024E8  1185               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  5911  0024EA  1186               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  5912  0024EC  1187               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  5913  0024EE  1188               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  5914  0024F0  1189               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  5915  0024F2  118A               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  5916  0024F4  118B               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  5917  0024F6  B4D8               	btfsc	status,2,c
  5918  0024F8  EF80  F012         	goto	u4841
  5919  0024FC  EF82  F012         	goto	u4840
  5920  002500                     u4841:
  5921  002500  EFD4  F012         	goto	l1170
  5922  002504                     u4840:
  5923  002504                     
  5924                           ; BSR set to: 0
  5925  002504  0E01               	movlw	1
  5926  002506  6F94               	movwf	___lodiv@counter& (0+255),b
  5927  002508  EF90  F012         	goto	l5062
  5928  00250C                     l5060:
  5929                           
  5930                           ; BSR set to: 0
  5931  00250C  90D8               	bcf	status,0,c
  5932  00250E  3784               	rlcf	___lodiv@divisor& (0+255),f,b
  5933  002510  3785               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  5934  002512  3786               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  5935  002514  3787               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  5936  002516  3788               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  5937  002518  3789               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  5938  00251A  378A               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  5939  00251C  378B               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  5940  00251E  2B94               	incf	___lodiv@counter& (0+255),f,b
  5941  002520                     l5062:
  5942                           
  5943                           ; BSR set to: 0
  5944  002520  AF8B               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  5945  002522  EF95  F012         	goto	u4851
  5946  002526  EF97  F012         	goto	u4850
  5947  00252A                     u4851:
  5948  00252A  EF86  F012         	goto	l5060
  5949  00252E                     u4850:
  5950  00252E                     l5064:
  5951                           
  5952                           ; BSR set to: 0
  5953  00252E  90D8               	bcf	status,0,c
  5954  002530  378C               	rlcf	___lodiv@quotient& (0+255),f,b
  5955  002532  378D               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  5956  002534  378E               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  5957  002536  378F               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  5958  002538  3790               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  5959  00253A  3791               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  5960  00253C  3792               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  5961  00253E  3793               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  5962  002540                     
  5963                           ; BSR set to: 0
  5964  002540  5184               	movf	___lodiv@divisor& (0+255),w,b
  5965  002542  5D7C               	subwf	___lodiv@dividend& (0+255),w,b
  5966  002544  5185               	movf	(___lodiv@divisor+1)& (0+255),w,b
  5967  002546  597D               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  5968  002548  5186               	movf	(___lodiv@divisor+2)& (0+255),w,b
  5969  00254A  597E               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  5970  00254C  5187               	movf	(___lodiv@divisor+3)& (0+255),w,b
  5971  00254E  597F               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  5972  002550  5188               	movf	(___lodiv@divisor+4)& (0+255),w,b
  5973  002552  5980               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  5974  002554  5189               	movf	(___lodiv@divisor+5)& (0+255),w,b
  5975  002556  5981               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  5976  002558  518A               	movf	(___lodiv@divisor+6)& (0+255),w,b
  5977  00255A  5982               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  5978  00255C  518B               	movf	(___lodiv@divisor+7)& (0+255),w,b
  5979  00255E  5983               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  5980  002560  A0D8               	btfss	status,0,c
  5981  002562  EFB5  F012         	goto	u4861
  5982  002566  EFB7  F012         	goto	u4860
  5983  00256A                     u4861:
  5984  00256A  EFC8  F012         	goto	l5072
  5985  00256E                     u4860:
  5986  00256E                     
  5987                           ; BSR set to: 0
  5988  00256E  5184               	movf	___lodiv@divisor& (0+255),w,b
  5989  002570  5F7C               	subwf	___lodiv@dividend& (0+255),f,b
  5990  002572  5185               	movf	(___lodiv@divisor+1)& (0+255),w,b
  5991  002574  5B7D               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  5992  002576  5186               	movf	(___lodiv@divisor+2)& (0+255),w,b
  5993  002578  5B7E               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  5994  00257A  5187               	movf	(___lodiv@divisor+3)& (0+255),w,b
  5995  00257C  5B7F               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  5996  00257E  5188               	movf	(___lodiv@divisor+4)& (0+255),w,b
  5997  002580  5B80               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  5998  002582  5189               	movf	(___lodiv@divisor+5)& (0+255),w,b
  5999  002584  5B81               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  6000  002586  518A               	movf	(___lodiv@divisor+6)& (0+255),w,b
  6001  002588  5B82               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  6002  00258A  518B               	movf	(___lodiv@divisor+7)& (0+255),w,b
  6003  00258C  5B83               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  6004  00258E                     
  6005                           ; BSR set to: 0
  6006  00258E  818C               	bsf	___lodiv@quotient& (0+255),0,b
  6007  002590                     l5072:
  6008                           
  6009                           ; BSR set to: 0
  6010  002590  90D8               	bcf	status,0,c
  6011  002592  338B               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  6012  002594  338A               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  6013  002596  3389               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  6014  002598  3388               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  6015  00259A  3387               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  6016  00259C  3386               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  6017  00259E  3385               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  6018  0025A0  3384               	rrcf	___lodiv@divisor& (0+255),f,b
  6019  0025A2                     
  6020                           ; BSR set to: 0
  6021  0025A2  2F94               	decfsz	___lodiv@counter& (0+255),f,b
  6022  0025A4  EF97  F012         	goto	l5064
  6023  0025A8                     l1170:
  6024                           
  6025                           ; BSR set to: 0
  6026  0025A8  C08C  F07C         	movff	___lodiv@quotient,?___lodiv
  6027  0025AC  C08D  F07D         	movff	___lodiv@quotient+1,?___lodiv+1
  6028  0025B0  C08E  F07E         	movff	___lodiv@quotient+2,?___lodiv+2
  6029  0025B4  C08F  F07F         	movff	___lodiv@quotient+3,?___lodiv+3
  6030  0025B8  C090  F080         	movff	___lodiv@quotient+4,?___lodiv+4
  6031  0025BC  C091  F081         	movff	___lodiv@quotient+5,?___lodiv+5
  6032  0025C0  C092  F082         	movff	___lodiv@quotient+6,?___lodiv+6
  6033  0025C4  C093  F083         	movff	___lodiv@quotient+7,?___lodiv+7
  6034  0025C8                     
  6035                           ; BSR set to: 0
  6036  0025C8  0012               	return		;funcret
  6037  0025CA                     __end_of___lodiv:
  6038                           	opt callstack 0
  6039                           
  6040 ;; *************** function _stoa *****************
  6041 ;; Defined at:
  6042 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
  6045 ;;		 -> NULL(0), 
  6046 ;;  s               2   41[BANK0 ] PTR unsigned char 
  6047 ;;		 -> ?_printf(2), IRreceiveBuffer(20), IRtransmitBuffer(20), 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  nuls            7   44[BANK0 ] unsigned char [7]
  6050 ;;  l               2   59[BANK0 ] int 
  6051 ;;  p               2   57[BANK0 ] int 
  6052 ;;  cp              2   55[BANK0 ] PTR unsigned char 
  6053 ;;		 -> ?_printf(2), stoa@nuls(7), IRreceiveBuffer(20), IRtransmitBuffer(20), 
  6054 ;;  w               2   53[BANK0 ] int 
  6055 ;;  i               2   51[BANK0 ] int 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  2   39[BANK0 ] int 
  6058 ;; Registers used:
  6059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;Total ram usage:       22 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:   14
  6072 ;; This function calls:
  6073 ;;		_fputc
  6074 ;;		_strlen
  6075 ;; This function is called by:
  6076 ;;		_vfpfcnvrt
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text16
  6081  001F54                     __ptext16:
  6082                           	opt callstack 0
  6083  001F54                     _stoa:
  6084                           	opt callstack 13
  6085  001F54                     
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6087  001F54  EE21  F0C0         	lfsr	2,stoa@F1136
  6088  001F58  EE10  F08C         	lfsr	1,stoa@nuls
  6089  001F5C  0E06               	movlw	6
  6090  001F5E                     u4931:
  6091  001F5E  CFDB FFE3          	movff	plusw2,plusw1
  6092  001F62  06E8               	decf	wreg,f,c
  6093  001F64  E2FC               	bc	u4931
  6094  001F66                     
  6095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  6096  001F66  C089  F097         	movff	stoa@s,stoa@cp
  6097  001F6A  C08A  F098         	movff	stoa@s+1,stoa@cp+1
  6098  001F6E                     
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  6100  001F6E  0100               	movlb	0	; () banked
  6101  001F70  5197               	movf	stoa@cp& (0+255),w,b
  6102  001F72  1198               	iorwf	(stoa@cp+1)& (0+255),w,b
  6103  001F74  A4D8               	btfss	status,2,c
  6104  001F76  EFBF  F00F         	goto	u4941
  6105  001F7A  EFC1  F00F         	goto	u4940
  6106  001F7E                     u4941:
  6107  001F7E  EFC5  F00F         	goto	l5126
  6108  001F82                     u4940:
  6109  001F82                     
  6110                           ; BSR set to: 0
  6111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  6112  001F82  0E8C               	movlw	low stoa@nuls
  6113  001F84  6F97               	movwf	stoa@cp& (0+255),b
  6114  001F86  0E00               	movlw	high stoa@nuls
  6115  001F88  6F98               	movwf	(stoa@cp+1)& (0+255),b
  6116  001F8A                     l5126:
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  6120  001F8A  C097  F07C         	movff	stoa@cp,strlen@s
  6121  001F8E  C098  F07D         	movff	stoa@cp+1,strlen@s+1
  6122  001F92  EC4F  F019         	call	_strlen	;wreg free
  6123  001F96  C07C  F09B         	movff	?_strlen,stoa@l
  6124  001F9A  C07D  F09C         	movff	?_strlen+1,stoa@l+1
  6125  001F9E                     
  6126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  6127  001F9E  C0CC  F099         	movff	_prec,stoa@p
  6128  001FA2  C0CD  F09A         	movff	_prec+1,stoa@p+1
  6129  001FA6                     
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  6131  001FA6  0100               	movlb	0	; () banked
  6132  001FA8  BF9A               	btfsc	(stoa@p+1)& (0+255),7,b
  6133  001FAA  EFD9  F00F         	goto	u4951
  6134  001FAE  EFDB  F00F         	goto	u4950
  6135  001FB2                     u4951:
  6136  001FB2  EFF0  F00F         	goto	l631
  6137  001FB6                     u4950:
  6138  001FB6                     
  6139                           ; BSR set to: 0
  6140  001FB6  519B               	movf	stoa@l& (0+255),w,b
  6141  001FB8  5D99               	subwf	stoa@p& (0+255),w,b
  6142  001FBA  519A               	movf	(stoa@p+1)& (0+255),w,b
  6143  001FBC  0A80               	xorlw	128
  6144  001FBE  6F8B               	movwf	??_stoa& (0+255),b
  6145  001FC0  519C               	movf	(stoa@l+1)& (0+255),w,b
  6146  001FC2  0A80               	xorlw	128
  6147  001FC4  598B               	subwfb	??_stoa& (0+255),w,b
  6148  001FC6  A0D8               	btfss	status,0,c
  6149  001FC8  EFE8  F00F         	goto	u4961
  6150  001FCC  EFEA  F00F         	goto	u4960
  6151  001FD0                     u4961:
  6152  001FD0  EFEC  F00F         	goto	l629
  6153  001FD4                     u4960:
  6154  001FD4  EFF0  F00F         	goto	l631
  6155  001FD8                     l629:
  6156                           
  6157                           ; BSR set to: 0
  6158  001FD8  C099  F09B         	movff	stoa@p,stoa@l
  6159  001FDC  C09A  F09C         	movff	stoa@p+1,stoa@l+1
  6160  001FE0                     l631:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  6164  001FE0  C09B  F099         	movff	stoa@l,stoa@p
  6165  001FE4  C09C  F09A         	movff	stoa@l+1,stoa@p+1
  6166                           
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  6168  001FE8  C0CA  F095         	movff	_width,stoa@w
  6169  001FEC  C0CB  F096         	movff	_width+1,stoa@w+1
  6170                           
  6171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  6172  001FF0  B1CE               	btfsc	_flags& (0+255),0,b
  6173  001FF2  EFFD  F00F         	goto	u4971
  6174  001FF6  EFFF  F00F         	goto	u4970
  6175  001FFA                     u4971:
  6176  001FFA  EF1D  F010         	goto	l5142
  6177  001FFE                     u4970:
  6178  001FFE  EF0E  F010         	goto	l5140
  6179  002002                     l5136:
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  6183  002002  0E00               	movlw	0
  6184  002004  6F7F               	movwf	(fputc@c+1)& (0+255),b
  6185  002006  0E20               	movlw	32
  6186  002008  6F7E               	movwf	fputc@c& (0+255),b
  6187  00200A  C087  F080         	movff	stoa@fp,fputc@fp
  6188  00200E  C088  F081         	movff	stoa@fp+1,fputc@fp+1
  6189  002012  ECBD  F015         	call	_fputc	;wreg free
  6190  002016                     
  6191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  6192  002016  0100               	movlb	0	; () banked
  6193  002018  4B9B               	infsnz	stoa@l& (0+255),f,b
  6194  00201A  2B9C               	incf	(stoa@l+1)& (0+255),f,b
  6195  00201C                     l5140:
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  6199  00201C  5195               	movf	stoa@w& (0+255),w,b
  6200  00201E  5D9B               	subwf	stoa@l& (0+255),w,b
  6201  002020  519C               	movf	(stoa@l+1)& (0+255),w,b
  6202  002022  0A80               	xorlw	128
  6203  002024  6F8B               	movwf	??_stoa& (0+255),b
  6204  002026  5196               	movf	(stoa@w+1)& (0+255),w,b
  6205  002028  0A80               	xorlw	128
  6206  00202A  598B               	subwfb	??_stoa& (0+255),w,b
  6207  00202C  A0D8               	btfss	status,0,c
  6208  00202E  EF1B  F010         	goto	u4981
  6209  002032  EF1D  F010         	goto	u4980
  6210  002036                     u4981:
  6211  002036  EF01  F010         	goto	l5136
  6212  00203A                     u4980:
  6213  00203A                     l5142:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  6217  00203A  0E00               	movlw	0
  6218  00203C  6F94               	movwf	(stoa@i+1)& (0+255),b
  6219  00203E  0E00               	movlw	0
  6220  002040  6F93               	movwf	stoa@i& (0+255),b
  6221                           
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6223  002042  EF37  F010         	goto	l5150
  6224  002046                     l5144:
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  6228  002046  C097  FFD9         	movff	stoa@cp,fsr2l
  6229  00204A  C098  FFDA         	movff	stoa@cp+1,fsr2h
  6230  00204E  50DF               	movf	indf2,w,c
  6231  002050  6F8B               	movwf	??_stoa& (0+255),b
  6232  002052  518B               	movf	??_stoa& (0+255),w,b
  6233  002054  6F7E               	movwf	fputc@c& (0+255),b
  6234  002056  6B7F               	clrf	(fputc@c+1)& (0+255),b
  6235  002058  C087  F080         	movff	stoa@fp,fputc@fp
  6236  00205C  C088  F081         	movff	stoa@fp+1,fputc@fp+1
  6237  002060  ECBD  F015         	call	_fputc	;wreg free
  6238  002064                     
  6239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  6240  002064  0100               	movlb	0	; () banked
  6241  002066  4B97               	infsnz	stoa@cp& (0+255),f,b
  6242  002068  2B98               	incf	(stoa@cp+1)& (0+255),f,b
  6243  00206A                     
  6244                           ; BSR set to: 0
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  6246  00206A  4B93               	infsnz	stoa@i& (0+255),f,b
  6247  00206C  2B94               	incf	(stoa@i+1)& (0+255),f,b
  6248  00206E                     l5150:
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6252  00206E  5199               	movf	stoa@p& (0+255),w,b
  6253  002070  5D93               	subwf	stoa@i& (0+255),w,b
  6254  002072  5194               	movf	(stoa@i+1)& (0+255),w,b
  6255  002074  0A80               	xorlw	128
  6256  002076  6F8B               	movwf	??_stoa& (0+255),b
  6257  002078  519A               	movf	(stoa@p+1)& (0+255),w,b
  6258  00207A  0A80               	xorlw	128
  6259  00207C  598B               	subwfb	??_stoa& (0+255),w,b
  6260  00207E  A0D8               	btfss	status,0,c
  6261  002080  EF44  F010         	goto	u4991
  6262  002084  EF46  F010         	goto	u4990
  6263  002088                     u4991:
  6264  002088  EF23  F010         	goto	l5144
  6265  00208C                     u4990:
  6266  00208C                     
  6267                           ; BSR set to: 0
  6268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  6269  00208C  A1CE               	btfss	_flags& (0+255),0,b
  6270  00208E  EF4B  F010         	goto	u5001
  6271  002092  EF4D  F010         	goto	u5000
  6272  002096                     u5001:
  6273  002096  EF6B  F010         	goto	l641
  6274  00209A                     u5000:
  6275  00209A  EF5C  F010         	goto	l5158
  6276  00209E                     l5154:
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  6280  00209E  0E00               	movlw	0
  6281  0020A0  6F7F               	movwf	(fputc@c+1)& (0+255),b
  6282  0020A2  0E20               	movlw	32
  6283  0020A4  6F7E               	movwf	fputc@c& (0+255),b
  6284  0020A6  C087  F080         	movff	stoa@fp,fputc@fp
  6285  0020AA  C088  F081         	movff	stoa@fp+1,fputc@fp+1
  6286  0020AE  ECBD  F015         	call	_fputc	;wreg free
  6287  0020B2                     
  6288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  6289  0020B2  0100               	movlb	0	; () banked
  6290  0020B4  4B9B               	infsnz	stoa@l& (0+255),f,b
  6291  0020B6  2B9C               	incf	(stoa@l+1)& (0+255),f,b
  6292  0020B8                     l5158:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  6296  0020B8  5195               	movf	stoa@w& (0+255),w,b
  6297  0020BA  5D9B               	subwf	stoa@l& (0+255),w,b
  6298  0020BC  519C               	movf	(stoa@l+1)& (0+255),w,b
  6299  0020BE  0A80               	xorlw	128
  6300  0020C0  6F8B               	movwf	??_stoa& (0+255),b
  6301  0020C2  5196               	movf	(stoa@w+1)& (0+255),w,b
  6302  0020C4  0A80               	xorlw	128
  6303  0020C6  598B               	subwfb	??_stoa& (0+255),w,b
  6304  0020C8  A0D8               	btfss	status,0,c
  6305  0020CA  EF69  F010         	goto	u5011
  6306  0020CE  EF6B  F010         	goto	u5010
  6307  0020D2                     u5011:
  6308  0020D2  EF4F  F010         	goto	l5154
  6309  0020D6                     u5010:
  6310  0020D6                     l641:
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  6314  0020D6  C09B  F087         	movff	stoa@l,?_stoa
  6315  0020DA  C09C  F088         	movff	stoa@l+1,?_stoa+1
  6316  0020DE                     
  6317                           ; BSR set to: 0
  6318  0020DE  0012               	return		;funcret
  6319  0020E0                     __end_of_stoa:
  6320                           	opt callstack 0
  6321                           
  6322 ;; *************** function _ctoa *****************
  6323 ;; Defined at:
  6324 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  fp              2   57[BANK0 ] PTR struct _IO_FILE
  6327 ;;		 -> NULL(0), 
  6328 ;;  c               1   59[BANK0 ] unsigned char 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  w               2   60[BANK0 ] int 
  6331 ;;  l               2    0        int 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  2   57[BANK0 ] int 
  6334 ;; Registers used:
  6335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6341 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;Total ram usage:        5 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:   16
  6348 ;; This function calls:
  6349 ;;		_pad
  6350 ;; This function is called by:
  6351 ;;		_vfpfcnvrt
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text17
  6356  002E50                     __ptext17:
  6357                           	opt callstack 0
  6358  002E50                     _ctoa:
  6359                           	opt callstack 11
  6360  002E50                     
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  6362  002E50  0100               	movlb	0	; () banked
  6363  002E52  51CA               	movf	_width& (0+255),w,b
  6364  002E54  11CB               	iorwf	(_width+1)& (0+255),w,b
  6365  002E56  A4D8               	btfss	status,2,c
  6366  002E58  EF30  F017         	goto	u4921
  6367  002E5C  EF32  F017         	goto	u4920
  6368  002E60                     u4921:
  6369  002E60  EF38  F017         	goto	l5108
  6370  002E64                     u4920:
  6371  002E64                     
  6372                           ; BSR set to: 0
  6373  002E64  C0CA  F09C         	movff	_width,ctoa@w
  6374  002E68  C0CB  F09D         	movff	_width+1,ctoa@w+1
  6375  002E6C  EF3E  F017         	goto	l5110
  6376  002E70                     l5108:
  6377                           
  6378                           ; BSR set to: 0
  6379  002E70  0EFF               	movlw	255
  6380  002E72  25CA               	addwf	_width& (0+255),w,b
  6381  002E74  6F9C               	movwf	ctoa@w& (0+255),b
  6382  002E76  0EFF               	movlw	255
  6383  002E78  21CB               	addwfc	(_width+1)& (0+255),w,b
  6384  002E7A  6F9D               	movwf	(ctoa@w+1)& (0+255),b
  6385  002E7C                     l5110:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  6389  002E7C  C09B  F125         	movff	ctoa@c,_dbuf
  6390  002E80                     
  6391                           ; BSR set to: 0
  6392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  6393  002E80  0E00               	movlw	0
  6394  002E82  0101               	movlb	1	; () banked
  6395  002E84  6F26               	movwf	(_dbuf+1)& (0+255),b
  6396  002E86                     
  6397                           ; BSR set to: 1
  6398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  6399  002E86  C099  F08E         	movff	ctoa@fp,pad@fp
  6400  002E8A  C09A  F08F         	movff	ctoa@fp+1,pad@fp+1
  6401  002E8E  0E25               	movlw	low _dbuf
  6402  002E90  0100               	movlb	0	; () banked
  6403  002E92  6F90               	movwf	pad@buf& (0+255),b
  6404  002E94  0E01               	movlw	high _dbuf
  6405  002E96  6F91               	movwf	(pad@buf+1)& (0+255),b
  6406  002E98  C09C  F092         	movff	ctoa@w,pad@p
  6407  002E9C  C09D  F093         	movff	ctoa@w+1,pad@p+1
  6408  002EA0  EC2E  F014         	call	_pad	;wreg free
  6409  002EA4  C08E  F099         	movff	?_pad,?_ctoa
  6410  002EA8  C08F  F09A         	movff	?_pad+1,?_ctoa+1
  6411  002EAC  0012               	return		;funcret
  6412  002EAE                     __end_of_ctoa:
  6413                           	opt callstack 0
  6414                           
  6415 ;; *************** function _pad *****************
  6416 ;; Defined at:
  6417 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  fp              2   46[BANK0 ] PTR struct _IO_FILE
  6420 ;;		 -> NULL(0), 
  6421 ;;  buf             2   48[BANK0 ] PTR unsigned char 
  6422 ;;		 -> dbuf(32), 
  6423 ;;  p               2   50[BANK0 ] int 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  w               2   55[BANK0 ] int 
  6426 ;;  i               2   53[BANK0 ] int 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  2   46[BANK0 ] int 
  6429 ;; Registers used:
  6430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6436 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;Total ram usage:       11 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:   15
  6443 ;; This function calls:
  6444 ;;		_fputc
  6445 ;;		_fputs
  6446 ;;		_strlen
  6447 ;; This function is called by:
  6448 ;;		_ctoa
  6449 ;;		_utoa
  6450 ;;		_xtoa
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text18
  6455  00285C                     __ptext18:
  6456                           	opt callstack 0
  6457  00285C                     _pad:
  6458                           	opt callstack 11
  6459  00285C                     
  6460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6461  00285C  0100               	movlb	0	; () banked
  6462  00285E  A1CE               	btfss	_flags& (0+255),0,b
  6463  002860  EF34  F014         	goto	u4701
  6464  002864  EF36  F014         	goto	u4700
  6465  002868                     u4701:
  6466  002868  EF40  F014         	goto	l5008
  6467  00286C                     u4700:
  6468  00286C                     
  6469                           ; BSR set to: 0
  6470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6471  00286C  C090  F087         	movff	pad@buf,fputs@s
  6472  002870  C091  F088         	movff	pad@buf+1,fputs@s+1
  6473  002874  C08E  F089         	movff	pad@fp,fputs@fp
  6474  002878  C08F  F08A         	movff	pad@fp+1,fputs@fp+1
  6475  00287C  EC2D  F018         	call	_fputs	;wreg free
  6476  002880                     l5008:
  6477                           
  6478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6479  002880  0100               	movlb	0	; () banked
  6480  002882  BF93               	btfsc	(pad@p+1)& (0+255),7,b
  6481  002884  EF46  F014         	goto	u4711
  6482  002888  EF48  F014         	goto	u4710
  6483  00288C                     u4711:
  6484  00288C  EF4E  F014         	goto	l5012
  6485  002890                     u4710:
  6486  002890                     
  6487                           ; BSR set to: 0
  6488  002890  C092  F097         	movff	pad@p,pad@w
  6489  002894  C093  F098         	movff	pad@p+1,pad@w+1
  6490  002898  EF52  F014         	goto	l610
  6491  00289C                     l5012:
  6492                           
  6493                           ; BSR set to: 0
  6494  00289C  0E00               	movlw	0
  6495  00289E  6F98               	movwf	(pad@w+1)& (0+255),b
  6496  0028A0  0E00               	movlw	0
  6497  0028A2  6F97               	movwf	pad@w& (0+255),b
  6498  0028A4                     l610:
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6502  0028A4  0E00               	movlw	0
  6503  0028A6  6F96               	movwf	(pad@i+1)& (0+255),b
  6504  0028A8  0E00               	movlw	0
  6505  0028AA  6F95               	movwf	pad@i& (0+255),b
  6506                           
  6507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6508  0028AC  EF65  F014         	goto	l5018
  6509  0028B0                     l5014:
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6513  0028B0  0E00               	movlw	0
  6514  0028B2  6F7F               	movwf	(fputc@c+1)& (0+255),b
  6515  0028B4  0E20               	movlw	32
  6516  0028B6  6F7E               	movwf	fputc@c& (0+255),b
  6517  0028B8  C08E  F080         	movff	pad@fp,fputc@fp
  6518  0028BC  C08F  F081         	movff	pad@fp+1,fputc@fp+1
  6519  0028C0  ECBD  F015         	call	_fputc	;wreg free
  6520  0028C4                     
  6521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6522  0028C4  0100               	movlb	0	; () banked
  6523  0028C6  4B95               	infsnz	pad@i& (0+255),f,b
  6524  0028C8  2B96               	incf	(pad@i+1)& (0+255),f,b
  6525  0028CA                     l5018:
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6529  0028CA  5197               	movf	pad@w& (0+255),w,b
  6530  0028CC  5D95               	subwf	pad@i& (0+255),w,b
  6531  0028CE  5196               	movf	(pad@i+1)& (0+255),w,b
  6532  0028D0  0A80               	xorlw	128
  6533  0028D2  6F94               	movwf	??_pad& (0+255),b
  6534  0028D4  5198               	movf	(pad@w+1)& (0+255),w,b
  6535  0028D6  0A80               	xorlw	128
  6536  0028D8  5994               	subwfb	??_pad& (0+255),w,b
  6537  0028DA  A0D8               	btfss	status,0,c
  6538  0028DC  EF72  F014         	goto	u4721
  6539  0028E0  EF74  F014         	goto	u4720
  6540  0028E4                     u4721:
  6541  0028E4  EF58  F014         	goto	l5014
  6542  0028E8                     u4720:
  6543  0028E8                     
  6544                           ; BSR set to: 0
  6545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6546  0028E8  B1CE               	btfsc	_flags& (0+255),0,b
  6547  0028EA  EF79  F014         	goto	u4731
  6548  0028EE  EF7B  F014         	goto	u4730
  6549  0028F2                     u4731:
  6550  0028F2  EF85  F014         	goto	l5022
  6551  0028F6                     u4730:
  6552  0028F6                     
  6553                           ; BSR set to: 0
  6554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6555  0028F6  C090  F087         	movff	pad@buf,fputs@s
  6556  0028FA  C091  F088         	movff	pad@buf+1,fputs@s+1
  6557  0028FE  C08E  F089         	movff	pad@fp,fputs@fp
  6558  002902  C08F  F08A         	movff	pad@fp+1,fputs@fp+1
  6559  002906  EC2D  F018         	call	_fputs	;wreg free
  6560  00290A                     l5022:
  6561                           
  6562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6563  00290A  C090  F07C         	movff	pad@buf,strlen@s
  6564  00290E  C091  F07D         	movff	pad@buf+1,strlen@s+1
  6565  002912  EC4F  F019         	call	_strlen	;wreg free
  6566  002916  0100               	movlb	0	; () banked
  6567  002918  5197               	movf	pad@w& (0+255),w,b
  6568  00291A  257C               	addwf	?_strlen& (0+255),w,b
  6569  00291C  6F8E               	movwf	?_pad& (0+255),b
  6570  00291E  5198               	movf	(pad@w+1)& (0+255),w,b
  6571  002920  217D               	addwfc	(?_strlen+1)& (0+255),w,b
  6572  002922  6F8F               	movwf	(?_pad+1)& (0+255),b
  6573  002924                     
  6574                           ; BSR set to: 0
  6575  002924  0012               	return		;funcret
  6576  002926                     __end_of_pad:
  6577                           	opt callstack 0
  6578                           
  6579 ;; *************** function _strlen *****************
  6580 ;; Defined at:
  6581 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  6584 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), IRreceiveBuffer(20), 
  6585 ;;		 -> IRtransmitBuffer(20), 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  a               2   30[BANK0 ] PTR const unsigned char 
  6588 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), IRreceiveBuffer(20), 
  6589 ;;		 -> IRtransmitBuffer(20), 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2   28[BANK0 ] unsigned int 
  6592 ;; Registers used:
  6593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6599 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;Total ram usage:        4 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:   11
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_pad
  6610 ;;		_stoa
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text19
  6615  00329E                     __ptext19:
  6616                           	opt callstack 0
  6617  00329E                     _strlen:
  6618                           	opt callstack 14
  6619  00329E  C07C  F07E         	movff	strlen@s,strlen@a
  6620  0032A2  C07D  F07F         	movff	strlen@s+1,strlen@a+1
  6621  0032A6  EF58  F019         	goto	l4994
  6622  0032AA                     l4992:
  6623  0032AA  0100               	movlb	0	; () banked
  6624  0032AC  4B7C               	infsnz	strlen@s& (0+255),f,b
  6625  0032AE  2B7D               	incf	(strlen@s+1)& (0+255),f,b
  6626  0032B0                     l4994:
  6627  0032B0  C07C  FFD9         	movff	strlen@s,fsr2l
  6628  0032B4  C07D  FFDA         	movff	strlen@s+1,fsr2h
  6629  0032B8  50DF               	movf	indf2,w,c
  6630  0032BA  A4D8               	btfss	status,2,c
  6631  0032BC  EF62  F019         	goto	u4671
  6632  0032C0  EF64  F019         	goto	u4670
  6633  0032C4                     u4671:
  6634  0032C4  EF55  F019         	goto	l4992
  6635  0032C8                     u4670:
  6636  0032C8  0100               	movlb	0	; () banked
  6637  0032CA  517E               	movf	strlen@a& (0+255),w,b
  6638  0032CC  5D7C               	subwf	strlen@s& (0+255),w,b
  6639  0032CE  6F7C               	movwf	?_strlen& (0+255),b
  6640  0032D0  517F               	movf	(strlen@a+1)& (0+255),w,b
  6641  0032D2  597D               	subwfb	(strlen@s+1)& (0+255),w,b
  6642  0032D4  6F7D               	movwf	(?_strlen+1)& (0+255),b
  6643  0032D6                     
  6644                           ; BSR set to: 0
  6645  0032D6  0012               	return		;funcret
  6646  0032D8                     __end_of_strlen:
  6647                           	opt callstack 0
  6648                           
  6649 ;; *************** function _fputs *****************
  6650 ;; Defined at:
  6651 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  s               2   39[BANK0 ] PTR const unsigned char 
  6654 ;;		 -> dbuf(32), 
  6655 ;;  fp              2   41[BANK0 ] PTR struct _IO_FILE
  6656 ;;		 -> NULL(0), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  i               2   44[BANK0 ] int 
  6659 ;;  c               1   43[BANK0 ] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2   39[BANK0 ] int 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;Total ram usage:        7 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:   14
  6676 ;; This function calls:
  6677 ;;		_fputc
  6678 ;; This function is called by:
  6679 ;;		_pad
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text20
  6684  00305A                     __ptext20:
  6685                           	opt callstack 0
  6686  00305A                     _fputs:
  6687                           	opt callstack 11
  6688  00305A  0E00               	movlw	0
  6689  00305C  0100               	movlb	0	; () banked
  6690  00305E  6F8D               	movwf	(fputs@i+1)& (0+255),b
  6691  003060  0E00               	movlw	0
  6692  003062  6F8C               	movwf	fputs@i& (0+255),b
  6693  003064  EF40  F018         	goto	l4988
  6694  003068                     l4984:
  6695                           
  6696                           ; BSR set to: 0
  6697  003068  C08B  F07E         	movff	fputs@c,fputc@c
  6698  00306C  6B7F               	clrf	(fputc@c+1)& (0+255),b
  6699  00306E  C089  F080         	movff	fputs@fp,fputc@fp
  6700  003072  C08A  F081         	movff	fputs@fp+1,fputc@fp+1
  6701  003076  ECBD  F015         	call	_fputc	;wreg free
  6702  00307A  0100               	movlb	0	; () banked
  6703  00307C  4B8C               	infsnz	fputs@i& (0+255),f,b
  6704  00307E  2B8D               	incf	(fputs@i+1)& (0+255),f,b
  6705  003080                     l4988:
  6706                           
  6707                           ; BSR set to: 0
  6708  003080  518C               	movf	fputs@i& (0+255),w,b
  6709  003082  2587               	addwf	fputs@s& (0+255),w,b
  6710  003084  6ED9               	movwf	fsr2l,c
  6711  003086  518D               	movf	(fputs@i+1)& (0+255),w,b
  6712  003088  2188               	addwfc	(fputs@s+1)& (0+255),w,b
  6713  00308A  6EDA               	movwf	fsr2h,c
  6714  00308C  50DF               	movf	indf2,w,c
  6715  00308E  6F8B               	movwf	fputs@c& (0+255),b
  6716  003090  518B               	movf	fputs@c& (0+255),w,b
  6717  003092  A4D8               	btfss	status,2,c
  6718  003094  EF4E  F018         	goto	u4661
  6719  003098  EF50  F018         	goto	u4660
  6720  00309C                     u4661:
  6721  00309C  EF34  F018         	goto	l4984
  6722  0030A0                     u4660:
  6723  0030A0                     
  6724                           ; BSR set to: 0
  6725  0030A0  0012               	return		;funcret
  6726  0030A2                     __end_of_fputs:
  6727                           	opt callstack 0
  6728                           
  6729 ;; *************** function _fputc *****************
  6730 ;; Defined at:
  6731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  c               2   30[BANK0 ] int 
  6734 ;;  fp              2   32[BANK0 ] PTR struct _IO_FILE
  6735 ;;		 -> NULL(0), 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  2   30[BANK0 ] int 
  6740 ;; Registers used:
  6741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;Total ram usage:        9 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:   13
  6754 ;; This function calls:
  6755 ;;		_putch
  6756 ;; This function is called by:
  6757 ;;		_pad
  6758 ;;		_stoa
  6759 ;;		_vfpfcnvrt
  6760 ;;		_fputs
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text21
  6765  002B7A                     __ptext21:
  6766                           	opt callstack 0
  6767  002B7A                     _fputc:
  6768                           	opt callstack 11
  6769  002B7A  0100               	movlb	0	; () banked
  6770  002B7C  5180               	movf	fputc@fp& (0+255),w,b
  6771  002B7E  1181               	iorwf	(fputc@fp+1)& (0+255),w,b
  6772  002B80  B4D8               	btfsc	status,2,c
  6773  002B82  EFC5  F015         	goto	u4621
  6774  002B86  EFC7  F015         	goto	u4620
  6775  002B8A                     u4621:
  6776  002B8A  EFD0  F015         	goto	l4972
  6777  002B8E                     u4620:
  6778  002B8E                     
  6779                           ; BSR set to: 0
  6780  002B8E  5180               	movf	fputc@fp& (0+255),w,b
  6781  002B90  1181               	iorwf	(fputc@fp+1)& (0+255),w,b
  6782  002B92  A4D8               	btfss	status,2,c
  6783  002B94  EFCE  F015         	goto	u4631
  6784  002B98  EFD0  F015         	goto	u4630
  6785  002B9C                     u4631:
  6786  002B9C  EFD5  F015         	goto	l4974
  6787  002BA0                     u4630:
  6788  002BA0                     l4972:
  6789                           
  6790                           ; BSR set to: 0
  6791  002BA0  517E               	movf	fputc@c& (0+255),w,b
  6792  002BA2  EC3C  F01B         	call	_putch
  6793  002BA6  EF08  F016         	goto	l1482
  6794  002BAA                     l4974:
  6795                           
  6796                           ; BSR set to: 0
  6797  002BAA  EE20 F004          	lfsr	2,4
  6798  002BAE  5180               	movf	fputc@fp& (0+255),w,b
  6799  002BB0  26D9               	addwf	fsr2l,f,c
  6800  002BB2  5181               	movf	(fputc@fp+1)& (0+255),w,b
  6801  002BB4  22DA               	addwfc	fsr2h,f,c
  6802  002BB6  50DE               	movf	postinc2,w,c
  6803  002BB8  10DE               	iorwf	postinc2,w,c
  6804  002BBA  B4D8               	btfsc	status,2,c
  6805  002BBC  EFE2  F015         	goto	u4641
  6806  002BC0  EFE4  F015         	goto	u4640
  6807  002BC4                     u4641:
  6808  002BC4  EFFF  F015         	goto	l4978
  6809  002BC8                     u4640:
  6810  002BC8                     
  6811                           ; BSR set to: 0
  6812  002BC8  EE20 F004          	lfsr	2,4
  6813  002BCC  5180               	movf	fputc@fp& (0+255),w,b
  6814  002BCE  26D9               	addwf	fsr2l,f,c
  6815  002BD0  5181               	movf	(fputc@fp+1)& (0+255),w,b
  6816  002BD2  22DA               	addwfc	fsr2h,f,c
  6817  002BD4  EE10 F002          	lfsr	1,2
  6818  002BD8  5180               	movf	fputc@fp& (0+255),w,b
  6819  002BDA  26E1               	addwf	fsr1l,f,c
  6820  002BDC  5181               	movf	(fputc@fp+1)& (0+255),w,b
  6821  002BDE  22E2               	addwfc	fsr1h,f,c
  6822  002BE0  50DE               	movf	postinc2,w,c
  6823  002BE2  5CE6               	subwf	postinc1,w,c
  6824  002BE4  50E6               	movf	postinc1,w,c
  6825  002BE6  0A80               	xorlw	128
  6826  002BE8  6F86               	movwf	(??_fputc+4)& (0+255),b
  6827  002BEA  50DE               	movf	postinc2,w,c
  6828  002BEC  0A80               	xorlw	128
  6829  002BEE  5986               	subwfb	(??_fputc+4)& (0+255),w,b
  6830  002BF0  B0D8               	btfsc	status,0,c
  6831  002BF2  EFFD  F015         	goto	u4651
  6832  002BF6  EFFF  F015         	goto	u4650
  6833  002BFA                     u4651:
  6834  002BFA  EF08  F016         	goto	l1482
  6835  002BFE                     u4650:
  6836  002BFE                     l4978:
  6837                           
  6838                           ; BSR set to: 0
  6839  002BFE  EE20 F002          	lfsr	2,2
  6840  002C02  5180               	movf	fputc@fp& (0+255),w,b
  6841  002C04  26D9               	addwf	fsr2l,f,c
  6842  002C06  5181               	movf	(fputc@fp+1)& (0+255),w,b
  6843  002C08  22DA               	addwfc	fsr2h,f,c
  6844  002C0A  2ADE               	incf	postinc2,f,c
  6845  002C0C  0E00               	movlw	0
  6846  002C0E  22DD               	addwfc	postdec2,f,c
  6847  002C10                     l1482:
  6848  002C10  0012               	return		;funcret
  6849  002C12                     __end_of_fputc:
  6850                           	opt callstack 0
  6851                           
  6852 ;; *************** function _putch *****************
  6853 ;; Defined at:
  6854 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;  txData          1    wreg     unsigned char 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  txData          1   29[BANK0 ] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;Total ram usage:        1 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:   12
  6875 ;; This function calls:
  6876 ;;		_EUSART1_Write
  6877 ;; This function is called by:
  6878 ;;		_fputc
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text22
  6883  003678                     __ptext22:
  6884                           	opt callstack 0
  6885  003678                     _putch:
  6886                           	opt callstack 11
  6887                           
  6888                           ;incstack = 0
  6889                           ;putch@txData stored from wreg
  6890  003678  0100               	movlb	0	; () banked
  6891  00367A  6F7D               	movwf	putch@txData& (0+255),b
  6892  00367C                     
  6893                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  6894  00367C  0100               	movlb	0	; () banked
  6895  00367E  517D               	movf	putch@txData& (0+255),w,b
  6896  003680  ECF4  F01A         	call	_EUSART1_Write
  6897  003684  0012               	return		;funcret
  6898  003686                     __end_of_putch:
  6899                           	opt callstack 0
  6900                           
  6901 ;; *************** function _EUSART1_Write *****************
  6902 ;; Defined at:
  6903 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  txData          1    wreg     unsigned char 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  txData          1   28[BANK0 ] unsigned char 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;Total ram usage:        1 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:   11
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_putch
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text23
  6932  0035E8                     __ptext23:
  6933                           	opt callstack 0
  6934  0035E8                     _EUSART1_Write:
  6935                           	opt callstack 11
  6936                           
  6937                           ;incstack = 0
  6938                           ;EUSART1_Write@txData stored from wreg
  6939  0035E8  0100               	movlb	0	; () banked
  6940  0035EA  6F7C               	movwf	EUSART1_Write@txData& (0+255),b
  6941  0035EC                     l310:
  6942                           
  6943                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  6944  0035EC  A89E               	btfss	158,4,c	;volatile
  6945  0035EE  EFFB  F01A         	goto	u4611
  6946  0035F2  EFFD  F01A         	goto	u4610
  6947  0035F6                     u4611:
  6948  0035F6  EFF6  F01A         	goto	l310
  6949  0035FA                     u4610:
  6950  0035FA                     
  6951                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  6952  0035FA  C07C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6953  0035FE  0012               	return		;funcret
  6954  003600                     __end_of_EUSART1_Write:
  6955                           	opt callstack 0
  6956                           
  6957 ;; *************** function _atoi *****************
  6958 ;; Defined at:
  6959 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  s               2   35[BANK0 ] PTR const unsigned char 
  6962 ;;		 -> STR_48(7), STR_47(17), STR_46(40), STR_45(14), 
  6963 ;;		 -> STR_44(13), STR_43(11), STR_42(16), STR_41(15), 
  6964 ;;		 -> STR_40(14), STR_39(16), STR_38(15), STR_37(12), 
  6965 ;;		 -> STR_36(3), STR_35(41), STR_34(21), STR_33(31), 
  6966 ;;		 -> STR_32(16), STR_31(15), STR_30(15), STR_29(15), 
  6967 ;;		 -> STR_28(14), STR_27(43), STR_26(2), STR_25(2), 
  6968 ;;		 -> STR_24(8), STR_23(52), STR_22(19), STR_21(54), 
  6969 ;;		 -> STR_20(32), STR_19(31), STR_18(19), STR_17(46), 
  6970 ;;		 -> STR_16(24), STR_15(21), STR_14(7), STR_13(15), 
  6971 ;;		 -> STR_12(52), STR_11(12), STR_10(13), STR_9(12), 
  6972 ;;		 -> STR_8(12), STR_7(12), STR_6(11), STR_5(52), 
  6973 ;;		 -> STR_4(5), STR_3(65), STR_2(42), STR_1(15), 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  n               2   48[BANK0 ] int 
  6976 ;;  neg             2   41[BANK0 ] int 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  2   35[BANK0 ] int 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;Total ram usage:       15 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:   12
  6993 ;; This function calls:
  6994 ;;		___wmul
  6995 ;;		_isdigit
  6996 ;;		_isspace
  6997 ;; This function is called by:
  6998 ;;		_vfpfcnvrt
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text24
  7003  001C1C                     __ptext24:
  7004                           	opt callstack 0
  7005  001C1C                     _atoi:
  7006                           	opt callstack 15
  7007  001C1C  0E00               	movlw	0
  7008  001C1E  0100               	movlb	0	; () banked
  7009  001C20  6F91               	movwf	(atoi@n+1)& (0+255),b
  7010  001C22  0E00               	movlw	0
  7011  001C24  6F90               	movwf	atoi@n& (0+255),b
  7012  001C26  0E00               	movlw	0
  7013  001C28  6F8A               	movwf	(atoi@neg+1)& (0+255),b
  7014  001C2A  0E00               	movlw	0
  7015  001C2C  6F89               	movwf	atoi@neg& (0+255),b
  7016  001C2E  EF1B  F00E         	goto	l5266
  7017  001C32                     l5264:
  7018                           
  7019                           ; BSR set to: 0
  7020  001C32  4B83               	infsnz	atoi@s& (0+255),f,b
  7021  001C34  2B84               	incf	(atoi@s+1)& (0+255),f,b
  7022  001C36                     l5266:
  7023                           
  7024                           ; BSR set to: 0
  7025  001C36  0E01               	movlw	1
  7026  001C38  6F8F               	movwf	_atoi$1977& (0+255),b
  7027  001C3A                     
  7028                           ; BSR set to: 0
  7029  001C3A  C083  FFF6         	movff	atoi@s,tblptrl
  7030  001C3E  C084  FFF7         	movff	atoi@s+1,tblptrh
  7031  001C42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7032  001C42  6AF8               	clrf	tblptru,c
  7033  001C44                     	endif
  7034  001C44                     	if	0	;tblptru may be non-zero
  7035  001C44                     	endif
  7036  001C44  0008               	tblrd		*
  7037  001C46  50F5               	movf	tablat,w,c
  7038  001C48  0A20               	xorlw	32
  7039  001C4A  B4D8               	btfsc	status,2,c
  7040  001C4C  EF2A  F00E         	goto	u5261
  7041  001C50  EF2C  F00E         	goto	u5260
  7042  001C54                     u5261:
  7043  001C54  EF4A  F00E         	goto	l5274
  7044  001C58                     u5260:
  7045  001C58                     
  7046                           ; BSR set to: 0
  7047  001C58  0EF7               	movlw	247
  7048  001C5A  6F85               	movwf	??_atoi& (0+255),b
  7049  001C5C  0EFF               	movlw	255
  7050  001C5E  6F86               	movwf	(??_atoi+1)& (0+255),b
  7051  001C60  C083  FFF6         	movff	atoi@s,tblptrl
  7052  001C64  C084  FFF7         	movff	atoi@s+1,tblptrh
  7053  001C68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7054  001C68  6AF8               	clrf	tblptru,c
  7055  001C6A                     	endif
  7056  001C6A                     	if	0	;tblptru may be non-zero
  7057  001C6A                     	endif
  7058  001C6A  0008               	tblrd		*
  7059  001C6C  50F5               	movf	tablat,w,c
  7060  001C6E  6F87               	movwf	(??_atoi+2)& (0+255),b
  7061  001C70  6B88               	clrf	(??_atoi+3)& (0+255),b
  7062  001C72  5185               	movf	??_atoi& (0+255),w,b
  7063  001C74  2787               	addwf	(??_atoi+2)& (0+255),f,b
  7064  001C76  5186               	movf	(??_atoi+1)& (0+255),w,b
  7065  001C78  2388               	addwfc	(??_atoi+3)& (0+255),f,b
  7066  001C7A  5188               	movf	(??_atoi+3)& (0+255),w,b
  7067  001C7C  E109               	bnz	u5270
  7068  001C7E  0E05               	movlw	5
  7069  001C80  5D87               	subwf	(??_atoi+2)& (0+255),w,b
  7070  001C82  A0D8               	btfss	status,0,c
  7071  001C84  EF46  F00E         	goto	u5271
  7072  001C88  EF48  F00E         	goto	u5270
  7073  001C8C                     u5271:
  7074  001C8C  EF4A  F00E         	goto	l5274
  7075  001C90                     u5270:
  7076  001C90                     
  7077                           ; BSR set to: 0
  7078  001C90  0E00               	movlw	0
  7079  001C92  6F8F               	movwf	_atoi$1977& (0+255),b
  7080  001C94                     l5274:
  7081                           
  7082                           ; BSR set to: 0
  7083  001C94  C08F  F08B         	movff	_atoi$1977,_atoi$1976
  7084  001C98  6B8C               	clrf	(_atoi$1976+1)& (0+255),b
  7085  001C9A                     
  7086                           ; BSR set to: 0
  7087  001C9A  518B               	movf	_atoi$1976& (0+255),w,b
  7088  001C9C  118C               	iorwf	(_atoi$1976+1)& (0+255),w,b
  7089  001C9E  A4D8               	btfss	status,2,c
  7090  001CA0  EF54  F00E         	goto	u5281
  7091  001CA4  EF56  F00E         	goto	u5280
  7092  001CA8                     u5281:
  7093  001CA8  EF19  F00E         	goto	l5264
  7094  001CAC                     u5280:
  7095  001CAC  EF60  F00E         	goto	l5284
  7096  001CB0                     l5280:
  7097                           
  7098                           ; BSR set to: 0
  7099  001CB0  0E00               	movlw	0
  7100  001CB2  6F8A               	movwf	(atoi@neg+1)& (0+255),b
  7101  001CB4  0E01               	movlw	1
  7102  001CB6  6F89               	movwf	atoi@neg& (0+255),b
  7103  001CB8                     l5282:
  7104                           
  7105                           ; BSR set to: 0
  7106  001CB8  4B83               	infsnz	atoi@s& (0+255),f,b
  7107  001CBA  2B84               	incf	(atoi@s+1)& (0+255),f,b
  7108  001CBC  EF98  F00E         	goto	l5290
  7109  001CC0                     l5284:
  7110                           
  7111                           ; BSR set to: 0
  7112  001CC0  C083  FFF6         	movff	atoi@s,tblptrl
  7113  001CC4  C084  FFF7         	movff	atoi@s+1,tblptrh
  7114  001CC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7115  001CC8  6AF8               	clrf	tblptru,c
  7116  001CCA                     	endif
  7117  001CCA                     	if	0	;tblptru may be non-zero
  7118  001CCA                     	endif
  7119  001CCA  0008               	tblrd		*
  7120  001CCC  50F5               	movf	tablat,w,c
  7121  001CCE  6F85               	movwf	??_atoi& (0+255),b
  7122  001CD0  6B86               	clrf	(??_atoi+1)& (0+255),b
  7123                           
  7124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7125                           ; Switch size 1, requested type "simple"
  7126                           ; Number of cases is 1, Range of values is 0 to 0
  7127                           ; switch strategies available:
  7128                           ; Name         Instructions Cycles
  7129                           ; simple_byte            4     3 (average)
  7130                           ;	Chosen strategy is simple_byte
  7131  001CD2  5186               	movf	(??_atoi+1)& (0+255),w,b
  7132  001CD4  0A00               	xorlw	0	; case 0
  7133  001CD6  B4D8               	btfsc	status,2,c
  7134  001CD8  EF70  F00E         	goto	l5846
  7135  001CDC  EF98  F00E         	goto	l5290
  7136  001CE0                     l5846:
  7137                           
  7138                           ; BSR set to: 0
  7139                           ; Switch size 1, requested type "simple"
  7140                           ; Number of cases is 2, Range of values is 43 to 45
  7141                           ; switch strategies available:
  7142                           ; Name         Instructions Cycles
  7143                           ; simple_byte            7     4 (average)
  7144                           ;	Chosen strategy is simple_byte
  7145  001CE0  5185               	movf	??_atoi& (0+255),w,b
  7146  001CE2  0A2B               	xorlw	43	; case 43
  7147  001CE4  B4D8               	btfsc	status,2,c
  7148  001CE6  EF5C  F00E         	goto	l5282
  7149  001CEA  0A06               	xorlw	6	; case 45
  7150  001CEC  B4D8               	btfsc	status,2,c
  7151  001CEE  EF58  F00E         	goto	l5280
  7152  001CF2  EF98  F00E         	goto	l5290
  7153  001CF6                     l5286:
  7154                           
  7155                           ; BSR set to: 0
  7156  001CF6  C090  F07C         	movff	atoi@n,___wmul@multiplier
  7157  001CFA  C091  F07D         	movff	atoi@n+1,___wmul@multiplier+1
  7158  001CFE  0E00               	movlw	0
  7159  001D00  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7160  001D02  0E0A               	movlw	10
  7161  001D04  6F7E               	movwf	___wmul@multiplicand& (0+255),b
  7162  001D06  EC7C  F01A         	call	___wmul	;wreg free
  7163  001D0A  C083  FFF6         	movff	atoi@s,tblptrl
  7164  001D0E  C084  FFF7         	movff	atoi@s+1,tblptrh
  7165  001D12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7166  001D12  6AF8               	clrf	tblptru,c
  7167  001D14                     	endif
  7168  001D14                     	if	0	;tblptru may be non-zero
  7169  001D14                     	endif
  7170  001D14  0008               	tblrd		*
  7171  001D16  50F5               	movf	tablat,w,c
  7172  001D18  0100               	movlb	0	; () banked
  7173  001D1A  5F7C               	subwf	?___wmul& (0+255),f,b
  7174  001D1C  0E00               	movlw	0
  7175  001D1E  5B7D               	subwfb	(?___wmul+1)& (0+255),f,b
  7176  001D20  0E30               	movlw	48
  7177  001D22  257C               	addwf	?___wmul& (0+255),w,b
  7178  001D24  6F90               	movwf	atoi@n& (0+255),b
  7179  001D26  0E00               	movlw	0
  7180  001D28  217D               	addwfc	(?___wmul+1)& (0+255),w,b
  7181  001D2A  6F91               	movwf	(atoi@n+1)& (0+255),b
  7182  001D2C  EF5C  F00E         	goto	l5282
  7183  001D30                     l5290:
  7184                           
  7185                           ; BSR set to: 0
  7186  001D30  0ED0               	movlw	208
  7187  001D32  6F85               	movwf	??_atoi& (0+255),b
  7188  001D34  0EFF               	movlw	255
  7189  001D36  6F86               	movwf	(??_atoi+1)& (0+255),b
  7190  001D38  C083  FFF6         	movff	atoi@s,tblptrl
  7191  001D3C  C084  FFF7         	movff	atoi@s+1,tblptrh
  7192  001D40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7193  001D40  6AF8               	clrf	tblptru,c
  7194  001D42                     	endif
  7195  001D42                     	if	0	;tblptru may be non-zero
  7196  001D42                     	endif
  7197  001D42  0008               	tblrd		*
  7198  001D44  50F5               	movf	tablat,w,c
  7199  001D46  6F87               	movwf	(??_atoi+2)& (0+255),b
  7200  001D48  6B88               	clrf	(??_atoi+3)& (0+255),b
  7201  001D4A  5185               	movf	??_atoi& (0+255),w,b
  7202  001D4C  2787               	addwf	(??_atoi+2)& (0+255),f,b
  7203  001D4E  5186               	movf	(??_atoi+1)& (0+255),w,b
  7204  001D50  2388               	addwfc	(??_atoi+3)& (0+255),f,b
  7205  001D52  5188               	movf	(??_atoi+3)& (0+255),w,b
  7206  001D54  E10A               	bnz	u5290
  7207  001D56  0E0A               	movlw	10
  7208  001D58  5D87               	subwf	(??_atoi+2)& (0+255),w,b
  7209  001D5A  A0D8               	btfss	status,0,c
  7210  001D5C  EFB2  F00E         	goto	u5291
  7211  001D60  EFB5  F00E         	goto	u5290
  7212  001D64                     u5291:
  7213  001D64  0E01               	movlw	1
  7214  001D66  EFB6  F00E         	goto	u5300
  7215  001D6A                     u5290:
  7216  001D6A  0E00               	movlw	0
  7217  001D6C                     u5300:
  7218  001D6C  6F8D               	movwf	_atoi$1978& (0+255),b
  7219  001D6E  6B8E               	clrf	(_atoi$1978+1)& (0+255),b
  7220  001D70                     
  7221                           ; BSR set to: 0
  7222  001D70  518D               	movf	_atoi$1978& (0+255),w,b
  7223  001D72  118E               	iorwf	(_atoi$1978+1)& (0+255),w,b
  7224  001D74  A4D8               	btfss	status,2,c
  7225  001D76  EFBF  F00E         	goto	u5311
  7226  001D7A  EFC1  F00E         	goto	u5310
  7227  001D7E                     u5311:
  7228  001D7E  EF7B  F00E         	goto	l5286
  7229  001D82                     u5310:
  7230  001D82                     
  7231                           ; BSR set to: 0
  7232  001D82  5189               	movf	atoi@neg& (0+255),w,b
  7233  001D84  118A               	iorwf	(atoi@neg+1)& (0+255),w,b
  7234  001D86  A4D8               	btfss	status,2,c
  7235  001D88  EFC8  F00E         	goto	u5321
  7236  001D8C  EFCA  F00E         	goto	u5320
  7237  001D90                     u5321:
  7238  001D90  EFD8  F00E         	goto	l1431
  7239  001D94                     u5320:
  7240  001D94                     
  7241                           ; BSR set to: 0
  7242  001D94  C090  F085         	movff	atoi@n,??_atoi
  7243  001D98  C091  F086         	movff	atoi@n+1,??_atoi+1
  7244  001D9C  1F85               	comf	??_atoi& (0+255),f,b
  7245  001D9E  1F86               	comf	(??_atoi+1)& (0+255),f,b
  7246  001DA0  4B85               	infsnz	??_atoi& (0+255),f,b
  7247  001DA2  2B86               	incf	(??_atoi+1)& (0+255),f,b
  7248  001DA4  C085  F083         	movff	??_atoi,?_atoi
  7249  001DA8  C086  F084         	movff	??_atoi+1,?_atoi+1
  7250  001DAC  EFDC  F00E         	goto	l1434
  7251  001DB0                     l1431:
  7252                           
  7253                           ; BSR set to: 0
  7254  001DB0  C090  F083         	movff	atoi@n,?_atoi
  7255  001DB4  C091  F084         	movff	atoi@n+1,?_atoi+1
  7256  001DB8                     l1434:
  7257                           
  7258                           ; BSR set to: 0
  7259  001DB8  0012               	return		;funcret
  7260  001DBA                     __end_of_atoi:
  7261                           	opt callstack 0
  7262                           
  7263 ;; *************** function _isspace *****************
  7264 ;; Defined at:
  7265 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  c               2   28[BANK0 ] int 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  2   28[BANK0 ] int 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;Total ram usage:        7 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:   11
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_atoi
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text25
  7294  002F68                     __ptext25:
  7295                           	opt callstack 0
  7296  002F68                     _isspace:
  7297                           	opt callstack 15
  7298  002F68  0E01               	movlw	1
  7299  002F6A  0100               	movlb	0	; () banked
  7300  002F6C  6F82               	movwf	_isspace$2003& (0+255),b
  7301  002F6E                     
  7302                           ; BSR set to: 0
  7303  002F6E  0E20               	movlw	32
  7304  002F70  197C               	xorwf	isspace@c& (0+255),w,b
  7305  002F72  117D               	iorwf	(isspace@c+1)& (0+255),w,b
  7306  002F74  B4D8               	btfsc	status,2,c
  7307  002F76  EFBF  F017         	goto	u4901
  7308  002F7A  EFC1  F017         	goto	u4900
  7309  002F7E                     u4901:
  7310  002F7E  EFDA  F017         	goto	l5100
  7311  002F82                     u4900:
  7312  002F82                     
  7313                           ; BSR set to: 0
  7314  002F82  0EF7               	movlw	247
  7315  002F84  6F7E               	movwf	??_isspace& (0+255),b
  7316  002F86  0EFF               	movlw	255
  7317  002F88  6F7F               	movwf	(??_isspace+1)& (0+255),b
  7318  002F8A  C07C  F080         	movff	isspace@c,??_isspace+2
  7319  002F8E  C07D  F081         	movff	isspace@c+1,??_isspace+3
  7320  002F92  517E               	movf	??_isspace& (0+255),w,b
  7321  002F94  2780               	addwf	(??_isspace+2)& (0+255),f,b
  7322  002F96  517F               	movf	(??_isspace+1)& (0+255),w,b
  7323  002F98  2381               	addwfc	(??_isspace+3)& (0+255),f,b
  7324  002F9A  5181               	movf	(??_isspace+3)& (0+255),w,b
  7325  002F9C  E109               	bnz	u4910
  7326  002F9E  0E05               	movlw	5
  7327  002FA0  5D80               	subwf	(??_isspace+2)& (0+255),w,b
  7328  002FA2  A0D8               	btfss	status,0,c
  7329  002FA4  EFD6  F017         	goto	u4911
  7330  002FA8  EFD8  F017         	goto	u4910
  7331  002FAC                     u4911:
  7332  002FAC  EFDA  F017         	goto	l5100
  7333  002FB0                     u4910:
  7334  002FB0                     
  7335                           ; BSR set to: 0
  7336  002FB0  0E00               	movlw	0
  7337  002FB2  6F82               	movwf	_isspace$2003& (0+255),b
  7338  002FB4                     l5100:
  7339                           
  7340                           ; BSR set to: 0
  7341  002FB4  C082  F07C         	movff	_isspace$2003,?_isspace
  7342  002FB8  6B7D               	clrf	(?_isspace+1)& (0+255),b
  7343  002FBA                     
  7344                           ; BSR set to: 0
  7345  002FBA  0012               	return		;funcret
  7346  002FBC                     __end_of_isspace:
  7347                           	opt callstack 0
  7348                           
  7349 ;; *************** function _isdigit *****************
  7350 ;; Defined at:
  7351 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  c               2   28[BANK0 ] int 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;		None
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  2   28[BANK0 ] int 
  7358 ;; Registers used:
  7359 ;;		wreg, status,2, status,0
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;Total ram usage:        6 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; Hardware stack levels required when called:   11
  7372 ;; This function calls:
  7373 ;;		Nothing
  7374 ;; This function is called by:
  7375 ;;		_vfpfcnvrt
  7376 ;;		_atoi
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text26
  7381  0032D8                     __ptext26:
  7382                           	opt callstack 0
  7383  0032D8                     _isdigit:
  7384                           	opt callstack 16
  7385  0032D8  0ED0               	movlw	208
  7386  0032DA  0100               	movlb	0	; () banked
  7387  0032DC  6F7E               	movwf	??_isdigit& (0+255),b
  7388  0032DE  0EFF               	movlw	255
  7389  0032E0  6F7F               	movwf	(??_isdigit+1)& (0+255),b
  7390  0032E2  C07C  F080         	movff	isdigit@c,??_isdigit+2
  7391  0032E6  C07D  F081         	movff	isdigit@c+1,??_isdigit+3
  7392  0032EA  517E               	movf	??_isdigit& (0+255),w,b
  7393  0032EC  2780               	addwf	(??_isdigit+2)& (0+255),f,b
  7394  0032EE  517F               	movf	(??_isdigit+1)& (0+255),w,b
  7395  0032F0  2381               	addwfc	(??_isdigit+3)& (0+255),f,b
  7396  0032F2  5181               	movf	(??_isdigit+3)& (0+255),w,b
  7397  0032F4  E10A               	bnz	u4810
  7398  0032F6  0E0A               	movlw	10
  7399  0032F8  5D80               	subwf	(??_isdigit+2)& (0+255),w,b
  7400  0032FA  A0D8               	btfss	status,0,c
  7401  0032FC  EF82  F019         	goto	u4811
  7402  003300  EF85  F019         	goto	u4810
  7403  003304                     u4811:
  7404  003304  0E01               	movlw	1
  7405  003306  EF86  F019         	goto	u4820
  7406  00330A                     u4810:
  7407  00330A  0E00               	movlw	0
  7408  00330C                     u4820:
  7409  00330C  6F7C               	movwf	?_isdigit& (0+255),b
  7410  00330E  6B7D               	clrf	(?_isdigit+1)& (0+255),b
  7411  003310                     
  7412                           ; BSR set to: 0
  7413  003310  0012               	return		;funcret
  7414  003312                     __end_of_isdigit:
  7415                           	opt callstack 0
  7416                           
  7417 ;; *************** function ___wmul *****************
  7418 ;; Defined at:
  7419 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  multiplier      2   28[BANK0 ] unsigned int 
  7422 ;;  multiplicand    2   30[BANK0 ] unsigned int 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  product         2   32[BANK0 ] unsigned int 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  2   28[BANK0 ] unsigned int 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2, status,0, prodl, prodh
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;Total ram usage:        6 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:   11
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_atoi
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text27
  7449  0034F8                     __ptext27:
  7450                           	opt callstack 0
  7451  0034F8                     ___wmul:
  7452                           	opt callstack 15
  7453  0034F8  0100               	movlb	0	; () banked
  7454  0034FA  517C               	movf	___wmul@multiplier& (0+255),w,b
  7455  0034FC  037E               	mulwf	___wmul@multiplicand& (0+255),b
  7456  0034FE  CFF3 F080          	movff	prodl,___wmul@product
  7457  003502  CFF4 F081          	movff	prodh,___wmul@product+1
  7458  003506  517C               	movf	___wmul@multiplier& (0+255),w,b
  7459  003508  037F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7460  00350A  50F3               	movf	243,w,c
  7461  00350C  2781               	addwf	(___wmul@product+1)& (0+255),f,b
  7462  00350E  517D               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7463  003510  037E               	mulwf	___wmul@multiplicand& (0+255),b
  7464  003512  50F3               	movf	243,w,c
  7465  003514  2781               	addwf	(___wmul@product+1)& (0+255),f,b
  7466  003516                     
  7467                           ; BSR set to: 0
  7468  003516  C080  F07C         	movff	___wmul@product,?___wmul
  7469  00351A  C081  F07D         	movff	___wmul@product+1,?___wmul+1
  7470  00351E                     
  7471                           ; BSR set to: 0
  7472  00351E  0012               	return		;funcret
  7473  003520                     __end_of___wmul:
  7474                           	opt callstack 0
  7475                           
  7476 ;; *************** function _memset *****************
  7477 ;; Defined at:
  7478 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  dest            2   28[BANK0 ] PTR void 
  7481 ;;		 -> IRreceiveBuffer(20), 
  7482 ;;  c               2   30[BANK0 ] int 
  7483 ;;  n               2   32[BANK0 ] unsigned int 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  s               2   38[BANK0 ] PTR unsigned char 
  7486 ;;		 -> IRreceiveBuffer(20), 
  7487 ;;  k               2   36[BANK0 ] unsigned int 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  2   28[BANK0 ] PTR void 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7497 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;Total ram usage:       12 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:   11
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_main
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text28
  7512  002266                     __ptext28:
  7513                           	opt callstack 0
  7514  002266                     _memset:
  7515                           	opt callstack 19
  7516  002266  C07C  F086         	movff	memset@dest,memset@s
  7517  00226A  C07D  F087         	movff	memset@dest+1,memset@s+1
  7518  00226E  0100               	movlb	0	; () banked
  7519  002270  5180               	movf	memset@n& (0+255),w,b
  7520  002272  1181               	iorwf	(memset@n+1)& (0+255),w,b
  7521  002274  A4D8               	btfss	status,2,c
  7522  002276  EF3F  F011         	goto	u4311
  7523  00227A  EF41  F011         	goto	u4310
  7524  00227E                     u4311:
  7525  00227E  EF43  F011         	goto	l4464
  7526  002282                     u4310:
  7527  002282  EFEE  F011         	goto	l1464
  7528  002286                     l4464:
  7529                           
  7530                           ; BSR set to: 0
  7531  002286  C086  FFD9         	movff	memset@s,fsr2l
  7532  00228A  C087  FFDA         	movff	memset@s+1,fsr2h
  7533  00228E  C07E  FFDF         	movff	memset@c,indf2
  7534  002292                     
  7535                           ; BSR set to: 0
  7536  002292  5180               	movf	memset@n& (0+255),w,b
  7537  002294  2586               	addwf	memset@s& (0+255),w,b
  7538  002296  6F82               	movwf	??_memset& (0+255),b
  7539  002298  5181               	movf	(memset@n+1)& (0+255),w,b
  7540  00229A  2187               	addwfc	(memset@s+1)& (0+255),w,b
  7541  00229C  6F83               	movwf	(??_memset+1)& (0+255),b
  7542  00229E  0EFF               	movlw	255
  7543  0022A0  2582               	addwf	??_memset& (0+255),w,b
  7544  0022A2  6ED9               	movwf	fsr2l,c
  7545  0022A4  0EFF               	movlw	255
  7546  0022A6  2183               	addwfc	(??_memset+1)& (0+255),w,b
  7547  0022A8  6EDA               	movwf	fsr2h,c
  7548  0022AA  C07E  FFDF         	movff	memset@c,indf2
  7549  0022AE  5181               	movf	(memset@n+1)& (0+255),w,b
  7550  0022B0  E107               	bnz	u4321
  7551  0022B2  0E03               	movlw	3
  7552  0022B4  5D80               	subwf	memset@n& (0+255),w,b
  7553  0022B6  B0D8               	btfsc	status,0,c
  7554  0022B8  EF60  F011         	goto	u4321
  7555  0022BC  EF62  F011         	goto	u4320
  7556  0022C0                     u4321:
  7557  0022C0  EF64  F011         	goto	l4470
  7558  0022C4                     u4320:
  7559  0022C4  EFEE  F011         	goto	l1464
  7560  0022C8                     l4470:
  7561                           
  7562                           ; BSR set to: 0
  7563  0022C8  EE20 F001          	lfsr	2,1
  7564  0022CC  5186               	movf	memset@s& (0+255),w,b
  7565  0022CE  26D9               	addwf	fsr2l,f,c
  7566  0022D0  5187               	movf	(memset@s+1)& (0+255),w,b
  7567  0022D2  22DA               	addwfc	fsr2h,f,c
  7568  0022D4  C07E  FFDF         	movff	memset@c,indf2
  7569  0022D8  EE20 F002          	lfsr	2,2
  7570  0022DC  5186               	movf	memset@s& (0+255),w,b
  7571  0022DE  26D9               	addwf	fsr2l,f,c
  7572  0022E0  5187               	movf	(memset@s+1)& (0+255),w,b
  7573  0022E2  22DA               	addwfc	fsr2h,f,c
  7574  0022E4  C07E  FFDF         	movff	memset@c,indf2
  7575  0022E8  5180               	movf	memset@n& (0+255),w,b
  7576  0022EA  2586               	addwf	memset@s& (0+255),w,b
  7577  0022EC  6F82               	movwf	??_memset& (0+255),b
  7578  0022EE  5181               	movf	(memset@n+1)& (0+255),w,b
  7579  0022F0  2187               	addwfc	(memset@s+1)& (0+255),w,b
  7580  0022F2  6F83               	movwf	(??_memset+1)& (0+255),b
  7581  0022F4  0EFE               	movlw	254
  7582  0022F6  2582               	addwf	??_memset& (0+255),w,b
  7583  0022F8  6ED9               	movwf	fsr2l,c
  7584  0022FA  0EFF               	movlw	255
  7585  0022FC  2183               	addwfc	(??_memset+1)& (0+255),w,b
  7586  0022FE  6EDA               	movwf	fsr2h,c
  7587  002300  C07E  FFDF         	movff	memset@c,indf2
  7588  002304  5180               	movf	memset@n& (0+255),w,b
  7589  002306  2586               	addwf	memset@s& (0+255),w,b
  7590  002308  6F82               	movwf	??_memset& (0+255),b
  7591  00230A  5181               	movf	(memset@n+1)& (0+255),w,b
  7592  00230C  2187               	addwfc	(memset@s+1)& (0+255),w,b
  7593  00230E  6F83               	movwf	(??_memset+1)& (0+255),b
  7594  002310  0EFD               	movlw	253
  7595  002312  2582               	addwf	??_memset& (0+255),w,b
  7596  002314  6ED9               	movwf	fsr2l,c
  7597  002316  0EFF               	movlw	255
  7598  002318  2183               	addwfc	(??_memset+1)& (0+255),w,b
  7599  00231A  6EDA               	movwf	fsr2h,c
  7600  00231C  C07E  FFDF         	movff	memset@c,indf2
  7601  002320                     
  7602                           ; BSR set to: 0
  7603  002320  5181               	movf	(memset@n+1)& (0+255),w,b
  7604  002322  E107               	bnz	u4331
  7605  002324  0E07               	movlw	7
  7606  002326  5D80               	subwf	memset@n& (0+255),w,b
  7607  002328  B0D8               	btfsc	status,0,c
  7608  00232A  EF99  F011         	goto	u4331
  7609  00232E  EF9B  F011         	goto	u4330
  7610  002332                     u4331:
  7611  002332  EF9D  F011         	goto	l4476
  7612  002336                     u4330:
  7613  002336  EFEE  F011         	goto	l1464
  7614  00233A                     l4476:
  7615                           
  7616                           ; BSR set to: 0
  7617  00233A  EE20 F003          	lfsr	2,3
  7618  00233E  5186               	movf	memset@s& (0+255),w,b
  7619  002340  26D9               	addwf	fsr2l,f,c
  7620  002342  5187               	movf	(memset@s+1)& (0+255),w,b
  7621  002344  22DA               	addwfc	fsr2h,f,c
  7622  002346  C07E  FFDF         	movff	memset@c,indf2
  7623  00234A  5180               	movf	memset@n& (0+255),w,b
  7624  00234C  2586               	addwf	memset@s& (0+255),w,b
  7625  00234E  6F82               	movwf	??_memset& (0+255),b
  7626  002350  5181               	movf	(memset@n+1)& (0+255),w,b
  7627  002352  2187               	addwfc	(memset@s+1)& (0+255),w,b
  7628  002354  6F83               	movwf	(??_memset+1)& (0+255),b
  7629  002356  0EFC               	movlw	252
  7630  002358  2582               	addwf	??_memset& (0+255),w,b
  7631  00235A  6ED9               	movwf	fsr2l,c
  7632  00235C  0EFF               	movlw	255
  7633  00235E  2183               	addwfc	(??_memset+1)& (0+255),w,b
  7634  002360  6EDA               	movwf	fsr2h,c
  7635  002362  C07E  FFDF         	movff	memset@c,indf2
  7636  002366                     
  7637                           ; BSR set to: 0
  7638  002366  5181               	movf	(memset@n+1)& (0+255),w,b
  7639  002368  E107               	bnz	u4341
  7640  00236A  0E09               	movlw	9
  7641  00236C  5D80               	subwf	memset@n& (0+255),w,b
  7642  00236E  B0D8               	btfsc	status,0,c
  7643  002370  EFBC  F011         	goto	u4341
  7644  002374  EFBE  F011         	goto	u4340
  7645  002378                     u4341:
  7646  002378  EFC0  F011         	goto	l4482
  7647  00237C                     u4340:
  7648  00237C  EFEE  F011         	goto	l1464
  7649  002380                     l4482:
  7650                           
  7651                           ; BSR set to: 0
  7652  002380  C086  F082         	movff	memset@s,??_memset
  7653  002384  C087  F083         	movff	memset@s+1,??_memset+1
  7654  002388  1F82               	comf	??_memset& (0+255),f,b
  7655  00238A  1F83               	comf	(??_memset+1)& (0+255),f,b
  7656  00238C  4B82               	infsnz	??_memset& (0+255),f,b
  7657  00238E  2B83               	incf	(??_memset+1)& (0+255),f,b
  7658  002390  0E03               	movlw	3
  7659  002392  1582               	andwf	??_memset& (0+255),w,b
  7660  002394  6F84               	movwf	memset@k& (0+255),b
  7661  002396  6B85               	clrf	(memset@k+1)& (0+255),b
  7662  002398  5184               	movf	memset@k& (0+255),w,b
  7663  00239A  2786               	addwf	memset@s& (0+255),f,b
  7664  00239C  5185               	movf	(memset@k+1)& (0+255),w,b
  7665  00239E  2387               	addwfc	(memset@s+1)& (0+255),f,b
  7666  0023A0  5184               	movf	memset@k& (0+255),w,b
  7667  0023A2  5F80               	subwf	memset@n& (0+255),f,b
  7668  0023A4  5185               	movf	(memset@k+1)& (0+255),w,b
  7669  0023A6  5B81               	subwfb	(memset@n+1)& (0+255),f,b
  7670  0023A8  0EFC               	movlw	252
  7671  0023AA  1780               	andwf	memset@n& (0+255),f,b
  7672  0023AC  0EFF               	movlw	255
  7673  0023AE  1781               	andwf	(memset@n+1)& (0+255),f,b
  7674  0023B0  EFE5  F011         	goto	l4490
  7675  0023B4                     l4484:
  7676                           
  7677                           ; BSR set to: 0
  7678  0023B4  C086  FFD9         	movff	memset@s,fsr2l
  7679  0023B8  C087  FFDA         	movff	memset@s+1,fsr2h
  7680  0023BC  C07E  FFDF         	movff	memset@c,indf2
  7681  0023C0                     
  7682                           ; BSR set to: 0
  7683  0023C0  0780               	decf	memset@n& (0+255),f,b
  7684  0023C2  A0D8               	btfss	status,0,c
  7685  0023C4  0781               	decf	(memset@n+1)& (0+255),f,b
  7686  0023C6                     
  7687                           ; BSR set to: 0
  7688  0023C6  4B86               	infsnz	memset@s& (0+255),f,b
  7689  0023C8  2B87               	incf	(memset@s+1)& (0+255),f,b
  7690  0023CA                     l4490:
  7691                           
  7692                           ; BSR set to: 0
  7693  0023CA  5180               	movf	memset@n& (0+255),w,b
  7694  0023CC  1181               	iorwf	(memset@n+1)& (0+255),w,b
  7695  0023CE  A4D8               	btfss	status,2,c
  7696  0023D0  EFEC  F011         	goto	u4351
  7697  0023D4  EFEE  F011         	goto	u4350
  7698  0023D8                     u4351:
  7699  0023D8  EFDA  F011         	goto	l4484
  7700  0023DC                     u4350:
  7701  0023DC                     l1464:
  7702                           
  7703                           ; BSR set to: 0
  7704  0023DC  0012               	return		;funcret
  7705  0023DE                     __end_of_memset:
  7706                           	opt callstack 0
  7707                           
  7708 ;; *************** function _SYSTEM_Initialize *****************
  7709 ;; Defined at:
  7710 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;		None
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      void 
  7717 ;; Registers used:
  7718 ;;		wreg, status,2, status,0, cstack
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;Total ram usage:        0 bytes
  7729 ;; Hardware stack levels used:    1
  7730 ;; Hardware stack levels required when called:   13
  7731 ;; This function calls:
  7732 ;;		_EPWM2_Initialize
  7733 ;;		_EUSART1_Initialize
  7734 ;;		_EUSART2_Initialize
  7735 ;;		_INTERRUPT_Initialize
  7736 ;;		_OSCILLATOR_Initialize
  7737 ;;		_PIN_MANAGER_Initialize
  7738 ;;		_TMR1_Initialize
  7739 ;;		_TMR2_Initialize
  7740 ;; This function is called by:
  7741 ;;		_main
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text29
  7746  00356E                     __ptext29:
  7747                           	opt callstack 0
  7748  00356E                     _SYSTEM_Initialize:
  7749                           	opt callstack 17
  7750  00356E                     
  7751                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7752  00356E  EC76  F01B         	call	_INTERRUPT_Initialize	;wreg free
  7753  003572                     
  7754                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7755  003572  EC27  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  7756  003576                     
  7757                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7758  003576  ECE6  F01A         	call	_OSCILLATOR_Initialize	;wreg free
  7759  00357A                     
  7760                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  7761  00357A  ECC8  F01A         	call	_EPWM2_Initialize	;wreg free
  7762  00357E                     
  7763                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  7764  00357E  EC34  F01B         	call	_TMR2_Initialize	;wreg free
  7765  003582                     
  7766                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  7767  003582  ECD8  F01A         	call	_TMR1_Initialize	;wreg free
  7768  003586                     
  7769                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  7770  003586  EC51  F018         	call	_EUSART1_Initialize	;wreg free
  7771  00358A                     
  7772                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  7773  00358A  EC54  F016         	call	_EUSART2_Initialize	;wreg free
  7774  00358E  0012               	return		;funcret
  7775  003590                     __end_of_SYSTEM_Initialize:
  7776                           	opt callstack 0
  7777                           
  7778 ;; *************** function _TMR2_Initialize *****************
  7779 ;; Defined at:
  7780 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, status,2
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;Total ram usage:        0 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:   11
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_SYSTEM_Initialize
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text30
  7809  003668                     __ptext30:
  7810                           	opt callstack 0
  7811  003668                     _TMR2_Initialize:
  7812                           	opt callstack 18
  7813  003668                     
  7814                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x67;
  7815  003668  0E67               	movlw	103
  7816  00366A  6EBB               	movwf	187,c	;volatile
  7817                           
  7818                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  7819  00366C  0E00               	movlw	0
  7820  00366E  6EBC               	movwf	188,c	;volatile
  7821  003670                     
  7822                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  7823  003670  929E               	bcf	158,1,c	;volatile
  7824                           
  7825                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  7826  003672  0E05               	movlw	5
  7827  003674  6EBA               	movwf	186,c	;volatile
  7828  003676  0012               	return		;funcret
  7829  003678                     __end_of_TMR2_Initialize:
  7830                           	opt callstack 0
  7831                           
  7832 ;; *************** function _TMR1_Initialize *****************
  7833 ;; Defined at:
  7834 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;		None
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;		None
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  1    wreg      void 
  7841 ;; Registers used:
  7842 ;;		wreg, status,2
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7852 ;;Total ram usage:        0 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:   11
  7855 ;; This function calls:
  7856 ;;		Nothing
  7857 ;; This function is called by:
  7858 ;;		_SYSTEM_Initialize
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text31
  7863  0035B0                     __ptext31:
  7864                           	opt callstack 0
  7865  0035B0                     _TMR1_Initialize:
  7866                           	opt callstack 18
  7867  0035B0                     
  7868                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  7869  0035B0  0E00               	movlw	0
  7870  0035B2  6ECC               	movwf	204,c	;volatile
  7871                           
  7872                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  7873  0035B4  0E00               	movlw	0
  7874  0035B6  6ECF               	movwf	207,c	;volatile
  7875                           
  7876                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  7877  0035B8  0E00               	movlw	0
  7878  0035BA  6ECE               	movwf	206,c	;volatile
  7879  0035BC                     
  7880                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  7881  0035BC  CFCE F0D6          	movff	4046,_timer1ReloadVal	;volatile
  7882  0035C0  CFCF F0D7          	movff	4047,_timer1ReloadVal+1	;volatile
  7883  0035C4                     
  7884                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  7885  0035C4  909E               	bcf	158,0,c	;volatile
  7886                           
  7887                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  7888  0035C6  0E01               	movlw	1
  7889  0035C8  6ECD               	movwf	205,c	;volatile
  7890  0035CA  0012               	return		;funcret
  7891  0035CC                     __end_of_TMR1_Initialize:
  7892                           	opt callstack 0
  7893                           
  7894 ;; *************** function _PIN_MANAGER_Initialize *****************
  7895 ;; Defined at:
  7896 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;		None
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  1    wreg      void 
  7903 ;; Registers used:
  7904 ;;		wreg, status,2
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7914 ;;Total ram usage:        0 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:   11
  7917 ;; This function calls:
  7918 ;;		Nothing
  7919 ;; This function is called by:
  7920 ;;		_SYSTEM_Initialize
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text32
  7925  00344E                     __ptext32:
  7926                           	opt callstack 0
  7927  00344E                     _PIN_MANAGER_Initialize:
  7928                           	opt callstack 18
  7929  00344E                     
  7930                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7931  00344E  0E00               	movlw	0
  7932  003450  6E89               	movwf	137,c	;volatile
  7933                           
  7934                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7935  003452  0E00               	movlw	0
  7936  003454  6E8A               	movwf	138,c	;volatile
  7937                           
  7938                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7939  003456  0E00               	movlw	0
  7940  003458  6E8B               	movwf	139,c	;volatile
  7941  00345A                     
  7942                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  7943  00345A  6892               	setf	146,c	;volatile
  7944                           
  7945                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xBF;
  7946  00345C  0EBF               	movlw	191
  7947  00345E  6E93               	movwf	147,c	;volatile
  7948                           
  7949                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBD;
  7950  003460  0EBD               	movlw	189
  7951  003462  6E94               	movwf	148,c	;volatile
  7952                           
  7953                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  7954  003464  0E3C               	movlw	60
  7955  003466  010F               	movlb	15	; () banked
  7956  003468  6F3A               	movwf	58,b	;volatile
  7957                           
  7958                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  7959  00346A  0E3F               	movlw	63
  7960  00346C  6F39               	movwf	57,b	;volatile
  7961                           
  7962                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  7963  00346E  0E2F               	movlw	47
  7964  003470  6F38               	movwf	56,b	;volatile
  7965                           
  7966                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7967  003472  0E00               	movlw	0
  7968  003474  6E61               	movwf	97,c	;volatile
  7969  003476                     
  7970                           ; BSR set to: 15
  7971                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  7972  003476  8EF1               	bsf	241,7,c	;volatile
  7973  003478                     
  7974                           ; BSR set to: 15
  7975  003478  0012               	return		;funcret
  7976  00347A                     __end_of_PIN_MANAGER_Initialize:
  7977                           	opt callstack 0
  7978                           
  7979 ;; *************** function _OSCILLATOR_Initialize *****************
  7980 ;; Defined at:
  7981 ;;		line 63 in file "mcc_generated_files/mcc.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:   11
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_SYSTEM_Initialize
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text33
  8010  0035CC                     __ptext33:
  8011                           	opt callstack 0
  8012  0035CC                     _OSCILLATOR_Initialize:
  8013                           	opt callstack 18
  8014  0035CC                     
  8015                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  8016  0035CC  0E70               	movlw	112
  8017  0035CE  6ED3               	movwf	211,c	;volatile
  8018                           
  8019                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  8020  0035D0  0E04               	movlw	4
  8021  0035D2  6ED2               	movwf	210,c	;volatile
  8022                           
  8023                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  8024  0035D4  0E40               	movlw	64
  8025  0035D6  6E9B               	movwf	155,c	;volatile
  8026  0035D8                     l393:
  8027                           
  8028                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  8029  0035D8  AED2               	btfss	4050,7,c	;volatile
  8030  0035DA  EFF1  F01A         	goto	u4091
  8031  0035DE  EFF3  F01A         	goto	u4090
  8032  0035E2                     u4091:
  8033  0035E2  EFEC  F01A         	goto	l393
  8034  0035E6                     u4090:
  8035  0035E6  0012               	return		;funcret
  8036  0035E8                     __end_of_OSCILLATOR_Initialize:
  8037                           	opt callstack 0
  8038                           
  8039 ;; *************** function _INTERRUPT_Initialize *****************
  8040 ;; Defined at:
  8041 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		None
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:   11
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_SYSTEM_Initialize
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           	psect	text34
  8070  0036EC                     __ptext34:
  8071                           	opt callstack 0
  8072  0036EC                     _INTERRUPT_Initialize:
  8073                           	opt callstack 18
  8074  0036EC                     
  8075                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8076  0036EC  9ED0               	bcf	208,7,c	;volatile
  8077  0036EE  0012               	return		;funcret
  8078  0036F0                     __end_of_INTERRUPT_Initialize:
  8079                           	opt callstack 0
  8080                           
  8081 ;; *************** function _EUSART2_Initialize *****************
  8082 ;; Defined at:
  8083 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;		None
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		wreg, status,2, status,0, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;Total ram usage:        0 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:   12
  8104 ;; This function calls:
  8105 ;;		_EUSART2_SetErrorHandler
  8106 ;;		_EUSART2_SetFramingErrorHandler
  8107 ;;		_EUSART2_SetOverrunErrorHandler
  8108 ;;		_EUSART2_SetRxInterruptHandler
  8109 ;;		_EUSART2_SetTxInterruptHandler
  8110 ;; This function is called by:
  8111 ;;		_SYSTEM_Initialize
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text35
  8116  002CA8                     __ptext35:
  8117                           	opt callstack 0
  8118  002CA8                     _EUSART2_Initialize:
  8119                           	opt callstack 17
  8120  002CA8                     
  8121                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  8122  002CA8  9AA3               	bcf	163,5,c	;volatile
  8123  002CAA                     
  8124                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  8125  002CAA  0EB6               	movlw	low _EUSART2_Receive_ISR
  8126  002CAC  0100               	movlb	0	; () banked
  8127  002CAE  6F7C               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
  8128  002CB0  0E2A               	movlw	high _EUSART2_Receive_ISR
  8129  002CB2  6F7D               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  8130  002CB4  EC48  F01B         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  8131  002CB8                     
  8132                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  8133  002CB8  98A3               	bcf	163,4,c	;volatile
  8134                           
  8135                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  8136  002CBA  0E6E               	movlw	low _EUSART2_Transmit_ISR
  8137  002CBC  0100               	movlb	0	; () banked
  8138  002CBE  6F7C               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
  8139  002CC0  0E31               	movlw	high _EUSART2_Transmit_ISR
  8140  002CC2  6F7D               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  8141  002CC4  EC43  F01B         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  8142  002CC8                     
  8143                           ;mcc_generated_files/eusart2.c: 98:     BAUDCON2 = 0x08;
  8144  002CC8  0E08               	movlw	8
  8145  002CCA  6E70               	movwf	112,c	;volatile
  8146  002CCC                     
  8147                           ;mcc_generated_files/eusart2.c: 101:     RCSTA2 = 0x90;
  8148  002CCC  0E90               	movlw	144
  8149  002CCE  6E71               	movwf	113,c	;volatile
  8150  002CD0                     
  8151                           ;mcc_generated_files/eusart2.c: 104:     TXSTA2 = 0x24;
  8152  002CD0  0E24               	movlw	36
  8153  002CD2  6E72               	movwf	114,c	;volatile
  8154  002CD4                     
  8155                           ;mcc_generated_files/eusart2.c: 107:     SPBRG2 = 0x14;
  8156  002CD4  0E14               	movlw	20
  8157  002CD6  6E75               	movwf	117,c	;volatile
  8158  002CD8                     
  8159                           ;mcc_generated_files/eusart2.c: 110:     SPBRGH2 = 0x34;
  8160  002CD8  0E34               	movlw	52
  8161  002CDA  6E76               	movwf	118,c	;volatile
  8162  002CDC                     
  8163                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  8164  002CDC  0EF0               	movlw	low _EUSART2_DefaultFramingErrorHandler
  8165  002CDE  0100               	movlb	0	; () banked
  8166  002CE0  6F7C               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler& (0+255),b
  8167  002CE2  0E36               	movlw	high _EUSART2_DefaultFramingErrorHandler
  8168  002CE4  6F7D               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  8169  002CE6  EC52  F01B         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  8170  002CEA                     
  8171                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  8172  002CEA  0EE0               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  8173  002CEC  0100               	movlb	0	; () banked
  8174  002CEE  6F7C               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler& (0+255),b
  8175  002CF0  0E36               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  8176  002CF2  6F7D               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  8177  002CF4  EC4D  F01B         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  8178  002CF8                     
  8179                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  8180  002CF8  0EE6               	movlw	low _EUSART2_DefaultErrorHandler
  8181  002CFA  0100               	movlb	0	; () banked
  8182  002CFC  6F7C               	movwf	EUSART2_SetErrorHandler@interruptHandler& (0+255),b
  8183  002CFE  0E36               	movlw	high _EUSART2_DefaultErrorHandler
  8184  002D00  6F7D               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)& (0+255),b
  8185  002D02  EC57  F01B         	call	_EUSART2_SetErrorHandler	;wreg free
  8186                           
  8187                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  8188  002D06  0E00               	movlw	0
  8189  002D08  0100               	movlb	0	; () banked
  8190  002D0A  6FDD               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  8191                           
  8192                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  8193  002D0C  0E00               	movlw	0
  8194  002D0E  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
  8195                           
  8196                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  8197  002D10  0E00               	movlw	0
  8198  002D12  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8199                           
  8200                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  8201  002D14  0E08               	movlw	8
  8202  002D16  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8203                           
  8204                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  8205  002D18  0E00               	movlw	0
  8206  002D1A  6FE0               	movwf	_eusart2RxHead& (0+255),b	;volatile
  8207                           
  8208                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  8209  002D1C  0E00               	movlw	0
  8210  002D1E  6FDF               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8211                           
  8212                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  8213  002D20  0E00               	movlw	0
  8214  002D22  6FDE               	movwf	_eusart2RxCount& (0+255),b	;volatile
  8215  002D24                     
  8216                           ; BSR set to: 0
  8217                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  8218  002D24  8AA3               	bsf	163,5,c	;volatile
  8219  002D26                     
  8220                           ; BSR set to: 0
  8221  002D26  0012               	return		;funcret
  8222  002D28                     __end_of_EUSART2_Initialize:
  8223                           	opt callstack 0
  8224                           
  8225 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  8226 ;; Defined at:
  8227 ;;		line 276 in file "mcc_generated_files/eusart2.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  interruptHan    2   28[BANK0 ] PTR FTN()void 
  8230 ;;		 -> EUSART2_Transmit_ISR(1), 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;Total ram usage:        2 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:   11
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_EUSART2_Initialize
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text36
  8257  003686                     __ptext36:
  8258                           	opt callstack 0
  8259  003686                     _EUSART2_SetTxInterruptHandler:
  8260                           	opt callstack 17
  8261  003686                     
  8262                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8263  003686  C07C  F0D4         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  8264  00368A  C07D  F0D5         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  8265  00368E  0012               	return		;funcret
  8266  003690                     __end_of_EUSART2_SetTxInterruptHandler:
  8267                           	opt callstack 0
  8268                           
  8269 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  8270 ;; Defined at:
  8271 ;;		line 280 in file "mcc_generated_files/eusart2.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  interruptHan    2   28[BANK0 ] PTR FTN()void 
  8274 ;;		 -> myEUSART2ISR(1), EUSART2_Receive_ISR(1), 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2, status,0
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;Total ram usage:        2 bytes
  8291 ;; Hardware stack levels used:    1
  8292 ;; Hardware stack levels required when called:   11
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_EUSART2_Initialize
  8297 ;;		_main
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text37
  8302  003690                     __ptext37:
  8303                           	opt callstack 0
  8304  003690                     _EUSART2_SetRxInterruptHandler:
  8305                           	opt callstack 17
  8306  003690                     
  8307                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8308  003690  C07C  F0D2         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  8309  003694  C07D  F0D3         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  8310  003698  0012               	return		;funcret
  8311  00369A                     __end_of_EUSART2_SetRxInterruptHandler:
  8312                           	opt callstack 0
  8313                           
  8314 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  8315 ;; Defined at:
  8316 ;;		line 268 in file "mcc_generated_files/eusart2.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  interruptHan    2   28[BANK0 ] PTR FTN()void 
  8319 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8331 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;Total ram usage:        2 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:   11
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_EUSART2_Initialize
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text38
  8346  00369A                     __ptext38:
  8347                           	opt callstack 0
  8348  00369A                     _EUSART2_SetOverrunErrorHandler:
  8349                           	opt callstack 17
  8350  00369A                     
  8351                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
  8352  00369A  C07C  F120         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  8353  00369E  C07D  F121         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  8354  0036A2  0012               	return		;funcret
  8355  0036A4                     __end_of_EUSART2_SetOverrunErrorHandler:
  8356                           	opt callstack 0
  8357                           
  8358 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  8359 ;; Defined at:
  8360 ;;		line 264 in file "mcc_generated_files/eusart2.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  interruptHan    2   28[BANK0 ] PTR FTN()void 
  8363 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		wreg, status,2, status,0
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;Total ram usage:        2 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:   11
  8382 ;; This function calls:
  8383 ;;		Nothing
  8384 ;; This function is called by:
  8385 ;;		_EUSART2_Initialize
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text39
  8390  0036A4                     __ptext39:
  8391                           	opt callstack 0
  8392  0036A4                     _EUSART2_SetFramingErrorHandler:
  8393                           	opt callstack 17
  8394  0036A4                     
  8395                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
  8396  0036A4  C07C  F0D0         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  8397  0036A8  C07D  F0D1         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  8398  0036AC  0012               	return		;funcret
  8399  0036AE                     __end_of_EUSART2_SetFramingErrorHandler:
  8400                           	opt callstack 0
  8401                           
  8402 ;; *************** function _EUSART2_SetErrorHandler *****************
  8403 ;; Defined at:
  8404 ;;		line 272 in file "mcc_generated_files/eusart2.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  interruptHan    2   28[BANK0 ] PTR FTN()void 
  8407 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;		None
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8423 ;;Total ram usage:        2 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:   11
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_EUSART2_Initialize
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text40
  8434  0036AE                     __ptext40:
  8435                           	opt callstack 0
  8436  0036AE                     _EUSART2_SetErrorHandler:
  8437                           	opt callstack 17
  8438  0036AE                     
  8439                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
  8440  0036AE  C07C  F11E         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  8441  0036B2  C07D  F11F         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  8442  0036B6  0012               	return		;funcret
  8443  0036B8                     __end_of_EUSART2_SetErrorHandler:
  8444                           	opt callstack 0
  8445                           
  8446 ;; *************** function _EUSART1_Initialize *****************
  8447 ;; Defined at:
  8448 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		wreg, status,2, status,0, cstack
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:   12
  8469 ;; This function calls:
  8470 ;;		_EUSART1_SetErrorHandler
  8471 ;;		_EUSART1_SetFramingErrorHandler
  8472 ;;		_EUSART1_SetOverrunErrorHandler
  8473 ;; This function is called by:
  8474 ;;		_SYSTEM_Initialize
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text41
  8479  0030A2                     __ptext41:
  8480                           	opt callstack 0
  8481  0030A2                     _EUSART1_Initialize:
  8482                           	opt callstack 17
  8483  0030A2                     
  8484                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8485  0030A2  0E08               	movlw	8
  8486  0030A4  6EB8               	movwf	184,c	;volatile
  8487                           
  8488                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8489  0030A6  0E90               	movlw	144
  8490  0030A8  6EAB               	movwf	171,c	;volatile
  8491                           
  8492                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8493  0030AA  0E24               	movlw	36
  8494  0030AC  6EAC               	movwf	172,c	;volatile
  8495                           
  8496                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  8497  0030AE  0E82               	movlw	130
  8498  0030B0  6EAF               	movwf	175,c	;volatile
  8499                           
  8500                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  8501  0030B2  0E06               	movlw	6
  8502  0030B4  6EB0               	movwf	176,c	;volatile
  8503  0030B6                     
  8504                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8505  0030B6  0E00               	movlw	0
  8506  0030B8  0100               	movlb	0	; () banked
  8507  0030BA  6F7C               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  8508  0030BC  0E00               	movlw	0
  8509  0030BE  6F7D               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  8510  0030C0  EC61  F01B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8511  0030C4                     
  8512                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8513  0030C4  0E00               	movlw	0
  8514  0030C6  0100               	movlb	0	; () banked
  8515  0030C8  6F7C               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  8516  0030CA  0E00               	movlw	0
  8517  0030CC  6F7D               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  8518  0030CE  EC5C  F01B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8519  0030D2                     
  8520                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8521  0030D2  0E00               	movlw	0
  8522  0030D4  0100               	movlb	0	; () banked
  8523  0030D6  6F7C               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  8524  0030D8  0E00               	movlw	0
  8525  0030DA  6F7D               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  8526  0030DC  EC66  F01B         	call	_EUSART1_SetErrorHandler	;wreg free
  8527  0030E0                     
  8528                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8529  0030E0  0E00               	movlw	0
  8530  0030E2  0100               	movlb	0	; () banked
  8531  0030E4  6FDC               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8532  0030E6                     
  8533                           ; BSR set to: 0
  8534  0030E6  0012               	return		;funcret
  8535  0030E8                     __end_of_EUSART1_Initialize:
  8536                           	opt callstack 0
  8537                           
  8538 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8539 ;; Defined at:
  8540 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;  interruptHan    2   28[BANK0 ] PTR FTN()void 
  8543 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;		None
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  1    wreg      void 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8555 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;Total ram usage:        2 bytes
  8560 ;; Hardware stack levels used:    1
  8561 ;; Hardware stack levels required when called:   11
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_EUSART1_Initialize
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text42
  8570  0036B8                     __ptext42:
  8571                           	opt callstack 0
  8572  0036B8                     _EUSART1_SetOverrunErrorHandler:
  8573                           	opt callstack 17
  8574  0036B8                     
  8575                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  8576  0036B8  C07C  F11A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8577  0036BC  C07D  F11B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8578  0036C0  0012               	return		;funcret
  8579  0036C2                     __end_of_EUSART1_SetOverrunErrorHandler:
  8580                           	opt callstack 0
  8581                           
  8582 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8583 ;; Defined at:
  8584 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  interruptHan    2   28[BANK0 ] PTR FTN()void 
  8587 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, status,2, status,0
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8599 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8602 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8603 ;;Total ram usage:        2 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:   11
  8606 ;; This function calls:
  8607 ;;		Nothing
  8608 ;; This function is called by:
  8609 ;;		_EUSART1_Initialize
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text43
  8614  0036C2                     __ptext43:
  8615                           	opt callstack 0
  8616  0036C2                     _EUSART1_SetFramingErrorHandler:
  8617                           	opt callstack 17
  8618  0036C2                     
  8619                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  8620  0036C2  C07C  F11C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8621  0036C6  C07D  F11D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8622  0036CA  0012               	return		;funcret
  8623  0036CC                     __end_of_EUSART1_SetFramingErrorHandler:
  8624                           	opt callstack 0
  8625                           
  8626 ;; *************** function _EUSART1_SetErrorHandler *****************
  8627 ;; Defined at:
  8628 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  interruptHan    2   28[BANK0 ] PTR FTN()void 
  8631 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, status,2, status,0
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;Total ram usage:        2 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:   11
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_EUSART1_Initialize
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text44
  8658  0036CC                     __ptext44:
  8659                           	opt callstack 0
  8660  0036CC                     _EUSART1_SetErrorHandler:
  8661                           	opt callstack 17
  8662  0036CC                     
  8663                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  8664  0036CC  C07C  F118         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8665  0036D0  C07D  F119         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8666  0036D4  0012               	return		;funcret
  8667  0036D6                     __end_of_EUSART1_SetErrorHandler:
  8668                           	opt callstack 0
  8669                           
  8670 ;; *************** function _EPWM2_Initialize *****************
  8671 ;; Defined at:
  8672 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;Total ram usage:        0 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:   11
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_SYSTEM_Initialize
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text45
  8701  003590                     __ptext45:
  8702                           	opt callstack 0
  8703  003590                     _EPWM2_Initialize:
  8704                           	opt callstack 18
  8705  003590                     
  8706                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x0C;
  8707  003590  0E0C               	movlw	12
  8708  003592  6E66               	movwf	102,c	;volatile
  8709                           
  8710                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  8711  003594  0E00               	movlw	0
  8712  003596  6E64               	movwf	100,c	;volatile
  8713                           
  8714                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  8715  003598  0E80               	movlw	128
  8716  00359A  6E65               	movwf	101,c	;volatile
  8717                           
  8718                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  8719  00359C  0E01               	movlw	1
  8720  00359E  6E63               	movwf	99,c	;volatile
  8721                           
  8722                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  8723  0035A0  0E00               	movlw	0
  8724  0035A2  6E68               	movwf	104,c	;volatile
  8725                           
  8726                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x00;
  8727  0035A4  0E00               	movlw	0
  8728  0035A6  6E67               	movwf	103,c	;volatile
  8729                           
  8730                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  8731  0035A8  0EE7               	movlw	-25
  8732  0035AA  010F               	movlb	15	; () banked
  8733  0035AC  1749               	andwf	73,f,b	;volatile
  8734  0035AE                     
  8735                           ; BSR set to: 15
  8736  0035AE  0012               	return		;funcret
  8737  0035B0                     __end_of_EPWM2_Initialize:
  8738                           	opt callstack 0
  8739                           
  8740 ;; *************** function _EUSART2_is_rx_ready *****************
  8741 ;; Defined at:
  8742 ;;		line 137 in file "mcc_generated_files/eusart2.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      _Bool 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;Total ram usage:        0 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:   11
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_main
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text46
  8771  003600                     __ptext46:
  8772                           	opt callstack 0
  8773  003600                     _EUSART2_is_rx_ready:
  8774                           	opt callstack 19
  8775  003600                     
  8776                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
  8777  003600  0100               	movlb	0	; () banked
  8778  003602  51DE               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  8779  003604  A4D8               	btfss	status,2,c
  8780  003606  EF07  F01B         	goto	u4111
  8781  00360A  EF0A  F01B         	goto	u4110
  8782  00360E                     u4111:
  8783  00360E  0E01               	movlw	1
  8784  003610  EF0B  F01B         	goto	u4120
  8785  003614                     u4110:
  8786  003614  0E00               	movlw	0
  8787  003616                     u4120:
  8788  003616                     
  8789                           ; BSR set to: 0
  8790  003616  0012               	return		;funcret
  8791  003618                     __end_of_EUSART2_is_rx_ready:
  8792                           	opt callstack 0
  8793                           
  8794 ;; *************** function _EUSART2_Read *****************
  8795 ;; Defined at:
  8796 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;		None
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;  readValue       1    0        unsigned char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      unsigned char 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8814 ;;Total ram usage:        1 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:   11
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_main
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text47
  8825  00300E                     __ptext47:
  8826                           	opt callstack 0
  8827  00300E                     _EUSART2_Read:
  8828                           	opt callstack 19
  8829  00300E                     l4340:
  8830                           
  8831                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
  8832  00300E  0100               	movlb	0	; () banked
  8833  003010  51DE               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  8834  003012  B4D8               	btfsc	status,2,c
  8835  003014  EF0E  F018         	goto	u4131
  8836  003018  EF10  F018         	goto	u4130
  8837  00301C                     u4131:
  8838  00301C  EF07  F018         	goto	l4340
  8839  003020                     u4130:
  8840  003020                     
  8841                           ; BSR set to: 0
  8842                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  8843  003020  0E00               	movlw	low _eusart2RxStatusBuffer
  8844  003022  25DF               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  8845  003024  6ED9               	movwf	fsr2l,c
  8846  003026  6ADA               	clrf	fsr2h,c
  8847  003028  0E01               	movlw	high _eusart2RxStatusBuffer
  8848  00302A  22DA               	addwfc	fsr2h,f,c
  8849  00302C  50DF               	movf	indf2,w,c
  8850  00302E  6FDD               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  8851  003030  0E08               	movlw	low _eusart2RxBuffer
  8852  003032  25DF               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  8853  003034  6ED9               	movwf	fsr2l,c
  8854  003036  6ADA               	clrf	fsr2h,c
  8855  003038  0E01               	movlw	high _eusart2RxBuffer
  8856  00303A  22DA               	addwfc	fsr2h,f,c
  8857  00303C                     
  8858                           ; BSR set to: 0
  8859  00303C  2BDF               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  8860  00303E                     
  8861                           ; BSR set to: 0
  8862                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  8863  00303E  0E07               	movlw	7
  8864  003040  65DF               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  8865  003042  EF25  F018         	goto	u4141
  8866  003046  EF27  F018         	goto	u4140
  8867  00304A                     u4141:
  8868  00304A  EF29  F018         	goto	l4350
  8869  00304E                     u4140:
  8870  00304E                     
  8871                           ; BSR set to: 0
  8872                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
  8873  00304E  0E00               	movlw	0
  8874  003050  6FDF               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8875  003052                     l4350:
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
  8879  003052  9AA3               	bcf	163,5,c	;volatile
  8880  003054                     
  8881                           ; BSR set to: 0
  8882                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
  8883  003054  07DE               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  8884  003056                     
  8885                           ; BSR set to: 0
  8886                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
  8887  003056  8AA3               	bsf	163,5,c	;volatile
  8888  003058                     
  8889                           ; BSR set to: 0
  8890  003058  0012               	return		;funcret
  8891  00305A                     __end_of_EUSART2_Read:
  8892                           	opt callstack 0
  8893                           
  8894 ;; *************** function _EUSART1_is_rx_ready *****************
  8895 ;; Defined at:
  8896 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      _Bool 
  8903 ;; Registers used:
  8904 ;;		wreg
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;Total ram usage:        0 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; Hardware stack levels required when called:   11
  8917 ;; This function calls:
  8918 ;;		Nothing
  8919 ;; This function is called by:
  8920 ;;		_main
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text48
  8925  003642                     __ptext48:
  8926                           	opt callstack 0
  8927  003642                     _EUSART1_is_rx_ready:
  8928                           	opt callstack 19
  8929  003642                     
  8930                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  8931  003642  BA9E               	btfsc	158,5,c	;volatile
  8932  003644  EF26  F01B         	goto	u4231
  8933  003648  EF29  F01B         	goto	u4230
  8934  00364C                     u4231:
  8935  00364C  0E01               	movlw	1
  8936  00364E  EF2A  F01B         	goto	u4236
  8937  003652                     u4230:
  8938  003652  0E00               	movlw	0
  8939  003654                     u4236:
  8940  003654  0012               	return		;funcret
  8941  003656                     __end_of_EUSART1_is_rx_ready:
  8942                           	opt callstack 0
  8943                           
  8944 ;; *************** function _EUSART1_Read *****************
  8945 ;; Defined at:
  8946 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;		None
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;		None
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  1    wreg      unsigned char 
  8953 ;; Registers used:
  8954 ;;		wreg, status,2
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8964 ;;Total ram usage:        0 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; Hardware stack levels required when called:   11
  8967 ;; This function calls:
  8968 ;;		Nothing
  8969 ;; This function is called by:
  8970 ;;		_main
  8971 ;;		_getch
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           	psect	text49
  8976  0034A6                     __ptext49:
  8977                           	opt callstack 0
  8978  0034A6                     _EUSART1_Read:
  8979                           	opt callstack 19
  8980  0034A6                     l303:
  8981                           
  8982                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  8983  0034A6  AA9E               	btfss	158,5,c	;volatile
  8984  0034A8  EF58  F01A         	goto	u4241
  8985  0034AC  EF5A  F01A         	goto	u4240
  8986  0034B0                     u4241:
  8987  0034B0  EF53  F01A         	goto	l303
  8988  0034B4                     u4240:
  8989  0034B4                     
  8990                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  8991  0034B4  0E00               	movlw	0
  8992  0034B6  0100               	movlb	0	; () banked
  8993  0034B8  6FDC               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8994  0034BA                     
  8995                           ; BSR set to: 0
  8996                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  8997  0034BA  A2AB               	btfss	171,1,c	;volatile
  8998  0034BC  EF62  F01A         	goto	u4251
  8999  0034C0  EF64  F01A         	goto	u4250
  9000  0034C4                     u4251:
  9001  0034C4  EF66  F01A         	goto	l4402
  9002  0034C8                     u4250:
  9003  0034C8                     
  9004                           ; BSR set to: 0
  9005                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  9006  0034C8  98AB               	bcf	171,4,c	;volatile
  9007                           
  9008                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  9009  0034CA  88AB               	bsf	171,4,c	;volatile
  9010  0034CC                     l4402:
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  9014  0034CC  50AE               	movf	174,w,c	;volatile
  9015  0034CE                     
  9016                           ; BSR set to: 0
  9017  0034CE  0012               	return		;funcret
  9018  0034D0                     __end_of_EUSART1_Read:
  9019                           	opt callstack 0
  9020                           
  9021 ;; *************** function _INTERRUPT_InterruptManager *****************
  9022 ;; Defined at:
  9023 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;		None
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;		None
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  1    wreg      void 
  9030 ;; Registers used:
  9031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;Total ram usage:       12 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:   10
  9044 ;; This function calls:
  9045 ;;		Absolute function
  9046 ;;		_EUSART2_Receive_ISR
  9047 ;;		_EUSART2_Transmit_ISR
  9048 ;;		_myEUSART2ISR
  9049 ;; This function is called by:
  9050 ;;		Interrupt level 2
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	intcode
  9055  000008                     __pintcode:
  9056                           	opt callstack 0
  9057  000008                     _INTERRUPT_InterruptManager:
  9058                           	opt callstack 11
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;incstack = 0
  9062  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9063  00000A  CFFA F070          	movff	pclath,??_INTERRUPT_InterruptManager
  9064  00000E  CFFB F071          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9065  000012  CFE1 F072          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  9066  000016  CFE2 F073          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  9067  00001A  CFD9 F074          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  9068  00001E  CFDA F075          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  9069  000022  CFF3 F076          	movff	prodl,??_INTERRUPT_InterruptManager+6
  9070  000026  CFF4 F077          	movff	prodh,??_INTERRUPT_InterruptManager+7
  9071  00002A  CFF6 F078          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
  9072  00002E  CFF7 F079          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
  9073  000032  CFF8 F07A          	movff	tblptru,??_INTERRUPT_InterruptManager+10
  9074  000036  CFF5 F07B          	movff	tablat,??_INTERRUPT_InterruptManager+11
  9075  00003A                     
  9076                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9077  00003A  ACF2               	btfss	242,6,c	;volatile
  9078  00003C  EF22  F000         	goto	i2u441_41
  9079  000040  EF24  F000         	goto	i2u441_40
  9080  000044                     i2u441_41:
  9081  000044  EF5E  F000         	goto	i2l363
  9082  000048                     i2u441_40:
  9083  000048                     
  9084                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  9085  000048  A8A3               	btfss	163,4,c	;volatile
  9086  00004A  EF29  F000         	goto	i2u442_41
  9087  00004E  EF2B  F000         	goto	i2u442_40
  9088  000052                     i2u442_41:
  9089  000052  EF41  F000         	goto	i2l358
  9090  000056                     i2u442_40:
  9091  000056  A8A4               	btfss	164,4,c	;volatile
  9092  000058  EF30  F000         	goto	i2u443_41
  9093  00005C  EF32  F000         	goto	i2u443_40
  9094  000060                     i2u443_41:
  9095  000060  EF41  F000         	goto	i2l358
  9096  000064                     i2u443_40:
  9097  000064                     
  9098                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  9099  000064  D802               	call	i2u444_48
  9100  000066  EF3F  F000         	goto	i2u444_49
  9101  00006A                     i2u444_48:
  9102  00006A  0005               	push	
  9103  00006C  6EFA               	movwf	pclath,c
  9104  00006E  0100               	movlb	0	; () banked
  9105  000070  51D4               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  9106  000072  6EFD               	movwf	tosl,c
  9107  000074  51D5               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  9108  000076  6EFE               	movwf	tosh,c
  9109  000078  6AFF               	clrf	tosu,c
  9110  00007A  50FA               	movf	pclath,w,c
  9111  00007C  0012               	return		;indir
  9112  00007E                     i2u444_49:
  9113                           
  9114                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  9115  00007E  EF5E  F000         	goto	i2l363
  9116  000082                     i2l358:
  9117  000082  AAA3               	btfss	163,5,c	;volatile
  9118  000084  EF46  F000         	goto	i2u445_41
  9119  000088  EF48  F000         	goto	i2u445_40
  9120  00008C                     i2u445_41:
  9121  00008C  EF5E  F000         	goto	i2l359
  9122  000090                     i2u445_40:
  9123  000090  AAA4               	btfss	164,5,c	;volatile
  9124  000092  EF4D  F000         	goto	i2u446_41
  9125  000096  EF4F  F000         	goto	i2u446_40
  9126  00009A                     i2u446_41:
  9127  00009A  EF5E  F000         	goto	i2l359
  9128  00009E                     i2u446_40:
  9129  00009E                     
  9130                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  9131  00009E  D802               	call	i2u447_48
  9132  0000A0  EF5C  F000         	goto	i2u447_49
  9133  0000A4                     i2u447_48:
  9134  0000A4  0005               	push	
  9135  0000A6  6EFA               	movwf	pclath,c
  9136  0000A8  0100               	movlb	0	; () banked
  9137  0000AA  51D2               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  9138  0000AC  6EFD               	movwf	tosl,c
  9139  0000AE  51D3               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  9140  0000B0  6EFE               	movwf	tosh,c
  9141  0000B2  6AFF               	clrf	tosu,c
  9142  0000B4  50FA               	movf	pclath,w,c
  9143  0000B6  0012               	return		;indir
  9144  0000B8                     i2u447_49:
  9145                           
  9146                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  9147  0000B8  EF5E  F000         	goto	i2l363
  9148  0000BC                     i2l359:
  9149  0000BC                     i2l363:
  9150  0000BC  C07B  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
  9151  0000C0  C07A  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
  9152  0000C4  C079  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
  9153  0000C8  C078  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
  9154  0000CC  C077  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  9155  0000D0  C076  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  9156  0000D4  C075  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  9157  0000D8  C074  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  9158  0000DC  C073  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  9159  0000E0  C072  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  9160  0000E4  C071  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9161  0000E8  C070  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9162  0000EC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9163  0000EE  0011               	retfie		f
  9164  0000F0                     __end_of_INTERRUPT_InterruptManager:
  9165                           	opt callstack 0
  9166                           
  9167 ;; *************** function _EUSART2_Receive_ISR *****************
  9168 ;; Defined at:
  9169 ;;		line 216 in file "mcc_generated_files/eusart2.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;		None
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;Total ram usage:        0 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:    2
  9190 ;; This function calls:
  9191 ;;		Absolute function
  9192 ;;		_EUSART2_DefaultErrorHandler
  9193 ;;		_EUSART2_DefaultFramingErrorHandler
  9194 ;;		_EUSART2_DefaultOverrunErrorHandler
  9195 ;;		_EUSART2_RxDataHandler
  9196 ;; This function is called by:
  9197 ;;		_EUSART2_Initialize
  9198 ;;		_INTERRUPT_InterruptManager
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text51
  9203  002AB6                     __ptext51:
  9204                           	opt callstack 0
  9205  002AB6                     _EUSART2_Receive_ISR:
  9206                           	opt callstack 18
  9207  002AB6                     
  9208                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  9209  002AB6  0E00               	movlw	low _eusart2RxStatusBuffer
  9210  002AB8  0100               	movlb	0	; () banked
  9211  002ABA  25E0               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
  9212  002ABC  6ED9               	movwf	fsr2l,c
  9213  002ABE  6ADA               	clrf	fsr2h,c
  9214  002AC0  0E01               	movlw	high _eusart2RxStatusBuffer
  9215  002AC2  22DA               	addwfc	fsr2h,f,c
  9216  002AC4  0E00               	movlw	0
  9217  002AC6  6EDF               	movwf	indf2,c
  9218  002AC8                     
  9219                           ; BSR set to: 0
  9220                           ;mcc_generated_files/eusart2.c: 221:     if(RCSTA2bits.FERR){
  9221  002AC8  A471               	btfss	113,2,c	;volatile
  9222  002ACA  EF69  F015         	goto	i2u417_41
  9223  002ACE  EF6B  F015         	goto	i2u417_40
  9224  002AD2                     i2u417_41:
  9225  002AD2  EF80  F015         	goto	i2l4378
  9226  002AD6                     i2u417_40:
  9227  002AD6                     
  9228                           ; BSR set to: 0
  9229                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  9230  002AD6  0E00               	movlw	low _eusart2RxStatusBuffer
  9231  002AD8  25E0               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
  9232  002ADA  6ED9               	movwf	fsr2l,c
  9233  002ADC  6ADA               	clrf	fsr2h,c
  9234  002ADE  0E01               	movlw	high _eusart2RxStatusBuffer
  9235  002AE0  22DA               	addwfc	fsr2h,f,c
  9236  002AE2  0101               	movlb	1	; () banked
  9237  002AE4  82DF               	bsf	indf2,1,c
  9238  002AE6                     
  9239                           ; BSR set to: 1
  9240                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
  9241  002AE6  D802               	call	i2u418_48
  9242  002AE8  EF80  F015         	goto	i2u418_49
  9243  002AEC                     i2u418_48:
  9244  002AEC  0005               	push	
  9245  002AEE  6EFA               	movwf	pclath,c
  9246  002AF0  0100               	movlb	0	; () banked
  9247  002AF2  51D0               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  9248  002AF4  6EFD               	movwf	tosl,c
  9249  002AF6  51D1               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  9250  002AF8  6EFE               	movwf	tosh,c
  9251  002AFA  6AFF               	clrf	tosu,c
  9252  002AFC  50FA               	movf	pclath,w,c
  9253  002AFE  0012               	return		;indir
  9254  002B00                     i2u418_49:
  9255  002B00                     i2l4378:
  9256                           
  9257                           ;mcc_generated_files/eusart2.c: 226:     if(RCSTA2bits.OERR){
  9258  002B00  A271               	btfss	113,1,c	;volatile
  9259  002B02  EF85  F015         	goto	i2u419_41
  9260  002B06  EF87  F015         	goto	i2u419_40
  9261  002B0A                     i2u419_41:
  9262  002B0A  EF9C  F015         	goto	i2l4384
  9263  002B0E                     i2u419_40:
  9264  002B0E                     
  9265                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  9266  002B0E  0E00               	movlw	low _eusart2RxStatusBuffer
  9267  002B10  0100               	movlb	0	; () banked
  9268  002B12  25E0               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
  9269  002B14  6ED9               	movwf	fsr2l,c
  9270  002B16  6ADA               	clrf	fsr2h,c
  9271  002B18  0E01               	movlw	high _eusart2RxStatusBuffer
  9272  002B1A  22DA               	addwfc	fsr2h,f,c
  9273  002B1C  0101               	movlb	1	; () banked
  9274  002B1E  84DF               	bsf	indf2,2,c
  9275  002B20                     
  9276                           ; BSR set to: 1
  9277                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
  9278  002B20  D802               	call	i2u420_48
  9279  002B22  EF9C  F015         	goto	i2u420_49
  9280  002B26                     i2u420_48:
  9281  002B26  0005               	push	
  9282  002B28  6EFA               	movwf	pclath,c
  9283  002B2A  5120               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  9284  002B2C  6EFD               	movwf	tosl,c
  9285  002B2E  5121               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  9286  002B30  6EFE               	movwf	tosh,c
  9287  002B32  6AFF               	clrf	tosu,c
  9288  002B34  50FA               	movf	pclath,w,c
  9289  002B36  0012               	return		;indir
  9290  002B38                     i2u420_49:
  9291  002B38                     i2l4384:
  9292                           
  9293                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  9294  002B38  0E00               	movlw	low _eusart2RxStatusBuffer
  9295  002B3A  0100               	movlb	0	; () banked
  9296  002B3C  25E0               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
  9297  002B3E  6ED9               	movwf	fsr2l,c
  9298  002B40  6ADA               	clrf	fsr2h,c
  9299  002B42  0E01               	movlw	high _eusart2RxStatusBuffer
  9300  002B44  22DA               	addwfc	fsr2h,f,c
  9301  002B46  50DF               	movf	indf2,w,c
  9302  002B48  B4D8               	btfsc	status,2,c
  9303  002B4A  EFA9  F015         	goto	i2u421_41
  9304  002B4E  EFAB  F015         	goto	i2u421_40
  9305  002B52                     i2u421_41:
  9306  002B52  EFBA  F015         	goto	i2l4388
  9307  002B56                     i2u421_40:
  9308  002B56                     
  9309                           ; BSR set to: 0
  9310                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
  9311  002B56  D802               	call	i2u422_48
  9312  002B58  EFB8  F015         	goto	i2u422_49
  9313  002B5C                     i2u422_48:
  9314  002B5C  0005               	push	
  9315  002B5E  6EFA               	movwf	pclath,c
  9316  002B60  0101               	movlb	1	; () banked
  9317  002B62  511E               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  9318  002B64  6EFD               	movwf	tosl,c
  9319  002B66  511F               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  9320  002B68  6EFE               	movwf	tosh,c
  9321  002B6A  6AFF               	clrf	tosu,c
  9322  002B6C  50FA               	movf	pclath,w,c
  9323  002B6E  0012               	return		;indir
  9324  002B70                     i2u422_49:
  9325                           
  9326                           ;mcc_generated_files/eusart2.c: 233:     } else {
  9327  002B70  EFBC  F015         	goto	i2l215
  9328  002B74                     i2l4388:
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
  9332  002B74  EC3D  F01A         	call	_EUSART2_RxDataHandler	;wreg free
  9333  002B78                     i2l215:
  9334  002B78  0012               	return		;funcret
  9335  002B7A                     __end_of_EUSART2_Receive_ISR:
  9336                           	opt callstack 0
  9337                           
  9338 ;; *************** function _myEUSART2ISR *****************
  9339 ;; Defined at:
  9340 ;;		line 248 in file "main.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;		None
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  input           1   93[COMRAM] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;Total ram usage:        3 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; Hardware stack levels required when called:    9
  9361 ;; This function calls:
  9362 ;;		i2_printf
  9363 ;; This function is called by:
  9364 ;;		_main
  9365 ;;		_INTERRUPT_InterruptManager
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text52
  9370  002926                     __ptext52:
  9371                           	opt callstack 0
  9372  002926                     _myEUSART2ISR:
  9373                           	opt callstack 11
  9374  002926                     
  9375                           ;main.c: 249:         }
  9376  002926  98A3               	bcf	163,4,c	;volatile
  9377  002928                     
  9378                           ;main.c: 250: ;main.c: 251:     };main.c: 252: }
  9379  002928  0101               	movlb	1	; () banked
  9380  00292A  5124               	movf	_receiveNewMessage& (0+255),w,b
  9381  00292C  A4D8               	btfss	status,2,c
  9382  00292E  EF9B  F014         	goto	i2u436_41
  9383  002932  EF9D  F014         	goto	i2u436_40
  9384  002936                     i2u436_41:
  9385  002936  EFF7  F014         	goto	i2l558
  9386  00293A                     i2u436_40:
  9387  00293A                     
  9388                           ; BSR set to: 1
  9389                           ;main.c: 253: 
  9390  00293A  CF74 F05E          	movff	3956,myEUSART2ISR@input	;volatile
  9391  00293E                     
  9392                           ; BSR set to: 1
  9393                           ;main.c: 254: void transmitCharacterOverIR(char letter, uint16_t baudRate) {
  9394  00293E  505E               	movf	myEUSART2ISR@input^0,w,c
  9395  002940  2722               	addwf	_checkSumRx& (0+255),f,b
  9396                           
  9397                           ;main.c: 255: 
  9398  002942  EFDD  F014         	goto	i2l4526
  9399  002946                     i2l4500:
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;main.c: 257:     TMR1_WriteTimer(0x10000 - baudRate);
  9403  002946  0E59               	movlw	low _IRreceiveBuffer
  9404  002948  25D8               	addwf	myEUSART2ISR@index& (0+255),w,b
  9405  00294A  6ED9               	movwf	fsr2l,c
  9406  00294C  6ADA               	clrf	fsr2h,c
  9407  00294E  0E01               	movlw	high _IRreceiveBuffer
  9408  002950  22DA               	addwfc	fsr2h,f,c
  9409  002952  C05E  FFDF         	movff	myEUSART2ISR@input,indf2
  9410  002956                     
  9411                           ; BSR set to: 0
  9412                           ;main.c: 258:     PIR1bits.TMR1IF= 0;
  9413  002956  0E01               	movlw	1
  9414  002958  6FD9               	movwf	myEUSART2ISR@state& (0+255),b
  9415  00295A                     i2l4504:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;main.c: 259:     while (TMR1_HasOverflowOccured() == 0);
  9419  00295A  2BD8               	incf	myEUSART2ISR@index& (0+255),f,b
  9420                           
  9421                           ;main.c: 260: 
  9422  00295C  EFF7  F014         	goto	i2l558
  9423  002960                     i2l4506:
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;main.c: 262:     mask = 0b00000001;
  9427  002960  0E59               	movlw	low _IRreceiveBuffer
  9428  002962  25D8               	addwf	myEUSART2ISR@index& (0+255),w,b
  9429  002964  6ED9               	movwf	fsr2l,c
  9430  002966  6ADA               	clrf	fsr2h,c
  9431  002968  0E01               	movlw	high _IRreceiveBuffer
  9432  00296A  22DA               	addwfc	fsr2h,f,c
  9433  00296C  C05E  FFDF         	movff	myEUSART2ISR@input,indf2
  9434  002970                     
  9435                           ; BSR set to: 0
  9436                           ;main.c: 263:     while (mask != 0) {
  9437  002970  505E               	movf	myEUSART2ISR@input^0,w,c
  9438  002972  A4D8               	btfss	status,2,c
  9439  002974  EFBE  F014         	goto	i2u437_41
  9440  002978  EFC0  F014         	goto	i2u437_40
  9441  00297C                     i2u437_41:
  9442  00297C  EFAD  F014         	goto	i2l4504
  9443  002980                     i2u437_40:
  9444  002980                     
  9445                           ; BSR set to: 0
  9446                           ;main.c: 264:         if ((letter & mask) != 0) EPWM2_LoadDutyValue(0);
  9447  002980  0E02               	movlw	2
  9448  002982  6FD9               	movwf	myEUSART2ISR@state& (0+255),b
  9449  002984  EFAD  F014         	goto	i2l4504
  9450  002988                     i2l4514:
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;main.c: 268:         PIR1bits.TMR1IF= 0;
  9454  002988  0E59               	movlw	low _IRreceiveBuffer
  9455  00298A  25D8               	addwf	myEUSART2ISR@index& (0+255),w,b
  9456  00298C  6ED9               	movwf	fsr2l,c
  9457  00298E  6ADA               	clrf	fsr2h,c
  9458  002990  0E01               	movlw	high _IRreceiveBuffer
  9459  002992  22DA               	addwfc	fsr2h,f,c
  9460  002994  C05E  FFDF         	movff	myEUSART2ISR@input,indf2
  9461  002998                     
  9462                           ; BSR set to: 0
  9463                           ;main.c: 269:         while (TMR1_HasOverflowOccured() == 0);
  9464  002998  0E00               	movlw	0
  9465  00299A  6FD9               	movwf	myEUSART2ISR@state& (0+255),b
  9466  00299C                     
  9467                           ; BSR set to: 0
  9468                           ;main.c: 270:     }
  9469  00299C  0E00               	movlw	0
  9470  00299E  6FD8               	movwf	myEUSART2ISR@index& (0+255),b
  9471  0029A0                     
  9472                           ; BSR set to: 0
  9473                           ;main.c: 271: 
  9474  0029A0  0E01               	movlw	1
  9475  0029A2  0101               	movlb	1	; () banked
  9476  0029A4  6F24               	movwf	_receiveNewMessage& (0+255),b
  9477                           
  9478                           ;main.c: 272: 
  9479  0029A6  EFF7  F014         	goto	i2l558
  9480  0029AA                     i2l4522:
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;main.c: 274:     TMR1_WriteTimer(0x10000 - baudRate);
  9484  0029AA  0EE8               	movlw	low STR_48
  9485  0029AC  6F68               	movwf	i2printf@fmt& (0+255),b
  9486  0029AE  0EFF               	movlw	high STR_48
  9487  0029B0  6F69               	movwf	(i2printf@fmt+1)& (0+255),b
  9488  0029B2  EC90  F01A         	call	i2_printf	;wreg free
  9489                           
  9490                           ;main.c: 275:     PIR1bits.TMR1IF= 0;
  9491  0029B6  EFF7  F014         	goto	i2l558
  9492  0029BA                     i2l4526:
  9493                           
  9494                           ; BSR set to: 1
  9495  0029BA  0100               	movlb	0	; () banked
  9496  0029BC  51D9               	movf	myEUSART2ISR@state& (0+255),w,b
  9497  0029BE  6F6E               	movwf	??_myEUSART2ISR& (0+255),b
  9498  0029C0  6B6F               	clrf	(??_myEUSART2ISR+1)& (0+255),b
  9499                           
  9500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9501                           ; Switch size 1, requested type "simple"
  9502                           ; Number of cases is 1, Range of values is 0 to 0
  9503                           ; switch strategies available:
  9504                           ; Name         Instructions Cycles
  9505                           ; simple_byte            4     3 (average)
  9506                           ;	Chosen strategy is simple_byte
  9507  0029C2  516F               	movf	(??_myEUSART2ISR+1)& (0+255),w,b
  9508  0029C4  0A00               	xorlw	0	; case 0
  9509  0029C6  B4D8               	btfsc	status,2,c
  9510  0029C8  EFE8  F014         	goto	i2l5848
  9511  0029CC  EFD5  F014         	goto	i2l4522
  9512  0029D0                     i2l5848:
  9513                           
  9514                           ; BSR set to: 0
  9515                           ; Switch size 1, requested type "simple"
  9516                           ; Number of cases is 3, Range of values is 0 to 2
  9517                           ; switch strategies available:
  9518                           ; Name         Instructions Cycles
  9519                           ; simple_byte           10     6 (average)
  9520                           ;	Chosen strategy is simple_byte
  9521  0029D0  516E               	movf	??_myEUSART2ISR& (0+255),w,b
  9522  0029D2  0A00               	xorlw	0	; case 0
  9523  0029D4  B4D8               	btfsc	status,2,c
  9524  0029D6  EFA3  F014         	goto	i2l4500
  9525  0029DA  0A01               	xorlw	1	; case 1
  9526  0029DC  B4D8               	btfsc	status,2,c
  9527  0029DE  EFB0  F014         	goto	i2l4506
  9528  0029E2  0A03               	xorlw	3	; case 2
  9529  0029E4  B4D8               	btfsc	status,2,c
  9530  0029E6  EFC4  F014         	goto	i2l4514
  9531  0029EA  EFD5  F014         	goto	i2l4522
  9532  0029EE                     i2l558:
  9533  0029EE  0012               	return		;funcret
  9534  0029F0                     __end_of_myEUSART2ISR:
  9535                           	opt callstack 0
  9536                           
  9537 ;; *************** function i2_printf *****************
  9538 ;; Defined at:
  9539 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  9542 ;;		 -> STR_48(7), STR_47(17), STR_46(40), STR_45(14), 
  9543 ;;		 -> STR_44(13), STR_43(11), STR_42(16), STR_41(15), 
  9544 ;;		 -> STR_40(14), STR_39(16), STR_38(15), STR_37(12), 
  9545 ;;		 -> STR_36(3), STR_35(41), STR_34(21), STR_33(31), 
  9546 ;;		 -> STR_32(16), STR_31(15), STR_30(15), STR_29(15), 
  9547 ;;		 -> STR_28(14), STR_27(43), STR_26(2), STR_25(2), 
  9548 ;;		 -> STR_24(8), STR_23(52), STR_22(19), STR_21(54), 
  9549 ;;		 -> STR_20(32), STR_19(31), STR_18(19), STR_17(46), 
  9550 ;;		 -> STR_16(24), STR_15(21), STR_14(7), STR_13(15), 
  9551 ;;		 -> STR_12(52), STR_11(12), STR_10(13), STR_9(12), 
  9552 ;;		 -> STR_8(12), STR_7(12), STR_6(11), STR_5(52), 
  9553 ;;		 -> STR_4(5), STR_3(65), STR_2(42), STR_1(15), 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;  printf          2   12[BANK0 ] PTR void [1]
  9556 ;;		 -> ?i2_printf(2), ?_printf(2), 
  9557 ;;  printf          2    0        int 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  2    8[BANK0 ] int 
  9560 ;; Registers used:
  9561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9568 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9570 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9571 ;;Total ram usage:        6 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; Hardware stack levels required when called:    8
  9574 ;; This function calls:
  9575 ;;		i2_vfprintf
  9576 ;; This function is called by:
  9577 ;;		_myEUSART2ISR
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text53
  9582  003520                     __ptext53:
  9583                           	opt callstack 0
  9584  003520                     i2_printf:
  9585                           	opt callstack 11
  9586  003520  0E6A               	movlw	low (?i2_printf+2)
  9587  003522  0100               	movlb	0	; () banked
  9588  003524  6F6C               	movwf	i2printf@ap& (0+255),b
  9589  003526  0E00               	movlw	high (?i2_printf+2)
  9590  003528  6F6D               	movwf	(i2printf@ap+1)& (0+255),b
  9591  00352A                     
  9592                           ; BSR set to: 0
  9593  00352A  0E00               	movlw	0
  9594  00352C  6F60               	movwf	i2vfprintf@fp& (0+255),b
  9595  00352E  0E00               	movlw	0
  9596  003530  6F61               	movwf	(i2vfprintf@fp+1)& (0+255),b
  9597  003532  C068  F062         	movff	i2printf@fmt,i2vfprintf@fmt
  9598  003536  C069  F063         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  9599  00353A  0E6C               	movlw	low i2printf@ap
  9600  00353C  6F64               	movwf	i2vfprintf@ap& (0+255),b
  9601  00353E  0E00               	movlw	high i2printf@ap
  9602  003540  6F65               	movwf	(i2vfprintf@ap+1)& (0+255),b
  9603  003542  ECC6  F016         	call	i2_vfprintf	;wreg free
  9604  003546  0012               	return		;funcret
  9605  003548                     __end_ofi2_printf:
  9606                           	opt callstack 0
  9607                           
  9608 ;; *************** function i2_vfprintf *****************
  9609 ;; Defined at:
  9610 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  9613 ;;		 -> NULL(0), 
  9614 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  9615 ;;		 -> STR_48(7), STR_47(17), STR_46(40), STR_45(14), 
  9616 ;;		 -> STR_44(13), STR_43(11), STR_42(16), STR_41(15), 
  9617 ;;		 -> STR_40(14), STR_39(16), STR_38(15), STR_37(12), 
  9618 ;;		 -> STR_36(3), STR_35(41), STR_34(21), STR_33(31), 
  9619 ;;		 -> STR_32(16), STR_31(15), STR_30(15), STR_29(15), 
  9620 ;;		 -> STR_28(14), STR_27(43), STR_26(2), STR_25(2), 
  9621 ;;		 -> STR_24(8), STR_23(52), STR_22(19), STR_21(54), 
  9622 ;;		 -> STR_20(32), STR_19(31), STR_18(19), STR_17(46), 
  9623 ;;		 -> STR_16(24), STR_15(21), STR_14(7), STR_13(15), 
  9624 ;;		 -> STR_12(52), STR_11(12), STR_10(13), STR_9(12), 
  9625 ;;		 -> STR_8(12), STR_7(12), STR_6(11), STR_5(52), 
  9626 ;;		 -> STR_4(5), STR_3(65), STR_2(42), STR_1(15), 
  9627 ;;  ap              2    4[BANK0 ] PTR PTR void 
  9628 ;;		 -> i2printf@ap(2), printf@ap(2), 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;  vfprintf        2    6[BANK0 ] PTR unsigned char 
  9631 ;;		 -> STR_48(7), STR_47(17), STR_46(40), STR_45(14), 
  9632 ;;		 -> STR_44(13), STR_43(11), STR_42(16), STR_41(15), 
  9633 ;;		 -> STR_40(14), STR_39(16), STR_38(15), STR_37(12), 
  9634 ;;		 -> STR_36(3), STR_35(41), STR_34(21), STR_33(31), 
  9635 ;;		 -> STR_32(16), STR_31(15), STR_30(15), STR_29(15), 
  9636 ;;		 -> STR_28(14), STR_27(43), STR_26(2), STR_25(2), 
  9637 ;;		 -> STR_24(8), STR_23(52), STR_22(19), STR_21(54), 
  9638 ;;		 -> STR_20(32), STR_19(31), STR_18(19), STR_17(46), 
  9639 ;;		 -> STR_16(24), STR_15(21), STR_14(7), STR_13(15), 
  9640 ;;		 -> STR_12(52), STR_11(12), STR_10(13), STR_9(12), 
  9641 ;;		 -> STR_8(12), STR_7(12), STR_6(11), STR_5(52), 
  9642 ;;		 -> STR_4(5), STR_3(65), STR_2(42), STR_1(15), 
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  2    0[BANK0 ] int 
  9645 ;; Registers used:
  9646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9652 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;Total ram usage:        8 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; Hardware stack levels required when called:    7
  9659 ;; This function calls:
  9660 ;;		i2_vfpfcnvrt
  9661 ;; This function is called by:
  9662 ;;		i2_printf
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text54
  9667  002D8C                     __ptext54:
  9668                           	opt callstack 0
  9669  002D8C                     i2_vfprintf:
  9670                           	opt callstack 11
  9671  002D8C                     
  9672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9673  002D8C  C062  F066         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  9674  002D90  C063  F067         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  9675  002D94                     
  9676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9677  002D94  0E00               	movlw	0
  9678  002D96  0100               	movlb	0	; () banked
  9679  002D98  6FC9               	movwf	(_nout+1)& (0+255),b
  9680  002D9A  0E00               	movlw	0
  9681  002D9C  6FC8               	movwf	_nout& (0+255),b
  9682                           
  9683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9684  002D9E  EFE4  F016         	goto	i2l4238
  9685  002DA2                     i2l4236:
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9689  002DA2  C060  F045         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  9690  002DA6  C061  F046         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  9691  002DAA  0E66               	movlw	low i2vfprintf@cfmt
  9692  002DAC  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
  9693  002DAE  0E00               	movlw	high i2vfprintf@cfmt
  9694  002DB0  6E48               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  9695  002DB2  C064  F049         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  9696  002DB6  C065  F04A         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  9697  002DBA  EC91  F006         	call	i2_vfpfcnvrt	;wreg free
  9698  002DBE  5045               	movf	?i2_vfpfcnvrt^0,w,c
  9699  002DC0  0100               	movlb	0	; () banked
  9700  002DC2  27C8               	addwf	_nout& (0+255),f,b
  9701  002DC4  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  9702  002DC6  23C9               	addwfc	(_nout+1)& (0+255),f,b
  9703  002DC8                     i2l4238:
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9707  002DC8  C066  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  9708  002DCC  C067  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  9709  002DD0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9710  002DD0  6AF8               	clrf	tblptru,c
  9711  002DD2                     	endif
  9712  002DD2                     	if	0	;tblptru may be non-zero
  9713  002DD2                     	endif
  9714  002DD2  0008               	tblrd		*
  9715  002DD4  50F5               	movf	tablat,w,c
  9716  002DD6  0900               	iorlw	0
  9717  002DD8  A4D8               	btfss	status,2,c
  9718  002DDA  EFF1  F016         	goto	i2u406_41
  9719  002DDE  EFF3  F016         	goto	i2u406_40
  9720  002DE2                     i2u406_41:
  9721  002DE2  EFD1  F016         	goto	i2l4236
  9722  002DE6                     i2u406_40:
  9723  002DE6                     
  9724                           ; BSR set to: 0
  9725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  9726  002DE6  C0C8  F060         	movff	_nout,?i2_vfprintf
  9727  002DEA  C0C9  F061         	movff	_nout+1,?i2_vfprintf+1
  9728  002DEE                     
  9729                           ; BSR set to: 0
  9730  002DEE  0012               	return		;funcret
  9731  002DF0                     __end_ofi2_vfprintf:
  9732                           	opt callstack 0
  9733                           
  9734 ;; *************** function i2_vfpfcnvrt *****************
  9735 ;; Defined at:
  9736 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  9739 ;;		 -> NULL(0), 
  9740 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  9741 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  9742 ;;  ap              2   72[COMRAM] PTR PTR void 
  9743 ;;		 -> i2printf@ap(2), printf@ap(2), 
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  vfpfcnvrt       8   84[COMRAM] unsigned long long 
  9746 ;;  vfpfcnvrt       8    0        long long 
  9747 ;;  vfpfcnvrt       4    0        long long 
  9748 ;;  vfpfcnvrt       3    0        PTR void 
  9749 ;;  vfpfcnvrt       3    0        unsigned char [3]
  9750 ;;  vfpfcnvrt       2   80[COMRAM] int 
  9751 ;;  vfpfcnvrt       2   78[COMRAM] PTR unsigned char 
  9752 ;;		 -> ?_printf(2), IRreceiveBuffer(20), IRtransmitBuffer(20), 
  9753 ;;  vfpfcnvrt       2    0        int 
  9754 ;;  vfpfcnvrt       1   92[COMRAM] unsigned char 
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  2   68[COMRAM] int 
  9757 ;; Registers used:
  9758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9764 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9767 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;Total ram usage:       25 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:    6
  9771 ;; This function calls:
  9772 ;;		i2_atoi
  9773 ;;		i2_ctoa
  9774 ;;		i2_fputc
  9775 ;;		i2_isdigit
  9776 ;;		i2_stoa
  9777 ;;		i2_utoa
  9778 ;;		i2_xtoa
  9779 ;; This function is called by:
  9780 ;;		i2_vfprintf
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           	psect	text55
  9785  000D22                     __ptext55:
  9786                           	opt callstack 0
  9787  000D22                     i2_vfpfcnvrt:
  9788                           	opt callstack 11
  9789  000D22                     
  9790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9791  000D22  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9792  000D26  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9793  000D2A  CFDE FFF6          	movff	postinc2,tblptrl
  9794  000D2E  CFDD FFF7          	movff	postdec2,tblptrh
  9795  000D32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9796  000D32  6AF8               	clrf	tblptru,c
  9797  000D34                     	endif
  9798  000D34                     	if	0	;tblptru may be non-zero
  9799  000D34                     	endif
  9800  000D34  0008               	tblrd		*
  9801  000D36  50F5               	movf	tablat,w,c
  9802  000D38  0A25               	xorlw	37
  9803  000D3A  A4D8               	btfss	status,2,c
  9804  000D3C  EFA2  F006         	goto	i2u377_41
  9805  000D40  EFA4  F006         	goto	i2u377_40
  9806  000D44                     i2u377_41:
  9807  000D44  EF12  F009         	goto	i2l4066
  9808  000D48                     i2u377_40:
  9809  000D48                     
  9810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9811  000D48  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9812  000D4C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9813  000D50  2ADE               	incf	postinc2,f,c
  9814  000D52  0E00               	movlw	0
  9815  000D54  22DD               	addwfc	postdec2,f,c
  9816  000D56                     
  9817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9818  000D56  0E00               	movlw	0
  9819  000D58  0100               	movlb	0	; () banked
  9820  000D5A  6FCB               	movwf	(_width+1)& (0+255),b
  9821  000D5C  0E00               	movlw	0
  9822  000D5E  6FCA               	movwf	_width& (0+255),b
  9823  000D60  C0CA  F0CE         	movff	_width,_flags
  9824  000D64  C0CB  F0CF         	movff	_width+1,_flags+1
  9825  000D68                     
  9826                           ; BSR set to: 0
  9827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9828  000D68  69CC               	setf	_prec& (0+255),b
  9829  000D6A  69CD               	setf	(_prec+1)& (0+255),b
  9830  000D6C                     
  9831                           ; BSR set to: 0
  9832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9833  000D6C  0E00               	movlw	0
  9834  000D6E  6E52               	movwf	(i2vfpfcnvrt@done+1)^0,c
  9835  000D70  0E00               	movlw	0
  9836  000D72  6E51               	movwf	i2vfpfcnvrt@done^0,c
  9837                           
  9838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9839  000D74  EF08  F007         	goto	i2l3990
  9840  000D78                     i2l3964:
  9841                           
  9842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9843  000D78  0100               	movlb	0	; () banked
  9844  000D7A  81CE               	bsf	_flags& (0+255),0,b
  9845  000D7C                     i2l3966:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9849  000D7C  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9850  000D80  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9851  000D84  2ADE               	incf	postinc2,f,c
  9852  000D86  0E00               	movlw	0
  9853  000D88  22DD               	addwfc	postdec2,f,c
  9854                           
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9856  000D8A  EF08  F007         	goto	i2l3990
  9857  000D8E                     i2l3968:
  9858                           
  9859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9860  000D8E  0100               	movlb	0	; () banked
  9861  000D90  83CE               	bsf	_flags& (0+255),1,b
  9862  000D92  EFBE  F006         	goto	i2l3966
  9863  000D96                     i2l3972:
  9864                           
  9865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9866  000D96  0100               	movlb	0	; () banked
  9867  000D98  85CE               	bsf	_flags& (0+255),2,b
  9868  000D9A  EFBE  F006         	goto	i2l3966
  9869  000D9E                     i2l3976:
  9870                           
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9872  000D9E  0100               	movlb	0	; () banked
  9873  000DA0  87CE               	bsf	_flags& (0+255),3,b
  9874  000DA2  EFBE  F006         	goto	i2l3966
  9875  000DA6                     i2l3980:
  9876                           
  9877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9878  000DA6  0100               	movlb	0	; () banked
  9879  000DA8  89CE               	bsf	_flags& (0+255),4,b
  9880  000DAA  EFBE  F006         	goto	i2l3966
  9881  000DAE                     i2l3984:
  9882                           
  9883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9884  000DAE  0E00               	movlw	0
  9885  000DB0  6E52               	movwf	(i2vfpfcnvrt@done+1)^0,c
  9886  000DB2  0E01               	movlw	1
  9887  000DB4  6E51               	movwf	i2vfpfcnvrt@done^0,c
  9888                           
  9889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9890  000DB6  EF08  F007         	goto	i2l3990
  9891  000DBA                     i2l3988:
  9892  000DBA  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9893  000DBE  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9894  000DC2  CFDE FFF6          	movff	postinc2,tblptrl
  9895  000DC6  CFDD FFF7          	movff	postdec2,tblptrh
  9896  000DCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9897  000DCA  6AF8               	clrf	tblptru,c
  9898  000DCC                     	endif
  9899  000DCC                     	if	0	;tblptru may be non-zero
  9900  000DCC                     	endif
  9901  000DCC  0008               	tblrd		*
  9902  000DCE  50F5               	movf	tablat,w,c
  9903  000DD0  6E4B               	movwf	??i2_vfpfcnvrt^0,c
  9904  000DD2  6A4C               	clrf	(??i2_vfpfcnvrt+1)^0,c
  9905                           
  9906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9907                           ; Switch size 1, requested type "simple"
  9908                           ; Number of cases is 1, Range of values is 0 to 0
  9909                           ; switch strategies available:
  9910                           ; Name         Instructions Cycles
  9911                           ; simple_byte            4     3 (average)
  9912                           ;	Chosen strategy is simple_byte
  9913  000DD4  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  9914  000DD6  0A00               	xorlw	0	; case 0
  9915  000DD8  B4D8               	btfsc	status,2,c
  9916  000DDA  EFF1  F006         	goto	i2l5850
  9917  000DDE  EFD7  F006         	goto	i2l3984
  9918  000DE2                     i2l5850:
  9919                           
  9920                           ; Switch size 1, requested type "simple"
  9921                           ; Number of cases is 5, Range of values is 32 to 48
  9922                           ; switch strategies available:
  9923                           ; Name         Instructions Cycles
  9924                           ; simple_byte           16     9 (average)
  9925                           ;	Chosen strategy is simple_byte
  9926  000DE2  504B               	movf	??i2_vfpfcnvrt^0,w,c
  9927  000DE4  0A20               	xorlw	32	; case 32
  9928  000DE6  B4D8               	btfsc	status,2,c
  9929  000DE8  EFCF  F006         	goto	i2l3976
  9930  000DEC  0A03               	xorlw	3	; case 35
  9931  000DEE  B4D8               	btfsc	status,2,c
  9932  000DF0  EFD3  F006         	goto	i2l3980
  9933  000DF4  0A08               	xorlw	8	; case 43
  9934  000DF6  B4D8               	btfsc	status,2,c
  9935  000DF8  EFCB  F006         	goto	i2l3972
  9936  000DFC  0A06               	xorlw	6	; case 45
  9937  000DFE  B4D8               	btfsc	status,2,c
  9938  000E00  EFBC  F006         	goto	i2l3964
  9939  000E04  0A1D               	xorlw	29	; case 48
  9940  000E06  B4D8               	btfsc	status,2,c
  9941  000E08  EFC7  F006         	goto	i2l3968
  9942  000E0C  EFD7  F006         	goto	i2l3984
  9943  000E10                     i2l3990:
  9944                           
  9945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9946  000E10  5051               	movf	i2vfpfcnvrt@done^0,w,c
  9947  000E12  1052               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
  9948  000E14  B4D8               	btfsc	status,2,c
  9949  000E16  EF0F  F007         	goto	i2u378_41
  9950  000E1A  EF11  F007         	goto	i2u378_40
  9951  000E1E                     i2u378_41:
  9952  000E1E  EFDD  F006         	goto	i2l3988
  9953  000E22                     i2u378_40:
  9954  000E22                     
  9955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9956  000E22  0100               	movlb	0	; () banked
  9957  000E24  A1CE               	btfss	_flags& (0+255),0,b
  9958  000E26  EF17  F007         	goto	i2u379_41
  9959  000E2A  EF19  F007         	goto	i2u379_40
  9960  000E2E                     i2u379_41:
  9961  000E2E  EF1A  F007         	goto	i2l3994
  9962  000E32                     i2u379_40:
  9963  000E32                     
  9964                           ; BSR set to: 0
  9965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9966  000E32  93CE               	bcf	_flags& (0+255),1,b
  9967  000E34                     i2l3994:
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9971  000E34  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9972  000E38  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9973  000E3C  CFDE FFF6          	movff	postinc2,tblptrl
  9974  000E40  CFDD FFF7          	movff	postdec2,tblptrh
  9975  000E44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9976  000E44  6AF8               	clrf	tblptru,c
  9977  000E46                     	endif
  9978  000E46                     	if	0	;tblptru may be non-zero
  9979  000E46                     	endif
  9980  000E46  0008               	tblrd		*
  9981  000E48  50F5               	movf	tablat,w,c
  9982  000E4A  0A2A               	xorlw	42
  9983  000E4C  A4D8               	btfss	status,2,c
  9984  000E4E  EF2B  F007         	goto	i2u380_41
  9985  000E52  EF2D  F007         	goto	i2u380_40
  9986  000E56                     i2u380_41:
  9987  000E56  EF56  F007         	goto	i2l4002
  9988  000E5A                     i2u380_40:
  9989  000E5A                     
  9990                           ; BSR set to: 0
  9991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9992  000E5A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9993  000E5E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9994  000E62  2ADE               	incf	postinc2,f,c
  9995  000E64  0E00               	movlw	0
  9996  000E66  22DD               	addwfc	postdec2,f,c
  9997                           
  9998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9999  000E68  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 10000  000E6C  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 10001  000E70  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 10002  000E74  0E02               	movlw	2
 10003  000E76  26DE               	addwf	postinc2,f,c
 10004  000E78  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 10005  000E7C  0E00               	movlw	0
 10006  000E7E  22DD               	addwfc	postdec2,f,c
 10007  000E80  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 10008  000E84  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 10009  000E88  CFDE F0CA          	movff	postinc2,_width
 10010  000E8C  CFDD F0CB          	movff	postdec2,_width+1
 10011  000E90                     
 10012                           ; BSR set to: 0
 10013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 10014  000E90  BFCB               	btfsc	(_width+1)& (0+255),7,b
 10015  000E92  EF4F  F007         	goto	i2u381_40
 10016  000E96  EF4D  F007         	goto	i2u381_41
 10017  000E9A                     i2u381_41:
 10018  000E9A  EF9A  F007         	goto	i2l4012
 10019  000E9E                     i2u381_40:
 10020  000E9E                     
 10021                           ; BSR set to: 0
 10022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 10023  000E9E  81CE               	bsf	_flags& (0+255),0,b
 10024                           
 10025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 10026  000EA0  6DCA               	negf	_width& (0+255),b
 10027  000EA2  1FCB               	comf	(_width+1)& (0+255),f,b
 10028  000EA4  B0D8               	btfsc	status,0,c
 10029  000EA6  2BCB               	incf	(_width+1)& (0+255),f,b
 10030  000EA8  EF9A  F007         	goto	i2l4012
 10031  000EAC                     i2l4002:
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 10035  000EAC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10036  000EB0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10037  000EB4  CFDE F008          	movff	postinc2,i2atoi@s
 10038  000EB8  CFDD F009          	movff	postdec2,i2atoi@s+1
 10039  000EBC  ECDD  F00E         	call	i2_atoi	;wreg free
 10040  000EC0  C008  F0CA         	movff	?i2_atoi,_width
 10041  000EC4  C009  F0CB         	movff	?i2_atoi+1,_width+1
 10042                           
 10043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10044  000EC8  EF6D  F007         	goto	i2l4006
 10045  000ECC                     i2l4004:
 10046                           
 10047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 10048  000ECC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10049  000ED0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10050  000ED4  2ADE               	incf	postinc2,f,c
 10051  000ED6  0E00               	movlw	0
 10052  000ED8  22DD               	addwfc	postdec2,f,c
 10053  000EDA                     i2l4006:
 10054  000EDA  0ED0               	movlw	208
 10055  000EDC  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 10056  000EDE  0EFF               	movlw	255
 10057  000EE0  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 10058  000EE2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10059  000EE6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10060  000EEA  CFDE FFF6          	movff	postinc2,tblptrl
 10061  000EEE  CFDD FFF7          	movff	postdec2,tblptrh
 10062  000EF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10063  000EF2  6AF8               	clrf	tblptru,c
 10064  000EF4                     	endif
 10065  000EF4                     	if	0	;tblptru may be non-zero
 10066  000EF4                     	endif
 10067  000EF4  0008               	tblrd		*
 10068  000EF6  50F5               	movf	tablat,w,c
 10069  000EF8  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 10070  000EFA  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 10071  000EFC  504B               	movf	??i2_vfpfcnvrt^0,w,c
 10072  000EFE  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 10073  000F00  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 10074  000F02  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 10075  000F04  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 10076  000F06  E10A               	bnz	i2u382_40
 10077  000F08  0E0A               	movlw	10
 10078  000F0A  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 10079  000F0C  A0D8               	btfss	status,0,c
 10080  000F0E  EF8B  F007         	goto	i2u382_41
 10081  000F12  EF8E  F007         	goto	i2u382_40
 10082  000F16                     i2u382_41:
 10083  000F16  0E01               	movlw	1
 10084  000F18  EF8F  F007         	goto	i2u383_40
 10085  000F1C                     i2u382_40:
 10086  000F1C  0E00               	movlw	0
 10087  000F1E                     i2u383_40:
 10088  000F1E  6E53               	movwf	i2_vfpfcnvrt$1518^0,c
 10089  000F20  6A54               	clrf	(i2_vfpfcnvrt$1518+1)^0,c
 10090  000F22  5053               	movf	i2_vfpfcnvrt$1518^0,w,c
 10091  000F24  1054               	iorwf	(i2_vfpfcnvrt$1518+1)^0,w,c
 10092  000F26  A4D8               	btfss	status,2,c
 10093  000F28  EF98  F007         	goto	i2u384_41
 10094  000F2C  EF9A  F007         	goto	i2u384_40
 10095  000F30                     i2u384_41:
 10096  000F30  EF66  F007         	goto	i2l4004
 10097  000F34                     i2u384_40:
 10098  000F34                     i2l4012:
 10099                           
 10100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 10101  000F34  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10102  000F38  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10103  000F3C  CFDE FFF6          	movff	postinc2,tblptrl
 10104  000F40  CFDD FFF7          	movff	postdec2,tblptrh
 10105  000F44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10106  000F44  6AF8               	clrf	tblptru,c
 10107  000F46                     	endif
 10108  000F46                     	if	0	;tblptru may be non-zero
 10109  000F46                     	endif
 10110  000F46  0008               	tblrd		*
 10111  000F48  50F5               	movf	tablat,w,c
 10112  000F4A  0A63               	xorlw	99
 10113  000F4C  A4D8               	btfss	status,2,c
 10114  000F4E  EFAB  F007         	goto	i2u385_41
 10115  000F52  EFAD  F007         	goto	i2u385_40
 10116  000F56                     i2u385_41:
 10117  000F56  EFD4  F007         	goto	i2l4020
 10118  000F5A                     i2u385_40:
 10119  000F5A                     
 10120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 10121  000F5A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10122  000F5E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10123  000F62  2ADE               	incf	postinc2,f,c
 10124  000F64  0E00               	movlw	0
 10125  000F66  22DD               	addwfc	postdec2,f,c
 10126                           
 10127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10128  000F68  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 10129  000F6C  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 10130  000F70  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 10131  000F74  0E02               	movlw	2
 10132  000F76  26DE               	addwf	postinc2,f,c
 10133  000F78  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 10134  000F7C  0E00               	movlw	0
 10135  000F7E  22DD               	addwfc	postdec2,f,c
 10136  000F80  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 10137  000F84  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 10138  000F88  50DF               	movf	indf2,w,c
 10139  000F8A  6E5D               	movwf	i2vfpfcnvrt@c^0,c
 10140  000F8C                     
 10141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 10142  000F8C  C045  F01E         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 10143  000F90  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 10144  000F94  C05D  F020         	movff	i2vfpfcnvrt@c,i2ctoa@c
 10145  000F98  EC86  F017         	call	i2_ctoa	;wreg free
 10146  000F9C  C01E  F045         	movff	?i2_ctoa,?i2_vfpfcnvrt
 10147  000FA0  C01F  F046         	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
 10148  000FA4  EF2E  F009         	goto	i2l717
 10149  000FA8                     i2l4020:
 10150                           
 10151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 10152  000FA8  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10153  000FAC  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10154  000FB0  CFDE FFF6          	movff	postinc2,tblptrl
 10155  000FB4  CFDD FFF7          	movff	postdec2,tblptrh
 10156  000FB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10157  000FB8  6AF8               	clrf	tblptru,c
 10158  000FBA                     	endif
 10159  000FBA                     	if	0	;tblptru may be non-zero
 10160  000FBA                     	endif
 10161  000FBA  0008               	tblrd		*
 10162  000FBC  50F5               	movf	tablat,w,c
 10163  000FBE  0A73               	xorlw	115
 10164  000FC0  A4D8               	btfss	status,2,c
 10165  000FC2  EFE5  F007         	goto	i2u386_41
 10166  000FC6  EFE7  F007         	goto	i2u386_40
 10167  000FCA                     i2u386_41:
 10168  000FCA  EF12  F008         	goto	i2l4028
 10169  000FCE                     i2u386_40:
 10170  000FCE                     
 10171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 10172  000FCE  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10173  000FD2  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10174  000FD6  2ADE               	incf	postinc2,f,c
 10175  000FD8  0E00               	movlw	0
 10176  000FDA  22DD               	addwfc	postdec2,f,c
 10177                           
 10178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 10179  000FDC  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 10180  000FE0  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 10181  000FE4  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 10182  000FE8  0E02               	movlw	2
 10183  000FEA  26DE               	addwf	postinc2,f,c
 10184  000FEC  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 10185  000FF0  0E00               	movlw	0
 10186  000FF2  22DD               	addwfc	postdec2,f,c
 10187  000FF4  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 10188  000FF8  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 10189  000FFC  CFDE F04F          	movff	postinc2,i2vfpfcnvrt@cp
 10190  001000  CFDD F050          	movff	postdec2,i2vfpfcnvrt@cp+1
 10191  001004                     
 10192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 10193  001004  C045  F00C         	movff	i2vfpfcnvrt@fp,i2stoa@fp
 10194  001008  C046  F00D         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 10195  00100C  C04F  F00E         	movff	i2vfpfcnvrt@cp,i2stoa@s
 10196  001010  C050  F00F         	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 10197  001014  EC70  F010         	call	i2_stoa	;wreg free
 10198  001018  C00C  F045         	movff	?i2_stoa,?i2_vfpfcnvrt
 10199  00101C  C00D  F046         	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 10200  001020  EF2E  F009         	goto	i2l717
 10201  001024                     i2l4028:
 10202                           
 10203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 10204  001024  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10205  001028  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10206  00102C  CFDE FFF6          	movff	postinc2,tblptrl
 10207  001030  CFDD FFF7          	movff	postdec2,tblptrh
 10208  001034                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10209  001034  6AF8               	clrf	tblptru,c
 10210  001036                     	endif
 10211  001036                     	if	0	;tblptru may be non-zero
 10212  001036                     	endif
 10213  001036  0008               	tblrd		*
 10214  001038  50F5               	movf	tablat,w,c
 10215  00103A  0A75               	xorlw	117
 10216  00103C  A4D8               	btfss	status,2,c
 10217  00103E  EF23  F008         	goto	i2u387_41
 10218  001042  EF25  F008         	goto	i2u387_40
 10219  001046                     i2u387_41:
 10220  001046  EF66  F008         	goto	i2l4036
 10221  00104A                     i2u387_40:
 10222  00104A                     
 10223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 10224  00104A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10225  00104E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10226  001052  2ADE               	incf	postinc2,f,c
 10227  001054  0E00               	movlw	0
 10228  001056  22DD               	addwfc	postdec2,f,c
 10229                           
 10230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10231  001058  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 10232  00105C  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 10233  001060  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 10234  001064  0E02               	movlw	2
 10235  001066  26DE               	addwf	postinc2,f,c
 10236  001068  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 10237  00106C  0E00               	movlw	0
 10238  00106E  22DD               	addwfc	postdec2,f,c
 10239  001070  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 10240  001074  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 10241  001078  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 10242  00107C  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 10243  001080  C04D  F055         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 10244  001084  C04E  F056         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 10245  001088  6A57               	clrf	(i2vfpfcnvrt@llu+2)^0,c
 10246  00108A  6A58               	clrf	(i2vfpfcnvrt@llu+3)^0,c
 10247  00108C  6A59               	clrf	(i2vfpfcnvrt@llu+4)^0,c
 10248  00108E  6A5A               	clrf	(i2vfpfcnvrt@llu+5)^0,c
 10249  001090  6A5B               	clrf	(i2vfpfcnvrt@llu+6)^0,c
 10250  001092  6A5C               	clrf	(i2vfpfcnvrt@llu+7)^0,c
 10251  001094                     
 10252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 10253  001094  C045  F01E         	movff	i2vfpfcnvrt@fp,i2utoa@fp
 10254  001098  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
 10255  00109C  C055  F020         	movff	i2vfpfcnvrt@llu,i2utoa@d
 10256  0010A0  C056  F021         	movff	i2vfpfcnvrt@llu+1,i2utoa@d+1
 10257  0010A4  C057  F022         	movff	i2vfpfcnvrt@llu+2,i2utoa@d+2
 10258  0010A8  C058  F023         	movff	i2vfpfcnvrt@llu+3,i2utoa@d+3
 10259  0010AC  C059  F024         	movff	i2vfpfcnvrt@llu+4,i2utoa@d+4
 10260  0010B0  C05A  F025         	movff	i2vfpfcnvrt@llu+5,i2utoa@d+5
 10261  0010B4  C05B  F026         	movff	i2vfpfcnvrt@llu+6,i2utoa@d+6
 10262  0010B8  C05C  F027         	movff	i2vfpfcnvrt@llu+7,i2utoa@d+7
 10263  0010BC  EC0C  F00D         	call	i2_utoa	;wreg free
 10264  0010C0  C01E  F045         	movff	?i2_utoa,?i2_vfpfcnvrt
 10265  0010C4  C01F  F046         	movff	?i2_utoa+1,?i2_vfpfcnvrt+1
 10266  0010C8  EF2E  F009         	goto	i2l717
 10267  0010CC                     i2l4036:
 10268                           
 10269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10270  0010CC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10271  0010D0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10272  0010D4  CFDE FFF6          	movff	postinc2,tblptrl
 10273  0010D8  CFDD FFF7          	movff	postdec2,tblptrh
 10274  0010DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10275  0010DC  6AF8               	clrf	tblptru,c
 10276  0010DE                     	endif
 10277  0010DE                     	if	0	;tblptru may be non-zero
 10278  0010DE                     	endif
 10279  0010DE  0008               	tblrd		*
 10280  0010E0  50F5               	movf	tablat,w,c
 10281  0010E2  0A78               	xorlw	120
 10282  0010E4  B4D8               	btfsc	status,2,c
 10283  0010E6  EF77  F008         	goto	i2u388_41
 10284  0010EA  EF79  F008         	goto	i2u388_40
 10285  0010EE                     i2u388_41:
 10286  0010EE  EF8C  F008         	goto	i2l4040
 10287  0010F2                     i2u388_40:
 10288  0010F2  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10289  0010F6  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10290  0010FA  CFDE FFF6          	movff	postinc2,tblptrl
 10291  0010FE  CFDD FFF7          	movff	postdec2,tblptrh
 10292  001102                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10293  001102  6AF8               	clrf	tblptru,c
 10294  001104                     	endif
 10295  001104                     	if	0	;tblptru may be non-zero
 10296  001104                     	endif
 10297  001104  0008               	tblrd		*
 10298  001106  50F5               	movf	tablat,w,c
 10299  001108  0A58               	xorlw	88
 10300  00110A  A4D8               	btfss	status,2,c
 10301  00110C  EF8A  F008         	goto	i2u389_41
 10302  001110  EF8C  F008         	goto	i2u389_40
 10303  001114                     i2u389_41:
 10304  001114  EFDB  F008         	goto	i2l4050
 10305  001118                     i2u389_40:
 10306  001118                     i2l4040:
 10307                           
 10308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 10309  001118  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10310  00111C  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10311  001120  CFDE FFF6          	movff	postinc2,tblptrl
 10312  001124  CFDD FFF7          	movff	postdec2,tblptrh
 10313  001128                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10314  001128  6AF8               	clrf	tblptru,c
 10315  00112A                     	endif
 10316  00112A                     	if	0	;tblptru may be non-zero
 10317  00112A                     	endif
 10318  00112A  0008               	tblrd		*
 10319  00112C  CFF5 F05D          	movff	tablat,i2vfpfcnvrt@c
 10320  001130                     
 10321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 10322  001130  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10323  001134  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10324  001138  2ADE               	incf	postinc2,f,c
 10325  00113A  0E00               	movlw	0
 10326  00113C  22DD               	addwfc	postdec2,f,c
 10327  00113E                     
 10328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10329  00113E  C049  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 10330  001142  C04A  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 10331  001146  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt
 10332  00114A  0E02               	movlw	2
 10333  00114C  26DE               	addwf	postinc2,f,c
 10334  00114E  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt+1
 10335  001152  0E00               	movlw	0
 10336  001154  22DD               	addwfc	postdec2,f,c
 10337  001156  C04B  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 10338  00115A  C04C  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 10339  00115E  CFDE F04D          	movff	postinc2,??i2_vfpfcnvrt+2
 10340  001162  CFDD F04E          	movff	postdec2,??i2_vfpfcnvrt+3
 10341  001166  C04D  F055         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 10342  00116A  C04E  F056         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 10343  00116E  6A57               	clrf	(i2vfpfcnvrt@llu+2)^0,c
 10344  001170  6A58               	clrf	(i2vfpfcnvrt@llu+3)^0,c
 10345  001172  6A59               	clrf	(i2vfpfcnvrt@llu+4)^0,c
 10346  001174  6A5A               	clrf	(i2vfpfcnvrt@llu+5)^0,c
 10347  001176  6A5B               	clrf	(i2vfpfcnvrt@llu+6)^0,c
 10348  001178  6A5C               	clrf	(i2vfpfcnvrt@llu+7)^0,c
 10349  00117A                     
 10350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 10351  00117A  C045  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 10352  00117E  C046  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 10353  001182  C055  F020         	movff	i2vfpfcnvrt@llu,i2xtoa@d
 10354  001186  C056  F021         	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 10355  00118A  C057  F022         	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 10356  00118E  C058  F023         	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 10357  001192  C059  F024         	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 10358  001196  C05A  F025         	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 10359  00119A  C05B  F026         	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 10360  00119E  C05C  F027         	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 10361  0011A2  C05D  F028         	movff	i2vfpfcnvrt@c,i2xtoa@x
 10362  0011A6  EC9C  F00A         	call	i2_xtoa	;wreg free
 10363  0011AA  C01E  F045         	movff	?i2_xtoa,?i2_vfpfcnvrt
 10364  0011AE  C01F  F046         	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 10365  0011B2  EF2E  F009         	goto	i2l717
 10366  0011B6                     i2l4050:
 10367                           
 10368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 10369  0011B6  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10370  0011BA  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10371  0011BE  CFDE FFF6          	movff	postinc2,tblptrl
 10372  0011C2  CFDD FFF7          	movff	postdec2,tblptrh
 10373  0011C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10374  0011C6  6AF8               	clrf	tblptru,c
 10375  0011C8                     	endif
 10376  0011C8                     	if	0	;tblptru may be non-zero
 10377  0011C8                     	endif
 10378  0011C8  0008               	tblrd		*
 10379  0011CA  50F5               	movf	tablat,w,c
 10380  0011CC  0A25               	xorlw	37
 10381  0011CE  A4D8               	btfss	status,2,c
 10382  0011D0  EFEC  F008         	goto	i2u390_41
 10383  0011D4  EFEE  F008         	goto	i2u390_40
 10384  0011D8                     i2u390_41:
 10385  0011D8  EF05  F009         	goto	i2l4060
 10386  0011DC                     i2u390_40:
 10387  0011DC                     
 10388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 10389  0011DC  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10390  0011E0  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10391  0011E4  2ADE               	incf	postinc2,f,c
 10392  0011E6  0E00               	movlw	0
 10393  0011E8  22DD               	addwfc	postdec2,f,c
 10394  0011EA                     
 10395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 10396  0011EA  0E00               	movlw	0
 10397  0011EC  6E04               	movwf	(i2fputc@c+1)^0,c
 10398  0011EE  0E25               	movlw	37
 10399  0011F0  6E03               	movwf	i2fputc@c^0,c
 10400  0011F2  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 10401  0011F6  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 10402  0011FA  EC09  F016         	call	i2_fputc	;wreg free
 10403  0011FE                     i2l4056:
 10404                           
 10405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 10406  0011FE  0E00               	movlw	0
 10407  001200  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 10408  001202  0E01               	movlw	1
 10409  001204  6E45               	movwf	?i2_vfpfcnvrt^0,c
 10410  001206  EF2E  F009         	goto	i2l717
 10411  00120A                     i2l4060:
 10412                           
 10413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 10414  00120A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10415  00120E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10416  001212  2ADE               	incf	postinc2,f,c
 10417  001214  0E00               	movlw	0
 10418  001216  22DD               	addwfc	postdec2,f,c
 10419  001218                     
 10420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 10421  001218  0E00               	movlw	0
 10422  00121A  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 10423  00121C  0E00               	movlw	0
 10424  00121E  6E45               	movwf	?i2_vfpfcnvrt^0,c
 10425  001220  EF2E  F009         	goto	i2l717
 10426  001224                     i2l4066:
 10427                           
 10428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 10429  001224  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10430  001228  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10431  00122C  CFDE FFF6          	movff	postinc2,tblptrl
 10432  001230  CFDD FFF7          	movff	postdec2,tblptrh
 10433  001234                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10434  001234  6AF8               	clrf	tblptru,c
 10435  001236                     	endif
 10436  001236                     	if	0	;tblptru may be non-zero
 10437  001236                     	endif
 10438  001236  0008               	tblrd		*
 10439  001238  50F5               	movf	tablat,w,c
 10440  00123A  6E03               	movwf	i2fputc@c^0,c
 10441  00123C  6A04               	clrf	(i2fputc@c+1)^0,c
 10442  00123E  C045  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 10443  001242  C046  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 10444  001246  EC09  F016         	call	i2_fputc	;wreg free
 10445  00124A                     
 10446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 10447  00124A  C047  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 10448  00124E  C048  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 10449  001252  2ADE               	incf	postinc2,f,c
 10450  001254  0E00               	movlw	0
 10451  001256  22DD               	addwfc	postdec2,f,c
 10452  001258  EFFF  F008         	goto	i2l4056
 10453  00125C                     i2l717:
 10454  00125C  0012               	return		;funcret
 10455  00125E                     __end_ofi2_vfpfcnvrt:
 10456                           	opt callstack 0
 10457                           
 10458 ;; *************** function i2_xtoa *****************
 10459 ;; Defined at:
 10460 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 10463 ;;		 -> NULL(0), 
 10464 ;;  d               8   31[COMRAM] unsigned long long 
 10465 ;;  x               1   39[COMRAM] unsigned char 
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;  xtoa            8   56[COMRAM] unsigned long long 
 10468 ;;  xtoa            2   66[COMRAM] int 
 10469 ;;  xtoa            2   64[COMRAM] int 
 10470 ;;  xtoa            2   54[COMRAM] int 
 10471 ;;  xtoa            2   52[COMRAM] int 
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  2   29[COMRAM] int 
 10474 ;; Registers used:
 10475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10481 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10483 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;Total ram usage:       39 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; Hardware stack levels required when called:    5
 10488 ;; This function calls:
 10489 ;;		i2_isalpha
 10490 ;;		i2_isupper
 10491 ;;		i2_pad
 10492 ;;		i2_toupper
 10493 ;; This function is called by:
 10494 ;;		i2_vfpfcnvrt
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           	psect	text56
 10499  001538                     __ptext56:
 10500                           	opt callstack 0
 10501  001538                     i2_xtoa:
 10502                           	opt callstack 11
 10503  001538                     
 10504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 10505  001538  0100               	movlb	0	; () banked
 10506  00153A  BFCD               	btfsc	(_prec+1)& (0+255),7,b
 10507  00153C  EFA2  F00A         	goto	i2u312_41
 10508  001540  EFA4  F00A         	goto	i2u312_40
 10509  001544                     i2u312_41:
 10510  001544  EFA5  F00A         	goto	i2l3650
 10511  001548                     i2u312_40:
 10512  001548                     
 10513                           ; BSR set to: 0
 10514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 10515  001548  93CE               	bcf	_flags& (0+255),1,b
 10516  00154A                     i2l3650:
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 10520  00154A  BFCD               	btfsc	(_prec+1)& (0+255),7,b
 10521  00154C  EFB2  F00A         	goto	i2u313_40
 10522  001550  51CD               	movf	(_prec+1)& (0+255),w,b
 10523  001552  E106               	bnz	i2u313_41
 10524  001554  05CC               	decf	_prec& (0+255),w,b
 10525  001556  B0D8               	btfsc	status,0,c
 10526  001558  EFB0  F00A         	goto	i2u313_41
 10527  00155C  EFB2  F00A         	goto	i2u313_40
 10528  001560                     i2u313_41:
 10529  001560  EFB8  F00A         	goto	i2l665
 10530  001564                     i2u313_40:
 10531  001564                     
 10532                           ; BSR set to: 0
 10533  001564  0E00               	movlw	0
 10534  001566  6E36               	movwf	(i2xtoa@p+1)^0,c
 10535  001568  0E01               	movlw	1
 10536  00156A  6E35               	movwf	i2xtoa@p^0,c
 10537  00156C  EFBC  F00A         	goto	i2l667
 10538  001570                     i2l665:
 10539                           
 10540                           ; BSR set to: 0
 10541  001570  C0CC  F035         	movff	_prec,i2xtoa@p
 10542  001574  C0CD  F036         	movff	_prec+1,i2xtoa@p+1
 10543  001578                     i2l667:
 10544                           
 10545                           ; BSR set to: 0
 10546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 10547  001578  C0CA  F037         	movff	_width,i2xtoa@w
 10548  00157C  C0CB  F038         	movff	_width+1,i2xtoa@w+1
 10549                           
 10550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 10551  001580  A9CE               	btfss	_flags& (0+255),4,b
 10552  001582  EFC5  F00A         	goto	i2u314_41
 10553  001586  EFC7  F00A         	goto	i2u314_40
 10554  00158A                     i2u314_41:
 10555  00158A  EFCB  F00A         	goto	i2l3656
 10556  00158E                     i2u314_40:
 10557  00158E                     
 10558                           ; BSR set to: 0
 10559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 10560  00158E  0EFE               	movlw	254
 10561  001590  2637               	addwf	i2xtoa@w^0,f,c
 10562  001592  0EFF               	movlw	255
 10563  001594  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 10564  001596                     i2l3656:
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 10568  001596  C020  F039         	movff	i2xtoa@d,i2xtoa@n
 10569  00159A  C021  F03A         	movff	i2xtoa@d+1,i2xtoa@n+1
 10570  00159E  C022  F03B         	movff	i2xtoa@d+2,i2xtoa@n+2
 10571  0015A2  C023  F03C         	movff	i2xtoa@d+3,i2xtoa@n+3
 10572  0015A6  C024  F03D         	movff	i2xtoa@d+4,i2xtoa@n+4
 10573  0015AA  C025  F03E         	movff	i2xtoa@d+5,i2xtoa@n+5
 10574  0015AE  C026  F03F         	movff	i2xtoa@d+6,i2xtoa@n+6
 10575  0015B2  C027  F040         	movff	i2xtoa@d+7,i2xtoa@n+7
 10576  0015B6                     
 10577                           ; BSR set to: 0
 10578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 10579  0015B6  0E00               	movlw	0
 10580  0015B8  6E42               	movwf	(i2xtoa@i+1)^0,c
 10581  0015BA  0E1F               	movlw	31
 10582  0015BC  6E41               	movwf	i2xtoa@i^0,c
 10583  0015BE                     
 10584                           ; BSR set to: 0
 10585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 10586  0015BE  0E00               	movlw	0
 10587  0015C0  0101               	movlb	1	; () banked
 10588  0015C2  6F44               	movwf	(_dbuf+31)& (0+255),b
 10589                           
 10590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10591  0015C4  EF97  F00B         	goto	i2l3692
 10592  0015C8                     i2l3662:
 10593                           
 10594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 10595  0015C8  0641               	decf	i2xtoa@i^0,f,c
 10596  0015CA  A0D8               	btfss	status,0,c
 10597  0015CC  0642               	decf	(i2xtoa@i+1)^0,f,c
 10598  0015CE                     
 10599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 10600  0015CE  0E0F               	movlw	15
 10601  0015D0  1439               	andwf	i2xtoa@n^0,w,c
 10602  0015D2  6E43               	movwf	i2xtoa@c^0,c
 10603  0015D4  6A44               	clrf	(i2xtoa@c+1)^0,c
 10604  0015D6                     
 10605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 10606  0015D6  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 10607  0015D8  EFF7  F00A         	goto	i2u315_41
 10608  0015DC  5044               	movf	(i2xtoa@c+1)^0,w,c
 10609  0015DE  E109               	bnz	i2u315_40
 10610  0015E0  0E0A               	movlw	10
 10611  0015E2  5C43               	subwf	i2xtoa@c^0,w,c
 10612  0015E4  A0D8               	btfss	status,0,c
 10613  0015E6  EFF7  F00A         	goto	i2u315_41
 10614  0015EA  EFF9  F00A         	goto	i2u315_40
 10615  0015EE                     i2u315_41:
 10616  0015EE  EF01  F00B         	goto	i2l3670
 10617  0015F2                     i2u315_40:
 10618  0015F2  0E57               	movlw	87
 10619  0015F4  2443               	addwf	i2xtoa@c^0,w,c
 10620  0015F6  6E43               	movwf	i2xtoa@c^0,c
 10621  0015F8  0E00               	movlw	0
 10622  0015FA  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 10623  0015FC  6E44               	movwf	(i2xtoa@c+1)^0,c
 10624  0015FE  EF07  F00B         	goto	i2l674
 10625  001602                     i2l3670:
 10626  001602  0E30               	movlw	48
 10627  001604  2443               	addwf	i2xtoa@c^0,w,c
 10628  001606  6E43               	movwf	i2xtoa@c^0,c
 10629  001608  0E00               	movlw	0
 10630  00160A  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 10631  00160C  6E44               	movwf	(i2xtoa@c+1)^0,c
 10632  00160E                     i2l674:
 10633  00160E  0EBF               	movlw	191
 10634  001610  6E29               	movwf	??i2_xtoa^0,c
 10635  001612  0EFF               	movlw	255
 10636  001614  6E2A               	movwf	(??i2_xtoa+1)^0,c
 10637  001616  5028               	movf	i2xtoa@x^0,w,c
 10638  001618  6E2B               	movwf	(??i2_xtoa+2)^0,c
 10639  00161A  6A2C               	clrf	(??i2_xtoa+3)^0,c
 10640  00161C  5029               	movf	??i2_xtoa^0,w,c
 10641  00161E  262B               	addwf	(??i2_xtoa+2)^0,f,c
 10642  001620  502A               	movf	(??i2_xtoa+1)^0,w,c
 10643  001622  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 10644  001624  502C               	movf	(??i2_xtoa+3)^0,w,c
 10645  001626  E10A               	bnz	i2u316_40
 10646  001628  0E1A               	movlw	26
 10647  00162A  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 10648  00162C  A0D8               	btfss	status,0,c
 10649  00162E  EF1B  F00B         	goto	i2u316_41
 10650  001632  EF1E  F00B         	goto	i2u316_40
 10651  001636                     i2u316_41:
 10652  001636  0E01               	movlw	1
 10653  001638  EF1F  F00B         	goto	i2u317_40
 10654  00163C                     i2u316_40:
 10655  00163C  0E00               	movlw	0
 10656  00163E                     i2u317_40:
 10657  00163E  6E31               	movwf	i2_xtoa$1503^0,c
 10658  001640  6A32               	clrf	(i2_xtoa$1503+1)^0,c
 10659  001642  5031               	movf	i2_xtoa$1503^0,w,c
 10660  001644  1032               	iorwf	(i2_xtoa$1503+1)^0,w,c
 10661  001646  B4D8               	btfsc	status,2,c
 10662  001648  EF28  F00B         	goto	i2u318_41
 10663  00164C  EF2A  F00B         	goto	i2u318_40
 10664  001650                     i2u318_41:
 10665  001650  EF5A  F00B         	goto	i2l3684
 10666  001654                     i2u318_40:
 10667  001654  0E9F               	movlw	159
 10668  001656  6E29               	movwf	??i2_xtoa^0,c
 10669  001658  0EFF               	movlw	255
 10670  00165A  6E2A               	movwf	(??i2_xtoa+1)^0,c
 10671  00165C  0E20               	movlw	32
 10672  00165E  1043               	iorwf	i2xtoa@c^0,w,c
 10673  001660  6E2B               	movwf	(??i2_xtoa+2)^0,c
 10674  001662  0E00               	movlw	0
 10675  001664  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 10676  001666  6E2C               	movwf	(??i2_xtoa+3)^0,c
 10677  001668  5029               	movf	??i2_xtoa^0,w,c
 10678  00166A  262B               	addwf	(??i2_xtoa+2)^0,f,c
 10679  00166C  502A               	movf	(??i2_xtoa+1)^0,w,c
 10680  00166E  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 10681  001670  502C               	movf	(??i2_xtoa+3)^0,w,c
 10682  001672  E10A               	bnz	i2u319_40
 10683  001674  0E1A               	movlw	26
 10684  001676  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 10685  001678  A0D8               	btfss	status,0,c
 10686  00167A  EF41  F00B         	goto	i2u319_41
 10687  00167E  EF44  F00B         	goto	i2u319_40
 10688  001682                     i2u319_41:
 10689  001682  0E01               	movlw	1
 10690  001684  EF45  F00B         	goto	i2u320_40
 10691  001688                     i2u319_40:
 10692  001688  0E00               	movlw	0
 10693  00168A                     i2u320_40:
 10694  00168A  6E33               	movwf	i2_xtoa$1504^0,c
 10695  00168C  6A34               	clrf	(i2_xtoa$1504+1)^0,c
 10696  00168E  5033               	movf	i2_xtoa$1504^0,w,c
 10697  001690  1034               	iorwf	(i2_xtoa$1504+1)^0,w,c
 10698  001692  B4D8               	btfsc	status,2,c
 10699  001694  EF4E  F00B         	goto	i2u321_41
 10700  001698  EF50  F00B         	goto	i2u321_40
 10701  00169C                     i2u321_41:
 10702  00169C  EF5A  F00B         	goto	i2l3684
 10703  0016A0                     i2u321_40:
 10704  0016A0                     
 10705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 10706  0016A0  C043  F007         	movff	i2xtoa@c,i2toupper@c
 10707  0016A4  C044  F008         	movff	i2xtoa@c+1,i2toupper@c+1
 10708  0016A8  EC57  F017         	call	i2_toupper	;wreg free
 10709  0016AC  C007  F043         	movff	?i2_toupper,i2xtoa@c
 10710  0016B0  C008  F044         	movff	?i2_toupper+1,i2xtoa@c+1
 10711  0016B4                     i2l3684:
 10712                           
 10713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 10714  0016B4  0E25               	movlw	low _dbuf
 10715  0016B6  2441               	addwf	i2xtoa@i^0,w,c
 10716  0016B8  6ED9               	movwf	fsr2l,c
 10717  0016BA  0E01               	movlw	high _dbuf
 10718  0016BC  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 10719  0016BE  6EDA               	movwf	fsr2h,c
 10720  0016C0  C043  FFDF         	movff	i2xtoa@c,indf2
 10721  0016C4                     
 10722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 10723  0016C4  0635               	decf	i2xtoa@p^0,f,c
 10724  0016C6  A0D8               	btfss	status,0,c
 10725  0016C8  0636               	decf	(i2xtoa@p+1)^0,f,c
 10726  0016CA                     
 10727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 10728  0016CA  0637               	decf	i2xtoa@w^0,f,c
 10729  0016CC  A0D8               	btfss	status,0,c
 10730  0016CE  0638               	decf	(i2xtoa@w+1)^0,f,c
 10731  0016D0                     
 10732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 10733  0016D0  C039  F029         	movff	i2xtoa@n,??i2_xtoa
 10734  0016D4  C03A  F02A         	movff	i2xtoa@n+1,??i2_xtoa+1
 10735  0016D8  C03B  F02B         	movff	i2xtoa@n+2,??i2_xtoa+2
 10736  0016DC  C03C  F02C         	movff	i2xtoa@n+3,??i2_xtoa+3
 10737  0016E0  C03D  F02D         	movff	i2xtoa@n+4,??i2_xtoa+4
 10738  0016E4  C03E  F02E         	movff	i2xtoa@n+5,??i2_xtoa+5
 10739  0016E8  C03F  F02F         	movff	i2xtoa@n+6,??i2_xtoa+6
 10740  0016EC  C040  F030         	movff	i2xtoa@n+7,??i2_xtoa+7
 10741  0016F0  0E05               	movlw	5
 10742  0016F2  EF84  F00B         	goto	i2u322_40
 10743  0016F6                     i2u322_45:
 10744  0016F6  90D8               	bcf	status,0,c
 10745  0016F8  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 10746  0016FA  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 10747  0016FC  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 10748  0016FE  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 10749  001700  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 10750  001702  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 10751  001704  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 10752  001706  3229               	rrcf	??i2_xtoa^0,f,c
 10753  001708                     i2u322_40:
 10754  001708  2EE8               	decfsz	wreg,f,c
 10755  00170A  EF7B  F00B         	goto	i2u322_45
 10756  00170E  C029  F039         	movff	??i2_xtoa,i2xtoa@n
 10757  001712  C02A  F03A         	movff	??i2_xtoa+1,i2xtoa@n+1
 10758  001716  C02B  F03B         	movff	??i2_xtoa+2,i2xtoa@n+2
 10759  00171A  C02C  F03C         	movff	??i2_xtoa+3,i2xtoa@n+3
 10760  00171E  C02D  F03D         	movff	??i2_xtoa+4,i2xtoa@n+4
 10761  001722  C02E  F03E         	movff	??i2_xtoa+5,i2xtoa@n+5
 10762  001726  C02F  F03F         	movff	??i2_xtoa+6,i2xtoa@n+6
 10763  00172A  C030  F040         	movff	??i2_xtoa+7,i2xtoa@n+7
 10764  00172E                     i2l3692:
 10765                           
 10766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10767  00172E  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 10768  001730  EFA3  F00B         	goto	i2u323_41
 10769  001734  5042               	movf	(i2xtoa@i+1)^0,w,c
 10770  001736  E109               	bnz	i2u323_40
 10771  001738  0E02               	movlw	2
 10772  00173A  5C41               	subwf	i2xtoa@i^0,w,c
 10773  00173C  A0D8               	btfss	status,0,c
 10774  00173E  EFA3  F00B         	goto	i2u323_41
 10775  001742  EFA5  F00B         	goto	i2u323_40
 10776  001746                     i2u323_41:
 10777  001746  EFD6  F00B         	goto	i2l688
 10778  00174A                     i2u323_40:
 10779  00174A  5039               	movf	i2xtoa@n^0,w,c
 10780  00174C  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 10781  00174E  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 10782  001750  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 10783  001752  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 10784  001754  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 10785  001756  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 10786  001758  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 10787  00175A  A4D8               	btfss	status,2,c
 10788  00175C  EFB2  F00B         	goto	i2u324_41
 10789  001760  EFB4  F00B         	goto	i2u324_40
 10790  001764                     i2u324_41:
 10791  001764  EFE4  F00A         	goto	i2l3662
 10792  001768                     i2u324_40:
 10793  001768  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 10794  00176A  EFC1  F00B         	goto	i2u325_40
 10795  00176E  5036               	movf	(i2xtoa@p+1)^0,w,c
 10796  001770  E106               	bnz	i2u325_41
 10797  001772  0435               	decf	i2xtoa@p^0,w,c
 10798  001774  B0D8               	btfsc	status,0,c
 10799  001776  EFBF  F00B         	goto	i2u325_41
 10800  00177A  EFC1  F00B         	goto	i2u325_40
 10801  00177E                     i2u325_41:
 10802  00177E  EFE4  F00A         	goto	i2l3662
 10803  001782                     i2u325_40:
 10804  001782  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 10805  001784  EFCC  F00B         	goto	i2u326_41
 10806  001788  5038               	movf	(i2xtoa@w+1)^0,w,c
 10807  00178A  E108               	bnz	i2u326_40
 10808  00178C  0437               	decf	i2xtoa@w^0,w,c
 10809  00178E  A0D8               	btfss	status,0,c
 10810  001790  EFCC  F00B         	goto	i2u326_41
 10811  001794  EFCE  F00B         	goto	i2u326_40
 10812  001798                     i2u326_41:
 10813  001798  EFD6  F00B         	goto	i2l688
 10814  00179C                     i2u326_40:
 10815  00179C  0100               	movlb	0	; () banked
 10816  00179E  B3CE               	btfsc	_flags& (0+255),1,b
 10817  0017A0  EFD4  F00B         	goto	i2u327_41
 10818  0017A4  EFD6  F00B         	goto	i2u327_40
 10819  0017A8                     i2u327_41:
 10820  0017A8  EFE4  F00A         	goto	i2l3662
 10821  0017AC                     i2u327_40:
 10822  0017AC                     i2l688:
 10823                           
 10824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10825  0017AC  0100               	movlb	0	; () banked
 10826  0017AE  A9CE               	btfss	_flags& (0+255),4,b
 10827  0017B0  EFDC  F00B         	goto	i2u328_41
 10828  0017B4  EFDE  F00B         	goto	i2u328_40
 10829  0017B8                     i2u328_41:
 10830  0017B8  EFF4  F00B         	goto	i2l3708
 10831  0017BC                     i2u328_40:
 10832  0017BC                     
 10833                           ; BSR set to: 0
 10834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10835  0017BC  0641               	decf	i2xtoa@i^0,f,c
 10836  0017BE  A0D8               	btfss	status,0,c
 10837  0017C0  0642               	decf	(i2xtoa@i+1)^0,f,c
 10838  0017C2                     
 10839                           ; BSR set to: 0
 10840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10841  0017C2  0E25               	movlw	low _dbuf
 10842  0017C4  2441               	addwf	i2xtoa@i^0,w,c
 10843  0017C6  6ED9               	movwf	fsr2l,c
 10844  0017C8  0E01               	movlw	high _dbuf
 10845  0017CA  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 10846  0017CC  6EDA               	movwf	fsr2h,c
 10847  0017CE  C028  FFDF         	movff	i2xtoa@x,indf2
 10848  0017D2                     
 10849                           ; BSR set to: 0
 10850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10851  0017D2  0641               	decf	i2xtoa@i^0,f,c
 10852  0017D4  A0D8               	btfss	status,0,c
 10853  0017D6  0642               	decf	(i2xtoa@i+1)^0,f,c
 10854                           
 10855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10856  0017D8  0E25               	movlw	low _dbuf
 10857  0017DA  2441               	addwf	i2xtoa@i^0,w,c
 10858  0017DC  6ED9               	movwf	fsr2l,c
 10859  0017DE  0E01               	movlw	high _dbuf
 10860  0017E0  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 10861  0017E2  6EDA               	movwf	fsr2h,c
 10862  0017E4  0E30               	movlw	48
 10863  0017E6  6EDF               	movwf	indf2,c
 10864  0017E8                     i2l3708:
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10868  0017E8  C01E  F013         	movff	i2xtoa@fp,i2pad@fp
 10869  0017EC  C01F  F014         	movff	i2xtoa@fp+1,i2pad@fp+1
 10870  0017F0  0E25               	movlw	low _dbuf
 10871  0017F2  2441               	addwf	i2xtoa@i^0,w,c
 10872  0017F4  6E15               	movwf	i2pad@buf^0,c
 10873  0017F6  0E01               	movlw	high _dbuf
 10874  0017F8  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 10875  0017FA  6E16               	movwf	(i2pad@buf+1)^0,c
 10876  0017FC  C037  F017         	movff	i2xtoa@w,i2pad@p
 10877  001800  C038  F018         	movff	i2xtoa@w+1,i2pad@p+1
 10878  001804  ECF8  F014         	call	i2_pad	;wreg free
 10879  001808  C013  F01E         	movff	?i2_pad,?i2_xtoa
 10880  00180C  C014  F01F         	movff	?i2_pad+1,?i2_xtoa+1
 10881  001810  0012               	return		;funcret
 10882  001812                     __end_ofi2_xtoa:
 10883                           	opt callstack 0
 10884                           
 10885 ;; *************** function i2_toupper *****************
 10886 ;; Defined at:
 10887 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;  c               2    6[COMRAM] int 
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;		None
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  2    6[COMRAM] int 
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;Total ram usage:        8 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    1
 10908 ;; This function calls:
 10909 ;;		i2_islower
 10910 ;; This function is called by:
 10911 ;;		i2_xtoa
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           	psect	text57
 10916  002EAE                     __ptext57:
 10917                           	opt callstack 0
 10918  002EAE                     i2_toupper:
 10919                           	opt callstack 14
 10920  002EAE  0E9F               	movlw	159
 10921  002EB0  6E09               	movwf	??i2_toupper^0,c
 10922  002EB2  0EFF               	movlw	255
 10923  002EB4  6E0A               	movwf	(??i2_toupper+1)^0,c
 10924  002EB6  C007  F00B         	movff	i2toupper@c,??i2_toupper+2
 10925  002EBA  C008  F00C         	movff	i2toupper@c+1,??i2_toupper+3
 10926  002EBE  5009               	movf	??i2_toupper^0,w,c
 10927  002EC0  260B               	addwf	(??i2_toupper+2)^0,f,c
 10928  002EC2  500A               	movf	(??i2_toupper+1)^0,w,c
 10929  002EC4  220C               	addwfc	(??i2_toupper+3)^0,f,c
 10930  002EC6  500C               	movf	(??i2_toupper+3)^0,w,c
 10931  002EC8  E10A               	bnz	i2u270_40
 10932  002ECA  0E1A               	movlw	26
 10933  002ECC  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 10934  002ECE  A0D8               	btfss	status,0,c
 10935  002ED0  EF6C  F017         	goto	i2u270_41
 10936  002ED4  EF6F  F017         	goto	i2u270_40
 10937  002ED8                     i2u270_41:
 10938  002ED8  0E01               	movlw	1
 10939  002EDA  EF70  F017         	goto	i2u271_40
 10940  002EDE                     i2u270_40:
 10941  002EDE  0E00               	movlw	0
 10942  002EE0                     i2u271_40:
 10943  002EE0  6E0D               	movwf	i2_toupper$2074^0,c
 10944  002EE2  6A0E               	clrf	(i2_toupper$2074+1)^0,c
 10945  002EE4  500D               	movf	i2_toupper$2074^0,w,c
 10946  002EE6  100E               	iorwf	(i2_toupper$2074+1)^0,w,c
 10947  002EE8  B4D8               	btfsc	status,2,c
 10948  002EEA  EF79  F017         	goto	i2u272_41
 10949  002EEE  EF7B  F017         	goto	i2u272_40
 10950  002EF2                     i2u272_41:
 10951  002EF2  EF81  F017         	goto	i2l1508
 10952  002EF6                     i2u272_40:
 10953  002EF6  0E5F               	movlw	95
 10954  002EF8  1407               	andwf	i2toupper@c^0,w,c
 10955  002EFA  6E07               	movwf	?i2_toupper^0,c
 10956  002EFC  6A08               	clrf	(?i2_toupper+1)^0,c
 10957  002EFE  EF85  F017         	goto	i2l1513
 10958  002F02                     i2l1508:
 10959  002F02  C007  F007         	movff	i2toupper@c,?i2_toupper
 10960  002F06  C008  F008         	movff	i2toupper@c+1,?i2_toupper+1
 10961  002F0A                     i2l1513:
 10962  002F0A  0012               	return		;funcret
 10963  002F0C                     __end_ofi2_toupper:
 10964                           	opt callstack 0
 10965                           
 10966 ;; *************** function i2_islower *****************
 10967 ;; Defined at:
 10968 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;  c               2    0[COMRAM] int 
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;		None
 10973 ;; Return value:  Size  Location     Type
 10974 ;;                  2    0[COMRAM] int 
 10975 ;; Registers used:
 10976 ;;		wreg, status,2, status,0
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10984 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10986 ;;Total ram usage:        6 bytes
 10987 ;; Hardware stack levels used:    1
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		i2_toupper
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           	psect	text58
 10996  003312                     __ptext58:
 10997                           	opt callstack 0
 10998  003312                     i2_islower:
 10999                           	opt callstack 14
 11000  003312  0E9F               	movlw	159
 11001  003314  6E03               	movwf	??i2_islower^0,c
 11002  003316  0EFF               	movlw	255
 11003  003318  6E04               	movwf	(??i2_islower+1)^0,c
 11004  00331A  C001  F005         	movff	i2islower@c,??i2_islower+2
 11005  00331E  C002  F006         	movff	i2islower@c+1,??i2_islower+3
 11006  003322  5003               	movf	??i2_islower^0,w,c
 11007  003324  2605               	addwf	(??i2_islower+2)^0,f,c
 11008  003326  5004               	movf	(??i2_islower+1)^0,w,c
 11009  003328  2206               	addwfc	(??i2_islower+3)^0,f,c
 11010  00332A  5006               	movf	(??i2_islower+3)^0,w,c
 11011  00332C  E10A               	bnz	i2u245_40
 11012  00332E  0E1A               	movlw	26
 11013  003330  5C05               	subwf	(??i2_islower+2)^0,w,c
 11014  003332  A0D8               	btfss	status,0,c
 11015  003334  EF9E  F019         	goto	i2u245_41
 11016  003338  EFA1  F019         	goto	i2u245_40
 11017  00333C                     i2u245_41:
 11018  00333C  0E01               	movlw	1
 11019  00333E  EFA2  F019         	goto	i2u246_40
 11020  003342                     i2u245_40:
 11021  003342  0E00               	movlw	0
 11022  003344                     i2u246_40:
 11023  003344  6E01               	movwf	?i2_islower^0,c
 11024  003346  6A02               	clrf	(?i2_islower+1)^0,c
 11025  003348  0012               	return		;funcret
 11026  00334A                     __end_ofi2_islower:
 11027                           	opt callstack 0
 11028                           
 11029 ;; *************** function i2_isupper *****************
 11030 ;; Defined at:
 11031 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 11032 ;; Parameters:    Size  Location     Type
 11033 ;;  c               2    0[COMRAM] int 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;		None
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  2    0[COMRAM] int 
 11038 ;; Registers used:
 11039 ;;		wreg, status,2, status,0
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;Total ram usage:        6 bytes
 11050 ;; Hardware stack levels used:    1
 11051 ;; This function calls:
 11052 ;;		Nothing
 11053 ;; This function is called by:
 11054 ;;		i2_xtoa
 11055 ;; This function uses a non-reentrant model
 11056 ;;
 11057                           
 11058                           	psect	text59
 11059  00334A                     __ptext59:
 11060                           	opt callstack 0
 11061  00334A                     i2_isupper:
 11062                           	opt callstack 15
 11063  00334A  0EBF               	movlw	191
 11064  00334C  6E03               	movwf	??i2_isupper^0,c
 11065  00334E  0EFF               	movlw	255
 11066  003350  6E04               	movwf	(??i2_isupper+1)^0,c
 11067  003352  C001  F005         	movff	i2isupper@c,??i2_isupper+2
 11068  003356  C002  F006         	movff	i2isupper@c+1,??i2_isupper+3
 11069  00335A  5003               	movf	??i2_isupper^0,w,c
 11070  00335C  2605               	addwf	(??i2_isupper+2)^0,f,c
 11071  00335E  5004               	movf	(??i2_isupper+1)^0,w,c
 11072  003360  2206               	addwfc	(??i2_isupper+3)^0,f,c
 11073  003362  5006               	movf	(??i2_isupper+3)^0,w,c
 11074  003364  E10A               	bnz	i2u268_40
 11075  003366  0E1A               	movlw	26
 11076  003368  5C05               	subwf	(??i2_isupper+2)^0,w,c
 11077  00336A  A0D8               	btfss	status,0,c
 11078  00336C  EFBA  F019         	goto	i2u268_41
 11079  003370  EFBD  F019         	goto	i2u268_40
 11080  003374                     i2u268_41:
 11081  003374  0E01               	movlw	1
 11082  003376  EFBE  F019         	goto	i2u269_40
 11083  00337A                     i2u268_40:
 11084  00337A  0E00               	movlw	0
 11085  00337C                     i2u269_40:
 11086  00337C  6E01               	movwf	?i2_isupper^0,c
 11087  00337E  6A02               	clrf	(?i2_isupper+1)^0,c
 11088  003380  0012               	return		;funcret
 11089  003382                     __end_ofi2_isupper:
 11090                           	opt callstack 0
 11091                           
 11092 ;; *************** function i2_isalpha *****************
 11093 ;; Defined at:
 11094 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  c               2    0[COMRAM] int 
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  2    0[COMRAM] int 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2, status,0
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11111 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11112 ;;Total ram usage:        6 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; This function calls:
 11115 ;;		Nothing
 11116 ;; This function is called by:
 11117 ;;		i2_xtoa
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text60
 11122  0031EE                     __ptext60:
 11123                           	opt callstack 0
 11124  0031EE                     i2_isalpha:
 11125                           	opt callstack 15
 11126  0031EE  0E9F               	movlw	159
 11127  0031F0  6E03               	movwf	??i2_isalpha^0,c
 11128  0031F2  0EFF               	movlw	255
 11129  0031F4  6E04               	movwf	(??i2_isalpha+1)^0,c
 11130  0031F6  0E20               	movlw	32
 11131  0031F8  1001               	iorwf	i2isalpha@c^0,w,c
 11132  0031FA  6E05               	movwf	(??i2_isalpha+2)^0,c
 11133  0031FC  0E00               	movlw	0
 11134  0031FE  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 11135  003200  6E06               	movwf	(??i2_isalpha+3)^0,c
 11136  003202  5003               	movf	??i2_isalpha^0,w,c
 11137  003204  2605               	addwf	(??i2_isalpha+2)^0,f,c
 11138  003206  5004               	movf	(??i2_isalpha+1)^0,w,c
 11139  003208  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 11140  00320A  5006               	movf	(??i2_isalpha+3)^0,w,c
 11141  00320C  E10A               	bnz	i2u262_40
 11142  00320E  0E1A               	movlw	26
 11143  003210  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 11144  003212  A0D8               	btfss	status,0,c
 11145  003214  EF0E  F019         	goto	i2u262_41
 11146  003218  EF11  F019         	goto	i2u262_40
 11147  00321C                     i2u262_41:
 11148  00321C  0E01               	movlw	1
 11149  00321E  EF12  F019         	goto	i2u263_40
 11150  003222                     i2u262_40:
 11151  003222  0E00               	movlw	0
 11152  003224                     i2u263_40:
 11153  003224  6E01               	movwf	?i2_isalpha^0,c
 11154  003226  6A02               	clrf	(?i2_isalpha+1)^0,c
 11155  003228  0012               	return		;funcret
 11156  00322A                     __end_ofi2_isalpha:
 11157                           	opt callstack 0
 11158                           
 11159 ;; *************** function i2_utoa *****************
 11160 ;; Defined at:
 11161 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11162 ;; Parameters:    Size  Location     Type
 11163 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 11164 ;;		 -> NULL(0), 
 11165 ;;  d               8   31[COMRAM] unsigned long long 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  utoa            8   51[COMRAM] unsigned long long 
 11168 ;;  utoa            2   59[COMRAM] int 
 11169 ;;  utoa            2   49[COMRAM] int 
 11170 ;;  utoa            2   47[COMRAM] int 
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  2   29[COMRAM] int 
 11173 ;; Registers used:
 11174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11180 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11181 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11182 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11183 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11184 ;;Total ram usage:       32 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:    5
 11187 ;; This function calls:
 11188 ;;		i2___lodiv
 11189 ;;		i2___lomod
 11190 ;;		i2_pad
 11191 ;; This function is called by:
 11192 ;;		i2_vfpfcnvrt
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           	psect	text61
 11197  001A18                     __ptext61:
 11198                           	opt callstack 0
 11199  001A18                     i2_utoa:
 11200                           	opt callstack 11
 11201  001A18                     
 11202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 11203  001A18  0100               	movlb	0	; () banked
 11204  001A1A  BFCD               	btfsc	(_prec+1)& (0+255),7,b
 11205  001A1C  EF12  F00D         	goto	i2u305_41
 11206  001A20  EF14  F00D         	goto	i2u305_40
 11207  001A24                     i2u305_41:
 11208  001A24  EF15  F00D         	goto	i2l3614
 11209  001A28                     i2u305_40:
 11210  001A28                     
 11211                           ; BSR set to: 0
 11212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 11213  001A28  93CE               	bcf	_flags& (0+255),1,b
 11214  001A2A                     i2l3614:
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 11218  001A2A  BFCD               	btfsc	(_prec+1)& (0+255),7,b
 11219  001A2C  EF22  F00D         	goto	i2u306_40
 11220  001A30  51CD               	movf	(_prec+1)& (0+255),w,b
 11221  001A32  E106               	bnz	i2u306_41
 11222  001A34  05CC               	decf	_prec& (0+255),w,b
 11223  001A36  B0D8               	btfsc	status,0,c
 11224  001A38  EF20  F00D         	goto	i2u306_41
 11225  001A3C  EF22  F00D         	goto	i2u306_40
 11226  001A40                     i2u306_41:
 11227  001A40  EF28  F00D         	goto	i2l650
 11228  001A44                     i2u306_40:
 11229  001A44                     
 11230                           ; BSR set to: 0
 11231  001A44  0E00               	movlw	0
 11232  001A46  6E31               	movwf	(i2utoa@p+1)^0,c
 11233  001A48  0E01               	movlw	1
 11234  001A4A  6E30               	movwf	i2utoa@p^0,c
 11235  001A4C  EF2C  F00D         	goto	i2l652
 11236  001A50                     i2l650:
 11237                           
 11238                           ; BSR set to: 0
 11239  001A50  C0CC  F030         	movff	_prec,i2utoa@p
 11240  001A54  C0CD  F031         	movff	_prec+1,i2utoa@p+1
 11241  001A58                     i2l652:
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 11245  001A58  C0CA  F032         	movff	_width,i2utoa@w
 11246  001A5C  C0CB  F033         	movff	_width+1,i2utoa@w+1
 11247                           
 11248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 11249  001A60  C020  F034         	movff	i2utoa@d,i2utoa@n
 11250  001A64  C021  F035         	movff	i2utoa@d+1,i2utoa@n+1
 11251  001A68  C022  F036         	movff	i2utoa@d+2,i2utoa@n+2
 11252  001A6C  C023  F037         	movff	i2utoa@d+3,i2utoa@n+3
 11253  001A70  C024  F038         	movff	i2utoa@d+4,i2utoa@n+4
 11254  001A74  C025  F039         	movff	i2utoa@d+5,i2utoa@n+5
 11255  001A78  C026  F03A         	movff	i2utoa@d+6,i2utoa@n+6
 11256  001A7C  C027  F03B         	movff	i2utoa@d+7,i2utoa@n+7
 11257  001A80                     
 11258                           ; BSR set to: 0
 11259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 11260  001A80  0E00               	movlw	0
 11261  001A82  6E3D               	movwf	(i2utoa@i+1)^0,c
 11262  001A84  0E1F               	movlw	31
 11263  001A86  6E3C               	movwf	i2utoa@i^0,c
 11264  001A88                     
 11265                           ; BSR set to: 0
 11266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 11267  001A88  0E00               	movlw	0
 11268  001A8A  0101               	movlb	1	; () banked
 11269  001A8C  6F44               	movwf	(_dbuf+31)& (0+255),b
 11270                           
 11271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11272  001A8E  EFBF  F00D         	goto	i2l3632
 11273  001A92                     i2l3622:
 11274                           
 11275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 11276  001A92  063C               	decf	i2utoa@i^0,f,c
 11277  001A94  A0D8               	btfss	status,0,c
 11278  001A96  063D               	decf	(i2utoa@i+1)^0,f,c
 11279  001A98                     
 11280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 11281  001A98  0E25               	movlw	low _dbuf
 11282  001A9A  243C               	addwf	i2utoa@i^0,w,c
 11283  001A9C  6ED9               	movwf	fsr2l,c
 11284  001A9E  0E01               	movlw	high _dbuf
 11285  001AA0  203D               	addwfc	(i2utoa@i+1)^0,w,c
 11286  001AA2  6EDA               	movwf	fsr2h,c
 11287  001AA4  C034  F001         	movff	i2utoa@n,i2___lomod@dividend
 11288  001AA8  C035  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
 11289  001AAC  C036  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
 11290  001AB0  C037  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
 11291  001AB4  C038  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
 11292  001AB8  C039  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
 11293  001ABC  C03A  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
 11294  001AC0  C03B  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
 11295  001AC4  0E0A               	movlw	10
 11296  001AC6  6E09               	movwf	i2___lomod@divisor^0,c
 11297  001AC8  0E00               	movlw	0
 11298  001ACA  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
 11299  001ACC  0E00               	movlw	0
 11300  001ACE  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
 11301  001AD0  0E00               	movlw	0
 11302  001AD2  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
 11303  001AD4  0E00               	movlw	0
 11304  001AD6  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
 11305  001AD8  0E00               	movlw	0
 11306  001ADA  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
 11307  001ADC  0E00               	movlw	0
 11308  001ADE  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
 11309  001AE0  0E00               	movlw	0
 11310  001AE2  6E10               	movwf	(i2___lomod@divisor+7)^0,c
 11311  001AE4  ECC6  F013         	call	i2___lomod	;wreg free
 11312  001AE8  C001  F028         	movff	?i2___lomod,??i2_utoa
 11313  001AEC  C002  F029         	movff	?i2___lomod+1,??i2_utoa+1
 11314  001AF0  C003  F02A         	movff	?i2___lomod+2,??i2_utoa+2
 11315  001AF4  C004  F02B         	movff	?i2___lomod+3,??i2_utoa+3
 11316  001AF8  C005  F02C         	movff	?i2___lomod+4,??i2_utoa+4
 11317  001AFC  C006  F02D         	movff	?i2___lomod+5,??i2_utoa+5
 11318  001B00  C007  F02E         	movff	?i2___lomod+6,??i2_utoa+6
 11319  001B04  C008  F02F         	movff	?i2___lomod+7,??i2_utoa+7
 11320  001B08  5028               	movf	??i2_utoa^0,w,c
 11321  001B0A  0F30               	addlw	48
 11322  001B0C  6EDF               	movwf	indf2,c
 11323  001B0E                     
 11324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 11325  001B0E  0630               	decf	i2utoa@p^0,f,c
 11326  001B10  A0D8               	btfss	status,0,c
 11327  001B12  0631               	decf	(i2utoa@p+1)^0,f,c
 11328  001B14                     
 11329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 11330  001B14  0632               	decf	i2utoa@w^0,f,c
 11331  001B16  A0D8               	btfss	status,0,c
 11332  001B18  0633               	decf	(i2utoa@w+1)^0,f,c
 11333  001B1A                     
 11334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 11335  001B1A  C034  F001         	movff	i2utoa@n,i2___lodiv@dividend
 11336  001B1E  C035  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
 11337  001B22  C036  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
 11338  001B26  C037  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
 11339  001B2A  C038  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
 11340  001B2E  C039  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
 11341  001B32  C03A  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
 11342  001B36  C03B  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
 11343  001B3A  0E0A               	movlw	10
 11344  001B3C  6E09               	movwf	i2___lodiv@divisor^0,c
 11345  001B3E  0E00               	movlw	0
 11346  001B40  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
 11347  001B42  0E00               	movlw	0
 11348  001B44  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
 11349  001B46  0E00               	movlw	0
 11350  001B48  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
 11351  001B4A  0E00               	movlw	0
 11352  001B4C  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
 11353  001B4E  0E00               	movlw	0
 11354  001B50  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
 11355  001B52  0E00               	movlw	0
 11356  001B54  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
 11357  001B56  0E00               	movlw	0
 11358  001B58  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
 11359  001B5A  ECE5  F012         	call	i2___lodiv	;wreg free
 11360  001B5E  C001  F034         	movff	?i2___lodiv,i2utoa@n
 11361  001B62  C002  F035         	movff	?i2___lodiv+1,i2utoa@n+1
 11362  001B66  C003  F036         	movff	?i2___lodiv+2,i2utoa@n+2
 11363  001B6A  C004  F037         	movff	?i2___lodiv+3,i2utoa@n+3
 11364  001B6E  C005  F038         	movff	?i2___lodiv+4,i2utoa@n+4
 11365  001B72  C006  F039         	movff	?i2___lodiv+5,i2utoa@n+5
 11366  001B76  C007  F03A         	movff	?i2___lodiv+6,i2utoa@n+6
 11367  001B7A  C008  F03B         	movff	?i2___lodiv+7,i2utoa@n+7
 11368  001B7E                     i2l3632:
 11369                           
 11370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11371  001B7E  503C               	movf	i2utoa@i^0,w,c
 11372  001B80  103D               	iorwf	(i2utoa@i+1)^0,w,c
 11373  001B82  B4D8               	btfsc	status,2,c
 11374  001B84  EFC6  F00D         	goto	i2u307_41
 11375  001B88  EFC8  F00D         	goto	i2u307_40
 11376  001B8C                     i2u307_41:
 11377  001B8C  EFF9  F00D         	goto	i2l3642
 11378  001B90                     i2u307_40:
 11379  001B90  5034               	movf	i2utoa@n^0,w,c
 11380  001B92  1035               	iorwf	(i2utoa@n+1)^0,w,c
 11381  001B94  1036               	iorwf	(i2utoa@n+2)^0,w,c
 11382  001B96  1037               	iorwf	(i2utoa@n+3)^0,w,c
 11383  001B98  1038               	iorwf	(i2utoa@n+4)^0,w,c
 11384  001B9A  1039               	iorwf	(i2utoa@n+5)^0,w,c
 11385  001B9C  103A               	iorwf	(i2utoa@n+6)^0,w,c
 11386  001B9E  103B               	iorwf	(i2utoa@n+7)^0,w,c
 11387  001BA0  A4D8               	btfss	status,2,c
 11388  001BA2  EFD5  F00D         	goto	i2u308_41
 11389  001BA6  EFD7  F00D         	goto	i2u308_40
 11390  001BAA                     i2u308_41:
 11391  001BAA  EF49  F00D         	goto	i2l3622
 11392  001BAE                     i2u308_40:
 11393  001BAE  BE31               	btfsc	(i2utoa@p+1)^0,7,c
 11394  001BB0  EFE4  F00D         	goto	i2u309_40
 11395  001BB4  5031               	movf	(i2utoa@p+1)^0,w,c
 11396  001BB6  E106               	bnz	i2u309_41
 11397  001BB8  0430               	decf	i2utoa@p^0,w,c
 11398  001BBA  B0D8               	btfsc	status,0,c
 11399  001BBC  EFE2  F00D         	goto	i2u309_41
 11400  001BC0  EFE4  F00D         	goto	i2u309_40
 11401  001BC4                     i2u309_41:
 11402  001BC4  EF49  F00D         	goto	i2l3622
 11403  001BC8                     i2u309_40:
 11404  001BC8  BE33               	btfsc	(i2utoa@w+1)^0,7,c
 11405  001BCA  EFEF  F00D         	goto	i2u310_41
 11406  001BCE  5033               	movf	(i2utoa@w+1)^0,w,c
 11407  001BD0  E108               	bnz	i2u310_40
 11408  001BD2  0432               	decf	i2utoa@w^0,w,c
 11409  001BD4  A0D8               	btfss	status,0,c
 11410  001BD6  EFEF  F00D         	goto	i2u310_41
 11411  001BDA  EFF1  F00D         	goto	i2u310_40
 11412  001BDE                     i2u310_41:
 11413  001BDE  EFF9  F00D         	goto	i2l3642
 11414  001BE2                     i2u310_40:
 11415  001BE2  0100               	movlb	0	; () banked
 11416  001BE4  B3CE               	btfsc	_flags& (0+255),1,b
 11417  001BE6  EFF7  F00D         	goto	i2u311_41
 11418  001BEA  EFF9  F00D         	goto	i2u311_40
 11419  001BEE                     i2u311_41:
 11420  001BEE  EF49  F00D         	goto	i2l3622
 11421  001BF2                     i2u311_40:
 11422  001BF2                     i2l3642:
 11423                           
 11424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 11425  001BF2  C01E  F013         	movff	i2utoa@fp,i2pad@fp
 11426  001BF6  C01F  F014         	movff	i2utoa@fp+1,i2pad@fp+1
 11427  001BFA  0E25               	movlw	low _dbuf
 11428  001BFC  243C               	addwf	i2utoa@i^0,w,c
 11429  001BFE  6E15               	movwf	i2pad@buf^0,c
 11430  001C00  0E01               	movlw	high _dbuf
 11431  001C02  203D               	addwfc	(i2utoa@i+1)^0,w,c
 11432  001C04  6E16               	movwf	(i2pad@buf+1)^0,c
 11433  001C06  C032  F017         	movff	i2utoa@w,i2pad@p
 11434  001C0A  C033  F018         	movff	i2utoa@w+1,i2pad@p+1
 11435  001C0E  ECF8  F014         	call	i2_pad	;wreg free
 11436  001C12  C013  F01E         	movff	?i2_pad,?i2_utoa
 11437  001C16  C014  F01F         	movff	?i2_pad+1,?i2_utoa+1
 11438  001C1A  0012               	return		;funcret
 11439  001C1C                     __end_ofi2_utoa:
 11440                           	opt callstack 0
 11441                           
 11442 ;; *************** function i2___lomod *****************
 11443 ;; Defined at:
 11444 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;  dividend        8    0[COMRAM] unsigned long long 
 11447 ;;  divisor         8    8[COMRAM] unsigned long long 
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;  __lomod         1   16[COMRAM] unsigned char 
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  8    0[COMRAM] unsigned long long 
 11452 ;; Registers used:
 11453 ;;		wreg, status,2, status,0
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/0
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11459 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;Total ram usage:       17 bytes
 11464 ;; Hardware stack levels used:    1
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		i2_utoa
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text62
 11473  00278C                     __ptext62:
 11474                           	opt callstack 0
 11475  00278C                     i2___lomod:
 11476                           	opt callstack 15
 11477  00278C  5009               	movf	i2___lomod@divisor^0,w,c
 11478  00278E  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
 11479  002790  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
 11480  002792  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
 11481  002794  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
 11482  002796  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
 11483  002798  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
 11484  00279A  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
 11485  00279C  B4D8               	btfsc	status,2,c
 11486  00279E  EFD3  F013         	goto	i2u259_41
 11487  0027A2  EFD5  F013         	goto	i2u259_40
 11488  0027A6                     i2u259_41:
 11489  0027A6  EF1D  F014         	goto	i2l1180
 11490  0027AA                     i2u259_40:
 11491  0027AA  0E01               	movlw	1
 11492  0027AC  6E11               	movwf	i2___lomod@counter^0,c
 11493  0027AE  EFE3  F013         	goto	i2l3410
 11494  0027B2                     i2l3408:
 11495  0027B2  90D8               	bcf	status,0,c
 11496  0027B4  3609               	rlcf	i2___lomod@divisor^0,f,c
 11497  0027B6  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
 11498  0027B8  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
 11499  0027BA  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
 11500  0027BC  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
 11501  0027BE  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
 11502  0027C0  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
 11503  0027C2  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
 11504  0027C4  2A11               	incf	i2___lomod@counter^0,f,c
 11505  0027C6                     i2l3410:
 11506  0027C6  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
 11507  0027C8  EFE8  F013         	goto	i2u260_41
 11508  0027CC  EFEA  F013         	goto	i2u260_40
 11509  0027D0                     i2u260_41:
 11510  0027D0  EFD9  F013         	goto	i2l3408
 11511  0027D4                     i2u260_40:
 11512  0027D4                     i2l3412:
 11513  0027D4  5009               	movf	i2___lomod@divisor^0,w,c
 11514  0027D6  5C01               	subwf	i2___lomod@dividend^0,w,c
 11515  0027D8  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 11516  0027DA  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
 11517  0027DC  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 11518  0027DE  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
 11519  0027E0  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 11520  0027E2  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
 11521  0027E4  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 11522  0027E6  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
 11523  0027E8  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 11524  0027EA  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
 11525  0027EC  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 11526  0027EE  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
 11527  0027F0  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 11528  0027F2  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
 11529  0027F4  A0D8               	btfss	status,0,c
 11530  0027F6  EFFF  F013         	goto	i2u261_41
 11531  0027FA  EF01  F014         	goto	i2u261_40
 11532  0027FE                     i2u261_41:
 11533  0027FE  EF11  F014         	goto	i2l3416
 11534  002802                     i2u261_40:
 11535  002802  5009               	movf	i2___lomod@divisor^0,w,c
 11536  002804  5E01               	subwf	i2___lomod@dividend^0,f,c
 11537  002806  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 11538  002808  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
 11539  00280A  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 11540  00280C  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
 11541  00280E  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 11542  002810  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
 11543  002812  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 11544  002814  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
 11545  002816  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 11546  002818  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
 11547  00281A  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 11548  00281C  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
 11549  00281E  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 11550  002820  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
 11551  002822                     i2l3416:
 11552  002822  90D8               	bcf	status,0,c
 11553  002824  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
 11554  002826  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
 11555  002828  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
 11556  00282A  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
 11557  00282C  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
 11558  00282E  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
 11559  002830  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
 11560  002832  3209               	rrcf	i2___lomod@divisor^0,f,c
 11561  002834  2E11               	decfsz	i2___lomod@counter^0,f,c
 11562  002836  EFEA  F013         	goto	i2l3412
 11563  00283A                     i2l1180:
 11564  00283A  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
 11565  00283E  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
 11566  002842  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
 11567  002846  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
 11568  00284A  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
 11569  00284E  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
 11570  002852  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
 11571  002856  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
 11572  00285A  0012               	return		;funcret
 11573  00285C                     __end_ofi2___lomod:
 11574                           	opt callstack 0
 11575                           
 11576 ;; *************** function i2___lodiv *****************
 11577 ;; Defined at:
 11578 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  dividend        8    0[COMRAM] unsigned long long 
 11581 ;;  divisor         8    8[COMRAM] unsigned long long 
 11582 ;; Auto vars:     Size  Location     Type
 11583 ;;  __lodiv         8   16[COMRAM] unsigned long long 
 11584 ;;  __lodiv         1   24[COMRAM] unsigned char 
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  8    0[COMRAM] unsigned long long 
 11587 ;; Registers used:
 11588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11594 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11597 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11598 ;;Total ram usage:       25 bytes
 11599 ;; Hardware stack levels used:    1
 11600 ;; This function calls:
 11601 ;;		Nothing
 11602 ;; This function is called by:
 11603 ;;		i2_utoa
 11604 ;; This function uses a non-reentrant model
 11605 ;;
 11606                           
 11607                           	psect	text63
 11608  0025CA                     __ptext63:
 11609                           	opt callstack 0
 11610  0025CA                     i2___lodiv:
 11611                           	opt callstack 15
 11612  0025CA  EE20  F011         	lfsr	2,i2___lodiv@quotient
 11613  0025CE  0E07               	movlw	7
 11614  0025D0                     i2u255_41:
 11615  0025D0  6ADE               	clrf	postinc2,c
 11616  0025D2  06E8               	decf	wreg,f,c
 11617  0025D4  E2FD               	bc	i2u255_41
 11618  0025D6  5009               	movf	i2___lodiv@divisor^0,w,c
 11619  0025D8  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
 11620  0025DA  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
 11621  0025DC  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
 11622  0025DE  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
 11623  0025E0  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
 11624  0025E2  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
 11625  0025E4  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
 11626  0025E6  B4D8               	btfsc	status,2,c
 11627  0025E8  EFF8  F012         	goto	i2u256_41
 11628  0025EC  EFFA  F012         	goto	i2u256_40
 11629  0025F0                     i2u256_41:
 11630  0025F0  EF4C  F013         	goto	i2l1170
 11631  0025F4                     i2u256_40:
 11632  0025F4  0E01               	movlw	1
 11633  0025F6  6E19               	movwf	i2___lodiv@counter^0,c
 11634  0025F8  EF08  F013         	goto	i2l3390
 11635  0025FC                     i2l3388:
 11636  0025FC  90D8               	bcf	status,0,c
 11637  0025FE  3609               	rlcf	i2___lodiv@divisor^0,f,c
 11638  002600  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
 11639  002602  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
 11640  002604  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
 11641  002606  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
 11642  002608  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
 11643  00260A  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
 11644  00260C  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
 11645  00260E  2A19               	incf	i2___lodiv@counter^0,f,c
 11646  002610                     i2l3390:
 11647  002610  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
 11648  002612  EF0D  F013         	goto	i2u257_41
 11649  002616  EF0F  F013         	goto	i2u257_40
 11650  00261A                     i2u257_41:
 11651  00261A  EFFE  F012         	goto	i2l3388
 11652  00261E                     i2u257_40:
 11653  00261E                     i2l3392:
 11654  00261E  90D8               	bcf	status,0,c
 11655  002620  3611               	rlcf	i2___lodiv@quotient^0,f,c
 11656  002622  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
 11657  002624  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
 11658  002626  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
 11659  002628  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
 11660  00262A  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
 11661  00262C  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
 11662  00262E  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
 11663  002630  5009               	movf	i2___lodiv@divisor^0,w,c
 11664  002632  5C01               	subwf	i2___lodiv@dividend^0,w,c
 11665  002634  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 11666  002636  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
 11667  002638  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 11668  00263A  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
 11669  00263C  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 11670  00263E  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
 11671  002640  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 11672  002642  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
 11673  002644  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 11674  002646  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
 11675  002648  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 11676  00264A  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
 11677  00264C  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 11678  00264E  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
 11679  002650  A0D8               	btfss	status,0,c
 11680  002652  EF2D  F013         	goto	i2u258_41
 11681  002656  EF2F  F013         	goto	i2u258_40
 11682  00265A                     i2u258_41:
 11683  00265A  EF40  F013         	goto	i2l3400
 11684  00265E                     i2u258_40:
 11685  00265E  5009               	movf	i2___lodiv@divisor^0,w,c
 11686  002660  5E01               	subwf	i2___lodiv@dividend^0,f,c
 11687  002662  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 11688  002664  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
 11689  002666  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 11690  002668  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
 11691  00266A  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 11692  00266C  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
 11693  00266E  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 11694  002670  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
 11695  002672  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 11696  002674  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
 11697  002676  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 11698  002678  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
 11699  00267A  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 11700  00267C  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
 11701  00267E  8011               	bsf	i2___lodiv@quotient^0,0,c
 11702  002680                     i2l3400:
 11703  002680  90D8               	bcf	status,0,c
 11704  002682  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
 11705  002684  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
 11706  002686  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
 11707  002688  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
 11708  00268A  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
 11709  00268C  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
 11710  00268E  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
 11711  002690  3209               	rrcf	i2___lodiv@divisor^0,f,c
 11712  002692  2E19               	decfsz	i2___lodiv@counter^0,f,c
 11713  002694  EF0F  F013         	goto	i2l3392
 11714  002698                     i2l1170:
 11715  002698  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
 11716  00269C  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
 11717  0026A0  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
 11718  0026A4  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
 11719  0026A8  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
 11720  0026AC  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
 11721  0026B0  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
 11722  0026B4  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
 11723  0026B8  0012               	return		;funcret
 11724  0026BA                     __end_ofi2___lodiv:
 11725                           	opt callstack 0
 11726                           
 11727 ;; *************** function i2_stoa *****************
 11728 ;; Defined at:
 11729 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 11732 ;;		 -> NULL(0), 
 11733 ;;  s               2   13[COMRAM] PTR unsigned char 
 11734 ;;		 -> ?_printf(2), IRreceiveBuffer(20), IRtransmitBuffer(20), 
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;  stoa            7   16[COMRAM] unsigned char [7]
 11737 ;;  stoa            2   31[COMRAM] int 
 11738 ;;  stoa            2   29[COMRAM] int 
 11739 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 11740 ;;		 -> i2stoa@nuls(7), ?_printf(2), stoa@nuls(7), IRreceiveBuffer(20), 
 11741 ;;		 -> IRtransmitBuffer(20), 
 11742 ;;  stoa            2   25[COMRAM] int 
 11743 ;;  stoa            2   23[COMRAM] int 
 11744 ;; Return value:  Size  Location     Type
 11745 ;;                  2   11[COMRAM] int 
 11746 ;; Registers used:
 11747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11748 ;; Tracked objects:
 11749 ;;		On entry : 0/0
 11750 ;;		On exit  : 0/0
 11751 ;;		Unchanged: 0/0
 11752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11754 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11756 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11757 ;;Total ram usage:       22 bytes
 11758 ;; Hardware stack levels used:    1
 11759 ;; Hardware stack levels required when called:    3
 11760 ;; This function calls:
 11761 ;;		i2_fputc
 11762 ;;		i2_strlen
 11763 ;; This function is called by:
 11764 ;;		i2_vfpfcnvrt
 11765 ;; This function uses a non-reentrant model
 11766 ;;
 11767                           
 11768                           	psect	text64
 11769  0020E0                     __ptext64:
 11770                           	opt callstack 0
 11771  0020E0                     i2_stoa:
 11772                           	opt callstack 13
 11773  0020E0                     
 11774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11775  0020E0  EE21  F0C0         	lfsr	2,stoa@F1136
 11776  0020E4  EE10  F011         	lfsr	1,i2stoa@nuls
 11777  0020E8  0E06               	movlw	6
 11778  0020EA                     i2u296_41:
 11779  0020EA  CFDB FFE3          	movff	plusw2,plusw1
 11780  0020EE  06E8               	decf	wreg,f,c
 11781  0020F0  E2FC               	bc	i2u296_41
 11782  0020F2                     
 11783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 11784  0020F2  C00E  F01C         	movff	i2stoa@s,i2stoa@cp
 11785  0020F6  C00F  F01D         	movff	i2stoa@s+1,i2stoa@cp+1
 11786  0020FA                     
 11787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 11788  0020FA  501C               	movf	i2stoa@cp^0,w,c
 11789  0020FC  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 11790  0020FE  A4D8               	btfss	status,2,c
 11791  002100  EF84  F010         	goto	i2u297_41
 11792  002104  EF86  F010         	goto	i2u297_40
 11793  002108                     i2u297_41:
 11794  002108  EF8A  F010         	goto	i2l3576
 11795  00210C                     i2u297_40:
 11796  00210C                     
 11797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 11798  00210C  0E11               	movlw	low i2stoa@nuls
 11799  00210E  6E1C               	movwf	i2stoa@cp^0,c
 11800  002110  0E00               	movlw	high i2stoa@nuls
 11801  002112  6E1D               	movwf	(i2stoa@cp+1)^0,c
 11802  002114                     i2l3576:
 11803                           
 11804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 11805  002114  C01C  F001         	movff	i2stoa@cp,i2strlen@s
 11806  002118  C01D  F002         	movff	i2stoa@cp+1,i2strlen@s+1
 11807  00211C  ECDD  F019         	call	i2_strlen	;wreg free
 11808  002120  C001  F020         	movff	?i2_strlen,i2stoa@l
 11809  002124  C002  F021         	movff	?i2_strlen+1,i2stoa@l+1
 11810  002128                     
 11811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 11812  002128  C0CC  F01E         	movff	_prec,i2stoa@p
 11813  00212C  C0CD  F01F         	movff	_prec+1,i2stoa@p+1
 11814  002130                     
 11815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 11816  002130  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 11817  002132  EF9D  F010         	goto	i2u298_41
 11818  002136  EF9F  F010         	goto	i2u298_40
 11819  00213A                     i2u298_41:
 11820  00213A  EFB4  F010         	goto	i2l631
 11821  00213E                     i2u298_40:
 11822  00213E  5020               	movf	i2stoa@l^0,w,c
 11823  002140  5C1E               	subwf	i2stoa@p^0,w,c
 11824  002142  501F               	movf	(i2stoa@p+1)^0,w,c
 11825  002144  0A80               	xorlw	128
 11826  002146  6E10               	movwf	??i2_stoa^0,c
 11827  002148  5021               	movf	(i2stoa@l+1)^0,w,c
 11828  00214A  0A80               	xorlw	128
 11829  00214C  5810               	subwfb	??i2_stoa^0,w,c
 11830  00214E  A0D8               	btfss	status,0,c
 11831  002150  EFAC  F010         	goto	i2u299_41
 11832  002154  EFAE  F010         	goto	i2u299_40
 11833  002158                     i2u299_41:
 11834  002158  EFB0  F010         	goto	i2l629
 11835  00215C                     i2u299_40:
 11836  00215C  EFB4  F010         	goto	i2l631
 11837  002160                     i2l629:
 11838  002160  C01E  F020         	movff	i2stoa@p,i2stoa@l
 11839  002164  C01F  F021         	movff	i2stoa@p+1,i2stoa@l+1
 11840  002168                     i2l631:
 11841                           
 11842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 11843  002168  C020  F01E         	movff	i2stoa@l,i2stoa@p
 11844  00216C  C021  F01F         	movff	i2stoa@l+1,i2stoa@p+1
 11845                           
 11846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 11847  002170  C0CA  F01A         	movff	_width,i2stoa@w
 11848  002174  C0CB  F01B         	movff	_width+1,i2stoa@w+1
 11849                           
 11850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 11851  002178  0100               	movlb	0	; () banked
 11852  00217A  B1CE               	btfsc	_flags& (0+255),0,b
 11853  00217C  EFC2  F010         	goto	i2u300_41
 11854  002180  EFC4  F010         	goto	i2u300_40
 11855  002184                     i2u300_41:
 11856  002184  EFE1  F010         	goto	i2l3592
 11857  002188                     i2u300_40:
 11858  002188  EFD2  F010         	goto	i2l3590
 11859  00218C                     i2l3586:
 11860                           
 11861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 11862  00218C  0E00               	movlw	0
 11863  00218E  6E04               	movwf	(i2fputc@c+1)^0,c
 11864  002190  0E20               	movlw	32
 11865  002192  6E03               	movwf	i2fputc@c^0,c
 11866  002194  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 11867  002198  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 11868  00219C  EC09  F016         	call	i2_fputc	;wreg free
 11869  0021A0                     
 11870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 11871  0021A0  4A20               	infsnz	i2stoa@l^0,f,c
 11872  0021A2  2A21               	incf	(i2stoa@l+1)^0,f,c
 11873  0021A4                     i2l3590:
 11874                           
 11875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 11876  0021A4  501A               	movf	i2stoa@w^0,w,c
 11877  0021A6  5C20               	subwf	i2stoa@l^0,w,c
 11878  0021A8  5021               	movf	(i2stoa@l+1)^0,w,c
 11879  0021AA  0A80               	xorlw	128
 11880  0021AC  6E10               	movwf	??i2_stoa^0,c
 11881  0021AE  501B               	movf	(i2stoa@w+1)^0,w,c
 11882  0021B0  0A80               	xorlw	128
 11883  0021B2  5810               	subwfb	??i2_stoa^0,w,c
 11884  0021B4  A0D8               	btfss	status,0,c
 11885  0021B6  EFDF  F010         	goto	i2u301_41
 11886  0021BA  EFE1  F010         	goto	i2u301_40
 11887  0021BE                     i2u301_41:
 11888  0021BE  EFC6  F010         	goto	i2l3586
 11889  0021C2                     i2u301_40:
 11890  0021C2                     i2l3592:
 11891                           
 11892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 11893  0021C2  0E00               	movlw	0
 11894  0021C4  6E19               	movwf	(i2stoa@i+1)^0,c
 11895  0021C6  0E00               	movlw	0
 11896  0021C8  6E18               	movwf	i2stoa@i^0,c
 11897                           
 11898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11899  0021CA  EFFA  F010         	goto	i2l3600
 11900  0021CE                     i2l3594:
 11901                           
 11902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 11903  0021CE  C01C  FFD9         	movff	i2stoa@cp,fsr2l
 11904  0021D2  C01D  FFDA         	movff	i2stoa@cp+1,fsr2h
 11905  0021D6  50DF               	movf	indf2,w,c
 11906  0021D8  6E10               	movwf	??i2_stoa^0,c
 11907  0021DA  5010               	movf	??i2_stoa^0,w,c
 11908  0021DC  6E03               	movwf	i2fputc@c^0,c
 11909  0021DE  6A04               	clrf	(i2fputc@c+1)^0,c
 11910  0021E0  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 11911  0021E4  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 11912  0021E8  EC09  F016         	call	i2_fputc	;wreg free
 11913  0021EC                     
 11914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 11915  0021EC  4A1C               	infsnz	i2stoa@cp^0,f,c
 11916  0021EE  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 11917  0021F0                     
 11918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 11919  0021F0  4A18               	infsnz	i2stoa@i^0,f,c
 11920  0021F2  2A19               	incf	(i2stoa@i+1)^0,f,c
 11921  0021F4                     i2l3600:
 11922                           
 11923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11924  0021F4  501E               	movf	i2stoa@p^0,w,c
 11925  0021F6  5C18               	subwf	i2stoa@i^0,w,c
 11926  0021F8  5019               	movf	(i2stoa@i+1)^0,w,c
 11927  0021FA  0A80               	xorlw	128
 11928  0021FC  6E10               	movwf	??i2_stoa^0,c
 11929  0021FE  501F               	movf	(i2stoa@p+1)^0,w,c
 11930  002200  0A80               	xorlw	128
 11931  002202  5810               	subwfb	??i2_stoa^0,w,c
 11932  002204  A0D8               	btfss	status,0,c
 11933  002206  EF07  F011         	goto	i2u302_41
 11934  00220A  EF09  F011         	goto	i2u302_40
 11935  00220E                     i2u302_41:
 11936  00220E  EFE7  F010         	goto	i2l3594
 11937  002212                     i2u302_40:
 11938  002212                     
 11939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 11940  002212  0100               	movlb	0	; () banked
 11941  002214  A1CE               	btfss	_flags& (0+255),0,b
 11942  002216  EF0F  F011         	goto	i2u303_41
 11943  00221A  EF11  F011         	goto	i2u303_40
 11944  00221E                     i2u303_41:
 11945  00221E  EF2E  F011         	goto	i2l641
 11946  002222                     i2u303_40:
 11947  002222  EF1F  F011         	goto	i2l3608
 11948  002226                     i2l3604:
 11949                           
 11950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 11951  002226  0E00               	movlw	0
 11952  002228  6E04               	movwf	(i2fputc@c+1)^0,c
 11953  00222A  0E20               	movlw	32
 11954  00222C  6E03               	movwf	i2fputc@c^0,c
 11955  00222E  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 11956  002232  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 11957  002236  EC09  F016         	call	i2_fputc	;wreg free
 11958  00223A                     
 11959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 11960  00223A  4A20               	infsnz	i2stoa@l^0,f,c
 11961  00223C  2A21               	incf	(i2stoa@l+1)^0,f,c
 11962  00223E                     i2l3608:
 11963                           
 11964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 11965  00223E  501A               	movf	i2stoa@w^0,w,c
 11966  002240  5C20               	subwf	i2stoa@l^0,w,c
 11967  002242  5021               	movf	(i2stoa@l+1)^0,w,c
 11968  002244  0A80               	xorlw	128
 11969  002246  6E10               	movwf	??i2_stoa^0,c
 11970  002248  501B               	movf	(i2stoa@w+1)^0,w,c
 11971  00224A  0A80               	xorlw	128
 11972  00224C  5810               	subwfb	??i2_stoa^0,w,c
 11973  00224E  A0D8               	btfss	status,0,c
 11974  002250  EF2C  F011         	goto	i2u304_41
 11975  002254  EF2E  F011         	goto	i2u304_40
 11976  002258                     i2u304_41:
 11977  002258  EF13  F011         	goto	i2l3604
 11978  00225C                     i2u304_40:
 11979  00225C                     i2l641:
 11980                           
 11981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 11982  00225C  C020  F00C         	movff	i2stoa@l,?i2_stoa
 11983  002260  C021  F00D         	movff	i2stoa@l+1,?i2_stoa+1
 11984  002264  0012               	return		;funcret
 11985  002266                     __end_ofi2_stoa:
 11986                           	opt callstack 0
 11987                           
 11988 ;; *************** function i2_ctoa *****************
 11989 ;; Defined at:
 11990 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 11993 ;;		 -> NULL(0), 
 11994 ;;  c               1   31[COMRAM] unsigned char 
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;  ctoa            2   32[COMRAM] int 
 11997 ;;  ctoa            2    0        int 
 11998 ;; Return value:  Size  Location     Type
 11999 ;;                  2   29[COMRAM] int 
 12000 ;; Registers used:
 12001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12002 ;; Tracked objects:
 12003 ;;		On entry : 0/0
 12004 ;;		On exit  : 0/0
 12005 ;;		Unchanged: 0/0
 12006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12007 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12010 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12011 ;;Total ram usage:        5 bytes
 12012 ;; Hardware stack levels used:    1
 12013 ;; Hardware stack levels required when called:    5
 12014 ;; This function calls:
 12015 ;;		i2_pad
 12016 ;; This function is called by:
 12017 ;;		i2_vfpfcnvrt
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021                           	psect	text65
 12022  002F0C                     __ptext65:
 12023                           	opt callstack 0
 12024  002F0C                     i2_ctoa:
 12025                           	opt callstack 11
 12026  002F0C                     
 12027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 12028  002F0C  0100               	movlb	0	; () banked
 12029  002F0E  51CA               	movf	_width& (0+255),w,b
 12030  002F10  11CB               	iorwf	(_width+1)& (0+255),w,b
 12031  002F12  A4D8               	btfss	status,2,c
 12032  002F14  EF8E  F017         	goto	i2u295_41
 12033  002F18  EF90  F017         	goto	i2u295_40
 12034  002F1C                     i2u295_41:
 12035  002F1C  EF96  F017         	goto	i2l3558
 12036  002F20                     i2u295_40:
 12037  002F20                     
 12038                           ; BSR set to: 0
 12039  002F20  C0CA  F021         	movff	_width,i2ctoa@w
 12040  002F24  C0CB  F022         	movff	_width+1,i2ctoa@w+1
 12041  002F28  EF9C  F017         	goto	i2l3560
 12042  002F2C                     i2l3558:
 12043                           
 12044                           ; BSR set to: 0
 12045  002F2C  0EFF               	movlw	255
 12046  002F2E  25CA               	addwf	_width& (0+255),w,b
 12047  002F30  6E21               	movwf	i2ctoa@w^0,c
 12048  002F32  0EFF               	movlw	255
 12049  002F34  21CB               	addwfc	(_width+1)& (0+255),w,b
 12050  002F36  6E22               	movwf	(i2ctoa@w+1)^0,c
 12051  002F38                     i2l3560:
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 12055  002F38  C020  F125         	movff	i2ctoa@c,_dbuf
 12056  002F3C                     
 12057                           ; BSR set to: 0
 12058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 12059  002F3C  0E00               	movlw	0
 12060  002F3E  0101               	movlb	1	; () banked
 12061  002F40  6F26               	movwf	(_dbuf+1)& (0+255),b
 12062  002F42                     
 12063                           ; BSR set to: 1
 12064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 12065  002F42  C01E  F013         	movff	i2ctoa@fp,i2pad@fp
 12066  002F46  C01F  F014         	movff	i2ctoa@fp+1,i2pad@fp+1
 12067  002F4A  0E25               	movlw	low _dbuf
 12068  002F4C  6E15               	movwf	i2pad@buf^0,c
 12069  002F4E  0E01               	movlw	high _dbuf
 12070  002F50  6E16               	movwf	(i2pad@buf+1)^0,c
 12071  002F52  C021  F017         	movff	i2ctoa@w,i2pad@p
 12072  002F56  C022  F018         	movff	i2ctoa@w+1,i2pad@p+1
 12073  002F5A  ECF8  F014         	call	i2_pad	;wreg free
 12074  002F5E  C013  F01E         	movff	?i2_pad,?i2_ctoa
 12075  002F62  C014  F01F         	movff	?i2_pad+1,?i2_ctoa+1
 12076  002F66  0012               	return		;funcret
 12077  002F68                     __end_ofi2_ctoa:
 12078                           	opt callstack 0
 12079                           
 12080 ;; *************** function i2_pad *****************
 12081 ;; Defined at:
 12082 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 12085 ;;		 -> NULL(0), 
 12086 ;;  buf             2   20[COMRAM] PTR unsigned char 
 12087 ;;		 -> dbuf(32), 
 12088 ;;  p               2   22[COMRAM] int 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  pad             2   27[COMRAM] int 
 12091 ;;  pad             2   25[COMRAM] int 
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  2   18[COMRAM] int 
 12094 ;; Registers used:
 12095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12101 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12102 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12103 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12104 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12105 ;;Total ram usage:       11 bytes
 12106 ;; Hardware stack levels used:    1
 12107 ;; Hardware stack levels required when called:    4
 12108 ;; This function calls:
 12109 ;;		i2_fputc
 12110 ;;		i2_fputs
 12111 ;;		i2_strlen
 12112 ;; This function is called by:
 12113 ;;		i2_ctoa
 12114 ;;		i2_utoa
 12115 ;;		i2_xtoa
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           	psect	text66
 12120  0029F0                     __ptext66:
 12121                           	opt callstack 0
 12122  0029F0                     i2_pad:
 12123                           	opt callstack 11
 12124  0029F0                     
 12125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 12126  0029F0  0100               	movlb	0	; () banked
 12127  0029F2  A1CE               	btfss	_flags& (0+255),0,b
 12128  0029F4  EFFE  F014         	goto	i2u251_41
 12129  0029F8  EF00  F015         	goto	i2u251_40
 12130  0029FC                     i2u251_41:
 12131  0029FC  EF0A  F015         	goto	i2l3358
 12132  002A00                     i2u251_40:
 12133  002A00                     
 12134                           ; BSR set to: 0
 12135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 12136  002A00  C015  F00C         	movff	i2pad@buf,i2fputs@s
 12137  002A04  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 12138  002A08  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 12139  002A0C  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 12140  002A10  EC74  F018         	call	i2_fputs	;wreg free
 12141  002A14                     i2l3358:
 12142                           
 12143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 12144  002A14  BE18               	btfsc	(i2pad@p+1)^0,7,c
 12145  002A16  EF0F  F015         	goto	i2u252_41
 12146  002A1A  EF11  F015         	goto	i2u252_40
 12147  002A1E                     i2u252_41:
 12148  002A1E  EF17  F015         	goto	i2l3362
 12149  002A22                     i2u252_40:
 12150  002A22  C017  F01C         	movff	i2pad@p,i2pad@w
 12151  002A26  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 12152  002A2A  EF1B  F015         	goto	i2l610
 12153  002A2E                     i2l3362:
 12154  002A2E  0E00               	movlw	0
 12155  002A30  6E1D               	movwf	(i2pad@w+1)^0,c
 12156  002A32  0E00               	movlw	0
 12157  002A34  6E1C               	movwf	i2pad@w^0,c
 12158  002A36                     i2l610:
 12159                           
 12160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 12161  002A36  0E00               	movlw	0
 12162  002A38  6E1B               	movwf	(i2pad@i+1)^0,c
 12163  002A3A  0E00               	movlw	0
 12164  002A3C  6E1A               	movwf	i2pad@i^0,c
 12165                           
 12166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12167  002A3E  EF2D  F015         	goto	i2l3368
 12168  002A42                     i2l3364:
 12169                           
 12170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 12171  002A42  0E00               	movlw	0
 12172  002A44  6E04               	movwf	(i2fputc@c+1)^0,c
 12173  002A46  0E20               	movlw	32
 12174  002A48  6E03               	movwf	i2fputc@c^0,c
 12175  002A4A  C013  F005         	movff	i2pad@fp,i2fputc@fp
 12176  002A4E  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 12177  002A52  EC09  F016         	call	i2_fputc	;wreg free
 12178  002A56                     
 12179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 12180  002A56  4A1A               	infsnz	i2pad@i^0,f,c
 12181  002A58  2A1B               	incf	(i2pad@i+1)^0,f,c
 12182  002A5A                     i2l3368:
 12183                           
 12184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12185  002A5A  501C               	movf	i2pad@w^0,w,c
 12186  002A5C  5C1A               	subwf	i2pad@i^0,w,c
 12187  002A5E  501B               	movf	(i2pad@i+1)^0,w,c
 12188  002A60  0A80               	xorlw	128
 12189  002A62  6E19               	movwf	??i2_pad^0,c
 12190  002A64  501D               	movf	(i2pad@w+1)^0,w,c
 12191  002A66  0A80               	xorlw	128
 12192  002A68  5819               	subwfb	??i2_pad^0,w,c
 12193  002A6A  A0D8               	btfss	status,0,c
 12194  002A6C  EF3A  F015         	goto	i2u253_41
 12195  002A70  EF3C  F015         	goto	i2u253_40
 12196  002A74                     i2u253_41:
 12197  002A74  EF21  F015         	goto	i2l3364
 12198  002A78                     i2u253_40:
 12199  002A78                     
 12200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 12201  002A78  0100               	movlb	0	; () banked
 12202  002A7A  B1CE               	btfsc	_flags& (0+255),0,b
 12203  002A7C  EF42  F015         	goto	i2u254_41
 12204  002A80  EF44  F015         	goto	i2u254_40
 12205  002A84                     i2u254_41:
 12206  002A84  EF4E  F015         	goto	i2l3372
 12207  002A88                     i2u254_40:
 12208  002A88                     
 12209                           ; BSR set to: 0
 12210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 12211  002A88  C015  F00C         	movff	i2pad@buf,i2fputs@s
 12212  002A8C  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 12213  002A90  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 12214  002A94  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 12215  002A98  EC74  F018         	call	i2_fputs	;wreg free
 12216  002A9C                     i2l3372:
 12217                           
 12218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 12219  002A9C  C015  F001         	movff	i2pad@buf,i2strlen@s
 12220  002AA0  C016  F002         	movff	i2pad@buf+1,i2strlen@s+1
 12221  002AA4  ECDD  F019         	call	i2_strlen	;wreg free
 12222  002AA8  501C               	movf	i2pad@w^0,w,c
 12223  002AAA  2401               	addwf	?i2_strlen^0,w,c
 12224  002AAC  6E13               	movwf	?i2_pad^0,c
 12225  002AAE  501D               	movf	(i2pad@w+1)^0,w,c
 12226  002AB0  2002               	addwfc	(?i2_strlen+1)^0,w,c
 12227  002AB2  6E14               	movwf	(?i2_pad+1)^0,c
 12228  002AB4  0012               	return		;funcret
 12229  002AB6                     __end_ofi2_pad:
 12230                           	opt callstack 0
 12231                           
 12232 ;; *************** function i2_strlen *****************
 12233 ;; Defined at:
 12234 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 12235 ;; Parameters:    Size  Location     Type
 12236 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12237 ;;		 -> i2stoa@nuls(7), ?_printf(2), stoa@nuls(7), dbuf(32), 
 12238 ;;		 -> IRreceiveBuffer(20), IRtransmitBuffer(20), 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 12241 ;;		 -> i2stoa@nuls(7), ?_printf(2), stoa@nuls(7), dbuf(32), 
 12242 ;;		 -> IRreceiveBuffer(20), IRtransmitBuffer(20), 
 12243 ;; Return value:  Size  Location     Type
 12244 ;;                  2    0[COMRAM] unsigned int 
 12245 ;; Registers used:
 12246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12247 ;; Tracked objects:
 12248 ;;		On entry : 0/0
 12249 ;;		On exit  : 0/0
 12250 ;;		Unchanged: 0/0
 12251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;Total ram usage:        4 bytes
 12257 ;; Hardware stack levels used:    1
 12258 ;; This function calls:
 12259 ;;		Nothing
 12260 ;; This function is called by:
 12261 ;;		i2_pad
 12262 ;;		i2_stoa
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text67
 12267  0033BA                     __ptext67:
 12268                           	opt callstack 0
 12269  0033BA                     i2_strlen:
 12270                           	opt callstack 14
 12271  0033BA  C001  F003         	movff	i2strlen@s,i2strlen@a
 12272  0033BE  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 12273  0033C2  EFE5  F019         	goto	i2l3322
 12274  0033C6                     i2l3320:
 12275  0033C6  4A01               	infsnz	i2strlen@s^0,f,c
 12276  0033C8  2A02               	incf	(i2strlen@s+1)^0,f,c
 12277  0033CA                     i2l3322:
 12278  0033CA  C001  FFD9         	movff	i2strlen@s,fsr2l
 12279  0033CE  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 12280  0033D2  50DF               	movf	indf2,w,c
 12281  0033D4  A4D8               	btfss	status,2,c
 12282  0033D6  EFEF  F019         	goto	i2u244_41
 12283  0033DA  EFF1  F019         	goto	i2u244_40
 12284  0033DE                     i2u244_41:
 12285  0033DE  EFE3  F019         	goto	i2l3320
 12286  0033E2                     i2u244_40:
 12287  0033E2  5003               	movf	i2strlen@a^0,w,c
 12288  0033E4  5C01               	subwf	i2strlen@s^0,w,c
 12289  0033E6  6E01               	movwf	?i2_strlen^0,c
 12290  0033E8  5004               	movf	(i2strlen@a+1)^0,w,c
 12291  0033EA  5802               	subwfb	(i2strlen@s+1)^0,w,c
 12292  0033EC  6E02               	movwf	(?i2_strlen+1)^0,c
 12293  0033EE  0012               	return		;funcret
 12294  0033F0                     __end_ofi2_strlen:
 12295                           	opt callstack 0
 12296                           
 12297 ;; *************** function i2_fputs *****************
 12298 ;; Defined at:
 12299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;  s               2   11[COMRAM] PTR const unsigned char 
 12302 ;;		 -> dbuf(32), 
 12303 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 12304 ;;		 -> NULL(0), 
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;  fputs           2   16[COMRAM] int 
 12307 ;;  fputs           1   15[COMRAM] unsigned char 
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  2   11[COMRAM] int 
 12310 ;; Registers used:
 12311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12318 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12320 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;Total ram usage:        7 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; Hardware stack levels required when called:    3
 12324 ;; This function calls:
 12325 ;;		i2_fputc
 12326 ;; This function is called by:
 12327 ;;		i2_pad
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text68
 12332  0030E8                     __ptext68:
 12333                           	opt callstack 0
 12334  0030E8                     i2_fputs:
 12335                           	opt callstack 11
 12336  0030E8  0E00               	movlw	0
 12337  0030EA  6E12               	movwf	(i2fputs@i+1)^0,c
 12338  0030EC  0E00               	movlw	0
 12339  0030EE  6E11               	movwf	i2fputs@i^0,c
 12340  0030F0  EF85  F018         	goto	i2l3316
 12341  0030F4                     i2l3312:
 12342  0030F4  C010  F003         	movff	i2fputs@c,i2fputc@c
 12343  0030F8  6A04               	clrf	(i2fputc@c+1)^0,c
 12344  0030FA  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 12345  0030FE  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 12346  003102  EC09  F016         	call	i2_fputc	;wreg free
 12347  003106  4A11               	infsnz	i2fputs@i^0,f,c
 12348  003108  2A12               	incf	(i2fputs@i+1)^0,f,c
 12349  00310A                     i2l3316:
 12350  00310A  5011               	movf	i2fputs@i^0,w,c
 12351  00310C  240C               	addwf	i2fputs@s^0,w,c
 12352  00310E  6ED9               	movwf	fsr2l,c
 12353  003110  5012               	movf	(i2fputs@i+1)^0,w,c
 12354  003112  200D               	addwfc	(i2fputs@s+1)^0,w,c
 12355  003114  6EDA               	movwf	fsr2h,c
 12356  003116  50DF               	movf	indf2,w,c
 12357  003118  6E10               	movwf	i2fputs@c^0,c
 12358  00311A  5010               	movf	i2fputs@c^0,w,c
 12359  00311C  A4D8               	btfss	status,2,c
 12360  00311E  EF93  F018         	goto	i2u243_41
 12361  003122  EF95  F018         	goto	i2u243_40
 12362  003126                     i2u243_41:
 12363  003126  EF7A  F018         	goto	i2l3312
 12364  00312A                     i2u243_40:
 12365  00312A  0012               	return		;funcret
 12366  00312C                     __end_ofi2_fputs:
 12367                           	opt callstack 0
 12368                           
 12369 ;; *************** function i2_fputc *****************
 12370 ;; Defined at:
 12371 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;  c               2    2[COMRAM] int 
 12374 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 12375 ;;		 -> NULL(0), 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;		None
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  2    2[COMRAM] int 
 12380 ;; Registers used:
 12381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12389 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12390 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;Total ram usage:        9 bytes
 12392 ;; Hardware stack levels used:    1
 12393 ;; Hardware stack levels required when called:    2
 12394 ;; This function calls:
 12395 ;;		i2_putch
 12396 ;; This function is called by:
 12397 ;;		i2_pad
 12398 ;;		i2_stoa
 12399 ;;		i2_vfpfcnvrt
 12400 ;;		i2_fputs
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           	psect	text69
 12405  002C12                     __ptext69:
 12406                           	opt callstack 0
 12407  002C12                     i2_fputc:
 12408                           	opt callstack 11
 12409  002C12  5005               	movf	i2fputc@fp^0,w,c
 12410  002C14  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 12411  002C16  B4D8               	btfsc	status,2,c
 12412  002C18  EF10  F016         	goto	i2u235_41
 12413  002C1C  EF12  F016         	goto	i2u235_40
 12414  002C20                     i2u235_41:
 12415  002C20  EF1B  F016         	goto	i2l3286
 12416  002C24                     i2u235_40:
 12417  002C24  5005               	movf	i2fputc@fp^0,w,c
 12418  002C26  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 12419  002C28  A4D8               	btfss	status,2,c
 12420  002C2A  EF19  F016         	goto	i2u236_41
 12421  002C2E  EF1B  F016         	goto	i2u236_40
 12422  002C32                     i2u236_41:
 12423  002C32  EF20  F016         	goto	i2l3288
 12424  002C36                     i2u236_40:
 12425  002C36                     i2l3286:
 12426  002C36  5003               	movf	i2fputc@c^0,w,c
 12427  002C38  EC6B  F01B         	call	i2_putch
 12428  002C3C  EF53  F016         	goto	i2l1482
 12429  002C40                     i2l3288:
 12430  002C40  EE20 F004          	lfsr	2,4
 12431  002C44  5005               	movf	i2fputc@fp^0,w,c
 12432  002C46  26D9               	addwf	fsr2l,f,c
 12433  002C48  5006               	movf	(i2fputc@fp+1)^0,w,c
 12434  002C4A  22DA               	addwfc	fsr2h,f,c
 12435  002C4C  50DE               	movf	postinc2,w,c
 12436  002C4E  10DE               	iorwf	postinc2,w,c
 12437  002C50  B4D8               	btfsc	status,2,c
 12438  002C52  EF2D  F016         	goto	i2u237_41
 12439  002C56  EF2F  F016         	goto	i2u237_40
 12440  002C5A                     i2u237_41:
 12441  002C5A  EF4A  F016         	goto	i2l3292
 12442  002C5E                     i2u237_40:
 12443  002C5E  EE20 F004          	lfsr	2,4
 12444  002C62  5005               	movf	i2fputc@fp^0,w,c
 12445  002C64  26D9               	addwf	fsr2l,f,c
 12446  002C66  5006               	movf	(i2fputc@fp+1)^0,w,c
 12447  002C68  22DA               	addwfc	fsr2h,f,c
 12448  002C6A  EE10 F002          	lfsr	1,2
 12449  002C6E  5005               	movf	i2fputc@fp^0,w,c
 12450  002C70  26E1               	addwf	fsr1l,f,c
 12451  002C72  5006               	movf	(i2fputc@fp+1)^0,w,c
 12452  002C74  22E2               	addwfc	fsr1h,f,c
 12453  002C76  50DE               	movf	postinc2,w,c
 12454  002C78  5CE6               	subwf	postinc1,w,c
 12455  002C7A  50E6               	movf	postinc1,w,c
 12456  002C7C  0A80               	xorlw	128
 12457  002C7E  6E0B               	movwf	(??i2_fputc+4)^0,c
 12458  002C80  50DE               	movf	postinc2,w,c
 12459  002C82  0A80               	xorlw	128
 12460  002C84  580B               	subwfb	(??i2_fputc+4)^0,w,c
 12461  002C86  B0D8               	btfsc	status,0,c
 12462  002C88  EF48  F016         	goto	i2u238_41
 12463  002C8C  EF4A  F016         	goto	i2u238_40
 12464  002C90                     i2u238_41:
 12465  002C90  EF53  F016         	goto	i2l1482
 12466  002C94                     i2u238_40:
 12467  002C94                     i2l3292:
 12468  002C94  EE20 F002          	lfsr	2,2
 12469  002C98  5005               	movf	i2fputc@fp^0,w,c
 12470  002C9A  26D9               	addwf	fsr2l,f,c
 12471  002C9C  5006               	movf	(i2fputc@fp+1)^0,w,c
 12472  002C9E  22DA               	addwfc	fsr2h,f,c
 12473  002CA0  2ADE               	incf	postinc2,f,c
 12474  002CA2  0E00               	movlw	0
 12475  002CA4  22DD               	addwfc	postdec2,f,c
 12476  002CA6                     i2l1482:
 12477  002CA6  0012               	return		;funcret
 12478  002CA8                     __end_ofi2_fputc:
 12479                           	opt callstack 0
 12480                           
 12481 ;; *************** function i2_putch *****************
 12482 ;; Defined at:
 12483 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;  txData          1    wreg     unsigned char 
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;  txData          1    1[COMRAM] unsigned char 
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  1    wreg      void 
 12490 ;; Registers used:
 12491 ;;		wreg, status,2, cstack
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;Total ram usage:        1 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:    1
 12504 ;; This function calls:
 12505 ;;		i2_EUSART1_Write
 12506 ;; This function is called by:
 12507 ;;		i2_fputc
 12508 ;; This function uses a non-reentrant model
 12509 ;;
 12510                           
 12511                           	psect	text70
 12512  0036D6                     __ptext70:
 12513                           	opt callstack 0
 12514  0036D6                     i2_putch:
 12515                           	opt callstack 11
 12516                           
 12517                           ;incstack = 0
 12518                           ;i2putch@txData stored from wreg
 12519  0036D6  6E02               	movwf	i2putch@txData^0,c
 12520  0036D8                     
 12521                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 12522  0036D8  5002               	movf	i2putch@txData^0,w,c
 12523  0036DA  EC0C  F01B         	call	i2_EUSART1_Write
 12524  0036DE  0012               	return		;funcret
 12525  0036E0                     __end_ofi2_putch:
 12526                           	opt callstack 0
 12527                           
 12528 ;; *************** function i2_EUSART1_Write *****************
 12529 ;; Defined at:
 12530 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;  txData          1    wreg     unsigned char 
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;  txData          1    0[COMRAM] unsigned char 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;Total ram usage:        1 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; This function calls:
 12551 ;;		Nothing
 12552 ;; This function is called by:
 12553 ;;		i2_putch
 12554 ;; This function uses a non-reentrant model
 12555 ;;
 12556                           
 12557                           	psect	text71
 12558  003618                     __ptext71:
 12559                           	opt callstack 0
 12560  003618                     i2_EUSART1_Write:
 12561                           	opt callstack 11
 12562                           
 12563                           ;incstack = 0
 12564                           ;i2EUSART1_Write@txData stored from wreg
 12565  003618  6E01               	movwf	i2EUSART1_Write@txData^0,c
 12566  00361A                     i2l310:
 12567                           
 12568                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 12569  00361A  A89E               	btfss	158,4,c	;volatile
 12570  00361C  EF12  F01B         	goto	i2u233_41
 12571  003620  EF14  F01B         	goto	i2u233_40
 12572  003624                     i2u233_41:
 12573  003624  EF0D  F01B         	goto	i2l310
 12574  003628                     i2u233_40:
 12575  003628                     
 12576                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 12577  003628  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 12578  00362C  0012               	return		;funcret
 12579  00362E                     __end_ofi2_EUSART1_Write:
 12580                           	opt callstack 0
 12581                           
 12582 ;; *************** function i2_atoi *****************
 12583 ;; Defined at:
 12584 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;  s               2    7[COMRAM] PTR const unsigned char 
 12587 ;;		 -> STR_48(7), STR_47(17), STR_46(40), STR_45(14), 
 12588 ;;		 -> STR_44(13), STR_43(11), STR_42(16), STR_41(15), 
 12589 ;;		 -> STR_40(14), STR_39(16), STR_38(15), STR_37(12), 
 12590 ;;		 -> STR_36(3), STR_35(41), STR_34(21), STR_33(31), 
 12591 ;;		 -> STR_32(16), STR_31(15), STR_30(15), STR_29(15), 
 12592 ;;		 -> STR_28(14), STR_27(43), STR_26(2), STR_25(2), 
 12593 ;;		 -> STR_24(8), STR_23(52), STR_22(19), STR_21(54), 
 12594 ;;		 -> STR_20(32), STR_19(31), STR_18(19), STR_17(46), 
 12595 ;;		 -> STR_16(24), STR_15(21), STR_14(7), STR_13(15), 
 12596 ;;		 -> STR_12(52), STR_11(12), STR_10(13), STR_9(12), 
 12597 ;;		 -> STR_8(12), STR_7(12), STR_6(11), STR_5(52), 
 12598 ;;		 -> STR_4(5), STR_3(65), STR_2(42), STR_1(15), 
 12599 ;; Auto vars:     Size  Location     Type
 12600 ;;  atoi            2   20[COMRAM] int 
 12601 ;;  atoi            2   13[COMRAM] int 
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  2    7[COMRAM] int 
 12604 ;; Registers used:
 12605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12612 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12613 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12614 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12615 ;;Total ram usage:       15 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; Hardware stack levels required when called:    1
 12618 ;; This function calls:
 12619 ;;		i2___wmul
 12620 ;;		i2_isdigit
 12621 ;;		i2_isspace
 12622 ;; This function is called by:
 12623 ;;		i2_vfpfcnvrt
 12624 ;; This function uses a non-reentrant model
 12625 ;;
 12626                           
 12627                           	psect	text72
 12628  001DBA                     __ptext72:
 12629                           	opt callstack 0
 12630  001DBA                     i2_atoi:
 12631                           	opt callstack 15
 12632  001DBA  0E00               	movlw	0
 12633  001DBC  6E16               	movwf	(i2atoi@n+1)^0,c
 12634  001DBE  0E00               	movlw	0
 12635  001DC0  6E15               	movwf	i2atoi@n^0,c
 12636  001DC2  0E00               	movlw	0
 12637  001DC4  6E0F               	movwf	(i2atoi@neg+1)^0,c
 12638  001DC6  0E00               	movlw	0
 12639  001DC8  6E0E               	movwf	i2atoi@neg^0,c
 12640  001DCA  EFE9  F00E         	goto	i2l3716
 12641  001DCE                     i2l3714:
 12642  001DCE  4A08               	infsnz	i2atoi@s^0,f,c
 12643  001DD0  2A09               	incf	(i2atoi@s+1)^0,f,c
 12644  001DD2                     i2l3716:
 12645  001DD2  0E01               	movlw	1
 12646  001DD4  6E14               	movwf	i2_atoi$1977^0,c
 12647  001DD6  C008  FFF6         	movff	i2atoi@s,tblptrl
 12648  001DDA  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12649  001DDE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12650  001DDE  6AF8               	clrf	tblptru,c
 12651  001DE0                     	endif
 12652  001DE0                     	if	0	;tblptru may be non-zero
 12653  001DE0                     	endif
 12654  001DE0  0008               	tblrd		*
 12655  001DE2  50F5               	movf	tablat,w,c
 12656  001DE4  0A20               	xorlw	32
 12657  001DE6  B4D8               	btfsc	status,2,c
 12658  001DE8  EFF8  F00E         	goto	i2u329_41
 12659  001DEC  EFFA  F00E         	goto	i2u329_40
 12660  001DF0                     i2u329_41:
 12661  001DF0  EF18  F00F         	goto	i2l3724
 12662  001DF4                     i2u329_40:
 12663  001DF4  0EF7               	movlw	247
 12664  001DF6  6E0A               	movwf	??i2_atoi^0,c
 12665  001DF8  0EFF               	movlw	255
 12666  001DFA  6E0B               	movwf	(??i2_atoi+1)^0,c
 12667  001DFC  C008  FFF6         	movff	i2atoi@s,tblptrl
 12668  001E00  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12669  001E04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12670  001E04  6AF8               	clrf	tblptru,c
 12671  001E06                     	endif
 12672  001E06                     	if	0	;tblptru may be non-zero
 12673  001E06                     	endif
 12674  001E06  0008               	tblrd		*
 12675  001E08  50F5               	movf	tablat,w,c
 12676  001E0A  6E0C               	movwf	(??i2_atoi+2)^0,c
 12677  001E0C  6A0D               	clrf	(??i2_atoi+3)^0,c
 12678  001E0E  500A               	movf	??i2_atoi^0,w,c
 12679  001E10  260C               	addwf	(??i2_atoi+2)^0,f,c
 12680  001E12  500B               	movf	(??i2_atoi+1)^0,w,c
 12681  001E14  220D               	addwfc	(??i2_atoi+3)^0,f,c
 12682  001E16  500D               	movf	(??i2_atoi+3)^0,w,c
 12683  001E18  E109               	bnz	i2u330_40
 12684  001E1A  0E05               	movlw	5
 12685  001E1C  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 12686  001E1E  A0D8               	btfss	status,0,c
 12687  001E20  EF14  F00F         	goto	i2u330_41
 12688  001E24  EF16  F00F         	goto	i2u330_40
 12689  001E28                     i2u330_41:
 12690  001E28  EF18  F00F         	goto	i2l3724
 12691  001E2C                     i2u330_40:
 12692  001E2C  0E00               	movlw	0
 12693  001E2E  6E14               	movwf	i2_atoi$1977^0,c
 12694  001E30                     i2l3724:
 12695  001E30  C014  F010         	movff	i2_atoi$1977,i2_atoi$1976
 12696  001E34  6A11               	clrf	(i2_atoi$1976+1)^0,c
 12697  001E36  5010               	movf	i2_atoi$1976^0,w,c
 12698  001E38  1011               	iorwf	(i2_atoi$1976+1)^0,w,c
 12699  001E3A  A4D8               	btfss	status,2,c
 12700  001E3C  EF22  F00F         	goto	i2u331_41
 12701  001E40  EF24  F00F         	goto	i2u331_40
 12702  001E44                     i2u331_41:
 12703  001E44  EFE7  F00E         	goto	i2l3714
 12704  001E48                     i2u331_40:
 12705  001E48  EF2E  F00F         	goto	i2l3734
 12706  001E4C                     i2l3730:
 12707  001E4C  0E00               	movlw	0
 12708  001E4E  6E0F               	movwf	(i2atoi@neg+1)^0,c
 12709  001E50  0E01               	movlw	1
 12710  001E52  6E0E               	movwf	i2atoi@neg^0,c
 12711  001E54                     i2l3732:
 12712  001E54  4A08               	infsnz	i2atoi@s^0,f,c
 12713  001E56  2A09               	incf	(i2atoi@s+1)^0,f,c
 12714  001E58  EF65  F00F         	goto	i2l3740
 12715  001E5C                     i2l3734:
 12716  001E5C  C008  FFF6         	movff	i2atoi@s,tblptrl
 12717  001E60  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12718  001E64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12719  001E64  6AF8               	clrf	tblptru,c
 12720  001E66                     	endif
 12721  001E66                     	if	0	;tblptru may be non-zero
 12722  001E66                     	endif
 12723  001E66  0008               	tblrd		*
 12724  001E68  50F5               	movf	tablat,w,c
 12725  001E6A  6E0A               	movwf	??i2_atoi^0,c
 12726  001E6C  6A0B               	clrf	(??i2_atoi+1)^0,c
 12727                           
 12728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12729                           ; Switch size 1, requested type "simple"
 12730                           ; Number of cases is 1, Range of values is 0 to 0
 12731                           ; switch strategies available:
 12732                           ; Name         Instructions Cycles
 12733                           ; simple_byte            4     3 (average)
 12734                           ;	Chosen strategy is simple_byte
 12735  001E6E  500B               	movf	(??i2_atoi+1)^0,w,c
 12736  001E70  0A00               	xorlw	0	; case 0
 12737  001E72  B4D8               	btfsc	status,2,c
 12738  001E74  EF3E  F00F         	goto	i2l5852
 12739  001E78  EF65  F00F         	goto	i2l3740
 12740  001E7C                     i2l5852:
 12741                           
 12742                           ; Switch size 1, requested type "simple"
 12743                           ; Number of cases is 2, Range of values is 43 to 45
 12744                           ; switch strategies available:
 12745                           ; Name         Instructions Cycles
 12746                           ; simple_byte            7     4 (average)
 12747                           ;	Chosen strategy is simple_byte
 12748  001E7C  500A               	movf	??i2_atoi^0,w,c
 12749  001E7E  0A2B               	xorlw	43	; case 43
 12750  001E80  B4D8               	btfsc	status,2,c
 12751  001E82  EF2A  F00F         	goto	i2l3732
 12752  001E86  0A06               	xorlw	6	; case 45
 12753  001E88  B4D8               	btfsc	status,2,c
 12754  001E8A  EF26  F00F         	goto	i2l3730
 12755  001E8E  EF65  F00F         	goto	i2l3740
 12756  001E92                     i2l3736:
 12757  001E92  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
 12758  001E96  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 12759  001E9A  0E00               	movlw	0
 12760  001E9C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12761  001E9E  0E0A               	movlw	10
 12762  001EA0  6E03               	movwf	i2___wmul@multiplicand^0,c
 12763  001EA2  ECA4  F01A         	call	i2___wmul	;wreg free
 12764  001EA6  C008  FFF6         	movff	i2atoi@s,tblptrl
 12765  001EAA  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12766  001EAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12767  001EAE  6AF8               	clrf	tblptru,c
 12768  001EB0                     	endif
 12769  001EB0                     	if	0	;tblptru may be non-zero
 12770  001EB0                     	endif
 12771  001EB0  0008               	tblrd		*
 12772  001EB2  50F5               	movf	tablat,w,c
 12773  001EB4  5E01               	subwf	?i2___wmul^0,f,c
 12774  001EB6  0E00               	movlw	0
 12775  001EB8  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 12776  001EBA  0E30               	movlw	48
 12777  001EBC  2401               	addwf	?i2___wmul^0,w,c
 12778  001EBE  6E15               	movwf	i2atoi@n^0,c
 12779  001EC0  0E00               	movlw	0
 12780  001EC2  2002               	addwfc	(?i2___wmul+1)^0,w,c
 12781  001EC4  6E16               	movwf	(i2atoi@n+1)^0,c
 12782  001EC6  EF2A  F00F         	goto	i2l3732
 12783  001ECA                     i2l3740:
 12784  001ECA  0ED0               	movlw	208
 12785  001ECC  6E0A               	movwf	??i2_atoi^0,c
 12786  001ECE  0EFF               	movlw	255
 12787  001ED0  6E0B               	movwf	(??i2_atoi+1)^0,c
 12788  001ED2  C008  FFF6         	movff	i2atoi@s,tblptrl
 12789  001ED6  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12790  001EDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12791  001EDA  6AF8               	clrf	tblptru,c
 12792  001EDC                     	endif
 12793  001EDC                     	if	0	;tblptru may be non-zero
 12794  001EDC                     	endif
 12795  001EDC  0008               	tblrd		*
 12796  001EDE  50F5               	movf	tablat,w,c
 12797  001EE0  6E0C               	movwf	(??i2_atoi+2)^0,c
 12798  001EE2  6A0D               	clrf	(??i2_atoi+3)^0,c
 12799  001EE4  500A               	movf	??i2_atoi^0,w,c
 12800  001EE6  260C               	addwf	(??i2_atoi+2)^0,f,c
 12801  001EE8  500B               	movf	(??i2_atoi+1)^0,w,c
 12802  001EEA  220D               	addwfc	(??i2_atoi+3)^0,f,c
 12803  001EEC  500D               	movf	(??i2_atoi+3)^0,w,c
 12804  001EEE  E10A               	bnz	i2u332_40
 12805  001EF0  0E0A               	movlw	10
 12806  001EF2  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 12807  001EF4  A0D8               	btfss	status,0,c
 12808  001EF6  EF7F  F00F         	goto	i2u332_41
 12809  001EFA  EF82  F00F         	goto	i2u332_40
 12810  001EFE                     i2u332_41:
 12811  001EFE  0E01               	movlw	1
 12812  001F00  EF83  F00F         	goto	i2u333_40
 12813  001F04                     i2u332_40:
 12814  001F04  0E00               	movlw	0
 12815  001F06                     i2u333_40:
 12816  001F06  6E12               	movwf	i2_atoi$1978^0,c
 12817  001F08  6A13               	clrf	(i2_atoi$1978+1)^0,c
 12818  001F0A  5012               	movf	i2_atoi$1978^0,w,c
 12819  001F0C  1013               	iorwf	(i2_atoi$1978+1)^0,w,c
 12820  001F0E  A4D8               	btfss	status,2,c
 12821  001F10  EF8C  F00F         	goto	i2u334_41
 12822  001F14  EF8E  F00F         	goto	i2u334_40
 12823  001F18                     i2u334_41:
 12824  001F18  EF49  F00F         	goto	i2l3736
 12825  001F1C                     i2u334_40:
 12826  001F1C  500E               	movf	i2atoi@neg^0,w,c
 12827  001F1E  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 12828  001F20  A4D8               	btfss	status,2,c
 12829  001F22  EF95  F00F         	goto	i2u335_41
 12830  001F26  EF97  F00F         	goto	i2u335_40
 12831  001F2A                     i2u335_41:
 12832  001F2A  EFA5  F00F         	goto	i2l1431
 12833  001F2E                     i2u335_40:
 12834  001F2E  C015  F00A         	movff	i2atoi@n,??i2_atoi
 12835  001F32  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
 12836  001F36  1E0A               	comf	??i2_atoi^0,f,c
 12837  001F38  1E0B               	comf	(??i2_atoi+1)^0,f,c
 12838  001F3A  4A0A               	infsnz	??i2_atoi^0,f,c
 12839  001F3C  2A0B               	incf	(??i2_atoi+1)^0,f,c
 12840  001F3E  C00A  F008         	movff	??i2_atoi,?i2_atoi
 12841  001F42  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
 12842  001F46  EFA9  F00F         	goto	i2l1434
 12843  001F4A                     i2l1431:
 12844  001F4A  C015  F008         	movff	i2atoi@n,?i2_atoi
 12845  001F4E  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
 12846  001F52                     i2l1434:
 12847  001F52  0012               	return		;funcret
 12848  001F54                     __end_ofi2_atoi:
 12849                           	opt callstack 0
 12850                           
 12851 ;; *************** function i2_isspace *****************
 12852 ;; Defined at:
 12853 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;  c               2    0[COMRAM] int 
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;		None
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  2    0[COMRAM] int 
 12860 ;; Registers used:
 12861 ;;		wreg, status,2, status,0
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12870 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12871 ;;Total ram usage:        7 bytes
 12872 ;; Hardware stack levels used:    1
 12873 ;; This function calls:
 12874 ;;		Nothing
 12875 ;; This function is called by:
 12876 ;;		i2_atoi
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           	psect	text73
 12881  002FBC                     __ptext73:
 12882                           	opt callstack 0
 12883  002FBC                     i2_isspace:
 12884                           	opt callstack 15
 12885  002FBC  0E01               	movlw	1
 12886  002FBE  6E07               	movwf	i2_isspace$2003^0,c
 12887  002FC0  0E20               	movlw	32
 12888  002FC2  1801               	xorwf	i2isspace@c^0,w,c
 12889  002FC4  1002               	iorwf	(i2isspace@c+1)^0,w,c
 12890  002FC6  B4D8               	btfsc	status,2,c
 12891  002FC8  EFE8  F017         	goto	i2u266_41
 12892  002FCC  EFEA  F017         	goto	i2u266_40
 12893  002FD0                     i2u266_41:
 12894  002FD0  EF03  F018         	goto	i2l3436
 12895  002FD4                     i2u266_40:
 12896  002FD4  0EF7               	movlw	247
 12897  002FD6  6E03               	movwf	??i2_isspace^0,c
 12898  002FD8  0EFF               	movlw	255
 12899  002FDA  6E04               	movwf	(??i2_isspace+1)^0,c
 12900  002FDC  C001  F005         	movff	i2isspace@c,??i2_isspace+2
 12901  002FE0  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
 12902  002FE4  5003               	movf	??i2_isspace^0,w,c
 12903  002FE6  2605               	addwf	(??i2_isspace+2)^0,f,c
 12904  002FE8  5004               	movf	(??i2_isspace+1)^0,w,c
 12905  002FEA  2206               	addwfc	(??i2_isspace+3)^0,f,c
 12906  002FEC  5006               	movf	(??i2_isspace+3)^0,w,c
 12907  002FEE  E109               	bnz	i2u267_40
 12908  002FF0  0E05               	movlw	5
 12909  002FF2  5C05               	subwf	(??i2_isspace+2)^0,w,c
 12910  002FF4  A0D8               	btfss	status,0,c
 12911  002FF6  EFFF  F017         	goto	i2u267_41
 12912  002FFA  EF01  F018         	goto	i2u267_40
 12913  002FFE                     i2u267_41:
 12914  002FFE  EF03  F018         	goto	i2l3436
 12915  003002                     i2u267_40:
 12916  003002  0E00               	movlw	0
 12917  003004  6E07               	movwf	i2_isspace$2003^0,c
 12918  003006                     i2l3436:
 12919  003006  C007  F001         	movff	i2_isspace$2003,?i2_isspace
 12920  00300A  6A02               	clrf	(?i2_isspace+1)^0,c
 12921  00300C  0012               	return		;funcret
 12922  00300E                     __end_ofi2_isspace:
 12923                           	opt callstack 0
 12924                           
 12925 ;; *************** function i2_isdigit *****************
 12926 ;; Defined at:
 12927 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;  c               2    0[COMRAM] int 
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;		None
 12932 ;; Return value:  Size  Location     Type
 12933 ;;                  2    0[COMRAM] int 
 12934 ;; Registers used:
 12935 ;;		wreg, status,2, status,0
 12936 ;; Tracked objects:
 12937 ;;		On entry : 0/0
 12938 ;;		On exit  : 0/0
 12939 ;;		Unchanged: 0/0
 12940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12943 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12945 ;;Total ram usage:        6 bytes
 12946 ;; Hardware stack levels used:    1
 12947 ;; This function calls:
 12948 ;;		Nothing
 12949 ;; This function is called by:
 12950 ;;		i2_vfpfcnvrt
 12951 ;;		i2_atoi
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955                           	psect	text74
 12956  003382                     __ptext74:
 12957                           	opt callstack 0
 12958  003382                     i2_isdigit:
 12959                           	opt callstack 16
 12960  003382  0ED0               	movlw	208
 12961  003384  6E03               	movwf	??i2_isdigit^0,c
 12962  003386  0EFF               	movlw	255
 12963  003388  6E04               	movwf	(??i2_isdigit+1)^0,c
 12964  00338A  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
 12965  00338E  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
 12966  003392  5003               	movf	??i2_isdigit^0,w,c
 12967  003394  2605               	addwf	(??i2_isdigit+2)^0,f,c
 12968  003396  5004               	movf	(??i2_isdigit+1)^0,w,c
 12969  003398  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 12970  00339A  5006               	movf	(??i2_isdigit+3)^0,w,c
 12971  00339C  E10A               	bnz	i2u264_40
 12972  00339E  0E0A               	movlw	10
 12973  0033A0  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 12974  0033A2  A0D8               	btfss	status,0,c
 12975  0033A4  EFD6  F019         	goto	i2u264_41
 12976  0033A8  EFD9  F019         	goto	i2u264_40
 12977  0033AC                     i2u264_41:
 12978  0033AC  0E01               	movlw	1
 12979  0033AE  EFDA  F019         	goto	i2u265_40
 12980  0033B2                     i2u264_40:
 12981  0033B2  0E00               	movlw	0
 12982  0033B4                     i2u265_40:
 12983  0033B4  6E01               	movwf	?i2_isdigit^0,c
 12984  0033B6  6A02               	clrf	(?i2_isdigit+1)^0,c
 12985  0033B8  0012               	return		;funcret
 12986  0033BA                     __end_ofi2_isdigit:
 12987                           	opt callstack 0
 12988                           
 12989 ;; *************** function i2___wmul *****************
 12990 ;; Defined at:
 12991 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 12992 ;; Parameters:    Size  Location     Type
 12993 ;;  multiplier      2    0[COMRAM] unsigned int 
 12994 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;  __wmul          2    4[COMRAM] unsigned int 
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  2    0[COMRAM] unsigned int 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0, prodl, prodh
 13001 ;; Tracked objects:
 13002 ;;		On entry : 0/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13009 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13010 ;;Total ram usage:        6 bytes
 13011 ;; Hardware stack levels used:    1
 13012 ;; This function calls:
 13013 ;;		Nothing
 13014 ;; This function is called by:
 13015 ;;		i2_atoi
 13016 ;; This function uses a non-reentrant model
 13017 ;;
 13018                           
 13019                           	psect	text75
 13020  003548                     __ptext75:
 13021                           	opt callstack 0
 13022  003548                     i2___wmul:
 13023                           	opt callstack 15
 13024  003548  5001               	movf	i2___wmul@multiplier^0,w,c
 13025  00354A  0203               	mulwf	i2___wmul@multiplicand^0,c
 13026  00354C  CFF3 F005          	movff	prodl,i2___wmul@product
 13027  003550  CFF4 F006          	movff	prodh,i2___wmul@product+1
 13028  003554  5001               	movf	i2___wmul@multiplier^0,w,c
 13029  003556  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 13030  003558  50F3               	movf	243,w,c
 13031  00355A  2606               	addwf	(i2___wmul@product+1)^0,f,c
 13032  00355C  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 13033  00355E  0203               	mulwf	i2___wmul@multiplicand^0,c
 13034  003560  50F3               	movf	243,w,c
 13035  003562  2606               	addwf	(i2___wmul@product+1)^0,f,c
 13036  003564  C005  F001         	movff	i2___wmul@product,?i2___wmul
 13037  003568  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 13038  00356C  0012               	return		;funcret
 13039  00356E                     __end_ofi2___wmul:
 13040                           	opt callstack 0
 13041                           
 13042 ;; *************** function _EUSART2_Transmit_ISR *****************
 13043 ;; Defined at:
 13044 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;		None
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; This function calls:
 13065 ;;		Nothing
 13066 ;; This function is called by:
 13067 ;;		_EUSART2_Initialize
 13068 ;;		_INTERRUPT_InterruptManager
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text76
 13073  00316E                     __ptext76:
 13074                           	opt callstack 0
 13075  00316E                     _EUSART2_Transmit_ISR:
 13076                           	opt callstack 20
 13077  00316E                     
 13078                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 13079  00316E  0E08               	movlw	8
 13080  003170  0100               	movlb	0	; () banked
 13081  003172  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 13082  003174  EFBE  F018         	goto	i2u415_41
 13083  003178  EFC0  F018         	goto	i2u415_40
 13084  00317C                     i2u415_41:
 13085  00317C  EFD6  F018         	goto	i2l205
 13086  003180                     i2u415_40:
 13087  003180                     
 13088                           ; BSR set to: 0
 13089                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          XREG2 = eusart2TxBuffer[eusart2TxTail++];
 13090  003180  0E10               	movlw	low _eusart2TxBuffer
 13091  003182  25E2               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 13092  003184  6ED9               	movwf	fsr2l,c
 13093  003186  6ADA               	clrf	fsr2h,c
 13094  003188  0E01               	movlw	high _eusart2TxBuffer
 13095  00318A  22DA               	addwfc	fsr2h,f,c
 13096  00318C  50DF               	movf	indf2,w,c
 13097  00318E  6E73               	movwf	115,c	;volatile
 13098  003190                     
 13099                           ; BSR set to: 0
 13100  003190  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 13101  003192                     
 13102                           ; BSR set to: 0
 13103                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 13104  003192  0E07               	movlw	7
 13105  003194  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 13106  003196  EFCF  F018         	goto	i2u416_41
 13107  00319A  EFD1  F018         	goto	i2u416_40
 13108  00319E                     i2u416_41:
 13109  00319E  EFD3  F018         	goto	i2l4368
 13110  0031A2                     i2u416_40:
 13111  0031A2                     
 13112                           ; BSR set to: 0
 13113                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 13114  0031A2  0E00               	movlw	0
 13115  0031A4  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 13116  0031A6                     i2l4368:
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 13120  0031A6  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 13121                           
 13122                           ;mcc_generated_files/eusart2.c: 209:     }
 13123  0031A8  EFD7  F018         	goto	i2l208
 13124  0031AC                     i2l205:
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 13128  0031AC  98A3               	bcf	163,4,c	;volatile
 13129  0031AE                     i2l208:
 13130                           
 13131                           ; BSR set to: 0
 13132  0031AE  0012               	return		;funcret
 13133  0031B0                     __end_of_EUSART2_Transmit_ISR:
 13134                           	opt callstack 0
 13135                           
 13136 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 13137 ;; Defined at:
 13138 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 13139 ;; Parameters:    Size  Location     Type
 13140 ;;		None
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;		None
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  1    wreg      void 
 13145 ;; Registers used:
 13146 ;;		None
 13147 ;; Tracked objects:
 13148 ;;		On entry : 0/0
 13149 ;;		On exit  : 0/0
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13156 ;;Total ram usage:        0 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; This function calls:
 13159 ;;		Nothing
 13160 ;; This function is called by:
 13161 ;;		_EUSART2_Initialize
 13162 ;;		_EUSART2_Receive_ISR
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           	psect	text77
 13167  0036E0                     __ptext77:
 13168                           	opt callstack 0
 13169  0036E0                     _EUSART2_DefaultOverrunErrorHandler:
 13170                           	opt callstack 19
 13171  0036E0                     
 13172                           ;mcc_generated_files/eusart2.c: 255:     RCSTA2bits.CREN = 0;
 13173  0036E0  9871               	bcf	113,4,c	;volatile
 13174                           
 13175                           ;mcc_generated_files/eusart2.c: 256:     RCSTA2bits.CREN = 1;
 13176  0036E2  8871               	bsf	113,4,c	;volatile
 13177  0036E4  0012               	return		;funcret
 13178  0036E6                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 13179                           	opt callstack 0
 13180                           
 13181 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 13182 ;; Defined at:
 13183 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;		None
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;		None
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      void 
 13190 ;; Registers used:
 13191 ;;		None
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;Total ram usage:        0 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; This function calls:
 13204 ;;		Nothing
 13205 ;; This function is called by:
 13206 ;;		_EUSART2_Initialize
 13207 ;;		_EUSART2_Receive_ISR
 13208 ;; This function uses a non-reentrant model
 13209 ;;
 13210                           
 13211                           	psect	text78
 13212  0036F0                     __ptext78:
 13213                           	opt callstack 0
 13214  0036F0                     _EUSART2_DefaultFramingErrorHandler:
 13215                           	opt callstack 19
 13216  0036F0  0012               	return		;funcret
 13217  0036F2                     __end_of_EUSART2_DefaultFramingErrorHandler:
 13218                           	opt callstack 0
 13219                           
 13220 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 13221 ;; Defined at:
 13222 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 13223 ;; Parameters:    Size  Location     Type
 13224 ;;		None
 13225 ;; Auto vars:     Size  Location     Type
 13226 ;;		None
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  1    wreg      void 
 13229 ;; Registers used:
 13230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13231 ;; Tracked objects:
 13232 ;;		On entry : 0/0
 13233 ;;		On exit  : 0/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13240 ;;Total ram usage:        0 bytes
 13241 ;; Hardware stack levels used:    1
 13242 ;; Hardware stack levels required when called:    1
 13243 ;; This function calls:
 13244 ;;		_EUSART2_RxDataHandler
 13245 ;; This function is called by:
 13246 ;;		_EUSART2_Initialize
 13247 ;;		_EUSART2_Receive_ISR
 13248 ;; This function uses a non-reentrant model
 13249 ;;
 13250                           
 13251                           	psect	text79
 13252  0036E6                     __ptext79:
 13253                           	opt callstack 0
 13254  0036E6                     _EUSART2_DefaultErrorHandler:
 13255                           	opt callstack 18
 13256  0036E6                     
 13257                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 13258  0036E6  EC3D  F01A         	call	_EUSART2_RxDataHandler	;wreg free
 13259  0036EA  0012               	return		;funcret
 13260  0036EC                     __end_of_EUSART2_DefaultErrorHandler:
 13261                           	opt callstack 0
 13262                           
 13263 ;; *************** function _EUSART2_RxDataHandler *****************
 13264 ;; Defined at:
 13265 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;		None
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;		None
 13270 ;; Return value:  Size  Location     Type
 13271 ;;                  1    wreg      void 
 13272 ;; Registers used:
 13273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13274 ;; Tracked objects:
 13275 ;;		On entry : 0/0
 13276 ;;		On exit  : 0/0
 13277 ;;		Unchanged: 0/0
 13278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13283 ;;Total ram usage:        0 bytes
 13284 ;; Hardware stack levels used:    1
 13285 ;; This function calls:
 13286 ;;		Nothing
 13287 ;; This function is called by:
 13288 ;;		_EUSART2_Receive_ISR
 13289 ;;		_EUSART2_DefaultErrorHandler
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text80
 13294  00347A                     __ptext80:
 13295                           	opt callstack 0
 13296  00347A                     _EUSART2_RxDataHandler:
 13297                           	opt callstack 19
 13298  00347A                     
 13299                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RCREG2;
 13300  00347A  0E08               	movlw	low _eusart2RxBuffer
 13301  00347C  0100               	movlb	0	; () banked
 13302  00347E  25E0               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 13303  003480  6ED9               	movwf	fsr2l,c
 13304  003482  6ADA               	clrf	fsr2h,c
 13305  003484  0E01               	movlw	high _eusart2RxBuffer
 13306  003486  22DA               	addwfc	fsr2h,f,c
 13307  003488  CF74 FFDF          	movff	3956,indf2	;volatile
 13308  00348C                     
 13309                           ; BSR set to: 0
 13310  00348C  2BE0               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 13311  00348E                     
 13312                           ; BSR set to: 0
 13313                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 13314  00348E  0E07               	movlw	7
 13315  003490  65E0               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 13316  003492  EF4D  F01A         	goto	i2u391_41
 13317  003496  EF4F  F01A         	goto	i2u391_40
 13318  00349A                     i2u391_41:
 13319  00349A  EF51  F01A         	goto	i2l4098
 13320  00349E                     i2u391_40:
 13321  00349E                     
 13322                           ; BSR set to: 0
 13323                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 13324  00349E  0E00               	movlw	0
 13325  0034A0  6FE0               	movwf	_eusart2RxHead& (0+255),b	;volatile
 13326  0034A2                     i2l4098:
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 13330  0034A2  2BDE               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 13331  0034A4                     
 13332                           ; BSR set to: 0
 13333  0034A4  0012               	return		;funcret
 13334  0034A6                     __end_of_EUSART2_RxDataHandler:
 13335                           	opt callstack 0
 13336                           
 13337                           	psect	text81
 13338  000000                     __ptext81:
 13339                           	opt callstack 0
 13340  000000                     
 13341                           	psect	rparam
 13342  0000                     
 13343                           	psect	temp
 13344  00005F                     btemp:
 13345                           	opt callstack 0
 13346  00005F                     	ds	1
 13347  0000                     int$flags	set	btemp
 13348  0000                     wtemp8	set	btemp+1
 13349  0000                     ttemp5	set	btemp+1
 13350  0000                     ttemp6	set	btemp+4
 13351  0000                     ttemp7	set	btemp+8
 13352                           tosu	equ	0xFFF
 13353                           tosh	equ	0xFFE
 13354                           tosl	equ	0xFFD
 13355                           stkptr	equ	0xFFC
 13356                           pclatu	equ	0xFFB
 13357                           pclath	equ	0xFFA
 13358                           pcl	equ	0xFF9
 13359                           tblptru	equ	0xFF8
 13360                           tblptrh	equ	0xFF7
 13361                           tblptrl	equ	0xFF6
 13362                           tablat	equ	0xFF5
 13363                           prodh	equ	0xFF4
 13364                           prodl	equ	0xFF3
 13365                           indf0	equ	0xFEF
 13366                           postinc0	equ	0xFEE
 13367                           postdec0	equ	0xFED
 13368                           preinc0	equ	0xFEC
 13369                           plusw0	equ	0xFEB
 13370                           fsr0h	equ	0xFEA
 13371                           fsr0l	equ	0xFE9
 13372                           wreg	equ	0xFE8
 13373                           indf1	equ	0xFE7
 13374                           postinc1	equ	0xFE6
 13375                           postdec1	equ	0xFE5
 13376                           preinc1	equ	0xFE4
 13377                           plusw1	equ	0xFE3
 13378                           fsr1h	equ	0xFE2
 13379                           fsr1l	equ	0xFE1
 13380                           bsr	equ	0xFE0
 13381                           indf2	equ	0xFDF
 13382                           postinc2	equ	0xFDE
 13383                           postdec2	equ	0xFDD
 13384                           preinc2	equ	0xFDC
 13385                           plusw2	equ	0xFDB
 13386                           fsr2h	equ	0xFDA
 13387                           fsr2l	equ	0xFD9
 13388                           status	equ	0xFD8


Data Sizes:
    Strings     869
    Constant    0
    Data        17
    BSS         137
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    104     132
    BANK1           256     73     199
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), IRreceiveBuffer(BANK1[20]), 
		 -> IRtransmitBuffer(BANK1[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), IRreceiveBuffer(BANK1[20]), 
		 -> IRtransmitBuffer(BANK1[20]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_48(CODE[7]), STR_47(CODE[17]), STR_46(CODE[40]), STR_45(CODE[14]), 
		 -> STR_44(CODE[13]), STR_43(CODE[11]), STR_42(CODE[16]), STR_41(CODE[15]), 
		 -> STR_40(CODE[14]), STR_39(CODE[16]), STR_38(CODE[15]), STR_37(CODE[12]), 
		 -> STR_36(CODE[3]), STR_35(CODE[41]), STR_34(CODE[21]), STR_33(CODE[31]), 
		 -> STR_32(CODE[16]), STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), 
		 -> STR_28(CODE[14]), STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[8]), STR_23(CODE[52]), STR_22(CODE[19]), STR_21(CODE[54]), 
		 -> STR_20(CODE[32]), STR_19(CODE[31]), STR_18(CODE[19]), STR_17(CODE[46]), 
		 -> STR_16(CODE[24]), STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), 
		 -> STR_12(CODE[52]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[12]), 
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[52]), 
		 -> STR_4(CODE[5]), STR_3(CODE[65]), STR_2(CODE[42]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2023_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 20
		 -> IRreceiveBuffer(BANK1[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 20
		 -> IRreceiveBuffer(BANK1[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_48(CODE[7]), STR_47(CODE[17]), STR_46(CODE[40]), STR_45(CODE[14]), 
		 -> STR_44(CODE[13]), STR_43(CODE[11]), STR_42(CODE[16]), STR_41(CODE[15]), 
		 -> STR_40(CODE[14]), STR_39(CODE[16]), STR_38(CODE[15]), STR_37(CODE[12]), 
		 -> STR_36(CODE[3]), STR_35(CODE[41]), STR_34(CODE[21]), STR_33(CODE[31]), 
		 -> STR_32(CODE[16]), STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), 
		 -> STR_28(CODE[14]), STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[8]), STR_23(CODE[52]), STR_22(CODE[19]), STR_21(CODE[54]), 
		 -> STR_20(CODE[32]), STR_19(CODE[31]), STR_18(CODE[19]), STR_17(CODE[46]), 
		 -> STR_16(CODE[24]), STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), 
		 -> STR_12(CODE[52]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[12]), 
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[52]), 
		 -> STR_4(CODE[5]), STR_3(CODE[65]), STR_2(CODE[42]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_48(CODE[7]), STR_47(CODE[17]), STR_46(CODE[40]), STR_45(CODE[14]), 
		 -> STR_44(CODE[13]), STR_43(CODE[11]), STR_42(CODE[16]), STR_41(CODE[15]), 
		 -> STR_40(CODE[14]), STR_39(CODE[16]), STR_38(CODE[15]), STR_37(CODE[12]), 
		 -> STR_36(CODE[3]), STR_35(CODE[41]), STR_34(CODE[21]), STR_33(CODE[31]), 
		 -> STR_32(CODE[16]), STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), 
		 -> STR_28(CODE[14]), STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[8]), STR_23(CODE[52]), STR_22(CODE[19]), STR_21(CODE[54]), 
		 -> STR_20(CODE[32]), STR_19(CODE[31]), STR_18(CODE[19]), STR_17(CODE[46]), 
		 -> STR_16(CODE[24]), STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), 
		 -> STR_12(CODE[52]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[12]), 
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[52]), 
		 -> STR_4(CODE[5]), STR_3(CODE[65]), STR_2(CODE[42]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 65
		 -> STR_48(CODE[7]), STR_47(CODE[17]), STR_46(CODE[40]), STR_45(CODE[14]), 
		 -> STR_44(CODE[13]), STR_43(CODE[11]), STR_42(CODE[16]), STR_41(CODE[15]), 
		 -> STR_40(CODE[14]), STR_39(CODE[16]), STR_38(CODE[15]), STR_37(CODE[12]), 
		 -> STR_36(CODE[3]), STR_35(CODE[41]), STR_34(CODE[21]), STR_33(CODE[31]), 
		 -> STR_32(CODE[16]), STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), 
		 -> STR_28(CODE[14]), STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[8]), STR_23(CODE[52]), STR_22(CODE[19]), STR_21(CODE[54]), 
		 -> STR_20(CODE[32]), STR_19(CODE[31]), STR_18(CODE[19]), STR_17(CODE[46]), 
		 -> STR_16(CODE[24]), STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), 
		 -> STR_12(CODE[52]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[12]), 
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[52]), 
		 -> STR_4(CODE[5]), STR_3(CODE[65]), STR_2(CODE[42]), STR_1(CODE[15]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), IRreceiveBuffer(BANK1[20]), IRtransmitBuffer(BANK1[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), IRreceiveBuffer(BANK1[20]), IRtransmitBuffer(BANK1[20]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), IRreceiveBuffer(BANK1[20]), IRtransmitBuffer(BANK1[20]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sp__memset	PTR void  size(2) Largest target is 20
		 -> IRreceiveBuffer(BANK1[20]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myEUSART2ISR(), EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), myEUSART2ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_myEUSART2ISR
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_utoa->i2_pad
    i2_stoa->i2_fputc
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _transmitCharacterOverIR->_EPWM2_LoadDutyValue
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_myEUSART2ISR
    _myEUSART2ISR->i2_printf
    i2_printf->i2_vfprintf

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   37244
                                             35 BANK1     38    38      0
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                       _EUSART2_Read
      _EUSART2_SetRxInterruptHandler
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
                             _memset
                             _printf
            _transmitCharacterOverIR
 ---------------------------------------------------------------------------------
 (1) _transmitCharacterOverIR                              3     1      2    1209
                                             32 BANK0      3     1      2
                _EPWM2_LoadDutyValue
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     468
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_LoadDutyValue                                  4     2      2     424
                                             28 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   32081
                                             25 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27661
                                            102 BANK0      2     2      0
                                             19 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   26969
                                             96 BANK0      6     0      6
                                              0 BANK1     19    19      0
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7095
                                             57 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             34 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             28 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             28 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             28 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6477
                                             57 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             28 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             28 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2707
                                             39 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5344
                                             57 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5065
                                             46 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                             28 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             39 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1546
                                             30 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             29 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1765
                                             35 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             28 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             28 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     662
                                             28 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6     947
                                             28 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     860
                   _EPWM2_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     566
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     174
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             28 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         1     1      0       8
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         12    12      0   11837
                                             16 BANK0     12    12      0
                   Absolute function *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                       _myEUSART2ISR *
 ---------------------------------------------------------------------------------
 (11) _myEUSART2ISR                                        3     3      0   11837
                                             93 COMRAM     1     1      0
                                             14 BANK0      2     2      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (12) i2_printf                                            6     4      2   11726
                                              8 BANK0      6     4      2
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6   11638
                                              0 BANK0      8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        45    39      6   11405
                                             68 COMRAM    25    19      6
                             i2_atoi
                             i2_ctoa
                            i2_fputc
                          i2_isdigit
                             i2_stoa
                             i2_utoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (15) i2_xtoa                                             39    28     11    2911
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (16) i2_toupper                                           8     6      2     186
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (17) i2_islower                                           6     4      2      48
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) i2_isupper                                           6     4      2      48
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) i2_isalpha                                           6     4      2      48
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (15) i2_utoa                                             32    22     10    2709
                                             29 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2___lomod                                          17     1     16     211
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (16) i2___lodiv                                          25     9     16     214
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (15) i2_stoa                                             22    18      4    1217
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (15) i2_ctoa                                              7     4      3    2079
                                             29 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1959
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (17) i2_strlen                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     769
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (18) i2_fputc                                             9     5      4     568
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (19) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (20) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (16) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Read
   _EUSART2_SetRxInterruptHandler
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR1_HasOverflowOccured
   _TMR1_WriteTimer
   _memset
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower
   _transmitCharacterOverIR
     _EPWM2_LoadDutyValue
     _TMR1_HasOverflowOccured
     _TMR1_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _myEUSART2ISR *
     i2_printf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_atoi
             i2___wmul
             i2_isdigit
             i2_isspace
           i2_ctoa
             i2_pad
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_fputs
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
               i2_strlen
           i2_fputc
             i2_putch
               i2_EUSART1_Write
           i2_isdigit
           i2_stoa
             i2_fputc
               i2_putch
                 i2_EUSART1_Write
             i2_strlen
           i2_utoa
             i2___lodiv
             i2___lomod
             i2_pad
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_fputs
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
               i2_strlen
           i2_xtoa
             i2_isalpha
             i2_isupper
             i2_pad
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_fputs
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
               i2_strlen
             i2_toupper
               i2_islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     49      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      84       5       82.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A9      12        0.0%
DATA                 0      0     1A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 08:29:45 2020

                  __size_of_EPWM2_LoadDutyValue 0032                          ?_EUSART2_RxDataHandler 0001  
                                            l21 35CA                                              l35 344C  
                                            l60 3676                                              l47 3640  
                                            l96 35AE                                              l99 3420  
                           ___wmul@multiplicand 007E                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l310 35EC                                             l303 34A6  
                                           l231 36AC                                             l240 368E  
                                           l313 35FE                                             l234 36A2  
                                           l307 34CE                                             l331 36CA  
                                           l243 3698                                             l180 3616  
                                           l237 36B6                                             l334 36C0  
                                           l174 2D26                                             l423 3478  
                                           l319 3684                                             l352 36EE  
                                           l193 3058                                             l337 36D4  
                                           l610 28A4                                             l524 04AC  
                                           l508 0370                                             l613 28E8  
                                           l294 3654                                             l286 30E6  
                                           l390 358E                                             l622 2EAC  
                                           l615 2924                                             l631 1FE0  
                                           l640 208C                                             l704 08D6  
                                           l393 35D8                                             l641 20D6  
                                           l650 184A                                             l396 35E6  
                                           l732 351E                                             l660 1A16  
                                           l652 1852                                             l645 20DE  
                                           l629 1FD8                                             l717 0D20  
                                           l575 24D6                                             l728 2D82  
                                           l665 1296                                             l729 2D8A  
                                           l690 1536                                             l674 1334  
                                           l667 129E                                             l688 14D4  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 36AE  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 36A4  
                               _timer1ReloadVal 00D6                                             _pad 285C  
                               _TMR2_Initialize 3668                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                      _TXSTA2bits 000F72  
                           __end_ofi2_vfpfcnvrt 125E                        __end_of_EPWM2_Initialize 35B0  
                                ??_myEUSART2ISR 006E                                            l1170 25A8  
                                          l1180 276A                                            l1431 1DB0  
                                          l1503 32D6                                            l1177 25C8  
                                          l1513 2E4E                                            l1434 1DB8  
                                          l1443 3310                                            l1451 2FBA  
                                          l1187 278A                                            l4100 36C2  
                                          l1508 2E46                                            l1437 31EC  
                                          l4102 36B8                                            l1519 3262  
                                          l4104 36CC                                            l1464 23DC  
                                          l5000 322A                                            l1457 329C  
                                          l1482 2C10                                            l1490 30A0  
                                          l5010 2890                                            l4300 30A2  
                                          l5100 2FB4                                            l5020 28F6  
                                          l5012 289C                                            l5004 285C  
                                          l4302 30B6                                            l4310 36EC  
                                          l5022 290A                                            l5014 28B0  
                                          l5006 286C                                            l5110 2E7C  
                                          l5030 31B0                                            l4400 34C8  
                                          l4304 30C4                                            l4080 3690  
                                          l4312 344E                                            l4240 35B0  
                                          l5016 28C4                                            l5008 2880  
                                          l5112 2E80                                            l5104 2E50  
                                          l5120 1F66                                            l5040 2E3A  
                                          l5200 1270                                            l1497 34F6  
                                          l4402 34CC                                            l4306 30D2  
                                          l4082 3686                                            l4314 345A  
                                          l4242 35BC                                            l4410 3576  
                                          l5050 3516                                            l5018 28CA  
                                          l5114 2E86                                            l5106 2E64  
                                          l5130 1FA6                                            l5122 1F6E  
                                          l5026 3264                                            l5034 2DF0  
                                          l5210 12E4                                            l5202 128A  
                                          l4250 3432                                            l4340 300E  
                                          l4308 30E0                                            l4084 36A4  
                                          l4316 3476                                            l4244 35C4  
                                          l4420 358A                                            l4412 357A  
                                          l5044 32D8                                            l5108 2E70  
                                          l5140 201C                                            l5132 1FB6  
                                          l5124 1F82                                            l5060 250C  
                                          l5220 1328                                            l5212 12EE  
                                          l5204 12B4                                            l4260 362E  
                                          l4252 3438                                            l4350 3052  
                                          l4342 3020                                            l4334 3600  
                                          l4086 369A                                            l4318 35CC  
                                          l4414 357E                                            l4406 356E  
                                          l5150 206E                                            l5142 203A  
                                          l5126 1F8A                                            l5118 1F54  
                                          l5070 258E                                            l5062 2520  
                                          l5054 24D8                                            l5038 2E28  
                                          l5230 13B4                                            l5214 12F4  
                                          l5206 12BC                                            l5310 0818  
                                          l4270 33F0                                            l4254 343C  
                                          l4246 3422                                            l4430 2406  
                                          l4352 3054                                            l4344 303C  
                                          l4088 36AE                                            l4280 2CCC  
                                          l4272 2CA8                                            l4264 3668  
                                          l4416 3582                                            l4408 3572  
                                          l5048 34F8                                            l5144 2046  
                                          l5136 2002                                            l5128 1F9E  
                                          l5072 2590                                            l5064 252E  
                                          l5056 24E4                                            l5080 26E2  
                                          l5160 1812                                            l5240 13F8  
                                          l5232 13C6                                            l5224 1368  
                                          l5216 12FC                                            l5208 12DC  
                                          l5400 0C72                                            l5312 081C  
                                          l5304 07D2                                            l4248 3430  
                                          l4256 3442                                            l4440 244A  
                                          l4432 2408                                            l4354 3056  
                                          l4346 303E                                            l4338 300E  
                                          l4290 2CEA                                            l4282 2CD0  
                                          l4274 2CAA                                            l4266 3670  
                                          l4418 3586                                            l5154 209E  
                                          l5146 2064                                            l5138 2016  
                                          l5074 25A2                                            l5066 2540  
                                          l5058 2504                                            l5090 2764  
                                          l5082 26F6                                            l5170 1882  
                                          l5162 1822                                            l5250 14C6  
                                          l5226 137A                                            l5234 13DA  
                                          l5218 1318                                            l5242 1456  
                                          l5402 0C98                                            l5410 0CCA  
                                          l5330 0858                                            l5322 0848  
                                          l5314 082A                                            l5306 07F8  
                                          l4258 3448                                            l4442 2456  
                                          l4450 2488                                            l4434 241C  
                                          l4348 304E                                            l4268 3590  
                                          l4292 2CF8                                            l4284 2CD4  
                                          l4276 2CB8                                            l4460 2266  
                                          l5092 2F68                                            l5156 20B2  
                                          l5148 206A                                            l5068 256E  
                                          l5084 2704                                            l5076 26BA  
                                          l5180 1916                                            l5172 188C  
                                          l5164 1824                                            l5252 14E2  
                                          l5244 1474                                            l5236 13EC  
                                          l5412 0CD8                                            l5404 0CA6  
                                          l5316 082E                                            l5340 08C2  
                                          l5308 0806                                            l4452 249A  
                                          l4444 245E                                            l4436 2426  
                                          l4428 23E2                                            l5500 034C  
                                          l4390 3642                                            l4294 2D24  
                                          l4286 2CD8                                            l4278 2CC8  
                                          l4470 22C8                                            l5094 2F6E  
                                          l5270 1C58                                            l5262 1C1C  
                                          l5158 20B8                                            l5086 2732  
                                          l5078 26DA                                            l5190 19E0  
                                          l5174 1892                                            l5182 197A  
                                          l5166 183E                                            l5254 14E8  
                                          l5246 1492                                            l5238 13F2  
                                          l5406 0CBC                                            l5350 0952  
                                          l5342 08E6                                            l5334 0860  
                                          l5326 0850                                            l5318 0840  
                                          l5430 2D28                                            l4454 24BC  
                                          l4446 2472                                            l4438 243A  
                                          l5510 0360                                            ?_pad 008E  
                                          l4288 2CDC                                            l4472 2320  
                                          l4464 2286                                            l5096 2F82  
                                          l5280 1CB0                                            l5272 1C90  
                                          l5264 1C32                                            l5088 2752  
                                          l5184 198E                                            l5192 19EE  
                                          l5176 190A                                            l5168 187A  
                                          l5256 14F8                                            l5248 14AC  
                                          l5360 09D8                                            l5352 0960  
                                          l5344 08E8                                            l5416 0CE6  
                                          l5432 2D30                                            l5440 34DA  
                                          l4456 24BE                                            l4448 2474  
                                          l5600 0740                                            l5520 0386  
                                          l5512 0376                                            l4394 34A6  
                                          l4490 23CA                                            l4482 2380  
                                          l4466 2292                                            l5098 2FB0  
                                          l5290 1D30                                            l5282 1CB8  
                                          l5274 1C94                                            l5266 1C36  
                                          l5186 19AC                                            l5178 1910  
                                          l5258 150E                                            l5418 0D0E  
                                          l5370 0A60                                            l5354 0980  
                                          l5362 09EA                                            l5346 090E  
                                          l5338 086C                                            l5434 2D3E  
                                          l4458 24D2                                            l5602 074C  
                                          l5530 0412                                            l5522 038A  
                                          l5506 0350                                            l5450 010A  
                                          l4396 34B4                                            l4484 23B4  
                                          l4476 233A                                            l5284 1CC0  
                                          l5268 1C3A                                            l5188 19C6  
                                          l5196 125E                                            l5380 0B02  
                                          l5372 0A86                                            l5364 0A10  
                                          l5356 098E                                            l5348 0944  
                                          l5436 2D64                                            l5604 0756  
                                          l5532 041E                                            l5524 039E  
                                          l5508 035C                                            l5460 0144  
                                          l5452 0110                                            l5444 00F4  
                                          l4398 34BA                                            l4486 23C0  
                                          l4478 2366                                            l5294 1D70  
                                          l5286 1CF6                                            l5278 1C9A  
                                          l5198 126E                                            l5390 0BD2  
                                          l5382 0B4E                                            l5374 0ABC  
                                          l5366 0A44                                            l5438 34D0  
                                          l5550 04C0                                            l5534 042A  
                                          l5526 03F0                                            l5518 037A  
                                          l5470 0170                                            l5462 0148  
                                          l5454 0110                                            l5446 0106  
                                          l4488 23C6                                            l5296 1D82  
                                          l5392 0BEA                                            l5560 0510  
                                          l5552 04CC                                            l5536 0436  
                                          l5544 044E                                            l5528 0404  
                                          l5480 01EC                                            l5608 076C  
                                          l5472 0184                                            l5464 015C  
                                          l5456 0122                                            l5448 0108  
                                          l5298 1D94                                            l5394 0BF8  
                                          l5386 0B86                                            l5378 0ADC  
                                          l5570 0570                                            l5562 0524  
                                          l5554 04D2                                            l5538 0442  
                                          l5546 0490                                            l5490 023C  
                                          l5482 01FC                                            l5474 01BC  
                                          l5466 0160                                            l5458 0130  
                                          l5396 0C36                                            l5388 0BAC  
                                          l5580 060E                                            l5572 05A8  
                                          l5564 0536                                            l5556 04D6  
                                          l5548 04B0                                            l5484 020C  
                                          l5476 01D0                                            l5468 016E  
                                          l5590 06BA                                            l5582 0612  
                                          l5574 05BA                                            l5558 04EE  
                                          l5566 0538                                            l5486 021C  
                                          l5494 024C                                            l5478 01DC  
                                          l5592 06D2                                            l5584 0632  
                                          l5576 05DC                                            l5568 055E  
                                          l5840 0462                                            l5488 022C  
                                          l5496 0290                                            l4962 35EC  
                                          l4970 2B8E                                            l5842 0780  
                                          l5594 06E2                                            l5586 0696  
                                          l5578 05E4                                            l5498 033C  
                                          l4964 35FA                                            l4972 2BA0  
                                          l5844 0894                                            l5596 0718  
                                          l5588 06A4                                            l5846 1CE0  
                                          l4966 367C                                            l4974 2BAA  
                                          l4982 305A                                            l4990 329E  
                                          l5598 071E                                            l5838 0262  
                                          l4976 2BC8                                            l4968 2B7A  
                                          l4984 3068                                            l4992 32AA  
                                          l4978 2BFE                                            l4986 307A  
                                          l4994 32B0                                            l4988 3080  
                                          l4996 32C8                                            STR_1 FEFC  
                                          STR_2 FD9D                                            STR_3 FC99  
                                          STR_4 FFF6                                            STR_5 FD10  
                                          STR_6 FFD5                                            STR_7 FFA6  
                                          STR_8 FFB2                                            STR_9 FFBE  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u4110 3614  
                                          u4111 360E                                            u4120 3616  
                                          u5000 209A                                            u5001 2096  
                                          u4130 3020                                            u5010 20D6  
                                          u4131 301C                                            u5011 20D2  
                                          u4140 304E                                            u5020 1822  
                                          u5100 128A                                            u4300 24D2  
                                          u4141 304A                                            u5021 181E  
                                          u5101 1286                                            u4301 24CE  
                                          u4230 3652                                            u4310 2282  
                                          u5030 183E                                            u5110 12B4  
                                          u4070 3430                                            u4231 364C  
                                          u4311 227E                                            u5031 183A  
                                          u5111 12B0                                            u4071 342C  
                                          u4240 34B4                                            u4320 22C4  
                                          u5040 198E                                            u5200 1474  
                                          u5120 1318                                            u4080 363E  
                                          u4241 34B0                                            u4321 22C0  
                                          u5041 198A                                            u5201 1470  
                                          u5121 1314                                            u4081 3638  
                                          u4250 34C8                                            u4090 35E6  
                                          u4330 2336                                            u5050 19AC  
                                          u5210 1492                                            u5130 1362  
                                          u4251 34C4                                            u4091 35E2  
                                          u4331 2332                                            u5051 19A8  
                                          u5211 148E                                            u5131 135C  
                                          u4236 3654                                            u4340 237C  
                                          u5300 1D6C                                            u5060 19C6  
                                          u5220 14AC                                            u5140 1364  
                                          u4260 241C                                            u4341 2378  
                                          u5061 19C2                                            u5221 14A8  
                                          u4261 2418                                            u4350 23DC  
                                          u5310 1D82                                            u5070 19E0  
                                          u5230 14C6                                            u5150 137A  
                                          u4086 3640                                            u4270 243A  
                                          u4351 23D8                                            u5311 1D7E  
                                          u5071 19DC                                            u5231 14C2  
                                          u5151 1376                                            u4271 2436  
                                          u5320 1D94                                            u5080 19EE  
                                          u5240 14D4                                            u5160 13AE  
                                          u5400 09EA                                            u4280 2488  
                                          u5321 1D90                                            u5081 19EA  
                                          u5241 14D0                                            u5161 13A8  
                                          u5401 09E6                                            u4281 2484  
                                          u4610 35FA                                            u5250 14E2  
                                          u5170 13B0                                            u5090 126E  
                                          u5410 0A10                                            u5330 07F8  
                                          u4290 249A                                            u4611 35F6  
                                          u5251 14DE                                            u5091 126A  
                                          u5411 0A0C                                            u5331 07F4  
                                          u4291 2496                                            u5260 1C58  
                                          u4620 2B8E                                            u4700 286C  
                                          u5180 13C6                                            u5420 0A86  
                                          u5340 08D6                                            u5500 015C  
                                          u5261 1C54                                            u4621 2B8A  
                                          u4701 2868                                            u5181 13C2  
                                          u5421 0A82                                            u5341 08D2  
                                          u5501 0158                                            u5270 1C90  
                                          u4630 2BA0                                            u4710 2890  
                                          u5190 1430                                            u5430 0B02  
                                          u5350 08E6                                            u5510 0184  
                                          u5271 1C8C                                            u4631 2B9C  
                                          u4711 288C                                            u5431 0AFE  
                                          u5351 08E2                                            u5511 0180  
                                          u5280 1CAC                                            u4640 2BC8  
                                          u4720 28E8                                            u4800 2E3A  
                                          u5440 0BAC                                            u5360 090E  
                                          u5600 06E2                                            u5520 01D0  
                                          u5281 1CA8                                            u4641 2BC4  
                                          u4721 28E4                                            u4801 2E36  
                                          u5441 0BA8                                            u5361 090A  
                                          u5601 06DE                                            u5521 01CC  
                                          u4810 330A                                            u5290 1D6A  
                                          u4650 2BFE                                            u4730 28F6  
                                          u5450 0BD2                                            u5370 0952  
                                          u5530 0370                                            u4811 3304  
                                          u5291 1D64                                            u4651 2BFA  
                                          u4731 28F2                                            u5195 141E  
                                          u5451 0BCE                                            u5371 094E  
                                          u5531 036C                                            u4820 330C  
                                          u4900 2F82                                            u4660 30A0  
                                          u4740 3296                                            u5460 0C98  
                                          u5380 09D2                                            u5540 039A  
                                          u4901 2F7E                                            u4661 309C  
                                          u4741 3290                                            u5461 0C94  
                                          u5381 09CC                                            u5541 0396  
                                          u4910 2FB0                                            u4670 32C8  
                                          u4750 3298                                            u5390 09D4  
                                          u5470 2D82                                            u5550 0404  
                                          u4911 2FAC                                            u4671 32C4  
                                          u4831 24DE                                            u5471 2D7E  
                                          u5551 0400                                            u4920 2E64  
                                          u4840 2504                                            u4760 31E6  
                                          u4680 325C                                            u5560 04EA  
                                          u4921 2E60                                            u4841 2500  
                                          u4761 31E0                                            u4681 3256  
                                          u5561 04E6                                            u5481 011A  
                                          u4850 252E                                            u4770 31E8  
                                          u4690 325E                                            u5570 055E  
                                          u5490 0144                                            u4931 1F5E  
                                          u4851 252A                                            u5571 055A  
                                          u5491 0140                                            u4940 1F82  
                                          u4860 256E                                            u4780 2E22  
                                          u5580 0570                                            u4941 1F7E  
                                          u4861 256A                                            u4781 2E1C  
                                          u5581 056C                                            u4950 1FB6  
                                          u4870 26DA                                            u4790 2E24  
                                          u5590 0632                                            u4951 1FB2  
                                          u4871 26D6                                            u5591 062E  
                                          u4960 1FD4                                            u4880 2704  
                                          u4961 1FD0                                            u4881 2700  
                                          u4970 1FFE                                            u4890 2732  
                       _TMR1_HasOverflowOccured 362E                                            u4971 1FFA  
                                          u4891 272E                                            u4980 203A  
                                          u4981 2036                                            u4990 208C  
                                          u4991 2088                                            _TMR1 000FCE  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                         ??_EUSART2_Receive_ISR 0001                                   _EUSART1_Write 35E8  
                                   main@message 0192                                            _dbuf 0125  
                                          _atoi 1C1C                                            _ctoa 2E50  
                                          _main 00F4                                            _mask 00DA  
                                 ?_EUSART1_Read 0001                                            _prec 00CC  
                                 ?_EUSART2_Read 0001                                            _nout 00C8  
                                          pad@i 0095                                            pad@p 0092  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0097                                            fsr2l 000FD9  
                                          _stoa 1F54                                            btemp 005F  
                                          _utoa 1812                                   __CFG_BORV$190 000000  
                                          _xtoa 125E                                     i2_atoi$1976 0010  
                                   i2_atoi$1977 0014                                     i2_atoi$1978 0012  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00F0                                   __CFG_IESO$OFF 000000  
                               __end_ofi2_fputc 2CA8                                 __end_ofi2_fputs 312C  
                  __end_of_EUSART2_Transmit_ISR 31B0                                 __end_ofi2_putch 36E0  
                                  ___param_bank 000000                        __size_ofi2_EUSART1_Write 0016  
                                         ??_pad 0094                                      i2_vfprintf 2D8C  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 35E8  
                                         ?_atoi 0083                                           ?_ctoa 0099  
                                         ?_main 0001                                           STR_10 FF80  
                                         STR_11 FFA6                                           STR_12 FD10  
                                         STR_20 FE18                                           STR_13 FF47  
                                         STR_21 FCDA                                           STR_22 FEB8  
                                         STR_14 FFEF                                           STR_30 FF1A  
                                         STR_23 FD10                                           STR_31 FF29  
                                         STR_15 FEA3                                           STR_24 FFE0  
                                         STR_40 FF56                                           STR_32 FEDC  
                                         STR_16 FE76                                           STR_25 FD42  
                                         STR_41 FF38                                           STR_33 FE57  
                                         STR_17 FD44                                           STR_26 FD42  
                                         STR_42 FEEC                                           STR_18 FEB8  
                                         STR_34 FE8E                                           STR_43 FFCA  
                                         STR_19 FE38                                           STR_35 FDC7  
                                         STR_27 FD72                                           STR_36 FFFB  
                                         STR_44 FF8D                                           STR_28 FF64  
                                         STR_37 FF9A                                           STR_45 FF72  
                                         STR_29 FF0B                                           STR_38 FF38  
                                         STR_46 FDF0                                           STR_39 FEEC  
                                         STR_47 FECB                                           STR_48 FFE8  
                                         ?_stoa 0087                                           ?_utoa 0099  
                               __end_of___lodiv 25CA                                           ?_xtoa 0099  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                               __end_of___lomod 278C                                  __CFG_DEBUG$OFF 000000  
                                         i2l205 31AC                                           i2l222 36F0  
                                         i2l310 361A                                           i2l215 2B78  
                                         i2l208 31AE                                           i2l225 36E4  
                                         i2l313 362C                                           i2l219 34A4  
                                         i2l228 36EA                                           i2l319 36DE  
                                         i2l610 2A36                                           i2l363 00BC  
                                         i2l613 2A78                                           i2l622 2F66  
                                         i2l358 0082                                           i2l615 2AB4  
                                         i2l631 2168                                           i2l359 00BC  
                                         i2l640 2212                                           i2l704 0E22  
                                         i2l641 225C                                           i2l650 1A50  
                                         i2l732 356C                                           i2l660 1C1A  
                                         i2l652 1A58                                           i2l645 2264  
                                         i2l629 2160                                           i2l717 125C  
                                         i2l558 29EE                                           i2l728 2DE6  
                                         i2l665 1570                                           i2l729 2DEE  
                                         i2l690 1810                                           i2l674 160E  
                                         i2l667 1578                                           i2l688 17AC  
                                  vfpfcnvrt@fmt 00C2                                    vfpfcnvrt@llu 0177  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           i2_pad 29F0  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                    i2isalpha@c 0001                                  __CFG_EBTRB$OFF 000000  
                                    i2isdigit@c 0001                                           _flags 00CE  
                                         _fputc 2B7A                                 __end_of_isalpha 31EE  
                                         _fputs 305A                                 __end_of_isdigit 3312  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0090  
                                         pad@fp 008E                                           atoi@s 0083  
                                         _width 00CA                                           ctoa@c 009B  
                                         _putch 3678                                           ctoa@w 009C  
                                         main@i 01B5                                 __end_of_islower 3264  
                               __end_of_isspace 2FBC                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 35CC                                 __end_of_isupper 329E  
                                         pclath 000FFA                                           tablat 000FF5  
                              __end_ofi2___wmul 356E                                  ??_EUSART1_Read 007C  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                ??_EUSART2_Read 007C                                _IRtransmitBuffer 0145  
                                         stoa@i 0093                                           stoa@l 009B  
                                         stoa@p 0099                                           stoa@s 0089  
                                         stoa@w 0095                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                    i2islower@c 0001                                           utoa@d 009B  
                                         utoa@i 00B7                                           utoa@n 00AF  
                                         utoa@p 00AB                                           utoa@w 00AD  
                                         status 000FD8                                      i2isspace@c 0001  
                                         wtemp8 0060                                           xtoa@c 00BE  
                                         xtoa@d 009B                                           xtoa@i 00BC  
                                         xtoa@n 00B4                                           xtoa@p 00B0  
                                         xtoa@w 00B2                                           xtoa@x 00A3  
                                __CFG_HFOFST$ON 000000                                 __end_of_toupper 2E50  
                              ___lodiv@dividend 007C              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 3422                                  __CFG_PBADEN$ON 000000  
                                    i2isupper@c 0001                              __size_ofi2___lodiv 00F0  
                            __size_ofi2___lomod 00D0                                __end_ofi2_printf 3548  
         __end_of_EUSART2_SetTxInterruptHandler 3690          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 3686                                    _toupper$2074 0088  
                              __end_ofi2_strlen 33F0                                 __initialization 312C  
                                  __end_of_atoi 1DBA                                    __end_of_ctoa 2EAE  
                    __end_of_EUSART1_Initialize 30E8                                    __end_of_main 07D2  
                                  __end_of_stoa 20E0                                      i2printf@ap 006C  
                                  __end_of_utoa 1A18                                    __end_of_xtoa 1538  
                                 main@bitPeriod 01A8                              __size_ofi2_isalpha 003C  
                       __end_of_TMR2_Initialize 3678                              __size_ofi2_isdigit 0038  
                   ?_INTERRUPT_InterruptManager 0001                                      i2stoa@nuls 0011  
                                   i2_vfpfcnvrt 0D22                              __size_ofi2_islower 0038  
                            __size_ofi2_isspace 0052                                   i2vfpfcnvrt@ap 0049  
                                 i2vfpfcnvrt@cp 004F                                   i2vfpfcnvrt@fp 0045  
                                   i2_xtoa$1503 0031                                     i2_xtoa$1504 0033  
                            __size_ofi2_isupper 0038                                          ??_atoi 0085  
                                        ??_ctoa 009C                                          ??_main 0190  
                                        ??_stoa 008B                                          ??_utoa 00A3  
                                        ??_xtoa 00A4                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 36EC                     _EUSART2_DefaultErrorHandler 36E6  
                            __size_ofi2_toupper 005E                                          ?i2_pad 0013  
                      ?_transmitCharacterOverIR 0080                                ___lodiv@quotient 008C  
                                    i2toupper@c 0007                       ??_TMR1_HasOverflowOccured 007C  
                    __end_of_EUSART2_Initialize 2D28                        _eusart2TxBufferRemaining 00E1  
                                        ?_fputc 007E                                          ?_fputs 0087  
                                        _CCPR2H 000F68                                          _CCPR2L 000F67  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 007C  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l1170 2698  
                                        i2l1180 283A                                          i2l1431 1F4A  
                                        i2l1503 33EE                                          i2l4000 0E9E  
                                        i2l1177 26B8                                          i2l1513 2F0A  
                                        i2l1434 1F52                                          i2l4010 0F22  
                                        i2l4002 0EAC                                          i2l1443 33B8  
                                        i2l1451 300C                                          i2l1187 285A  
                                        i2l1508 2F02                                          i2l4020 0FA8  
                                        i2l4004 0ECC                                          i2l4012 0F34  
                                        i2l1437 3228                                          i2l3310 30E8  
                                        i2l4030 104A                                          i2l4022 0FCE  
                                        i2l4014 0F5A                                          i2l4006 0EDA  
                                        i2l1519 3348                                          i2l3312 30F4  
                                        i2l3320 33C6                                          i2l3400 2680  
                                        i2l4040 1118                                          i2l4032 1094  
                                        i2l4024 1004                                          i2l4016 0F8C  
                                        i2l1457 3380                                          i2l1482 2CA6  
                                        i2l1490 312A                                          i2l3314 3106  
                                        i2l3322 33CA                                          i2l3402 2692  
                                        i2l3410 27C6                                          i2l4042 1130  
                                        i2l4050 11B6                                          i2l3316 310A  
                                        i2l3324 33E2                                          i2l3412 27D4  
                                        i2l3404 278C                                          i2l3420 31EE  
                                        i2l4052 11DC                                          i2l4060 120A  
                                        i2l4044 113E                                          i2l4036 10CC  
                                        i2l4028 1024                                          i2l3430 2FC0  
                                        i2l3270 361A                                          i2l3318 33BA  
                                        i2l3414 2802                                          i2l3406 27AA  
                                        i2l4062 1218                                          i2l4054 11EA  
                                        i2l4046 117A                                          i2l4038 10F2  
                                __CFG_WDTEN$OFF 000000                                          i2l3424 3382  
                                        i2l3432 2FD4                                          i2l3272 3628  
                                        i2l3360 2A22                                          i2l3600 21F4  
                                        i2l3416 2822                                          i2l3408 27B2  
                                        i2l3440 334A                                          i2l3328 3312  
                                        i2l4056 11FE                                          i2l4232 2D8C  
                                        i2l1497 3546                                          i2l4090 347A  
                                        i2l3434 3002                                          i2l3290 2C5E  
                                        i2l3282 2C12                                          i2l3370 2A88  
                                        i2l3362 2A2E                                          i2l3354 29F0  
                                        i2l3418 2834                                          i2l3610 1A18  
                                        i2l3450 2EF6                                          i2l4066 1224  
                                        i2l4234 2D94                                          i2l4330 352A  
                                        i2l4092 348C                                          i2l3436 3006  
                                        i2l3428 2FBC                                          i2l3292 2C94  
                                        i2l3284 2C24                                          i2l3372 2A9C  
                                        i2l3364 2A42                                          i2l3356 2A00  
                                        i2l3604 2226                                          i2l3620 1A88  
                                        i2l3612 1A28                                          i2l3444 2EAE  
                                        i2l3700 179C                                          i2l4068 124A  
                                        i2l4236 2DA2                                          i2l4500 2946  
                                        i2l4094 348E                                          i2l3278 36D8  
                                        i2l3286 2C36                                          i2l3366 2A56  
                                        i2l3358 2A14                                          i2l3606 223A  
                                        i2l3390 2610                                          i2l3382 25CA  
                                        i2l3630 1B1A                                          i2l3622 1A92  
                                        i2l3614 1A2A                                          i2l3702 17BC  
                                        i2l4238 2DC8                                          i2l4510 2980  
                                        i2l4502 2956                                          i2l4096 349E  
                                        i2l4360 3180                                          i2l3376 3548  
                                        i2l3720 1DF4                                          i2l3712 1DBA  
                                        i2l3288 2C40                                          i2l3368 2A5A  
                                        i2l3560 2F38                                          i2l3608 223E  
                                        i2l3392 261E                                          i2l3384 25D6  
                                        i2l3640 1BE2                                          i2l3624 1A98  
                                        i2l3632 1B7E                                          i2l3616 1A44  
                                        i2l3448 2EE4                                          i2l3704 17C2  
                                        i2l4328 3520                                          i2l4520 29A0  
                                        i2l4504 295A                                          i2l4098 34A2  
                                        i2l4362 3190                                          i2l3378 3564  
                                        i2l3730 1E4C                                          i2l3722 1E2C  
                                        i2l3714 1DCE                                          i2l3562 2F3C  
                                        i2l3554 2F0C                                          i2l3570 20F2  
                                        i2l3394 2630                                          i2l3386 25F4  
                                        i2l3634 1B90                                          i2l3642 1BF2  
                                        i2l3626 1B0E                                          i2l3618 1A80  
                                        i2l3706 17D2                                          i2l3650 154A  
                                        i2l4522 29AA                                          i2l4514 2988  
                                        i2l4506 2960                                          i2l4370 2AB6  
                                        i2l4364 3192                                          i2l3740 1ECA  
                                        i2l3732 1E54                                          i2l3724 1E30  
                                        i2l3716 1DD2                                          i2l3564 2F42  
                                        i2l3556 2F20                                          i2l3580 2130  
                                        i2l3572 20FA                                          i2l3396 265E  
                                        i2l3388 25FC                                          i2l3636 1BAE  
                                        i2l3628 1B14                                          i2l3708 17E8  
                                        i2l3660 15BE                                          i2l3652 1564  
                                        i2l4516 2998                                          i2l4508 2970  
                                        i2l4380 2B0E                                          i2l4372 2AC8  
                                        i2l4366 31A2                                          i2l4358 316E  
                                        i2l3734 1E5C                                          i2l3718 1DD6  
                                        i2l3558 2F2C                                          i2l3590 21A4  
                                        i2l3582 213E                                          i2l3574 210C  
                                        i2l3398 267E                                          i2l3638 1BC8  
                                        i2l3670 1602                                          i2l3662 15C8  
                                        i2l3654 158E                                          i2l3646 1538  
                                        i2l4518 299C                                          i2l4526 29BA  
                                        i2l4382 2B20                                          i2l4374 2AD6  
                                        i2l4296 36E0                                          i2l4368 31A6  
                                        i2l3744 1F0A                                          i2l3736 1E92  
                                        i2l3728 1E36                                          i2l3592 21C2  
                                        i2l3576 2114                                          i2l3568 20E0  
                                        i2l3680 168E                                          i2l3664 15CE  
                                        i2l3656 1596                                          i2l3648 1548  
                                        i2l4384 2B38                                          i2l4376 2AE6  
                                        i2l4560 0056                                          i2l4298 36E6  
                                        i2l3746 1F1C                                          i2l3594 21CE  
                                        i2l3586 218C                                          i2l3578 2128  
                                        i2l3690 16D0                                          i2l3682 16A0  
                                        i2l3674 1642                                          i2l3666 15D6  
                                        i2l3658 15B6                                          i2l4386 2B56  
                                        i2l4378 2B00                                          i2l4562 0064  
                                        i2l3748 1F2E                                          i2l3596 21EC  
                                        i2l3588 21A0                                          i2l3676 1654  
                                        i2l3684 16B4                                          i2l3668 15F2  
                                        i2l3692 172E                                          i2l4492 2926  
                                        i2l4388 2B74                                          i2l4564 0090  
                                        i2l4556 003A                                          i2l3598 21F0  
                                        i2l3694 174A                                          i2l3686 16C4  
                                        i2l4494 2928                                          i2l4566 009E  
                                        i2l4558 0048                                          i2l3696 1768  
                                        i2l3688 16CA                                          i2l3960 0D68  
                                        i2l4496 293A                                          i2l3698 1782  
                                        i2l3962 0D6C                                          i2l3954 0D22  
                                        i2l4498 293E                                          i2l3980 0DA6  
                                        i2l3972 0D96                                          i2l3964 0D78  
                                        i2l3956 0D48                                          i2l3966 0D7C  
                                        i2l3990 0E10                                          i2l3958 0D56  
                                        i2l3992 0E32                                          i2l3984 0DAE  
                                        i2l3976 0D9E                                          i2l3968 0D8E  
                                        i2l3994 0E34                                          i2l5850 0DE2  
                                        i2l5852 1E7C                                          i2l3996 0E5A  
                                        i2l3988 0DBA                                          i2l3998 0E90  
                                        i2l5848 29D0                                   i2putch@txData 0002  
                                     ??i2_fputc 0007                                          _RCREG1 000FAE  
                                        _RCREG2 000F74                                       ??i2_fputs 0010  
                                        _RCSTA1 000FAB                                          _RCSTA2 000F71  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0173                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                       ??i2_putch 0002  
                                        _TXREG1 000FAD                                          _TXREG2 000F73  
                                        _TXSTA1 000FAC                                          _TXSTA2 000F72  
                                        i2_atoi 1DBA                                          i2_ctoa 2F0C  
                                        i2pad@i 001A                                          i2pad@p 0017  
                                        i2pad@w 001C                                          i2_stoa 20E0  
                                        i2_utoa 1A18                                          i2_xtoa 1538  
                                __CFG_XINST$OFF 000000                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 00C6                                   i2vfprintf@fmt 0062  
                                        ___wmul 34F8                            __end_of_myEUSART2ISR 29F0  
                                __CFG_STVREN$ON 000000                                       ??___lodiv 008C  
                                     ??___lomod 008C                                     ?i2_vfprintf 0060  
                      ?_EUSART1_SetErrorHandler 007C                                          _memset 2266  
                                        clear_0 3152                                          clear_1 315E  
                   _EUSART2_FramingErrorHandler 00D0                                          _printf 34D0  
                                        pad@buf 0090                ??_EUSART1_SetOverrunErrorHandler 007E  
               ?_EUSART1_SetOverrunErrorHandler 007C                                          ctoa@fp 0099  
                                        _strlen 329E                               ??i2_EUSART1_Write 0001  
                                        fputc@c 007E                                          fputs@c 008B  
                                        fputs@i 008C                                          fputs@s 0087  
                                     ??_isalpha 007E                                       ??_isdigit 007E  
                             __end_ofi2___lodiv 26BA                               __end_ofi2___lomod 285C  
                                     ??_islower 007E                                    __mediumconst FC98  
                                     ??_isspace 007E                                          tblptrh 000FF7  
                                     ??_isupper 007E                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 316E  
                                        stoa@cp 0097                                          stoa@fp 0087  
                              __end_of_vfprintf 2D8C                               i2___lodiv@divisor 0009  
                               ??_EUSART1_Write 007C                             _EPWM2_LoadDutyValue 33F0  
                                        utoa@fp 0099                               i2___lodiv@counter 0019  
                       __end_of_TMR1_WriteTimer 344E                                          xtoa@fp 0099  
                                     ??_toupper 0084                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0108                                ?_TMR1_Initialize 0001  
                  __size_of_EUSART2_is_rx_ready 0018                               __end_ofi2_isalpha 322A  
                             __end_ofi2_isdigit 33BA                               _SYSTEM_Initialize 356E  
                               _eusart2TxBuffer 0110                                      __accesstop 0060  
                       __end_of__initialization 3164                               __end_ofi2_islower 334A  
                             __end_ofi2_isspace 300E                               __end_ofi2_isupper 3382  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                       ??_EUSART2_RxDataHandler 0001                               __end_ofi2_toupper 2F0C  
                                 __end_ofi2_pad 2AB6                                  __pcstackCOMRAM 0001  
                          ?_EPWM2_LoadDutyValue 007C                                    __pidataBANK1 3656  
                           ??_SYSTEM_Initialize 007E                                   __end_of_fputc 2C12  
                                 __end_of_fputs 30A2                  ?_EUSART2_SetTxInterruptHandler 007C  
                                 __end_of_putch 3686                                     i2printf@fmt 0068  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 34D0  
                          __end_of_EUSART2_Read 305A                                       ?i2___wmul 0001  
                      ?_EUSART2_SetErrorHandler 007C                                         ??i2_pad 0019  
                         ?_EUSART2_Transmit_ISR 0001                               ?_EPWM2_Initialize 0001  
                                i2vfpfcnvrt@fmt 0047                                       ?i2_printf 0068  
                                i2vfpfcnvrt@llu 0055                                       ?i2_strlen 0001  
                         i2EUSART1_Write@txData 0001                                         ??_fputc 0082  
                     __end_of_SYSTEM_Initialize 3590                                         ??_fputs 008B  
                            ??_EPWM2_Initialize 007C                                         ??_putch 007D  
                                 _eusart2RxHead 00E0                                   _eusart2TxHead 00E3  
                                    __pbssBANK0 00C8                                      __pbssBANK1 0100  
                                    _checkSumRx 0122                                      _checkSumTx 0123  
                                 _eusart2RxTail 00DF                                   _eusart2TxTail 00E2  
                           __size_ofi2_vfprintf 0064                                 __CFG_PLLCFG$OFF 000000  
              ??_EUSART2_SetFramingErrorHandler 007E                 ?_EUSART2_SetFramingErrorHandler 007C  
                                       ?i2_atoi 0008                                         ?i2_ctoa 001E  
                                       ?i2_stoa 000C                                         ?i2_utoa 001E  
                                       ?i2_xtoa 001E                 __end_of_EUSART1_SetErrorHandler 36D6  
                            __CFG_CCP2MX$PORTC1 000000                           ??_EPWM2_LoadDutyValue 007E  
                                       ?___wmul 007C                                  i2_toupper$2074 000D  
                            __CFG_CCP3MX$PORTB5 000000                                         _CCP2CON 000F66  
                                       _ECCP2AS 000F64                                         ?_memset 007C  
                                       ?_printf 0186                                         ?_strlen 007C  
        __end_of_EUSART1_SetFramingErrorHandler 36CC         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 36C2                                      ??i2___wmul 0005  
                         _eusart2RxStatusBuffer 0100                               i2___lomod@divisor 0009  
                                       _OSCCON2 000FD2                     __end_of_EUSART2_Receive_ISR 2B7A  
                            __size_of_vfpfcnvrt 0550                               i2___lomod@counter 0011  
                                    ??i2_printf 005E                                         _OSCTUNE 000F9B  
                                       _PWM2CON 000F65                                         _SPBRGH1 000FB0  
                                       _SPBRGH2 000F76                                      ??i2_strlen 0003  
                              ?_TMR1_WriteTimer 007C                                ___lomod@dividend 007C  
                                       i2_fputc 2C12                                         i2_fputs 30E8  
                                       i2atoi@n 0015                                         i2pad@fp 0013  
                                       i2atoi@s 0008                                         i2ctoa@c 0020  
                                       i2_putch 36D6                                         i2ctoa@w 0021  
                         __size_of_myEUSART2ISR 00CA                                 __size_ofi2_atoi 019A  
                               __size_ofi2_ctoa 005C                                         i2stoa@i 0018  
                                       i2stoa@l 0020                                         i2stoa@p 001E  
                                       i2stoa@s 000E                                         i2stoa@w 001A  
                                       i2utoa@d 0020                                         i2utoa@i 003C  
                                       i2utoa@n 0034                                         i2utoa@p 0030  
                               __CFG_PWRTEN$OFF 000000                                         i2utoa@w 0032  
                               __size_ofi2_stoa 0186                                 __size_ofi2_utoa 0204  
                               __size_ofi2_xtoa 02DA                                         i2xtoa@c 0043  
                                       i2xtoa@d 0020                                         i2xtoa@i 0041  
                                       i2xtoa@n 0039                                         i2xtoa@p 0035  
                                       i2xtoa@w 0037                                         i2xtoa@x 0028  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                 __size_of___wmul 0028  
                                       ___lodiv 24D8                                         ___lomod 26BA  
                                     ?_vfprintf 0180                                  i2vfprintf@cfmt 0066  
                           _EUSART1_is_rx_ready 3642                                    ?i2_vfpfcnvrt 0045  
                                       __pcinit 312C                 __end_of_EUSART2_SetErrorHandler 36B8  
                               __size_of_memset 0178                                         __ramtop 1000  
                                       __ptext0 00F4                                         __ptext1 23DE  
                                       __ptext2 3422                                         __ptext3 362E  
                                       __ptext4 33F0                                         __ptext5 34D0  
                                       __ptext6 2D28                                         __ptext7 07D2  
                                       __ptext8 125E                                         __ptext9 2DF0  
                               __size_of_printf 0028                                 __size_of_strlen 003A  
                                     _T1CONbits 000FCD           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 36E6     __size_of_EUSART2_DefaultOverrunErrorHandler 0006  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 36E0                           _OSCILLATOR_Initialize 35CC  
                        ??_EUSART2_Transmit_ISR 0001                                       _T2CONbits 000FBA  
                                  __size_of_pad 00CA                                         _isalpha 31B0  
                                       _isdigit 32D8                              _EUSART1_Initialize 30A2  
                                       _islower 322A                        ??_PIN_MANAGER_Initialize 007C  
                                       _isspace 2F68                                         _isupper 3264  
                                       atoi@neg 0089                                         main@cmd 01B2  
                    __size_of_SYSTEM_Initialize 0022                                    _myEUSART2ISR 2926  
                                       _toupper 2DF0                            end_of_initialization 3164  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0080                                         memset@c 007E  
                                       memset@k 0084                                         memset@n 0080  
                                       memset@s 0086                     _EUSART1_OverrunErrorHandler 011A  
                                       fputs@fp 0089                             i2___wmul@multiplier 0001  
              __size_of_transmitCharacterOverIR 00FA                              _EUSART2_Initialize 2CA8  
                               i2_EUSART1_Write 3618                               __end_of_vfpfcnvrt 0D22  
                                       postdec1 000FE5                                         postdec2 000FDD  
                            i2___lodiv@dividend 0001                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                           __size_of_EUSART2_Read 004C  
                                  ??i2_vfprintf 005E                                      ??_vfprintf 00C6  
                          ??_EUSART1_Initialize 007E                             ?_EUSART2_Initialize 0001  
                                       strlen@a 007E                             _EUSART2_is_rx_ready 3600  
                                       strlen@s 007C                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 007C                                       i2___lodiv 25CA  
                         ??_EUSART1_is_rx_ready 007C                                       i2___lomod 278C  
                          ??_EUSART2_Initialize 007E                            ?_EUSART2_is_rx_ready 0001  
                            i2___lodiv@quotient 0011                              __end_ofi2_vfprintf 2DF0  
                                  _EUSART1_Read 34A6                                    _EUSART2_Read 300E  
                                    main@letter 01A7                                       i2_isalpha 31EE  
                                     i2_isdigit 3382                                  __end_ofi2_atoi 1F54  
                                __end_ofi2_ctoa 2F68                                       i2_islower 3312  
                                     i2_isspace 2FBC                                  __end_ofi2_stoa 2266  
                                __end_ofi2_utoa 1C1C                                  __end_ofi2_xtoa 1812  
                                     i2_isupper 334A                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 34A6                                       i2atoi@neg 000E  
                  __end_of_INTERRUPT_Initialize 36F0                                       i2_toupper 2EAE  
                                   vfpfcnvrt@ap 00C4                                     vfpfcnvrt@cp 0171  
                                   vfpfcnvrt@fp 00C0                                  __end_of___wmul 3520  
                                     i2fputc@fp 0005                          ?_OSCILLATOR_Initialize 0001  
                                     i2fputs@fp 000E                                  __end_of_memset 23DE  
                      ?_TMR1_HasOverflowOccured 0001                                i2___wmul@product 0005  
                                __end_of_printf 34F8                                  __end_of_strlen 32D8  
                           start_initialization 312C                                 ___lodiv@divisor 0084  
                               ___lodiv@counter 0094                               __size_ofi2___wmul 0026  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_pad 2926  
 EUSART2_SetRxInterruptHandler@interruptHandler 007C   EUSART2_SetTxInterruptHandler@interruptHandler 007C  
                                  i2vfpfcnvrt@c 005D                                      ?i2___lodiv 0001  
                                    ?i2___lomod 0001                                     putch@txData 007D  
                         ??_EUSART2_is_rx_ready 007C                               __size_ofi2_printf 0028  
                         __end_of_EUSART1_Write 3600                               __size_ofi2_strlen 0036  
                                     i2strlen@a 0003                                       i2strlen@s 0001  
                             myEUSART2ISR@index 00D8                               myEUSART2ISR@input 005E  
                       __end_ofi2_EUSART1_Write 362E                               myEUSART2ISR@state 00D9  
              __size_of_EUSART2_SetErrorHandler 000A                                        ??i2_atoi 000A  
                                      ??i2_ctoa 0021                                        ??i2_stoa 0010  
                                      ??i2_utoa 0028                                        ??i2_xtoa 0029  
                                    ?i2_isalpha 0001                                      ?i2_isdigit 0001  
        __end_of_EUSART2_SetOverrunErrorHandler 36A4         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 369A                                      ?i2_islower 0001  
                                    ?i2_isspace 0001                       __size_of_EPWM2_Initialize 0020  
                                    ?i2_isupper 0001                        __size_of_TMR1_Initialize 001C  
                                   vfprintf@fmt 0182                                    i2vfprintf@ap 0064  
                               i2vfpfcnvrt@done 0051                                    i2vfprintf@fp 0060  
                                      ??___wmul 0080                                      ?i2_toupper 0007  
                                   __pdataBANK1 01B6                                        ??_memset 0082  
                                    memset@dest 007C                                        ??_printf 00C8  
                                      ??_strlen 007E                                  _eusart2RxCount 00DE  
                          __size_ofi2_vfpfcnvrt 053C                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 016D                        __size_of_TMR2_Initialize 0010  
                       fp__EUSART2_Transmit_ISR 0000                                        ?i2_fputc 0003  
                                      ?i2_fputs 000C                ??_EUSART1_SetFramingErrorHandler 007E  
               ?_EUSART1_SetFramingErrorHandler 007C                 ??_EUSART2_SetRxInterruptHandler 007E  
                                      ?i2_putch 0001                         _transmitCharacterOverIR 23DE  
                   __end_of_EPWM2_LoadDutyValue 3422                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$1976 008B                                       _atoi$1977 008F  
                                     _atoi$1978 008D                          _PIN_MANAGER_Initialize 344E  
                                     __pintcode 0008                                   __pmediumconst FC98  
                                      ?___lodiv 007C                                        ?___lomod 007C  
               __end_of_TMR1_HasOverflowOccured 3642               _EUSART2_TxDefaultInterruptHandler 00D4  
                  ??_INTERRUPT_InterruptManager 0070                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0064                                 ___lomod@divisor 0084  
                               ___lomod@counter 008C                                        _BAUDCON1 000FB8  
                                      _BAUDCON2 000F70              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 007C                                        ?_isdigit 007C  
                          _EUSART1_ErrorHandler 0118                    ?_EUSART2_DefaultErrorHandler 0001  
                                __size_ofi2_pad 00C6                                        ?_islower 007C  
                                      ?_isspace 007C                 transmitCharacterOverIR@baudRate 0080  
                                      ?_isupper 007C                         _EUSART1_SetErrorHandler 36CC  
                                __size_of_fputc 0098                                     ??i2___lodiv 0011  
                                __size_of_fputs 0048                                     ??i2___lomod 0011  
                                      ?_toupper 0082                                  __size_of_putch 000E  
                          _INTERRUPT_Initialize 36EC                    __size_of_EUSART2_Receive_ISR 00C4  
                              ?i2_EUSART1_Write 0001                                  ___wmul@product 0080  
       EUSART1_SetErrorHandler@interruptHandler 007C         EUSART2_SetErrorHandler@interruptHandler 007C  
                                      _PIE3bits 000FA3                                     ??i2_isalpha 0003  
                            i2___lomod@dividend 0001                                     ??i2_isdigit 0003  
                      __size_of_TMR1_WriteTimer 002C                                        i2u300_40 2188  
                                      i2u300_41 2184                                        i2u301_40 21C2  
                                   ??i2_islower 0003                                        i2u301_41 21BE  
                              i2_vfpfcnvrt$1518 0053                                        i2u302_40 2212  
                                      i2u310_40 1BE2                                        i2u302_41 220E  
                                      i2u310_41 1BDE                                     ??i2_isspace 0003  
                                      i2u303_40 2222                                        i2u311_40 1BF2  
                                      i2u303_41 221E                                        i2u311_41 1BEE  
           __size_of_INTERRUPT_InterruptManager 00E8                                        i2u304_40 225C  
                                      i2u320_40 168A                                        i2u312_40 1548  
                                      i2u304_41 2258                                        i2u312_41 1544  
                                      i2u233_40 3628                                        i2u305_40 1A28  
                                      i2u321_40 16A0                                        i2u313_40 1564  
                                      i2u233_41 3624                                        i2u305_41 1A24  
                                      i2u321_41 169C                                        i2u313_41 1560  
                                      i2u330_40 1E2C                                        i2u306_40 1A44  
                                      i2u322_40 1708                                        i2u314_40 158E  
                                      i2u330_41 1E28                                        i2u306_41 1A40  
                                      i2u314_41 158A                                        i2u322_45 16F6  
                                      i2u331_40 1E48                                        i2u235_40 2C24  
                                      i2u243_40 312A                                        i2u251_40 2A00  
                                      i2u307_40 1B90                                        i2u323_40 174A  
                                      i2u315_40 15F2                                        i2u331_41 1E44  
                                      i2u235_41 2C20                                        i2u243_41 3126  
                                      i2u251_41 29FC                                        i2u307_41 1B8C  
                                      i2u323_41 1746                                        i2u315_41 15EE  
                                      i2u332_40 1F04                                        i2u236_40 2C36  
                                      i2u244_40 33E2                                        i2u252_40 2A22  
                                      i2u260_40 27D4                                        i2u308_40 1BAE  
                                      i2u324_40 1768                                        i2u316_40 163C  
                                      i2u332_41 1EFE                                        i2u236_41 2C32  
                                      i2u244_41 33DE                                        i2u252_41 2A1E  
                                      i2u260_41 27D0                                        i2u308_41 1BAA  
                                      i2u324_41 1764                                        i2u316_41 1636  
                                      i2u333_40 1F06                                        i2u237_40 2C5E  
                                      i2u253_40 2A78                                        i2u261_40 2802  
                                      i2u309_40 1BC8                                        i2u245_40 3342  
                                      i2u325_40 1782                                        i2u317_40 163E  
                                      i2u421_40 2B56                                        i2u420_48 2B26  
                                      i2u237_41 2C5A                                        i2u253_41 2A74  
                                      i2u261_41 27FE                                        i2u309_41 1BC4  
                                      i2u245_41 333C                                        i2u325_41 177E  
                                      i2u421_41 2B52                                        i2u420_49 2B38  
                                      i2u334_40 1F1C                                        i2u238_40 2C94  
                                      i2u254_40 2A88                                        i2u262_40 3222  
                                      i2u246_40 3344                                        i2u270_40 2EDE  
                                      i2u326_40 179C                                        i2u318_40 1654  
                                      i2u406_40 2DE6                                        i2u334_41 1F18  
                                      i2u238_41 2C90                                        i2u254_41 2A84  
                                      i2u262_41 321C                                        i2u270_41 2ED8  
                                      i2u326_41 1798                                        i2u318_41 1650  
                                      i2u406_41 2DE2                                        i2u415_40 3180  
                                      i2u335_40 1F2E                                        i2u263_40 3224  
                                      i2u271_40 2EE0                                        i2u327_40 17AC  
                                      i2u319_40 1688                                        i2u422_48 2B5C  
                                      i2u415_41 317C                                        i2u335_41 1F2A  
                                      i2u255_41 25D0                                        i2u327_41 17A8  
                                      i2u319_41 1682                                        i2u422_49 2B70  
                                      i2u416_40 31A2                                        i2u264_40 33B2  
                                      i2u256_40 25F4                                        i2u272_40 2EF6  
                                      i2u328_40 17BC                                        i2u416_41 319E  
                                      i2u264_41 33AC                                        i2u256_41 25F0  
                                      i2u272_41 2EF2                                        i2u328_41 17B8  
                                      i2u265_40 33B4                                        i2u329_40 1DF4  
                                      i2u257_40 261E                                        i2u417_40 2AD6  
                                      i2u441_40 0048                                        i2u329_41 1DF0  
                                      i2u257_41 261A                                        i2u417_41 2AD2  
                                      i2u441_41 0044                                        _PIR1bits 000F9E  
                                      i2u266_40 2FD4                                        i2u258_40 265E  
                                      i2u442_40 0056                                        i2u266_41 2FD0  
                                      i2u258_41 265A                                        i2u442_41 0052  
                                      i2u267_40 3002                                        i2u259_40 27AA  
                                      i2u419_40 2B0E                                        i2u418_48 2AEC  
                                      i2u443_40 0064                                        i2u267_41 2FFE  
                                      i2u259_41 27A6                                        i2u419_41 2B0A  
                                      i2u418_49 2B00                                        i2u443_41 0060  
                                      i2u268_40 337A                                        i2u380_40 0E5A  
                                      i2u436_40 293A                                        i2u268_41 3374  
                                      i2u380_41 0E56                                        i2u436_41 2936  
                                   ??i2_isupper 0003                                        i2u269_40 337C  
                                      i2u381_40 0E9E                                        i2u437_40 2980  
                                      i2u445_40 0090                                        i2u444_48 006A  
                                      i2u381_41 0E9A                                        i2u437_41 297C  
                                      i2u445_41 008C                                        i2u444_49 007E  
                                      _PIR3bits 000FA4                                        i2u390_40 11DC  
                                      i2u382_40 0F1C                                        i2u446_40 009E  
                                      i2u390_41 11D8                                        i2u382_41 0F16  
                                      i2u446_41 009A                                        i2u391_40 349E  
                                      i2u295_40 2F20                                        i2u383_40 0F1E  
                                      i2u391_41 349A                                        i2u295_41 2F1C  
                                      i2u384_40 0F34                                        i2u447_48 00A4  
                                      i2u296_41 20EA                                        i2u384_41 0F30  
                                      i2u447_49 00B8                                        i2u297_40 210C  
                                      i2u385_40 0F5A                                        i2u377_40 0D48  
                                      i2u297_41 2108                                        i2u385_41 0F56  
                                      i2u377_41 0D44                                        i2u298_40 213E  
                                      i2u386_40 0FCE                                        i2u378_40 0E22  
                                      i2u298_41 213A                                        i2u386_41 0FCA  
                                      i2u378_41 0E1E                                        i2u299_40 215C  
                                      i2u387_40 104A                                        i2u379_40 0E32  
                                      i2u299_41 2158                                        i2u387_41 1046  
                                      i2u379_41 0E2E                                        i2u388_40 10F2  
                                      i2u388_41 10EE                                        i2u389_40 1118  
                                      i2u389_41 1114                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                       main@F6364 01B6  
                                      _PSTR2CON 000F63                                     ??i2_toupper 0009  
                                     _vfpfcnvrt 07D2                                       _xtoa$1503 00AC  
                                     _xtoa$1504 00AE                               ??_TMR1_Initialize 007C  
                             ___wmul@multiplier 007C                                        i2___wmul 3548  
                                     main@index 01B4                   __size_of_EUSART2_Transmit_ISR 0042  
                                  _isspace$2003 0082                                        i2_printf 3520  
                                      i2pad@buf 0015                                        i2ctoa@fp 001E  
                 ??_EUSART2_DefaultErrorHandler 0001                                        i2_strlen 33BA  
                                    vfpfcnvrt@c 017F                                     _INTCON2bits 000FF1  
                     ??_transmitCharacterOverIR 0082                                       copy_data0 3140  
                                      i2fputc@c 0003                           ?_INTERRUPT_Initialize 0001  
                                      i2fputs@c 0010                                        i2fputs@i 0011  
                                      i2fputs@s 000C                         _EUSART2_SetErrorHandler 36AE  
                             ??_TMR2_Initialize 007C                                        i2stoa@cp 001C  
                                      i2stoa@fp 000C                                __size_ofi2_fputc 0096  
                              __size_ofi2_fputs 0044                     _EUSART2_OverrunErrorHandler 0120  
                                      i2utoa@fp 001E                                __size_ofi2_putch 000A  
                                      i2xtoa@fp 001E                                        __Hrparam 0000  
         __end_of_EUSART2_SetRxInterruptHandler 369A          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 3690                                _EPWM2_Initialize 3590  
                                    vfprintf@ap 0184                                        __Lrparam 0000  
                                    vfprintf@fp 0180                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 007C  
                         i2___wmul@multiplicand 0003                                __size_of___lodiv 00F2  
                   __size_of_EUSART1_Initialize 0046                                __size_of___lomod 00D2  
                                    ?_vfpfcnvrt 00C0                       ??_EUSART1_SetErrorHandler 007E  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 3656  
                          _EUSART2_ErrorHandler 011E                                __size_of_isalpha 003E  
                              __size_of_isdigit 003A                                __size_of_islower 003A  
                              __size_of_isspace 0054                                        __ptext10 322A  
                                      __ptext11 3264                                        __ptext20 305A  
                                      __ptext12 31B0                                        __ptext21 2B7A  
                                      __ptext13 1812                                      _T1GCONbits 000FCC  
                                      __ptext30 3668                                        __ptext22 3678  
                                      __ptext14 26BA                                        __ptext31 35B0  
                                      __ptext23 35E8                                        __ptext15 24D8  
                                      __ptext40 36AE                                        __ptext32 344E  
                                      __ptext24 1C1C                                        __ptext16 1F54  
                                      __ptext41 30A2                                        __ptext33 35CC  
                                      __ptext25 2F68                                        __ptext17 2E50  
                                      __ptext42 36B8                                        __ptext34 36EC  
                                      __ptext26 32D8                                        __ptext18 285C  
                                      __ptext51 2AB6                                        __ptext43 36C2  
                                      __ptext35 2CA8                                        __ptext27 34F8  
                                      __ptext19 329E                                        __ptext60 31EE  
                                      __ptext52 2926                                        __ptext44 36CC  
                                      __ptext36 3686                                        __ptext28 2266  
                                      __ptext61 1A18                                        __ptext53 3520  
                                      __ptext45 3590                                        __ptext37 3690  
                                      __ptext29 356E                                        __ptext70 36D6  
                                      __ptext62 278C                                        __ptext54 2D8C  
                                      __ptext46 3600                                        __ptext38 369A  
                                      __ptext71 3618                                        __ptext63 25CA  
                                      __ptext55 0D22                                        __ptext47 300E  
                                      __ptext39 36A4                                        __ptext80 347A  
                                      __ptext72 1DBA                                        __ptext64 20E0  
                                      __ptext56 1538                                        __ptext48 3642  
                                      __ptext81 0000                                        __ptext73 2FBC  
                                      __ptext65 2F0C                                        __ptext57 2EAE  
                                      __ptext49 34A6                                        __ptext74 3382  
                                      __ptext66 29F0                                        __ptext58 3312  
                                      __ptext75 3548                                        __ptext67 33BA  
                                      __ptext59 334A                                        __ptext76 316E  
                                      __ptext68 30E8                                        __ptext77 36E0  
                                      __ptext69 2C12                                        __ptext78 36F0  
                                      __ptext79 36E6                                __size_of_isupper 003A  
                              __size_of_toupper 0060                     __size_of_EUSART2_Initialize 0080  
              __size_of_TMR1_HasOverflowOccured 0014                                   __size_of_atoi 019E  
                                 __size_of_ctoa 005E                                   __size_of_main 06DE  
                                 __size_of_stoa 018C           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 36F2     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 36F0                                   __size_of_utoa 0206  
                                 __size_of_xtoa 02DA                                     _receiveBusy 00DB  
          __size_of_EUSART2_DefaultErrorHandler 0006                                       stoa@F1136 01C0  
EUSART1_SetOverrunErrorHandler@interruptHandler 007C  EUSART2_SetOverrunErrorHandler@interruptHandler 007C  
               __end_of_transmitCharacterOverIR 24D8                                        int$flags 005F  
                                      _vfprintf 2D28              __end_of_INTERRUPT_InterruptManager 00F0  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 347A  
                                     printf@fmt 0186                               ??_TMR1_WriteTimer 007E  
                   _EUSART1_FramingErrorHandler 011C                ??_EUSART2_SetOverrunErrorHandler 007E  
               ?_EUSART2_SetOverrunErrorHandler 007C                               _receiveNewMessage 0124  
                               fp__myEUSART2ISR 0000                                  _vfpfcnvrt$1518 0175  
                                    _INTCONbits 000FF2                     __end_of_EUSART2_is_rx_ready 3618  
                               _IRreceiveBuffer 0159                                        isalpha@c 007C  
                                      isdigit@c 007C                          ??_INTERRUPT_Initialize 007C  
                     ??_EUSART2_SetErrorHandler 007E                                        intlevel2 0000  
                                      islower@c 007C                    EPWM2_LoadDutyValue@dutyValue 007C  
                                      isspace@c 007C                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 36C2         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 36B8                                      _RCSTA1bits 000FAB  
                                    _RCSTA2bits 000F71                                        isupper@c 007C  
                 transmitCharacterOverIR@letter 0082                                        printf@ap 018E  
EUSART1_SetFramingErrorHandler@interruptHandler 007C  EUSART2_SetFramingErrorHandler@interruptHandler 007C  
                ?_EUSART2_SetRxInterruptHandler 007C                                   ??i2_vfpfcnvrt 004B  
                                   ??_vfpfcnvrt 016D                                        stoa@nuls 008C  
                        __size_of_EUSART1_Write 0018                              _eusart1RxLastError 00DC  
                           _EUSART2_Receive_ISR 2AB6                            main@baudRateSelected 01B3  
                                      toupper@c 0082                               __CFG_T3CMX$PORTC0 000000  
                                 ?_myEUSART2ISR 0001                                  i2_isspace$2003 0007  
                __end_of_PIN_MANAGER_Initialize 347A                 ??_EUSART2_SetTxInterruptHandler 007E  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00DD  
                             __CFG_FOSC$INTIO67 000000                                 _TMR1_Initialize 35B0  
             _EUSART2_RxDefaultInterruptHandler 00D2  
